<?xml version='1.0' encoding='utf-8'?>
<specification>
  <metadata>
    <name>Supply Researcher Agent Specification</name>
    <version>1.0.0</version>
    <created>2025-01-11</created>
    <author>Netra AI Team</author>
    <status>Active</status>
    <category>Agent</category>
    <priority>High</priority>
    <last_edited>2025-08-21T08:47:28.599490</last_edited>
    <legacy_status is_legacy="true" identified_date="2025-08-21T08:47:28.599490">
      <reasons>
        <reason>Content contains: DEPRECATED</reason>
        <reason>Content contains: old</reason>
        <reason>Content contains: deprecated</reason>
      </reasons>
    </legacy_status>
  </metadata>
  <overview>
    <summary>
      The SupplyResearcherAgent is an intelligent autonomous agent that researches and updates AI supply information,
      including LLM pricing, model capabilities, API availability, and performance metrics. It leverages Google Deep
      Research API for comprehensive information gathering and maintains the platform's supply data in real-time.
    </summary>
    <objectives>
      <objective>Automate AI supply information updates through scheduled research cycles</objective>
      <objective>Respond to on-demand research requests from administrators</objective>
      <objective>Maintain accurate and up-to-date pricing information for AI models</objective>
      <objective>Track model availability, deprecations, and new releases</objective>
      <objective>Generate supply intelligence reports with citations</objective>
      <objective>Validate and cross-reference pricing information from multiple sources</objective>
    </objectives>
  </overview>
  <architecture>
    <components>
      <component name="SupplyResearcherAgent" type="Agent">
        <description>Core agent that orchestrates research tasks and data updates</description>
        <responsibilities>
          <responsibility>Parse natural language requests into research queries</responsibility>
          <responsibility>Interface with Google Deep Research API</responsibility>
          <responsibility>Process research results and extract supply data</responsibility>
          <responsibility>Update database with validated information</responsibility>
          <responsibility>Generate audit trails for all updates</responsibility>
        </responsibilities>
      </component>
      <component name="SupplyResearchService" type="Service">
        <description>Service layer for supply research operations</description>
        <responsibilities>
          <responsibility>Manage research sessions and state</responsibility>
          <responsibility>Handle API rate limiting and retries</responsibility>
          <responsibility>Cache research results for efficiency</responsibility>
          <responsibility>Coordinate database updates</responsibility>
        </responsibilities>
      </component>
      <component name="ResearchScheduler" type="Scheduler">
        <description>Background task scheduler for periodic updates</description>
        <responsibilities>
          <responsibility>Execute scheduled research cycles</responsibility>
          <responsibility>Monitor for critical supply changes</responsibility>
          <responsibility>Trigger alerts for significant price changes</responsibility>
          <responsibility>Maintain research history and logs</responsibility>
        </responsibilities>
      </component>
      <component name="SupplyDataValidator" type="Validator">
        <description>Validates and normalizes supply data before storage</description>
        <responsibilities>
          <responsibility>Validate pricing formats and ranges</responsibility>
          <responsibility>Normalize currency and units</responsibility>
          <responsibility>Cross-reference with existing data</responsibility>
          <responsibility>Flag anomalies for manual review</responsibility>
        </responsibilities>
      </component>
    </components>
    <data_models>
      <model name="AISupplyItem">
        <fields>
          <field name="id" type="UUID" required="true" />
          <field name="provider" type="String" required="true" />
          <field name="model_name" type="String" required="true" />
          <field name="model_version" type="String" />
          <field name="pricing_input" type="Decimal" description="Cost per 1M input tokens" />
          <field name="pricing_output" type="Decimal" description="Cost per 1M output tokens" />
          <field name="pricing_currency" type="String" default="USD" />
          <field name="context_window" type="Integer" />
          <field name="max_output_tokens" type="Integer" />
          <field name="capabilities" type="JSON" description="Array of model capabilities" />
          <field name="availability_status" type="Enum" values="available,deprecated,preview,waitlist" />
          <field name="api_endpoints" type="JSON" />
          <field name="performance_metrics" type="JSON" />
          <field name="last_updated" type="DateTime" />
          <field name="research_source" type="String" />
          <field name="confidence_score" type="Float" min="0" max="1" />
        </fields>
      </model>
      <model name="ResearchSession">
        <fields>
          <field name="id" type="UUID" required="true" />
          <field name="query" type="String" required="true" />
          <field name="session_id" type="String" description="Google Deep Research session" />
          <field name="status" type="Enum" values="pending,researching,processing,completed,failed" />
          <field name="research_plan" type="JSON" />
          <field name="questions_answered" type="JSON" />
          <field name="raw_results" type="JSON" />
          <field name="processed_data" type="JSON" />
          <field name="citations" type="JSON" />
          <field name="initiated_by" type="String" description="user_id or scheduler" />
          <field name="created_at" type="DateTime" />
          <field name="completed_at" type="DateTime" />
          <field name="error_message" type="String" />
        </fields>
      </model>
      <model name="SupplyUpdateLog">
        <fields>
          <field name="id" type="UUID" required="true" />
          <field name="supply_item_id" type="UUID" required="true" />
          <field name="field_updated" type="String" />
          <field name="old_value" type="JSON" />
          <field name="new_value" type="JSON" />
          <field name="research_session_id" type="UUID" />
          <field name="update_reason" type="String" />
          <field name="updated_by" type="String" />
          <field name="updated_at" type="DateTime" />
        </fields>
      </model>
    </data_models>
  </architecture>
  <workflows>
    <workflow name="OnDemandResearch">
      <steps>
        <step order="1">
          <action>Receive natural language request from admin</action>
          <example>"Add GPT-5 pricing information"</example>
        </step>
        <step order="2">
          <action>Parse request and generate research query</action>
          <details>
            - Extract entity (GPT-5)
            - Identify information type (pricing)
            - Formulate comprehensive research query
          </details>
        </step>
        <step order="3">
          <action>Initialize Google Deep Research session</action>
          <api_call>
            POST /streamAssist
            query: "What is the current pricing for OpenAI GPT-5 model including input/output token costs?"
          </api_call>
        </step>
        <step order="4">
          <action>Start research process</action>
          <api_call>
            POST /streamAssist
            query: "Start Research"
            session: {session_id}
          </api_call>
        </step>
        <step order="5">
          <action>Stream and process research results</action>
          <processing>
            - Collect research questions and answers
            - Extract pricing information
            - Gather citations
            - Build confidence score
          </processing>
        </step>
        <step order="6">
          <action>Validate and normalize data</action>
          <validation>
            - Check pricing format
            - Convert to standard units
            - Validate against known ranges
          </validation>
        </step>
        <step order="7">
          <action>Update database</action>
          <database_operations>
            - Check for existing entry
            - Create or update supply item
            - Log all changes
            - Update search indices
          </database_operations>
        </step>
        <step order="8">
          <action>Send confirmation to requester</action>
          <response>
            - Summary of updates made
            - Citations and sources
            - Confidence score
          </response>
        </step>
      </steps>
    </workflow>
    <workflow name="ScheduledResearch">
      <steps>
        <step order="1">
          <action>Trigger based on schedule</action>
          <schedules>
            <schedule frequency="daily" time="02:00" query="Latest AI model pricing updates" />
            <schedule frequency="weekly" time="Monday 09:00" query="New AI model releases and deprecations" />
            <schedule frequency="monthly" time="1st 00:00" query="Comprehensive AI market pricing report" />
          </schedules>
        </step>
        <step order="2">
          <action>Generate research queries for all tracked providers</action>
          <providers>
            <provider>OpenAI (GPT models)</provider>
            <provider>Anthropic (Claude models)</provider>
            <provider>Google (Gemini models)</provider>
            <provider>Mistral AI</provider>
            <provider>Cohere</provider>
            <provider>AI21 Labs</provider>
          </providers>
        </step>
        <step order="3">
          <action>Execute research sessions in parallel</action>
          <concurrency>Max 3 concurrent sessions</concurrency>
        </step>
        <step order="4">
          <action>Aggregate and reconcile results</action>
        </step>
        <step order="5">
          <action>Generate change report</action>
          <report_sections>
            <section>Price changes detected</section>
            <section>New models available</section>
            <section>Deprecated models</section>
            <section>Performance updates</section>
          </report_sections>
        </step>
        <step order="6">
          <action>Apply updates to database</action>
        </step>
        <step order="7">
          <action>Send notifications if significant changes detected</action>
          <notification_triggers>
            <trigger>Price change &gt; 10%</trigger>
            <trigger>New flagship model released</trigger>
            <trigger>Model deprecation announced</trigger>
          </notification_triggers>
        </step>
      </steps>
    </workflow>
  </workflows>
  <integration_points>
    <integration name="Google Deep Research API">
      <endpoint>https://discoveryengine.googleapis.com/projects/{project_id}/locations/global/collections/default_collection/engines/{app_id}/assistants/default_assistant:streamAssist</endpoint>
      <authentication>Bearer token via gcloud auth</authentication>
      <rate_limits>
        <limit>100 requests per minute</limit>
        <limit>1000 research sessions per day</limit>
      </rate_limits>
      <error_handling>
        <retry_strategy>Exponential backoff with max 3 retries</retry_strategy>
        <fallback>Queue for later processing</fallback>
      </error_handling>
    </integration>
    <integration name="Admin Chat Interface">
      <trigger_phrases>
        <phrase>Update pricing for {model}</phrase>
        <phrase>Research {provider} costs</phrase>
        <phrase>Add {model} to supply</phrase>
        <phrase>Check latest {provider} models</phrase>
        <phrase>Compare pricing across providers</phrase>
      </trigger_phrases>
      <permissions>
        <required_role>admin</required_role>
        <required_permission>supply_management</required_permission>
      </permissions>
    </integration>
    <integration name="Supply Database">
      <tables>
        <table>ai_supply_items</table>
        <table>research_sessions</table>
        <table>supply_update_logs</table>
      </tables>
      <indices>
        <index>provider_model_composite</index>
        <index>last_updated_timestamp</index>
        <index>availability_status</index>
      </indices>
    </integration>
  </integration_points>
  <research_prompts>
    <category name="Pricing Research">
      <prompt_template>
        What is the current pricing structure for {provider} {model} including:
        - Cost per million input tokens
        - Cost per million output tokens
        - Any volume discounts or enterprise pricing
        - Batch processing rates if available
        - Fine-tuning costs if applicable
        Please provide official sources and documentation links.
      </prompt_template>
    </category>
    <category name="Capability Research">
      <prompt_template>
        What are the technical capabilities of {provider} {model}:
        - Maximum context window size
        - Maximum output token limit
        - Supported languages and modalities
        - Special features (function calling, vision, etc.)
        - Performance benchmarks
        Include comparisons with previous versions if relevant.
      </prompt_template>
    </category>
    <category name="Availability Research">
      <prompt_template>
        What is the current availability status of {provider} {model}:
        - General availability in different regions
        - API endpoints and access requirements
        - Any waitlist or preview programs
        - Deprecation timeline if announced
        - Migration paths from older models
      </prompt_template>
    </category>
    <category name="Market Overview">
      <prompt_template>
        Provide a comprehensive overview of the current AI model market:
        - Latest pricing changes in the past {timeframe}
        - New model releases and announcements
        - Deprecated or sunset models
        - Market trends and competitive analysis
        Focus on production-ready API services.
      </prompt_template>
    </category>
  </research_prompts>
  <configuration>
    <settings>
      <setting name="research_timeout" value="300" unit="seconds" />
      <setting name="max_concurrent_research" value="3" />
      <setting name="cache_duration" value="3600" unit="seconds" />
      <setting name="confidence_threshold" value="0.7" description="Minimum confidence for auto-update" />
      <setting name="price_change_alert_threshold" value="0.1" description="10% change triggers alert" />
      <setting name="enable_scheduled_research" value="true" />
      <setting name="enable_on_demand_research" value="true" />
    </settings>
    <schedules>
      <schedule name="daily_pricing_check" enabled="true">
        <cron>0 2 * * *</cron>
        <description>Daily check for pricing updates</description>
        <providers>all</providers>
      </schedule>
      <schedule name="weekly_capability_scan" enabled="true">
        <cron>0 9 * * 1</cron>
        <description>Weekly scan for new models and capabilities</description>
        <providers>all</providers>
      </schedule>
      <schedule name="monthly_market_report" enabled="true">
        <cron>0 0 1 * *</cron>
        <description>Monthly comprehensive market report</description>
        <providers>all</providers>
      </schedule>
    </schedules>
  </configuration>
  <testing_requirements>
    <test_categories>
      <category name="Unit Tests">
        <test>Query parsing and generation</test>
        <test>Data validation and normalization</test>
        <test>Database update operations</test>
        <test>Cache management</test>
        <test>Error handling and retries</test>
      </category>
      <category name="Integration Tests">
        <test>Google Deep Research API integration</test>
        <test>Database transaction handling</test>
        <test>WebSocket communication</test>
        <test>Admin permission validation</test>
        <test>Scheduler trigger execution</test>
      </category>
      <category name="E2E Tests">
        <test>Admin chat request to database update flow</test>
        <test>Scheduled research execution</test>
        <test>Multi-provider research aggregation</test>
        <test>Change detection and notification</test>
        <test>Audit trail generation</test>
      </category>
      <category name="Performance Tests">
        <test>Concurrent research session handling</test>
        <test>Large result set processing</test>
        <test>Database query optimization</test>
        <test>Cache hit rate validation</test>
      </category>
    </test_categories>
    <coverage_requirements>
      <requirement>Minimum 97% code coverage</requirement>
      <requirement>All error paths tested</requirement>
      <requirement>All integration points mocked and tested</requirement>
      <requirement>Edge cases and boundary conditions covered</requirement>
    </coverage_requirements>
  </testing_requirements>
  <security_considerations>
    <consideration>
      <risk>API key exposure</risk>
      <mitigation>Store credentials in secure vault, never in code</mitigation>
    </consideration>
    <consideration>
      <risk>Data manipulation attacks</risk>
      <mitigation>Validate all inputs, sanitize research queries</mitigation>
    </consideration>
    <consideration>
      <risk>Unauthorized access to supply data</risk>
      <mitigation>Role-based access control, audit all operations</mitigation>
    </consideration>
    <consideration>
      <risk>Research result poisoning</risk>
      <mitigation>Cross-reference multiple sources, confidence scoring</mitigation>
    </consideration>
  </security_considerations>
  <monitoring>
    <metrics>
      <metric name="research_sessions_total" type="counter" />
      <metric name="research_session_duration" type="histogram" unit="seconds" />
      <metric name="supply_updates_total" type="counter" labels="provider,model" />
      <metric name="research_errors_total" type="counter" labels="error_type" />
      <metric name="cache_hit_rate" type="gauge" />
      <metric name="confidence_scores" type="histogram" />
      <metric name="price_changes_detected" type="counter" labels="provider,direction" />
    </metrics>
    <alerts>
      <alert name="research_failure_rate_high" threshold="0.1" window="5m" />
      <alert name="api_rate_limit_approaching" threshold="0.8" window="1m" />
      <alert name="significant_price_change" threshold="0.2" immediate="true" />
      <alert name="scheduled_research_missed" window="1h" />
    </alerts>
  </monitoring>
  <examples>
    <example name="Add New Model Pricing">
      <request>Add GPT-5 pricing information to the supply database</request>
      <agent_actions>
        1. Parse request: Entity=GPT-5, Action=Add, Type=Pricing
        2. Generate research query: "What is the current pricing for OpenAI GPT-5..."
        3. Execute Deep Research session
        4. Extract: Input=$40/1M tokens, Output=$120/1M tokens
        5. Create supply item with extracted data
        6. Log update with research session reference
        7. Respond: "Added GPT-5 pricing: $40/1M input, $120/1M output (confidence: 0.92)"
      </agent_actions>
    </example>
    <example name="Scheduled Price Check">
      <trigger>Daily schedule at 02:00 UTC</trigger>
      <agent_actions>
        1. Load list of tracked models (15 models across 6 providers)
        2. Generate batch research queries
        3. Execute research sessions (max 3 concurrent)
        4. Process results: 2 price changes detected
        5. Update: Claude-3-Opus input price $15→$12.50
        6. Update: GPT-4-Turbo output price $30→$28
        7. Generate change report
        8. Send notification to admin channel
      </agent_actions>
    </example>
    <example name="Market Comparison Request">
      <request>Compare current pricing for all enterprise LLMs</request>
      <agent_actions>
        1. Parse: Action=Compare, Scope=All Enterprise LLMs
        2. Research query: "Compare pricing for enterprise AI models..."
        3. Execute comprehensive research
        4. Build comparison matrix
        5. Generate report with visualizations
        6. Include confidence scores and sources
        7. Store in research history
        8. Return formatted comparison table
      </agent_actions>
    </example>
  </examples>
  <future_enhancements>
    <enhancement priority="high">
      <title>Multi-source verification</title>
      <description>Cross-reference pricing from multiple sources for higher confidence</description>
    </enhancement>
    <enhancement priority="medium">
      <title>Predictive pricing models</title>
      <description>Use historical data to predict future pricing trends</description>
    </enhancement>
    <enhancement priority="medium">
      <title>Custom research templates</title>
      <description>Allow admins to define custom research templates for specific needs</description>
    </enhancement>
    <enhancement priority="low">
      <title>Competitive intelligence</title>
      <description>Track competitive positioning and market share changes</description>
    </enhancement>
  </future_enhancements>
</specification>