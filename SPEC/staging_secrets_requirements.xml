<?xml version='1.0' encoding='utf-8'?>
<staging_secrets_documentation>
  <metadata>
    <last_edited>2025-08-21T08:47:28.580170</last_edited>
  </metadata>
  <title>Complete Staging Environment Secrets Requirements</title>
  <date>2025-08-19</date>
  <critical_note>
    ALL secrets listed here are REQUIRED for services to start.
    Missing any secret will cause service startup failure.
  </critical_note>
  <backend_service>
    <service_name>netra-backend-staging</service_name>
    <required_secrets>
      <secret name="DATABASE_URL" source="database-url-staging">
        <description>PostgreSQL connection string</description>
        <format>postgresql://[user]:[password]@[host]:5432/[database]?sslmode=require</format>
        <current_issue>Points to wrong IP (34.68.229.240 instead of 34.132.142.103)</current_issue>
      </secret>
      <secret name="JWT_SECRET_KEY" source="jwt-secret-key-staging">
        <description>JWT signing key for authentication tokens</description>
        <format>Random string, min 32 characters</format>
        <status>EXISTS - Created previously</status>
      </secret>
      <secret name="SECRET_KEY" source="session-secret-key-staging">
        <description>Session encryption key</description>
        <format>Random string, min 32 characters</format>
        <status>EXISTS - Created previously</status>
      </secret>
      <secret name="OPENAI_API_KEY" source="openai-api-key-staging">
        <description>OpenAI API key for LLM operations</description>
        <format>sk-...</format>
        <status>MISSING - Causes "LLM API keys missing" error</status>
      </secret>
      <secret name="ANTHROPIC_API_KEY" source="anthropic-api-key-staging">
        <description>Anthropic API key for Claude operations</description>
        <format>sk-ant-...</format>
        <status>MISSING - May be optional if using OpenAI only</status>
      </secret>
      <secret name="FERNET_KEY" source="fernet-key-staging">
        <description>Fernet encryption key for data encryption</description>
        <format>Base64 encoded 32-byte key</format>
        <status>MISSING - Causes "Fernet encryption key is required" error</status>
        <generation>python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"</generation>
      </secret>
    </required_secrets>
    <environment_variables>
      <env name="ENVIRONMENT" value="staging" />
      <env name="SERVICE_NAME" value="backend" />
      <env name="PORT" value="8080" />
    </environment_variables>
  </backend_service>
  <auth_service>
    <service_name>netra-auth-service</service_name>
    <required_secrets>
      <secret name="DATABASE_URL" source="database-url-staging">
        <description>Same PostgreSQL connection as backend</description>
        <format>postgresql://[user]:[password]@[host]:5432/[database]?sslmode=require</format>
        <current_issue>Same wrong IP issue as backend</current_issue>
      </secret>
      <secret name="JWT_SECRET_KEY" source="jwt-secret-staging">
        <description>MUST match backend JWT key for token compatibility</description>
        <format>Same as backend JWT_SECRET_KEY</format>
        <status>EXISTS - Created previously</status>
      </secret>
    </required_secrets>
    <optional_secrets>
      <secret name="GOOGLE_OAUTH_CLIENT_ID" source="google-client-id-staging">
        <description>Google OAuth client ID</description>
        <status>Optional for staging</status>
      </secret>
      <secret name="GOOGLE_OAUTH_CLIENT_SECRET" source="google-client-secret-staging">
        <description>Google OAuth client secret</description>
        <status>Optional for staging</status>
      </secret>
    </optional_secrets>
    <environment_variables>
      <env name="ENVIRONMENT" value="staging" />
      <env name="SERVICE_NAME" value="auth" />
      <env name="PORT" value="8001" />
    </environment_variables>
  </auth_service>
  <frontend_service>
    <service_name>netra-frontend-staging</service_name>
    <required_secrets>
      <note>Frontend typically doesn't need secrets, uses environment variables</note>
    </required_secrets>
    <environment_variables>
      <env name="NODE_ENV" value="production" />
      <env name="NEXT_PUBLIC_API_URL" value="https://api.staging.netrasystems.ai" />
      <env name="NEXT_PUBLIC_WS_URL" value="wss://api.staging.netrasystems.ai/ws" />
      <env name="PORT" value="3000" />
    </environment_variables>
  </frontend_service>
  <regression_analysis>
    <cause>Configuration changes require additional secrets not previously needed</cause>
    <timeline>
      <event>Services were working with minimal secrets</event>
      <event>Configuration module updated to require LLM keys and encryption keys</event>
      <event>Services now fail to start without these keys</event>
    </timeline>
    <fix_priority>
      <priority level="1">Fix #removed-legacyto point to correct IP</priority>
      <priority level="2">Create OPENAI_API_KEY secret</priority>
      <priority level="3">Create FERNET_KEY secret</priority>
      <priority level="4">Ensure JWT keys match between services</priority>
    </fix_priority>
  </regression_analysis>
  <commands_to_fix>
    <step order="1">
      <description>Create missing OpenAI API key secret</description>
      <command>
        echo -n "YOUR_OPENAI_API_KEY" | \
        gcloud secrets create openai-api-key-staging --data-file=- --project=netra-staging
      </command>
    </step>
    <step order="2">
      <description>Create Fernet encryption key</description>
      <command>
        python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())" | \
        gcloud secrets create fernet-key-staging --data-file=- --project=netra-staging
      </command>
    </step>
    <step order="3">
      <description>Fix database URL (needs correct password)</description>
      <command>
        echo -n "postgresql://netra_user:[CORRECT_PASSWORD]@34.132.142.103:5432/netra?sslmode=require" | \
        gcloud secrets versions add database-url-staging --data-file=- --project=netra-staging
      </command>
    </step>
    <step order="4">
      <description>Deploy backend with all secrets</description>
      <command>
        gcloud run services update netra-backend-staging \
          --region us-central1 \
          --project netra-staging \
          --update-secrets=DATABASE_URL=database-url-staging:latest,JWT_SECRET_KEY=jwt-secret-key-staging:latest,SECRET_KEY=session-secret-key-staging:latest,OPENAI_API_KEY=openai-api-key-staging:latest,FERNET_KEY=fernet-key-staging:latest
      </command>
    </step>
    <step order="5">
      <description>Deploy auth service with correct secrets</description>
      <command>
        gcloud run services update netra-auth-service \
          --region us-central1 \
          --project netra-staging \
          --update-secrets=DATABASE_URL=database-url-staging:latest,JWT_SECRET_KEY=jwt-secret-staging:latest
      </command>
    </step>
  </commands_to_fix>
  <deployment_checklist>
    <check>#removed-legacypoints to correct Cloud SQL instance IP</check>
    <check>Database password is correct and tested</check>
    <check>JWT_SECRET_KEY exists and is same for backend and auth</check>
    <check>SECRET_KEY exists for session management</check>
    <check>OPENAI_API_KEY exists (even if dummy for staging)</check>
    <check>FERNET_KEY exists for encryption</check>
    <check>All secrets are in Secret Manager</check>
    <check>Service accounts have secretAccessor role</check>
    <check>Services reference secrets correctly in deployment</check>
  </deployment_checklist>
  <prevention>
    <measure>Document all required secrets in deployment scripts</measure>
    <measure>Add pre-deployment validation to check all secrets exist</measure>
    <measure>Use Terraform to manage secrets consistently</measure>
    <measure>Add startup logs that clearly indicate which secrets are missing</measure>
    <measure>Create staging-specific configuration that doesn't require production keys</measure>
  </prevention>
</staging_secrets_documentation>