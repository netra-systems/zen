[
  {
    "file": "app\\core\\error_recovery_integration.py",
    "module": "core",
    "violations": 23,
    "functions": [
      "recover_agent_operation",
      "recover_database_operation",
      "recover_api_operation",
      "__init__",
      "handle_agent_error"
    ]
  },
  {
    "file": "app\\core\\error_logger_core.py",
    "module": "core",
    "violations": 22,
    "functions": [
      "log_error",
      "_ensure_context",
      "log_recovery_attempt",
      "_create_recovery_context",
      "_log_recovery_result"
    ]
  },
  {
    "file": "app\\core\\configuration\\validator.py",
    "module": "core",
    "violations": 17,
    "functions": [
      "_load_critical_fields",
      "_validate_llm_config",
      "_validate_auth_config",
      "_validate_redis_config",
      "_check_missing_api_keys"
    ]
  },
  {
    "file": "app\\core\\error_handlers.py",
    "module": "core",
    "violations": 16,
    "functions": [
      "handle_exception",
      "_route_exception_to_handler",
      "_handle_netra_exception",
      "_create_netra_error_response",
      "_build_netra_response"
    ]
  },
  {
    "file": "app\\core\\reliability.py",
    "module": "core",
    "violations": 16,
    "functions": [
      "get_reliability_wrapper",
      "get_system_health",
      "__init__",
      "_initialize_components",
      "execute_safely"
    ]
  },
  {
    "file": "app\\agents\\github_analyzer\\tool_analyzer.py",
    "module": "agents",
    "violations": 23,
    "functions": [
      "_init_tool_patterns",
      "_get_langchain_patterns",
      "_get_openai_patterns",
      "analyze_tool_usage",
      "_initialize_tool_map"
    ]
  },
  {
    "file": "app\\agents\\github_analyzer\\ai_map_builder.py",
    "module": "agents",
    "violations": 20,
    "functions": [
      "build_ai_map",
      "_build_repo_info",
      "_build_ai_infrastructure",
      "_build_code_locations",
      "_format_models"
    ]
  },
  {
    "file": "app\\agents\\synthetic_data_sub_agent.py",
    "module": "agents",
    "violations": 19,
    "functions": [
      "__init__",
      "check_entry_conditions",
      "_is_admin_request",
      "execute",
      "_execute_generation_flow"
    ]
  },
  {
    "file": "app\\agents\\triage_sub_agent\\error_core.py",
    "module": "agents",
    "violations": 17,
    "functions": [
      "handle_intent_detection_error",
      "_create_intent_error_context",
      "_process_intent_error_with_fallback",
      "handle_entity_extraction_error",
      "_create_entity_error_context"
    ]
  },
  {
    "file": "app\\agents\\base\\example_integration.py",
    "module": "agents",
    "violations": 15,
    "functions": [
      "create_modern_agent",
      "migrate_agent_to_base_interface",
      "_init_execution_system",
      "validate_preconditions",
      "execute_core_logic"
    ]
  },
  {
    "file": "app\\services\\metrics\\quality_collector.py",
    "module": "services",
    "violations": 21,
    "functions": [
      "record_quality_assessment",
      "_create_trend_point",
      "_calculate_score_statistics",
      "get_validation_summary",
      "_calculate_trend"
    ]
  },
  {
    "file": "app\\services\\metrics\\resource_monitor.py",
    "module": "services",
    "violations": 17,
    "functions": [
      "start_monitoring",
      "_monitoring_loop",
      "_get_memory_usage",
      "_get_storage_usage",
      "_store_resource_metric"
    ]
  },
  {
    "file": "app\\services\\database\\rollback_manager_recovery.py",
    "module": "services",
    "violations": 15,
    "functions": [
      "_create_dependency_rule_mapping",
      "_create_dependency_graph_from_operations",
      "_process_topological_sort_batches",
      "_collect_ready_operations",
      "_break_circular_dependency"
    ]
  },
  {
    "file": "app\\services\\external_api_client.py",
    "module": "services",
    "violations": 13,
    "functions": [
      "get_http_client",
      "_execute_google_api_call",
      "_execute_openai_api_call",
      "__init__",
      "_get_config_by_type"
    ]
  },
  {
    "file": "app\\services\\metrics\\exporter.py",
    "module": "services",
    "violations": 13,
    "functions": [
      "export_metrics",
      "_execute_export",
      "_convert_data_by_type",
      "_snapshot_to_prometheus",
      "_list_to_prometheus"
    ]
  }
]