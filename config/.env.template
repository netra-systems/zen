# Netra AI Platform Environment Configuration Template
# Copy this file to .env and update with your actual values
# Generated from comprehensive deployment analysis

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================

# PostgreSQL configuration (multi-part for flexibility)
# For local development
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=netra_dev
POSTGRES_USER=postgres
POSTGRES_PASSWORD=123

# Legacy #removed-legacy(deprecated - will be auto-constructed from above)
# DATABASE_URL=postgresql://postgres:123@localhost:5432/netra_dev

# ClickHouse for analytics (optional)
# Default: clickhouse://default:password@localhost:9000/netra_dev
CLICKHOUSE_URL=clickhouse://default:password@localhost:9000/netra_dev
CLICKHOUSE_HOST=localhost
CLICKHOUSE_HTTP_PORT=8123
CLICKHOUSE_NATIVE_PORT=9000
CLICKHOUSE_DB=netra_dev
CLICKHOUSE_USER=default
CLICKHOUSE_PASSWORD=netra_dev_password

# Redis for caching and sessions
# Default local: redis://localhost:6379/0
# Production: redis://:password@host:6379/0
REDIS_URL=redis://localhost:6379/0
REDIS_PASSWORD=
REDIS_SESSION_PREFIX=netra:session:

# ============================================================================
# AUTHENTICATION & SECURITY
# ============================================================================

# JWT Secret Key (minimum 64 characters)
# Generate: openssl rand -hex 64
JWT_SECRET_KEY=your-super-secret-jwt-key-minimum-64-characters-replace-this-immediately

# JWT Configuration - Consistent across all services
JWT_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=15
REFRESH_TOKEN_EXPIRE_DAYS=7
JWT_ACCESS_EXPIRY_MINUTES=15
JWT_REFRESH_EXPIRY_DAYS=7
JWT_SERVICE_EXPIRY_MINUTES=60

# Application Secret Key
# Generate: openssl rand -hex 32
SECRET_KEY=your-application-secret-key-replace-this

# Fernet encryption key for sensitive data
# Generate: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
FERNET_KEY=generate-using-the-command-above

# ============================================================================
# OAUTH CONFIGURATION
# ============================================================================

# Google OAuth credentials
# TOMBSTONE: GOOGLE_CLIENT_ID and GOOGLE_CLIENT_SECRET superseded by environment-specific variables:
# Use GOOGLE_OAUTH_CLIENT_ID_<ENVIRONMENT> and GOOGLE_OAUTH_CLIENT_SECRET_<ENVIRONMENT> instead
# Get from: https://console.cloud.google.com/apis/credentials
# GOOGLE_OAUTH_CLIENT_ID_DEVELOPMENT=your-dev-client-id.apps.googleusercontent.com
# GOOGLE_OAUTH_CLIENT_SECRET_DEVELOPMENT=your-dev-client-secret
# GOOGLE_OAUTH_CLIENT_ID_STAGING=your-staging-client-id.apps.googleusercontent.com
# GOOGLE_OAUTH_CLIENT_SECRET_STAGING=your-staging-client-secret

# ============================================================================
# AI MODEL API KEYS
# ============================================================================

# Google Gemini API Key (Required for default LLM)
# Get from: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=your-gemini-api-key

# Anthropic API Key (Optional)
# Get from: https://console.anthropic.com/
ANTHROPIC_API_KEY=your-anthropic-api-key

# OpenAI API Key (Optional)
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=your-openai-api-key

# ============================================================================
# OBSERVABILITY & MONITORING
# ============================================================================

# Langfuse for LLM observability (Optional)
# Get from: https://langfuse.com/
LANGFUSE_SECRET_KEY=your-langfuse-secret-key
LANGFUSE_PUBLIC_KEY=your-langfuse-public-key
LANGFUSE_HOST=https://cloud.langfuse.com

# ============================================================================
# APPLICATION CONFIGURATION
# ============================================================================

# Environment: development, staging, production
ENVIRONMENT=development

# Logging level: DEBUG, INFO, WARNING, ERROR
LOG_LEVEL=INFO

# CORS allowed origins (comma-separated)
# Local: http://localhost:3000,http://localhost:8000
# Production: https://app.yourdomain.com,https://api.yourdomain.com
CORS_ORIGINS=http://localhost:3000,http://localhost:8000

# Maximum database connections
MAX_CONNECTIONS=100

# Testing flag (set to 1 during tests)
TESTING=0

# ============================================================================
# WEBSOCKET CONFIGURATION
# ============================================================================

# WebSocket heartbeat interval in seconds
WEBSOCKET_HEARTBEAT_INTERVAL=30

# WebSocket connection timeout in seconds
WEBSOCKET_TIMEOUT=300

# Maximum concurrent WebSocket connections
WEBSOCKET_MAX_CONNECTIONS=1000

# WebSocket buffer size in bytes
WEBSOCKET_BUFFER_SIZE=65536

# ============================================================================
# AGENT SYSTEM CONFIGURATION
# ============================================================================

# Maximum agent execution time in seconds
AGENT_MAX_EXECUTION_TIME=600

# Agent heartbeat interval in seconds
AGENT_HEARTBEAT_INTERVAL=60

# Maximum concurrent agent operations
AGENT_MAX_CONCURRENT_OPERATIONS=10

# Individual tool timeout in seconds
AGENT_TOOL_TIMEOUT=120

# Supervisor orchestration timeout in seconds
SUPERVISOR_ORCHESTRATION_TIMEOUT=300

# ============================================================================
# DATABASE CONNECTION POOL
# ============================================================================

# Connection pool size
DB_POOL_SIZE=20

# Maximum overflow connections
DB_MAX_OVERFLOW=40

# Connection timeout in seconds
DB_POOL_TIMEOUT=30

# Connection recycle time in seconds
DB_POOL_RECYCLE=3600

# Enable connection pre-ping
DB_POOL_PRE_PING=true

# ============================================================================
# SESSION MANAGEMENT
# ============================================================================

# Session timeout in seconds (2 hours default)
SESSION_TIMEOUT=7200

# Session refresh threshold in seconds
SESSION_REFRESH_THRESHOLD=1800

# Session cleanup interval in seconds
SESSION_CLEANUP_INTERVAL=3600

# ============================================================================
# FRONTEND CONFIGURATION
# ============================================================================

# Backend API URL
# Local: http://localhost:8000
# Production: https://api.yourdomain.com
NEXT_PUBLIC_API_URL=http://localhost:8000

# WebSocket URL
# Local: ws://localhost:8000
# Production: wss://api.yourdomain.com
NEXT_PUBLIC_WS_URL=ws://localhost:8000

# Frontend environment
NEXT_PUBLIC_ENVIRONMENT=development

# NextAuth configuration
NEXTAUTH_URL=http://localhost:3000
NEXTAUTH_SECRET=your-nextauth-secret-key

# Google OAuth for frontend (optional)
# TOMBSTONE: NEXT_PUBLIC_GOOGLE_CLIENT_ID superseded by OAuth config from auth service
# Frontend gets OAuth config dynamically from auth service endpoints

# Enable analytics
NEXT_PUBLIC_ENABLE_ANALYTICS=false

# ============================================================================
# CLOUD CONFIGURATION (Production)
# ============================================================================

# Google Cloud Project
GCP_PROJECT_ID=your-project-id
GCP_REGION=us-central1
GCP_ZONE=us-central1-a

# Frontend URL (set after deployment)
FRONTEND_URL=https://your-frontend-url.run.app

# Backend URL (set after deployment)
BACKEND_URL=https://your-backend-url.run.app

# ============================================================================
# FEATURE FLAGS
# ============================================================================

# Enable specific features
ENABLE_OAUTH=true
ENABLE_WEBSOCKET=true
ENABLE_AGENTS=true
ENABLE_ANALYTICS=false
ENABLE_CLICKHOUSE=false

# ============================================================================
# DEVELOPMENT OVERRIDES
# ============================================================================

# Development-specific settings (remove in production)
DEV_AUTO_RELOAD=true
DEV_CORS_ALLOW_ALL=false
DEV_DISABLE_AUTH=false
DEV_VERBOSE_LOGGING=false

# ============================================================================
# NOTES
# ============================================================================
# 
# 1. NEVER commit this file with real values to version control
# 2. Use Secret Manager for production deployments
# 3. Rotate all keys and secrets regularly
# 4. Keep separate .env files for each environment
# 5. Use strong, unique passwords for all services
# 
# Default credentials from existing configuration:
# - PostgreSQL: postgres/123 (CHANGE IMMEDIATELY)
# - ClickHouse: default/password (CHANGE IMMEDIATELY)
# - Redis: no password (ADD PASSWORD IN PRODUCTION)
#
# ============================================================================