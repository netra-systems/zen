# Docker Environments Configuration - SSOT
# Central configuration for all Docker environments to prevent configuration drift
# CLAUDE.md compliance: Single Source of Truth for Docker settings

environments:
  development:
    compose_file: docker-compose.yml
    prefix: dev
    project_name_prefix: netra-core-generation-1-dev
    profiles: []  # No profiles - runs by default
    
    credentials:
      postgres_user: netra
      postgres_password: netra123
      postgres_db: netra_dev
      clickhouse_user: netra
      clickhouse_password: netra123
      clickhouse_db: netra_analytics
      
    ports:
      backend: 8000
      auth: 8081
      frontend: 3000
      postgres: 5433
      redis: 6380
      clickhouse_http: 8124
      clickhouse_tcp: 9001
      
    health_check:
      timeout: 30
      retries: 10
      interval: 30
      start_period: 30
      
    memory_limits:
      backend: 1024m
      auth: 1024m
      frontend: 1024m
      postgres: 512m
      redis: 256m
      clickhouse: 1024m
      
    cpu_limits:
      backend: '0.4'
      auth: '0.25'
      frontend: '0.3'
      postgres: '0.25'
      redis: '0.1'
      clickhouse: '0.2'
      
    environment_variables:
      log_level: DEBUG
      environment: development
      
  test:
    compose_file: docker-compose.test.yml
    prefix: test
    project_name_prefix: netra-core-generation-1-test
    profiles: []
    
    credentials:
      postgres_user: test_user
      postgres_password: test_pass
      postgres_db: netra_test
      clickhouse_user: test_user
      clickhouse_password: test_pass
      clickhouse_db: netra_test_analytics
      
    ports:
      backend: 8001
      auth: 8082
      frontend: 3001
      postgres: 5434
      redis: 6381
      clickhouse_http: 8125
      clickhouse_tcp: 9002
      monitor: 9090
      
    health_check:
      timeout: 10
      retries: 10
      interval: 10
      start_period: 20
      
    memory_limits:
      backend: 2048m
      auth: 1024m
      frontend: 1024m
      postgres: 512m
      redis: 512m
      clickhouse: 512m
      
    cpu_limits:
      backend: '0.4'
      auth: '0.25'
      frontend: '0.3'
      postgres: '0.3'
      redis: '0.1'
      clickhouse: '0.2'
      
    environment_variables:
      log_level: ERROR
      environment: test
      testing: true
      test_mode: true
      
  alpine_test:
    compose_file: docker-compose.alpine-test.yml
    prefix: alpine-test
    project_name_prefix: netra-core-generation-1-alpine-test
    profiles: []
    
    credentials:
      postgres_user: test
      postgres_password: test
      postgres_db: netra_test
      clickhouse_user: test
      clickhouse_password: test
      clickhouse_db: test_analytics
      
    ports:
      backend: 8002
      auth: 8083
      frontend: 3002
      postgres: 5435
      redis: 6382
      clickhouse_http: 8126
      clickhouse_tcp: 9003
      
    health_check:
      timeout: 3
      retries: 10
      interval: 3
      start_period: 15
      
    memory_limits:
      backend: 2048m
      auth: 1024m
      frontend: 512m
      postgres: 512m
      redis: 256m
      clickhouse: 512m
      
    cpu_limits:
      backend: '0.5'
      auth: '0.25'
      frontend: '0.3'
      postgres: '0.25'
      redis: '0.1'
      clickhouse: '0.2'
      
    environment_variables:
      log_level: ERROR
      environment: testing
      test_mode: true
      workers: 2
      
    volume_config:
      use_tmpfs: false
      # Using named volumes instead of tmpfs for stability
      persistent_volumes:
        postgres: alpine-test-postgres-data
        redis: alpine-test-redis-data
        clickhouse: alpine-test-clickhouse-data
        
  alpine_development:
    compose_file: docker-compose.alpine.yml
    prefix: alpine-dev
    project_name_prefix: netra-core-generation-1-alpine-dev
    profiles: []
    
    credentials:
      postgres_user: netra
      postgres_password: netra123
      postgres_db: netra_dev
      clickhouse_user: netra
      clickhouse_password: netra123
      clickhouse_db: netra_analytics
      redis_password: ""
      
    ports:
      backend: 8000
      auth: 8081
      frontend: 3000
      postgres: 5432
      redis: 6379
      clickhouse_http: 8123
      clickhouse_tcp: 9000
      
    health_check:
      timeout: 30
      retries: 5
      interval: 30
      start_period: 30
      
    memory_limits:
      backend: 2048m
      auth: 1024m
      frontend: 512m
      postgres: 1024m
      redis: 512m
      clickhouse: 1024m
      
    cpu_limits:
      backend: '0.4'
      auth: '0.25'
      frontend: '0.3'
      postgres: '0.2'
      redis: '0.1'
      clickhouse: '0.2'
      
    environment_variables:
      log_level: WARNING
      environment: production
      pythonoptimize: 2
      pythondontwritebytecode: 1
      web_concurrency: 2
      workers_per_core: 1
      max_workers: 2
      node_options: "--max-old-space-size=200"
      
    performance_optimizations:
      postgres:
        shared_buffers: 128MB
        work_mem: 4MB
        maintenance_work_mem: 64MB
        effective_cache_size: 256MB
        max_connections: 50
      redis:
        maxmemory: 200mb
        maxmemory_policy: allkeys-lru
        save: ""
        appendonly: false
      clickhouse:
        max_memory_usage: 400000000  # 400MB
        
  production:
    compose_file: docker-compose.prod.yml
    prefix: prod
    project_name_prefix: netra-core-generation-1-prod
    profiles: []
    
    credentials:
      # Production credentials should be loaded from secure environment variables
      postgres_user: "${POSTGRES_USER}"
      postgres_password: "${POSTGRES_PASSWORD}"
      postgres_db: "${POSTGRES_DB}"
      clickhouse_user: "${CLICKHOUSE_USER}"
      clickhouse_password: "${CLICKHOUSE_PASSWORD}"
      clickhouse_db: "${CLICKHOUSE_DB}"
      
    ports:
      backend: 8000
      auth: 8081
      frontend: 3000
      postgres: 5432
      redis: 6379
      clickhouse_http: 8123
      clickhouse_tcp: 9000
      
    health_check:
      timeout: 30
      retries: 5
      interval: 30
      start_period: 60
      
    memory_limits:
      backend: 4096m
      auth: 2048m
      frontend: 1024m
      postgres: 2048m
      redis: 1024m
      clickhouse: 2048m
      
    cpu_limits:
      backend: '1.0'
      auth: '0.5'
      frontend: '0.5'
      postgres: '0.5'
      redis: '0.2'
      clickhouse: '0.5'
      
    environment_variables:
      log_level: INFO
      environment: production
      pythonoptimize: 2
      pythondontwritebytecode: 1
      
# Global Docker configuration
global:
  # Network configuration
  network:
    driver: bridge
    mtu: 1500
    
  # Volume configuration
  volumes:
    max_named_volumes: 10  # Docker Desktop stability limit
    
  # Build configuration
  build:
    dockerfile_backend: ./docker/backend.Dockerfile
    dockerfile_auth: ./docker/auth.Dockerfile
    dockerfile_frontend: ./docker/frontend.Dockerfile
    dockerfile_backend_alpine: ./docker/backend.alpine.Dockerfile
    dockerfile_auth_alpine: ./docker/auth.alpine.Dockerfile
    dockerfile_frontend_alpine: ./docker/frontend.alpine.Dockerfile
    
  # Service configuration
  services:
    restart_policy:
      development: unless-stopped
      test: no
      alpine_test: no
      production: unless-stopped
      
  # Image tags
  image_tags:
    backend:
      development: netra-dev-backend:latest
      test: netra-test-backend:latest
      alpine_test: netra-alpine-test-backend:latest
      alpine_development: netra-alpine-dev-backend:latest
    auth:
      development: netra-dev-auth:latest
      test: netra-test-auth:latest
      alpine_test: netra-alpine-test-auth:latest
      alpine_development: netra-alpine-dev-auth:latest
    frontend:
      development: netra-dev-frontend:latest
      test: netra-test-frontend:latest
      alpine_test: netra-alpine-test-frontend:latest
      alpine_development: netra-alpine-dev-frontend:latest
      
# Environment-specific secrets (override in secure environments)
secrets:
  development:
    jwt_secret_key: dev-jwt-secret-key-must-be-at-least-32-characters
    service_secret: test-secret-for-local-development-only-32chars
    fernet_key: iZAG-Kz661gRuJXEGzxgghUFnFRamgDrjDXZE6HdJkw=
    secret_key: dev-secret-key-for-development
    
  test:
    jwt_secret_key: test_jwt_secret_key_for_testing_only
    service_secret: test_service_secret_for_testing_only
    fernet_key: test_fernet_key_for_testing_only_32chars
    secret_key: test_secret_key_for_testing_only
    
  alpine_test:
    jwt_secret_key: test_jwt_secret_key
    service_secret: test_service_secret
    
  alpine_development:
    jwt_secret_key: dev-jwt-secret-key-must-be-at-least-32-characters
    service_secret: test-secret-for-local-development-only-32chars
    fernet_key: iZAG-Kz661gRuJXEGzxgghUFnFRamgDrjDXZE6HdJkw=
    secret_key: dev-secret-key-for-development
    
  production:
    # Production secrets should be loaded from secure environment variables
    jwt_secret_key: "${JWT_SECRET_KEY}"
    service_secret: "${SERVICE_SECRET}"
    fernet_key: "${FERNET_KEY}"
    secret_key: "${SECRET_KEY}"