# Development Optimized Compose - Quick startup with resource limits
# Uses standard images with code mounted, no building required
version: '3.8'

services:
  # PostgreSQL - Already running
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: netra
      POSTGRES_PASSWORD: netra123
      POSTGRES_DB: netra_dev
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U netra"]
      interval: 45s  # Staggered interval
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.15'

  # Redis - Already running  
  redis:
    image: redis:7-alpine
    command: redis-server --maxmemory 100mb --maxmemory-policy allkeys-lru
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 50s  # Different interval
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.05'

  # ClickHouse - Optional
  clickhouse:
    image: clickhouse/clickhouse-server:23-alpine
    profiles: ["full"]
    environment:
      CLICKHOUSE_DB: netra_analytics
      CLICKHOUSE_USER: netra
      CLICKHOUSE_PASSWORD: netra123
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
      CLICKHOUSE_MAX_MEMORY_USAGE: 300000000
    ports:
      - "8124:8123"
      - "9001:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    healthcheck:
      test: ["CMD", "clickhouse-client", "--query", "SELECT 1"]
      interval: 60s  # Longer interval
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.1'

  # Auth Service - Using Python Alpine with mounted code
  auth:
    image: python:3.11-alpine
    working_dir: /app
    command: sh -c "apk add --no-cache gcc musl-dev libffi-dev postgresql-dev && pip install --no-cache-dir -r requirements.txt && python -m uvicorn auth_service.app.main:app --host 0.0.0.0 --port 8081"
    environment:
      ENVIRONMENT: development
      LOG_LEVEL: WARNING
      PYTHONOPTIMIZE: 2
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONPATH: /app
      # Database
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: netra
      POSTGRES_PASSWORD: netra123
      POSTGRES_DB: netra_dev
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      # Auth config
      JWT_SECRET_KEY: dev-jwt-secret-key-must-be-at-least-32-characters
      SERVICE_SECRET: test-secret-for-local-development-only-32chars
      # Limits
      WEB_CONCURRENCY: 1
      MAX_WORKERS: 1
    ports:
      - "8081:8081"
    volumes:
      - ./auth_service:/app/auth_service:ro
      - ./shared:/app/shared:ro
      - ./requirements.txt:/app/requirements.txt:ro
      - auth_deps:/usr/local/lib/python3.11/site-packages
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 55s  # Staggered
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.2'

  # Backend Service - Using Python Alpine with mounted code
  backend:
    image: python:3.11-alpine
    working_dir: /app
    command: sh -c "apk add --no-cache gcc musl-dev libffi-dev postgresql-dev linux-headers && pip install --no-cache-dir -r requirements.txt && python -m uvicorn netra_backend.app.main:app --host 0.0.0.0 --port 8000"
    environment:
      ENVIRONMENT: development
      LOG_LEVEL: WARNING
      PYTHONOPTIMIZE: 2
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONPATH: /app
      # Database
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: netra
      POSTGRES_PASSWORD: netra123
      POSTGRES_DB: netra_dev
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      # ClickHouse
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: 9000
      # Auth
      AUTH_SERVICE_URL: http://auth:8081
      # Secrets
      JWT_SECRET_KEY: dev-jwt-secret-key-must-be-at-least-32-characters
      SERVICE_SECRET: dev-service-secret-for-cross-service-auth
      FERNET_KEY: iZAG-Kz661gRuJXEGzxgghUFnFRamgDrjDXZE6HdJkw=
      # Memory monitoring
      ENABLE_MEMORY_MONITORING: "true"
      MEMORY_CHECK_INTERVAL: "60"
      MEMORY_WARNING_THRESHOLD: "70"
      MEMORY_CRITICAL_THRESHOLD: "85"
      # Worker limits
      WEB_CONCURRENCY: 2
      MAX_WORKERS: 2
    ports:
      - "8000:8000"
    volumes:
      - ./netra_backend:/app/netra_backend:ro
      - ./shared:/app/shared:ro
      - ./test_framework:/app/test_framework:ro
      - ./SPEC:/app/SPEC:ro
      - ./requirements.txt:/app/requirements.txt:ro
      - backend_deps:/usr/local/lib/python3.11/site-packages
    depends_on:
      - postgres
      - redis
      - auth
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8000/health"]
      interval: 60s  # Longest interval
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1G  # As requested
          cpus: '0.3'

volumes:
  postgres_data:
  redis_data:
  clickhouse_data:
  auth_deps:  # Cache Python dependencies
  backend_deps:  # Cache Python dependencies

networks:
  default:
    driver: bridge