{
  "total_violations": 5364,
  "boundary_compliance_score": 28.57142857142857,
  "growth_risk_level": "CRITICAL - SYSTEM UNSTABLE",
  "timestamp": "2025-08-24 09:39:02",
  "violations_by_boundary": {
    "FILE_SIZE_LIMIT": 886,
    "FUNCTION_SIZE_LIMIT": 4066,
    "MODULE_COUNT_LIMIT": 2,
    "TOTAL_LOC_LIMIT": 2,
    "NO_DUPLICATE_TYPES": 408
  },
  "violations": [
    {
      "file_path": "frontend\\components\\chat\\AgentStatusIndicator.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 347,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\ExampleMessageFlow.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 455,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\components\\chat\\FormattedMessageContent.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 323,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\MainChat.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 338,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\admin\\ConfigurationBuilder.backup.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 467,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\providers\\EnhancedWebSocketProvider.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 702,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 7
    },
    {
      "file_path": "frontend\\__tests__\\a11y\\components-basic.a11y.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 340,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\a11y\\components-complex.a11y.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 484,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\a11y\\components-ui.a11y.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 408,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\a11y\\forms-keyboard.a11y.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 367,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\a11y\\forms-validation.a11y.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 359,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\a11y\\navigation-focus.a11y.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 430,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\a11y\\navigation-keyboard.a11y.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 338,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\a11y\\navigation-landmarks.a11y.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 404,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\a11y\\navigation-screen-reader.a11y.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 488,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\a11y\\shared-a11y-helpers.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 353,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\auth\\auth-session-detection.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 323,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\auth\\auth-token-refresh-auto.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 434,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\auth\\logout-security.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 371,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\auth\\logout-state-cleanup-complete.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 390,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\basic-chat\\message-flow.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 312,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\basic-chat\\thread-management.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 344,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\chat\\chat-authentication.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 305,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\chat\\chatUIUX-shared-utilities.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 338,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\chat\\keyboard-shortcuts.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 445,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\chat\\message-content-edge-cases.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 554,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\chat\\message-content-handling.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 366,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\chat\\message-content-normalization.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 522,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\chat\\message-content-rendering.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 524,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\chat\\message-exchange.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 725,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 7
    },
    {
      "file_path": "frontend\\__tests__\\chat\\message-input-features.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 571,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\chat\\ui-improvements.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 367,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\chat\\ui-responsive-accessibility.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 567,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\chat\\ui-test-utilities.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 345,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\FinalReportView.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 399,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\StartButton.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 322,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\ThreadList.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 430,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\components\\auth\\Authentication.errors.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 433,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\components\\auth\\Authentication.loading.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 394,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\auth\\Authentication.redirects.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 518,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\components\\auth\\Logout.flow.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 574,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\components\\auth\\MultiFactorAuth.ui.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 416,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\components\\auth\\OAuth.interactions.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 334,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\auth\\PasswordReset.flow.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 390,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\auth\\RememberMe.persistence.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 490,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\components\\auth\\Session.status.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 485,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\components\\chat\\MainChat.agent.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 371,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\chat\\MainChat.core.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 366,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\chat\\MainChat.interactions.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 608,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\components\\chat\\send-flow.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 547,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\components\\chat\\StartChatButton-complete.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 377,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\chat\\StartupMessage.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 431,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\components\\chat\\streaming.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 543,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\components\\chat\\interface\\advanced-chat-features.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 472,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\components\\chat\\interface\\basic-chat-interface.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 426,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\components\\chat\\interface\\comprehensive-chat-interface.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 365,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\chat\\interface\\shared-test-setup.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 302,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\chat\\interface\\websocket-and-error-handling.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 632,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\components\\ChatHistorySection\\basic-loading.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 343,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\ChatHistorySection\\basic.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 335,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\ChatHistorySection\\edge-cases-data.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 377,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\ChatHistorySection\\edge-cases.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 480,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\components\\ChatHistorySection\\interaction-delete.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 334,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\ChatHistorySection\\interaction-navigation.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 430,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\components\\ChatHistorySection\\interaction-search.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 390,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\ChatHistorySection\\interaction.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 302,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\ChatHistorySection\\performance-accessibility.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 554,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\components\\ChatSidebar\\basic.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 398,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\ChatSidebar\\edge-cases.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 540,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\components\\ChatSidebar\\interaction.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 924,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 9
    },
    {
      "file_path": "frontend\\__tests__\\components\\ChatSidebar\\setup.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 911,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 9
    },
    {
      "file_path": "frontend\\__tests__\\components\\MessageInput\\complete-coverage.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 310,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\MessageInput\\complete.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 554,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\components\\MessageInput\\edge-cases-backup.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 303,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\MessageInput\\edge-cases.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 303,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\MessageInput\\mobile-navigation.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 429,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\components\\MessageInput\\validation-final.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 341,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\Sidebar\\complete.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 356,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\ThreadList\\navigation.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 591,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\components\\ui\\ActionButtons.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 414,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\components\\ui\\Button.complete.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 335,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\ui\\IconButton.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 425,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\components\\ui\\Input.complete.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 444,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\components\\ui\\SearchInput.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 626,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\components\\ui\\TextArea.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 563,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\critical\\memory-exhaustion.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 508,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\critical\\auth-flow\\signup-flow.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 608,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\critical\\chat-functionality\\file-upload.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 508,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\critical\\chat-functionality\\message-formatting.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 473,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\critical\\chat-functionality\\message-send-receive.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 370,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\critical\\chat-functionality\\thread-management.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 436,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\critical\\chat-init\\first-message.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 669,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\cross-browser\\compatibility.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 302,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\cross-browser\\feature-detection.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 371,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\cross-browser\\polyfills.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 504,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\e2e\\chat-interaction-simple.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 404,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\first-time-user\\initial-chat.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 306,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\first-time-user\\onboarding-test-helpers.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 340,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\hooks\\additionalHooks.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 345,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\hooks\\useAuthState.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 442,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\hooks\\useKeyboardShortcuts.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 329,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\hooks\\useLoadingState.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 385,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\hooks\\useMCPTools.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 305,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\hooks\\usePerformanceMetrics.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 541,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\hooks\\useStore.integration.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 478,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\hooks\\useWebSocketLifecycle.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 363,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\imports\\external-imports.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 403,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\imports\\internal-imports.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 365,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\advanced-features.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 522,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\integration\\analytics-clickhouse.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 331,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\analytics-realtime.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 394,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\api-calls-advanced.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 509,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\integration\\api-calls-basic.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 319,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\auth-complete.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 646,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\integration\\auth-flow.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 425,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\basic-integration-ui.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 327,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\caching-integration.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 344,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\collaboration-state.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 604,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\integration\\comprehensive-integration-elite.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 333,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\connection-management-advanced.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 312,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\connection-management-core.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 369,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\connection-performance.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 311,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\data-fetching-core.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 356,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\data-fetching-optimistic.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 381,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\data-fetching-pagination.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 443,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\database-integration.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 324,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\deep-linking.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 550,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\integration\\error-context-tracing.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 338,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\error-handling-core.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 492,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\error-handling-retry.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 607,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\integration\\error-recovery.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 610,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\integration\\error-remediation.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 429,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\first-load-bundle.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 448,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\first-load-edge-cases.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 652,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\integration\\first-load-performance.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 494,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\initial-state.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 320,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\integration-comprehensive-helpers.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 321,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\integration-data-generation.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 301,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\integration-health.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 302,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\integration-tasks.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 313,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\login-complete-flow.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 438,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\login-complete.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 347,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\login-token-management.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 489,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\login-websocket-setup.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 563,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\integration\\logout-websocket.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 309,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\message-reception.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 508,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\integration\\message-sending.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 581,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\integration\\module-resolution-failures.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 509,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\integration\\navigation-complete.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 402,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\offline-mode.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 854,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 8
    },
    {
      "file_path": "frontend\\__tests__\\integration\\role-based-access.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 868,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 8
    },
    {
      "file_path": "frontend\\__tests__\\integration\\route-guards.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 438,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\security-auth.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 389,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\session-management.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 805,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 8
    },
    {
      "file_path": "frontend\\__tests__\\integration\\store-persistence.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 426,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\store-sync.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 389,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\system-management.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 346,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\task-processing-basic.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 332,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\task-retry-mechanisms.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 382,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\thread-creation-advanced.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 468,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\thread-creation.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 366,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\thread-navigation.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 392,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\thread-switching.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 722,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 7
    },
    {
      "file_path": "frontend\\__tests__\\integration\\websocket-large-messages.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 301,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\websocket-performance.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 314,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\websocket-setup.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 333,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\advanced-integration\\collaborative-features.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 320,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\advanced-integration\\error-handling-edge-cases.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 397,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\advanced-integration\\error-i18n-websocket.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 357,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\advanced-integration\\form-validation.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 304,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\advanced-integration\\infinite-scroll-animations.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 328,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\advanced-integration\\offline-navigation.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 312,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\advanced-integration\\search-ui-interactions.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 489,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\comprehensive\\collaboration-features.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 496,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\comprehensive\\collaboration-sync.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 607,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\integration\\comprehensive\\error-recovery.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 573,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\integration\\comprehensive\\memory-management.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 438,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\comprehensive\\navigation-search.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 508,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\integration\\comprehensive\\theme-preferences.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 369,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\critical\\websocket-auth-headers.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 397,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\critical\\websocket-auth-rejection.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 341,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\critical\\websocket-cors-validation.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 677,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\integration\\critical\\websocket-token-refresh-working.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 383,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\critical\\websocket-token-refresh.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 309,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\message-pipeline\\EdgeCasesAndConcurrency.pipeline.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 760,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 7
    },
    {
      "file_path": "frontend\\__tests__\\message-pipeline\\ErrorHandlingAndRetry.pipeline.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 747,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 7
    },
    {
      "file_path": "frontend\\__tests__\\message-pipeline\\MessageInput.pipeline.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 471,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\message-pipeline\\MessagePipeline.integration.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 728,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 7
    },
    {
      "file_path": "frontend\\__tests__\\message-pipeline\\OptimisticMessageManager.pipeline.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 603,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\message-pipeline\\OptimisticUIAndReconciliation.pipeline.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 861,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 8
    },
    {
      "file_path": "frontend\\__tests__\\message-pipeline\\useMessageSending.pipeline.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 772,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 7
    },
    {
      "file_path": "frontend\\__tests__\\message-pipeline\\WebSocketProvider.pipeline.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 825,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 8
    },
    {
      "file_path": "frontend\\__tests__\\mobile\\mobile-navigation.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 479,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\mobile\\responsive-layout.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 399,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\mobile\\touch-interactions.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 374,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\performance\\bundle-size-network.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 311,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\performance\\bundle-size-optimization.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 305,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\performance\\memory-usage.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 471,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\performance\\render-performance.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 339,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\store\\websocket-state-sync.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 488,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\system\\startup-connectivity.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 320,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\system\\startup-initialization.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 465,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\system\\startup-system.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 480,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\comprehensive-test-helpers.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 482,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\mock-service-alignment.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 356,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\unified_system\\oauth-flow.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 701,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 7
    },
    {
      "file_path": "frontend\\__tests__\\unified_system\\websocket-state.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 834,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 8
    },
    {
      "file_path": "frontend\\__tests__\\utils\\layer-visibility-manager.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 348,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\utils\\test-helpers.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 542,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\visual\\components.visual.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 344,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\visual\\pages.visual.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 458,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\visual\\responsive.visual.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 575,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\cypress\\e2e\\agent-optimization-workflow.cy.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 381,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\demo-auth-onboarding.cy.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 315,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\demo-chat-optimization.cy.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 359,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\demo-chat-utilities.cy.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 301,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\demo-roi-calculation.cy.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 320,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\file-upload-search-advanced.cy.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 310,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\optimization-results-flow.cy.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 369,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\synthetic-data-advanced-features.cy.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 326,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\synthetic-data-generation-workflow.cy.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 306,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\synthetic-data-quality-assurance.cy.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 319,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\user-api-key-management.cy.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 366,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\user-notifications-settings.cy.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 320,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\user-security-privacy.cy.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 454,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\cypress\\e2e\\websocket-resilience.cy.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 358,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\utils\\critical-test-utils.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 307,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\utils\\recovery-test-helpers.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 312,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\hooks\\useEventProcessor.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 312,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\hooks\\useThreadSwitching.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 413,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\lib\\asset-fallback-manager.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 363,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\lib\\event-queue.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 337,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\lib\\hydration-validator.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 479,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\lib\\logger.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 321,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\mocks\\handlers.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 316,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\services\\messageFormatter.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 358,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\services\\messageService.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 320,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\services\\optimistic-updates.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 328,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\services\\websocketDebugger.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 416,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\services\\webSocketService.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 1330,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 10
    },
    {
      "file_path": "frontend\\store\\unified-chat.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 352,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\store\\websocket-agent-handlers.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 301,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\agent-types.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 303,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\websocket-event-types.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 401,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\types\\shared\\base.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 302,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\auth\\auth-login.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 364,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\auth\\auth-logout.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 326,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\auth\\auth-security.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 437,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\auth\\auth-token.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 314,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\demo\\ROICalculator.calculations.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 325,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\demo\\ROICalculator.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 405,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\first-time-user\\mobile-experience-helpers.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 406,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\helpers\\websocket-test-manager.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 399,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\hooks\\useChatWebSocket.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 373,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\integration-shared-utilities.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 401,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\tool-lifecycle-integration.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 333,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\lib\\circular-buffer.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 475,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\lib\\utils.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 323,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\mocks\\api-mocks.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 315,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\mocks\\index.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 326,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\mocks\\mcp-service-mock.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 324,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\mocks\\websocket-mocks.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 416,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\services\\apiClient.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 615,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\services\\demoService.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 560,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\services\\messageService.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 395,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\services\\threadService.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 394,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\services\\webSocketService.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 517,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\store\\auth-store-state-management.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 304,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\store\\authStore.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 398,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\store\\cache-management.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 391,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\store\\error-state-recovery.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 486,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\store\\localStorage-persistence.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 401,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\store\\middleware-behavior.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 589,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\store\\multi-tab-sync.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 540,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\store\\offline-mode.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 607,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\store\\optimistic-updates.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 497,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\store\\state-migration.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 472,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\store\\store-actions-reducers.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 334,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\store\\undo-redo-history.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 600,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\store\\unified-chat-websocket-events.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 354,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\store\\unified-chat.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 368,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\api-test-mocks.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 461,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\auth-test-mocks.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 427,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\comprehensive-matchers.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 421,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\comprehensive-test-factories.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 400,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\react-act-utils.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 311,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\websocket-test-mocks.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 375,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\types\\circular-dependency-detector.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 462,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\types\\type-export-conflicts.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 531,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\utils\\auth-test-helpers.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 410,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\utils\\custom-matchers.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 355,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\utils\\exportService.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 526,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\utils\\loading-state-machine.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 400,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\utils\\mock-factories.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 375,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\utils\\thread-test-helpers.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 371,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\agent_tracking_helper.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 402,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class AgentTrackingHelper (line 21) | Split by functions: function _create_argument_parser (line 361), function _add_required_arguments (line 369), function _add_optional_arguments (line 377)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\align_test_imports.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 459,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestImportAligner (line 24) | Split by functions: function main (line 452), function __init__ (line 27), function run (line 39)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 668,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class TestInfo (line 25), class SimilarityResult (line 41), class TestOverlapAnalyzer (line 54) | Split by functions: function main (line 647), function __init__ (line 57), function analyze (line 69)",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\audit_config.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 323,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class AuditLevel (line 14), class DuplicateThreshold (line 24), class FeatureFlags (line 33) | Split by functions: function get_default_config (line 279), function __init__ (line 108), function _find_config_file (line 114)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\audit_oauth_gcp_logs.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 581,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class OAuthLogAnalyzer (line 43) | Split by functions: function main (line 539), function __init__ (line 46), function fetch_oauth_logs (line 88)",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 478,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class FunctionDecomposition (line 16), class FunctionDecomposer (line 25) | Split by functions: function main (line 447), function __init__ (line 28), function analyze_function_for_decomposition (line 33)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 767,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class TestFunction (line 34), class TestClass (line 48), class TestModule (line 59) | Split by functions: function main (line 713), function __init__ (line 74), function analyze_file (line 78)",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 1024,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 modules",
      "auto_split_suggestion": "Split by classes: class TestViolation (line 47), class FunctionInfo (line 56), class ClassInfo (line 68) | Split by functions: function main (line 911), function __init__ (line 80), function find_test_files (line 85)",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_split_files.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 388,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class SplitSuggestion (line 18), class FileSplitter (line 25) | Split by functions: function main (line 355), function __init__ (line 28), function analyze_file_for_splitting (line 33)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\benchmark_optimization.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 437,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestExecutionBenchmark (line 28) | Split by functions: function __init__ (line 31), function _discover_test_files (line 69), function _compare_executions (line 227)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 806,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class TestMetadata (line 24), class ComponentCoverage (line 48), class BusinessValueTestIndexer (line 65) | Split by functions: function main (line 770), function __init__ (line 68), function _load_business_value_spec (line 113)",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\categorize_tests.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 374,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestCategorizer (line 17) | Split by functions: function main (line 341), function __init__ (line 20), function _initialize_categories (line 25)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\check_imports.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 407,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\check_netra_backend_imports.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 353,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ImportIssue (line 18), class FileAnalysis (line 27), class ImportAnalyzer (line 35) | Split by functions: function main (line 309), function __init__ (line 38), function analyze_file (line 64)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\check_schema_imports.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 443,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class SchemaViolation (line 29), class SchemaDefinition (line 52), class ImportAnalysis (line 61) | Split by functions: function main (line 405), function to_dict (line 39), function __init__ (line 91)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\claude_audit_analyzer.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 426,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class AuditRequest (line 23), class AuditResponse (line 33), class ClaudeAuditCache (line 45) | Split by functions: function __init__ (line 48), function get_key (line 53), function get (line 60)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\cleanup_duplicate_tests.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 318,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestModuleImportCleaner (line 31) | Split by functions: function main (line 279), function __init__ (line 34), function is_auto_generated_file (line 44)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\cleanup_generated_files.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 347,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function get_file_age_days (line 71), function should_delete_file (line 82), function cleanup_directory (line 92)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\cleanup_workflow_runs.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 314,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function run_gh_command (line 15), function get_workflow_runs (line 46), function delete_workflow_run (line 82)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\code_audit_orchestrator.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 448,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class CodeAuditOrchestrator (line 22) | Split by functions: function __init__ (line 25), function check_bypass (line 40), function _get_changed_files (line 110)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\comprehensive_e2e_import_fixer.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 389,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ComprehensiveE2EImportFixer (line 33) | Split by functions: function main (line 318), function __init__ (line 36), function fix_schemas_import (line 41)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 801,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class ImportIssue (line 26), class ImportScanResult (line 43), class ComprehensiveScanReport (line 58) | Split by functions: function main (line 747), function to_dict (line 38), function has_issues (line 53)",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\comprehensive_test_fixer.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 426,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestFailureAnalyzer (line 18), class CodeGenerator (line 73), class TestFixer (line 169) | Split by functions: function main (line 416), function __init__ (line 21), function analyze_test_output (line 25)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\configure_audit.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 322,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class AuditConfigurator (line 24) | Split by functions: function main (line 247), function __init__ (line 27), function show_status (line 30)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\create_additional_shims.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 308,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function create_shim_module (line 256), function main (line 277)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\create_enforcement_tools.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 490,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ViolationReport (line 28), class ComplianceReport (line 42), class ProgressTracker (line 52) | Split by functions: function create_argument_parser (line 364), function add_basic_arguments (line 377), function add_advanced_arguments (line 385)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\deduplicate_types.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 444,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ImportReplacement (line 33), class DuplicateTypeInfo (line 43), class TypeDeduplicator (line 52) | Split by functions: function main (line 383), function _setup_project_paths (line 55), function _setup_duplicate_files_list (line 61)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 1028,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 modules",
      "auto_split_suggestion": "Split by classes: class ServiceConfig (line 44), class GCPDeployer (line 59) | Split by functions: function main (line 943), function __init__ (line 62), function check_gcloud (line 126)",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\detect_duplicate_code.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 329,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class DuplicateCodeDetector (line 28) | Split by functions: function main (line 282), function __init__ (line 31), function scan_codebase (line 41)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\duplicate_detector.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 446,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class CodeBlock (line 20), class Duplicate (line 52), class LegacyPattern (line 63) | Split by functions: function analyze_changed_files (line 391), function line_count (line 33), function similarity_to (line 36)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\e2e_import_fixer_comprehensive.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 600,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class ImportIssue (line 23), class FileAnalysisResult (line 34), class E2EImportReport (line 44) | Split by functions: function main (line 551), function __init__ (line 59), function discover_all_e2e_tests (line 111)",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\emergency_boundary_actions.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 471,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class EmergencyAction (line 20), class EmergencyActionSystem (line 32) | Split by functions: function main (line 429), function __init__ (line 35), function assess_emergency_level (line 42)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\enforce_limits.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 322,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ViolationDetail (line 20), class FileLineChecker (line 32), class FunctionLineChecker (line 68) | Split by functions: function create_argument_parser (line 221), function collect_target_files (line 266), function main (line 285)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\enhance_dev_launcher_boundaries.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 314,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function enhance_launcher_config (line 12), function enhance_launcher_args (line 62), function enhance_launcher_main (line 113)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\fast_import_checker.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 450,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function check_module_exists (line 15), function get_module_exports (line 31), function fix_known_import_issues (line 54)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\fix_all_import_issues.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 360,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ImportFixer (line 16) | Split by functions: function get_module_path (line 60), function fix_imports_in_file (line 71), function remove_sys_path_manipulation (line 146)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\fix_comprehensive_imports.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 357,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ComprehensiveImportFixerV2 (line 20) | Split by functions: function main (line 297), function __init__ (line 23), function scan_for_import_issues (line 29)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\fix_deployment_logging.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 346,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class DeploymentLoggingFixer (line 20) | Split by functions: function main (line 320), function __init__ (line 23), function run (line 28)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\fix_e2e_imports.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 430,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class E2EImportFixer (line 30) | Split by functions: function main (line 406), function __init__ (line 33), function fix_file (line 100)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\fix_e2e_tests_comprehensive.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 391,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestFileAnalysis (line 28), class E2ETestFixer (line 40) | Split by functions: function main (line 345), function __init__ (line 43), function _get_common_fixtures (line 47)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\fix_imports.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 380,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\fix_malformed_imports.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 336,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class MalformedImportFixer (line 38) | Split by functions: function main (line 271), function __init__ (line 41), function check_syntax (line 49)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\fix_schema_imports.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 304,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class SchemaImportFixer (line 19) | Split by functions: function main (line 264), function __init__ (line 22), function move_schemas_to_canonical_location (line 28)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\fix_staging_deployment.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 494,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class SecretConfig (line 31), class ServiceEndpoint (line 40), class StagingDeploymentFixer (line 47) | Split by functions: function main (line 467), function __init__ (line 50), function print_header (line 114)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\fix_test_batch.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 397,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestAnalyzer (line 22), class TestFixer (line 83), class BatchTestProcessor (line 215) | Split by functions: function main (line 342), function __init__ (line 25), function analyze_failure (line 31)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\fix_test_import_errors.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 337,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ImportFix (line 17), class TestImportFixer (line 22) | Split by functions: function main (line 297), function __init__ (line 23), function scan_directory_for_errors (line 138)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\fix_websocket_imports.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 369,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class WebSocketImportFixer (line 26) | Split by functions: function main (line 341), function __init__ (line 29), function _fix_multiline_websocket_core_import (line 134)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\function_complexity_analyzer.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 400,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class FunctionInfo (line 18), class FunctionVisitor (line 30), class ComplexityAnalyzer (line 78) | Split by functions: function main (line 350), function _convert_results_to_json (line 379), function __init__ (line 33)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\gcp_health_diagnostics.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 371,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class GCPHealthDiagnostics (line 29) | Split by functions: function __init__ (line 32), function _analyze_response_patterns (line 170), function _generate_recommendations (line 206)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\gcp_health_monitor.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 400,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ServiceStatus (line 35), class HealthCheck (line 43), class ServiceConfig (line 52) | Split by functions: function main (line 359), function __init__ (line 83), function _configure_services (line 98)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\generate_openapi_spec.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 347,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function get_openapi_spec (line 30), function _extract_base_schema (line 43), function _add_metadata (line 49)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\generate_startup_integration_tests.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 495,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function generate_test_file (line 226), function main (line 382), function generate_summary (line 410)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\generate_wip_report.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 378,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class WIPReportGenerator (line 20) | Split by functions: function __init__ (line 23), function run_compliance_check (line 29), function _is_test_file (line 88)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\import_management.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 341,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ImportManagementSystem (line 33) | Split by functions: function main (line 295), function __init__ (line 36), function check_imports (line 60)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\metadata_header_generator.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 396,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class MetadataHeaderGenerator (line 18) | Split by functions: function main (line 353), function __init__ (line 21), function _get_agent_info (line 27)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\precommit_duplicate_detector.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 343,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class PrecommitDuplicateDetector (line 25) | Split by functions: function main (line 332), function __init__ (line 28), function _load_critical_patterns (line 34)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\remove_test_stubs.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 395,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestStubViolation (line 26), class TestStubDetector (line 38) | Split by functions: function main (line 352), function __init__ (line 41), function should_scan_file (line 86)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\scan_for_secrets.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 326,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class SecretPattern (line 18), class Finding (line 27), class SecretsScanner (line 37) | Split by functions: function main (line 284), function __init__ (line 40), function _initialize_patterns (line 45)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\scan_string_literals.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 522,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class StringLiteralScanner (line 16), class LiteralVisitor (line 189) | Split by functions: function main (line 413), function __init__ (line 58), function should_skip_dir (line 65)",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\seed_staging_data.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 477,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class StagingDataSeeder (line 41) | Split by functions: function _create_seeding_parser (line 371), function _add_basic_arguments (line 379), function _add_data_count_arguments (line 384)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\standardize_l3_test_names.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 307,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function find_l3_files (line 19), function get_new_filename (line 26), function check_name_conflicts (line 33)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\status_collector.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 314,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class StatusDataCollector (line 52), class ComponentHealthCollector (line 118), class WipItemsCollector (line 184) | Split by functions: function __init__ (line 55), function load_spec_root (line 59), function find_pattern_matches (line 64)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\test_backend.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 562,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function setup_test_environment (line 45), function _configure_windows_asyncio (line 54), function _setup_dotenv_test_config (line 59)",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_backend_optimized.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 460,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class OptimizedTestManager (line 105) | Split by functions: function discover_test_files (line 280), function print_results_summary (line 320), function __init__ (line 108)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\test_cold_start_e2e.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 515,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ColdStartE2ETest (line 59) | Split by functions: function __init__ (line 62), function read_service_discovery (line 171), function get_api_url (line 433)",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_coordination_fixes.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 434,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class CoordinationFixValidator (line 30) | Split by functions: function __init__ (line 33), function _print_test_summary (line 369)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\test_example_message_flow.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 448,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ExampleMessageFlowTestRunner (line 24) | Split by functions: function run_quick_validation (line 367), function main (line 427), function __init__ (line 27)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\test_frontend.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 560,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function check_node_modules (line 39), function install_dependencies (line 45), function check_dependencies (line 65)",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_oauth_local.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 481,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class OAuthLocalTester (line 38) | Split by functions: function main (line 475), function __init__ (line 41), function generate_report (line 344)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\test_staging_startup.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 313,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class StagingStartupTester (line 24) | Split by functions: function main (line 282), function __init__ (line 27), function test_service_initialization_order (line 33)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\test_websocket_dev_mode.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 354,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class WebSocketDevModeTest (line 29) | Split by functions: function __init__ (line 32), function stop_dev_server (line 235), function generate_report (line 285)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\test_workflows_with_act.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 372,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class WorkflowTester (line 22) | Split by functions: function main (line 365), function __init__ (line 25), function check_prerequisites (line 32)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\unified_import_manager.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 670,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class ImportCheckResult (line 44), class UnifiedImportReport (line 55), class UnifiedImportManager (line 64) | Split by functions: function run_precommit_check (line 565), function main (line 584), function __init__ (line 67)",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\update_spec_timestamps.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 305,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function is_legacy_spec (line 78), function add_timestamp_to_xml (line 141), function main (line 200)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 371,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestMetrics (line 31), class ValidationResult (line 49), class AgentTestValidator (line 58) | Split by functions: function __post_init__ (line 43), function __init__ (line 61), function find_critical_test_files (line 67)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\validate_atomic_change.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 458,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ValidationResult (line 19), class AtomicChangeReport (line 29), class AtomicChangeValidator (line 51) | Split by functions: function main (line 424), function is_atomic (line 40), function compliance_score (line 45)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\validate_cold_start.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 380,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ColdStartValidator (line 30) | Split by functions: function main (line 373), function __init__ (line 33), function print_header (line 38)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\validate_mock_real_spectrum_compliance.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 321,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class MockViolation (line 19), class ComplianceReport (line 31), class MockRealSpectrumValidator (line 41) | Split by functions: function main (line 290), function __init__ (line 44), function scan_test_files (line 67)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\validate_staging_config.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 455,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function print_section (line 26), function get_env_var_value (line 32), function format_env_display_value (line 36)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 630,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class StagingValidator (line 52) | Split by functions: function main (line 541), function __init__ (line 55), function validate_all (line 76)",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\validate_type_deduplication.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 378,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class DuplicateType (line 27), class ValidationResult (line 36), class TypeDeduplicationValidator (line 46) | Split by functions: function main (line 340), function __init__ (line 49), function _load_canonical_imports (line 54)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\verify_cold_start.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 390,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ColdStartVerifier (line 35) | Split by functions: function main (line 365), function __init__ (line 38), function log (line 43)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\verify_workflow_status.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 375,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class WorkflowRun (line 29), class VerificationConfig (line 43), class GitHubAPIError (line 54) | Split by functions: function create_config_from_args (line 309), function main (line 324), function __init__ (line 57)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 463,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function find_backend_events (line 13), function find_frontend_handlers (line 51), function check_event_structure (line 81)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\workflow_introspection.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 407,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class WorkflowStep (line 25), class WorkflowJob (line 34), class WorkflowRun (line 45) | Split by functions: function main (line 332), function __init__ (line 64), function _run_gh_command (line 68)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\autonomous_review\\test_reviewer.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 330,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class AutonomousTestReviewer (line 19) | Split by functions: function __init__ (line 22), function _find_test_file (line 301)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\ci\\generate_fix.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 426,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class FixResult (line 16), class AIFixGenerator (line 25), class FixValidator (line 277) | Split by functions: function load_context (line 350), function main (line 382), function __init__ (line 28)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\compliance\\analyze_mocks.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 306,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class MockUsage (line 18), class MockAnalyzer (line 30) | Split by functions: function main (line 286), function __init__ (line 33), function find_test_files (line 61)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\compliance\\enhanced_reporter.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 305,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class EnhancedComplianceReporter (line 14) | Split by functions: function __init__ (line 17), function generate_report (line 22), function _categorize_violations (line 85)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\compliance\\fake_test_scanner.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 478,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class FakeTestScanner (line 37) | Split by functions: function main (line 358), function __init__ (line 40), function scan_all_tests (line 45)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 411,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestViolation (line 22), class ProjectTestValidator (line 31), class MockComponentVisitor (line 163) | Split by functions: function main (line 382), function __init__ (line 34), function validate_project_tests (line 45)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 616,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class TestViolation (line 32), class RealTestRequirementsEnforcer (line 43), class MockComponentVisitor (line 229) | Split by functions: function main (line 581), function __init__ (line 46), function validate_all_tests (line 76)",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\real_test_validator.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 357,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\compliance\\reporter.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 326,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ComplianceReporter (line 14) | Split by functions: function __init__ (line 17), function generate_report (line 25), function _print_report_header (line 31)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\compliance\\test_fixer.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 389,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestFixer (line 20), class TestGrouper (line 129) | Split by functions: function main (line 376), function __init__ (line 23), function fix_mock_component_function (line 26)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 739,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class TestFunction (line 32), class TestClass (line 45), class SplitSuggestion (line 56) | Split by functions: function main (line 656), function __init__ (line 68), function analyze_file_for_splitting (line 71)",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\test_size_validator.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 550,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class SizeViolation (line 32), class TestFileAnalysis (line 46), class TestSizeValidator (line 56) | Split by functions: function main (line 504), function __init__ (line 63), function validate_all_tests (line 68)",
      "impact_score": 5
    },
    {
      "file_path": "test_framework\\auth_helpers.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 605,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class AuthTestConfig (line 36), class AuthManager (line 61), class JWTTestHelper (line 187) | Split by functions: function skip_if_services_unavailable (line 465), function assert_auth_performance (line 508), function assert_token_rejection (line 532)",
      "impact_score": 6
    },
    {
      "file_path": "test_framework\\auto_splitter.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 1081,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 modules",
      "auto_split_suggestion": "Split by classes: class SplittingStrategy (line 17), class WindowPriority (line 27), class TestItem (line 37) | Split by functions: function __post_init__ (line 61), function effective_duration (line 73), function reliability_score (line 83)",
      "impact_score": 10
    },
    {
      "file_path": "test_framework\\category_system.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 752,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class CategoryPriority (line 16), class CategoryType (line 25), class TestCategory (line 37) | Split by functions: function __post_init__ (line 75), function is_leaf_category (line 86), function is_root_category (line 90)",
      "impact_score": 7
    },
    {
      "file_path": "test_framework\\conftest_base.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 458,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class MockSessionFactory (line 306), class PerformanceMonitor (line 342), class E2ELogger (line 377) | Split by functions: function common_test_user (line 64), function sample_data (line 75), function mock_redis_client (line 84)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\decorators.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 359,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function feature_flag (line 21), function requires_feature (line 55), function experimental_test (line 87)",
      "impact_score": 3
    },
    {
      "file_path": "test_framework\\fail_fast_strategies.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 801,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class FailFastMode (line 17), class FailureImpact (line 28), class SkipReason (line 36) | Split by functions: function __post_init__ (line 72), function is_retriable (line 84), function is_critical (line 91)",
      "impact_score": 8
    },
    {
      "file_path": "test_framework\\http_client.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 318,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ConnectionState (line 24), class ClientConfig (line 49), class ConnectionMetrics (line 68) | Split by functions: function create_auth_client (line 260), function create_backend_client (line 267), function create_unified_client (line 274)",
      "impact_score": 3
    },
    {
      "file_path": "test_framework\\import_tester.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 442,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\optimized_executor.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 667,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class TestExecutionResult (line 52), class ShardExecutionStats (line 67), class FastTestDatabase (line 79) | Split by functions: function __init__ (line 82), function _initialize_pool (line 89), function __init__ (line 156)",
      "impact_score": 6
    },
    {
      "file_path": "test_framework\\performance.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 473,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class PerformanceMetrics (line 19), class PerformanceMonitor (line 62), class ResponseTimeTracker (line 140) | Split by functions: function create_performance_benchmark (line 424), function measure_time (line 441), function example_sync_operation (line 459)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\progress_tracker.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 793,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class ProgressStatus (line 19), class ProgressEvent (line 29), class CategoryProgress (line 47) | Split by functions: function __post_init__ (line 85), function is_complete (line 91), function is_successful (line 97)",
      "impact_score": 7
    },
    {
      "file_path": "test_framework\\real_llm_config.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 672,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class LLMProvider (line 33), class TestingMode (line 40), class ModelConfig (line 49) | Split by functions: function get_real_llm_manager (line 538), function configure_real_llm_testing (line 546), function pytest_configure_real_llm (line 553)",
      "impact_score": 6
    },
    {
      "file_path": "test_framework\\report_generators.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 391,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function status_badge (line 13), function extract_test_counts_from_output (line 27), function calculate_total_counts (line 76)",
      "impact_score": 3
    },
    {
      "file_path": "test_framework\\seed_data_manager.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 721,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class SeedDataSet (line 37), class TestEnvironmentConfig (line 48), class DatabaseTransactionManager (line 59) | Split by functions: function __init__ (line 62), function get_transaction_stats (line 212), function __init__ (line 241)",
      "impact_score": 7
    },
    {
      "file_path": "test_framework\\test_discovery.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 304,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestMetrics (line 18), class CoverageAnalyzer (line 35), class SpecificationParser (line 145) | Split by functions: function __post_init__ (line 29), function __init__ (line 38), function _extract_coverage_percentage (line 77)",
      "impact_score": 3
    },
    {
      "file_path": "test_framework\\test_helpers.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 476,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function get_project_root (line 24), function is_windows (line 29), function get_available_port (line 34)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\test_parser.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 419,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function parse_test_counts (line 8), function _count_import_errors (line 104), function parse_coverage (line 117)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\test_quality_analyzer.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 410,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestQualityIssue (line 30), class TestQualityAnalyzer (line 42), class FakeTestVisitor (line 354) | Split by functions: function __init__ (line 45), function _get_default_data_file (line 65), function _generate_run_id (line 71)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\test_utils.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 351,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function create_test_user (line 94), function generate_test_token (line 256)",
      "impact_score": 3
    },
    {
      "file_path": "test_framework\\unified_orchestrator.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 455,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ServiceManager (line 28), class TestExecutor (line 128), class ResultAggregator (line 254) | Split by functions: function __init__ (line 31), function _load_service_configs (line 37), function start_service (line 45)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\websocket_helpers.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 422,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class WebSocketTestHelpers (line 39), class MockWebSocket (line 105), class MockWebSocketManager (line 164) | Split by functions: function websocket_performance_monitor (line 293), function validate_websocket_message (line 411), function assert_websocket_response_time (line 418)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\archived\\duplicates\\bad_test_detector.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 383,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class BadTestDetector (line 15) | Split by functions: function __init__ (line 18), function _get_default_data_file (line 29), function _generate_run_id (line 36)",
      "impact_score": 3
    },
    {
      "file_path": "test_framework\\archived\\duplicates\\fake_test_detector.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 850,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class FakeTestResult (line 46), class FakeTestStats (line 60), class FakeTestDetector (line 75) | Split by functions: function main (line 824), function __post_init__ (line 68), function __init__ (line 137)",
      "impact_score": 8
    },
    {
      "file_path": "test_framework\\archived\\duplicates\\ultra_test_orchestrator.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 433,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestProfileBuilder (line 24), class UltraTestOrchestrator (line 158) | Split by functions: function build_backend_profiles (line 27), function build_frontend_profiles (line 53), function _categorize_test (line 79)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\archived\\duplicates\\unified\\base_interfaces.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 432,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestEnvironment (line 16), class TestLevel (line 24), class ServiceStatus (line 34) | Split by functions: function __post_init__ (line 57), function __post_init__ (line 74), function __post_init__ (line 91)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\archived\\duplicates\\unified\\orchestrator.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 558,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestSuite (line 38), class OrchestratorConfig (line 53), class UnifiedTestOrchestrator (line 66) | Split by functions: function __init__ (line 69), function get_test_registry (line 349)",
      "impact_score": 5
    },
    {
      "file_path": "test_framework\\archived\\executors\\intelligent_parallelization.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 461,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestType (line 37), class TestPriority (line 46), class TestMetrics (line 55) | Split by functions: function __init__ (line 80), function create_optimal_shards (line 88), function _analyze_test_characteristics (line 94)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\archived\\executors\\memory_optimized_executor.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 418,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class MemoryMonitor (line 22), class TestExecutor (line 71), class MemoryOptimizedExecutor (line 189) | Split by functions: function __init__ (line 25), function get_memory_usage (line 30), function should_throttle (line 45)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\archived\\executors\\test_execution_engine.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 431,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function execute_test_suite (line 25), function execute_backend_only_tests (line 40), function execute_frontend_only_tests (line 51)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\archived\\experimental\\patterns.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 486,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class BaseIntegrationTest (line 19), class L3IntegrationTest (line 113), class L4IntegrationTest (line 240) | Split by functions: function require_environment (line 457), function require_real_services (line 468), function timeout_test (line 479)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\archived\\experimental\\performance_optimizer.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 522,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class PerformanceMetrics (line 35), class TestTypeMetrics (line 65), class OptimizationRecommendation (line 78) | Split by functions: function __init__ (line 91), function analyze_execution_performance (line 97), function _calculate_cpu_utilization (line 133)",
      "impact_score": 5
    },
    {
      "file_path": "test_framework\\archived\\experimental\\resource_monitor.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 570,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class SystemMetrics (line 36), class TestResourceUsage (line 51), class ResourceMonitor (line 63) | Split by functions: function __init__ (line 66), function start_monitoring (line 84), function stop_monitoring (line 95)",
      "impact_score": 5
    },
    {
      "file_path": "test_framework\\archived\\experimental\\smart_cache.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 389,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class CacheEntry (line 19), class FileHashCalculator (line 31), class SmartCache (line 78) | Split by functions: function __init__ (line 34), function calculate_test_file_hash (line 38), function calculate_dependency_hash (line 62)",
      "impact_score": 3
    },
    {
      "file_path": "test_framework\\archived\\experimental\\test_isolation.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 305,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestIsolationManager (line 15) | Split by functions: function create_isolated_test_env (line 285), function get_isolated_pytest_args (line 294), function get_isolated_jest_args (line 301)",
      "impact_score": 3
    },
    {
      "file_path": "test_framework\\archived\\experimental\\test_updater.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 351,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestUpdateMode (line 24), class TestUpdater (line 38), class TestUpdateModeHandler (line 278) | Split by functions: function _create_argument_parser (line 230), function _add_all_arguments (line 236), function _add_mode_arguments (line 243)",
      "impact_score": 3
    },
    {
      "file_path": "test_framework\\archived\\experimental\\test_user_journeys.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 443,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class JourneyTestResult (line 42), class ServiceOrchestrator (line 79), class JourneyTestBase (line 113) | Split by functions: function __init__ (line 45), function add_step (line 54), function add_error (line 58)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\archived\\experimental\\test_user_journeys_extended.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 507,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class OAuthLoginJourneyTest (line 46), class RealWebSocketJourneyTest (line 204), class DataConsistencyValidator (line 382) | Split by functions: function _verify_response_quality (line 361), function __init__ (line 385), function __init__ (line 431)",
      "impact_score": 5
    },
    {
      "file_path": "test_framework\\archived\\experimental\\test_user_journeys_integration.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 353,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class UserJourneyTestOrchestrator (line 43), class UserJourneyTestReporter (line 243) | Split by functions: function get_user_journey_test_config (line 317), function __init__ (line 46), function _generate_recommendations (line 221)",
      "impact_score": 3
    },
    {
      "file_path": "test_framework\\config\\category_config.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 861,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class CategoryConfigData (line 25), class ExecutionConfig (line 63), class TestRunnerConfig (line 103) | Split by functions: function __init__ (line 130), function load_env_files (line 151), function load_config (line 164)",
      "impact_score": 8
    },
    {
      "file_path": "test_framework\\config\\config_manager.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 434,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class EnvironmentConfig (line 27), class TestLevelConfig (line 49), class ConfigurationManager (line 66) | Split by functions: function __post_init__ (line 41), function __post_init__ (line 61), function __init__ (line 69)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\docker_testing\\compose_manager.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 402,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ContainerInfo (line 29), class DockerComposeManager (line 83) | Split by functions: function from_docker_inspect (line 41), function __init__ (line 86)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\fixtures\\auth.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 325,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class MockAuthToken (line 16), class MockAuthService (line 46), class MockJWTManager (line 129) | Split by functions: function create_mock_auth_service (line 262), function create_mock_jwt_manager (line 266), function create_mock_oauth_provider (line 270)",
      "impact_score": 3
    },
    {
      "file_path": "test_framework\\fixtures\\routes.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 412,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class MockRequest (line 15), class MockResponse (line 42), class MockRouteHandler (line 56) | Split by functions: function create_mock_request (line 273), function create_mock_response (line 278), function create_mock_api_client (line 283)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\fixtures\\websocket_types.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 500,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class MockWebSocketState (line 18), class MockMessageType (line 27), class MockWebSocketMessage (line 40) | Split by functions: function create_mock_websocket_connection (line 391), function create_mock_websocket_manager (line 395), function create_mock_websocket_message (line 399)",
      "impact_score": 5
    },
    {
      "file_path": "test_framework\\mocks\\database_mocks.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 396,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class MockDatabaseSession (line 11), class MockAsyncDatabaseFactory (line 76), class MockPostgreSQLConnection (line 114) | Split by functions: function __init__ (line 14), function add (line 41), function get_operations (line 71)",
      "impact_score": 3
    },
    {
      "file_path": "test_framework\\mocks\\http_mocks.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 357,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class MockTimeoutException (line 13), class MockResponse (line 18), class MockHttpClient (line 41) | Split by functions: function __init__ (line 21), function raise_for_status (line 35), function __init__ (line 44)",
      "impact_score": 3
    },
    {
      "file_path": "test_framework\\mocks\\llm.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 402,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class MockLLMProvider (line 17), class MockLLMModel (line 24), class MockLLMUsage (line 35) | Split by functions: function create_mock_llm_client (line 295), function create_fast_llm_client (line 300), function create_slow_llm_client (line 306)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\mocks\\llm_mocks.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 329,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class MockLLMService (line 14), class MockAgentService (line 130), class MockOpenAIClient (line 229) | Split by functions: function create_mock_structured_response (line 185), function get_mock_value_for_field (line 194), function get_complex_mock_value (line 208)",
      "impact_score": 3
    },
    {
      "file_path": "test_framework\\mocks\\service_mocks.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 403,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class MockClickHouseService (line 10), class MockRedisService (line 32), class MockLLMService (line 68) | Split by functions: function setup_redis_mock_with_error (line 335), function setup_redis_mock_with_large_cache (line 343), function setup_quality_service_with_redis_error (line 351)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\mocks\\websocket_mocks.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 332,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class MockWebSocket (line 16), class MockWebSocketManager (line 103), class MockWebSocketConnectionManager (line 159) | Split by functions: function __init__ (line 19), function _generate_user_id (line 27), function _init_failure_flags (line 31)",
      "impact_score": 3
    },
    {
      "file_path": "test_framework\\staging_testing\\endpoint_validator.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 595,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class EndpointTestResult (line 30), class APIContractViolation (line 47), class StagingEndpointValidator (line 57) | Split by functions: function __post_init__ (line 41), function __init__ (line 60), function _validate_json_schema (line 455)",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\act_wrapper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 230,
      "function_name": "execute_command",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\act_wrapper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 171,
      "function_name": "_temporary_env_file",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\act_wrapper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 177,
      "function_name": "_temp_env",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\add_test_markers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 230,
      "function_name": "main",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\add_test_markers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 18,
      "function_name": "__init__",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\add_test_markers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 31,
      "function_name": "get_markers_for_file",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\add_test_markers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 61,
      "function_name": "add_markers_to_class",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\add_test_markers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 98,
      "function_name": "add_markers_to_function",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\add_test_markers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 132,
      "function_name": "process_file",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\add_test_markers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 179,
      "function_name": "add_conditional_skip_for_real_services",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\add_test_markers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 198,
      "function_name": "run",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\agent_tracking_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 71,
      "function_name": "_get_git_info",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\agent_tracking_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 88,
      "function_name": "_should_exclude",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\agent_tracking_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 122,
      "function_name": "_create_header_lines",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\agent_tracking_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 176,
      "function_name": "_extract_existing_header",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\agent_tracking_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 196,
      "function_name": "_extract_history",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\agent_tracking_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 218,
      "function_name": "_format_history",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\agent_tracking_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 300,
      "function_name": "_finalize_content",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\agent_tracking_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 316,
      "function_name": "add_tracking_header",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\agent_tracking_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 332,
      "function_name": "create_audit_log_entry",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\aggressive_syntax_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 11,
      "function_name": "get_files_with_errors",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\aggressive_syntax_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "aggressive_fix",
      "actual_value": 140,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 18 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\aggressive_syntax_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 176,
      "function_name": "main",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\aggressive_syntax_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 15,
      "function_name": "fix_mismatched_brackets",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\aggressive_syntax_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 32,
      "function_name": "fix_unclosed_parentheses",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\aggressive_syntax_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 58,
      "function_name": "fix_unexpected_indent",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\aggressive_syntax_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 79,
      "function_name": "fix_empty_blocks",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\aggressive_syntax_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 102,
      "function_name": "fix_syntax_errors",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\aggressive_syntax_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 124,
      "function_name": "validate_syntax",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\aggressive_syntax_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 138,
      "function_name": "fix_file",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\aggressive_syntax_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 172,
      "function_name": "main",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\align_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 27,
      "function_name": "__init__",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\align_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 39,
      "function_name": "run",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\align_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 64,
      "function_name": "scan_test_files",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\align_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 82,
      "function_name": "fix_import_issues",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\align_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 112,
      "function_name": "fix_relative_imports",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\align_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 151,
      "function_name": "fix_sys_path",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\align_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 185,
      "function_name": "fix_module_imports",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\align_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 211,
      "function_name": "fix_test_runner_config",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\align_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 239,
      "function_name": "update_test_directories",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\align_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 273,
      "function_name": "update_component_mappings",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\align_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 310,
      "function_name": "fix_test_discovery_paths",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\align_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 344,
      "function_name": "fix_syntax_issues",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\align_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 372,
      "function_name": "fix_common_syntax_issues",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\align_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 400,
      "function_name": "generate_report",
      "actual_value": 48,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\analyze_critical_paths.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 23,
      "function_name": "analyze_file",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\analyze_test_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 28,
      "function_name": "categorize_mock",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\analyze_test_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 70,
      "function_name": "find_mock_justification",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\analyze_test_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 87,
      "function_name": "analyze_file_for_mocks",
      "actual_value": 48,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\analyze_test_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 139,
      "function_name": "main",
      "actual_value": 55,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 647,
      "function_name": "main",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 57,
      "function_name": "__init__",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 69,
      "function_name": "analyze",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 89,
      "function_name": "_collect_tests",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 102,
      "function_name": "_extract_tests_from_file",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 134,
      "function_name": "_extract_imports",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 147,
      "function_name": "_create_test_info",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 183,
      "function_name": "_extract_fixtures",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 205,
      "function_name": "_extract_assertions",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 223,
      "function_name": "_calculate_complexity",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 237,
      "function_name": "_analyze_similarities",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 281,
      "function_name": "_calculate_detailed_similarity",
      "actual_value": 57,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 343,
      "function_name": "_generate_report",
      "actual_value": 91,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 12 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 437,
      "function_name": "_generate_recommendations",
      "actual_value": 55,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 495,
      "function_name": "_save_report",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 515,
      "function_name": "_save_markdown_report",
      "actual_value": 97,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 13 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 615,
      "function_name": "_save_csv_report",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\architecture_dashboard.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 23,
      "function_name": "generate_html_dashboard",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\architecture_dashboard.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 87,
      "function_name": "_generate_tab_contents",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\architecture_dashboard.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 136,
      "function_name": "_generate_violation_chart",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\architecture_dashboard.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 160,
      "function_name": "_generate_severity_chart",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\architecture_dashboard.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 177,
      "function_name": "_generate_compliance_chart",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\architecture_dashboard_html.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 16,
      "function_name": "generate_dashboard_header",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\architecture_dashboard_html.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 49,
      "function_name": "generate_metrics_section",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\architecture_dashboard_html.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 102,
      "function_name": "generate_charts_section",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\architecture_dashboard_tables.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 25,
      "function_name": "_generate_file_violation_rows",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\architecture_dashboard_tables.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 51,
      "function_name": "_generate_function_violation_rows",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\architecture_dashboard_tables.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 78,
      "function_name": "_generate_duplicate_rows",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\architecture_dashboard_tables.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 113,
      "function_name": "_generate_offender_rows",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\architecture_health.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 63,
      "function_name": "main",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\architecture_health.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 22,
      "function_name": "__init__",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\architecture_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 25,
      "function_name": "calculate_health_metrics",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\architecture_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 43,
      "function_name": "_calculate_violation_counts",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\architecture_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 65,
      "function_name": "_calculate_compliance_scores",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\architecture_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 144,
      "function_name": "_get_file_offenders",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\architecture_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 156,
      "function_name": "_get_function_offenders",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\architecture_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 195,
      "function_name": "_get_type_suggestions",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\architecture_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 207,
      "function_name": "_get_general_suggestions",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\architecture_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 249,
      "function_name": "_count_file_functions",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\architecture_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 20,
      "function_name": "export_json_report",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\architecture_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 96,
      "function_name": "_print_violation_breakdown",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\architecture_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 25,
      "function_name": "scan_all_violations",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\architecture_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 58,
      "function_name": "_check_file_size",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\architecture_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 81,
      "function_name": "_scan_file_functions",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\architecture_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 122,
      "function_name": "_extract_python_types",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\architecture_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 147,
      "function_name": "_extract_typescript_types",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\architecture_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 163,
      "function_name": "_filter_duplicates",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\architecture_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 188,
      "function_name": "_scan_file_for_missing_types",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\architecture_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 202,
      "function_name": "_check_function_types",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\architecture_scanner_helpers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 109,
      "function_name": "get_stub_patterns",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\architecture_scanner_helpers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 125,
      "function_name": "get_debt_patterns",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\architecture_scanner_helpers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 171,
      "function_name": "create_function_violation",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\architecture_scanner_helpers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 185,
      "function_name": "create_missing_return_type",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\architecture_scanner_helpers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 198,
      "function_name": "create_missing_param_type",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\architecture_scanner_quality.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 21,
      "function_name": "scan_test_stubs",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\architecture_scanner_quality.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "_scan_file_for_stubs",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\architecture_scanner_quality.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 50,
      "function_name": "_find_stub_pattern",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\architecture_scanner_quality.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 66,
      "function_name": "scan_architectural_debt",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\architecture_scanner_quality.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 78,
      "function_name": "_scan_file_for_debt",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\architecture_scanner_quality.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 92,
      "function_name": "_find_debt_patterns",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\architecture_scanner_quality.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 109,
      "function_name": "scan_code_quality",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\architecture_scanner_quality.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 121,
      "function_name": "_scan_file_for_quality",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\architecture_scanner_quality.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 135,
      "function_name": "_find_quality_patterns",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\audit_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 114,
      "function_name": "_find_config_file",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\audit_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 135,
      "function_name": "load_config",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\audit_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 167,
      "function_name": "save_config",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\audit_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 198,
      "function_name": "can_bypass",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\audit_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 259,
      "function_name": "from_env",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\audit_oauth_gcp_logs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 539,
      "function_name": "main",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\audit_oauth_gcp_logs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 46,
      "function_name": "__init__",
      "actual_value": 40,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\audit_oauth_gcp_logs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 88,
      "function_name": "fetch_oauth_logs",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\audit_oauth_gcp_logs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 135,
      "function_name": "_parse_log_entry",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\audit_oauth_gcp_logs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 178,
      "function_name": "analyze_oauth_flow",
      "actual_value": 55,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\audit_oauth_gcp_logs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 236,
      "function_name": "_extract_session_id",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\audit_oauth_gcp_logs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 264,
      "function_name": "_analyze_session",
      "actual_value": 86,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 11 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\audit_oauth_gcp_logs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 353,
      "function_name": "_get_log_message",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\audit_oauth_gcp_logs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 370,
      "function_name": "_check_configuration_issues",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\audit_oauth_gcp_logs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 410,
      "function_name": "generate_report",
      "actual_value": 49,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\audit_oauth_gcp_logs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 462,
      "function_name": "_print_recommendations",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\audit_oauth_gcp_logs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 501,
      "function_name": "export_session_details",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\audit_permissions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 10,
      "function_name": "analyze_route_file",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\audit_permissions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 47,
      "function_name": "main",
      "actual_value": 67,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 447,
      "function_name": "main",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "analyze_function_for_decomposition",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 52,
      "function_name": "_count_function_lines",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 72,
      "function_name": "_analyze_function_structure",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 98,
      "function_name": "_identify_logical_blocks",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 133,
      "function_name": "_identify_conditional_branches",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 151,
      "function_name": "_identify_validation_processing",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 176,
      "function_name": "_identify_error_handling",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 193,
      "function_name": "_is_validation_check",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 213,
      "function_name": "_suggest_logical_decomposition",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 235,
      "function_name": "_suggest_conditional_decomposition",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 266,
      "function_name": "_suggest_validation_processing_decomposition",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 301,
      "function_name": "_suggest_error_handling_decomposition",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 332,
      "function_name": "_suggest_simple_decomposition",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 369,
      "function_name": "scan_for_complex_functions",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 384,
      "function_name": "_analyze_file_functions",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 413,
      "function_name": "generate_decomposition_report",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 713,
      "function_name": "main",
      "actual_value": 49,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 78,
      "function_name": "analyze_file",
      "actual_value": 47,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 128,
      "function_name": "_extract_imports",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 141,
      "function_name": "_extract_bvj_comment",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 163,
      "function_name": "_analyze_function",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 203,
      "function_name": "_analyze_class",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 232,
      "function_name": "_extract_dependencies",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 253,
      "function_name": "split_oversized_file",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 295,
      "function_name": "_categorize_functions",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 333,
      "function_name": "_determine_test_category",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 361,
      "function_name": "_determine_class_category",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 374,
      "function_name": "_create_split_module",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 420,
      "function_name": "_get_fixture_dependencies",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 440,
      "function_name": "optimize_function",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 454,
      "function_name": "_split_test_function",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 482,
      "function_name": "_identify_assertion_blocks",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 517,
      "function_name": "_create_test_function",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 559,
      "function_name": "_manual_function_reconstruction",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 613,
      "function_name": "fix_all_violations",
      "actual_value": 62,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 679,
      "function_name": "fix_specific_file",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 911,
      "function_name": "main",
      "actual_value": 109,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 14 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 85,
      "function_name": "find_test_files",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 111,
      "function_name": "analyze_file_structure",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 148,
      "function_name": "_extract_class_info",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 170,
      "function_name": "_extract_function_info",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 189,
      "function_name": "find_violations",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 226,
      "function_name": "_check_function_violations",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 252,
      "function_name": "_check_function_violations_simple",
      "actual_value": 55,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 321,
      "function_name": "split_large_file",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 359,
      "function_name": "_split_into_multiple_files",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 391,
      "function_name": "_split_into_two_files",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 433,
      "function_name": "_extract_utilities",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 468,
      "function_name": "_categorize_tests",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 483,
      "function_name": "_determine_category",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 512,
      "function_name": "_create_split_file",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 541,
      "function_name": "_create_utilities_file",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 569,
      "function_name": "_update_file_with_utils_import",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 604,
      "function_name": "refactor_long_function",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 627,
      "function_name": "_extract_setup_and_assertions",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 681,
      "function_name": "__init__",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 693,
      "function_name": "scan_violations",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 728,
      "function_name": "_validate_test_file",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 750,
      "function_name": "_create_backup",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 769,
      "function_name": "analyze_and_suggest_fixes",
      "actual_value": 66,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 850,
      "function_name": "generate_report",
      "actual_value": 58,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_split_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 355,
      "function_name": "main",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_split_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "analyze_file_for_splitting",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\auto_split_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 55,
      "function_name": "_analyze_python_file",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_split_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 86,
      "function_name": "_analyze_typescript_file",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_split_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 152,
      "function_name": "_suggest_class_based_split",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\auto_split_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 172,
      "function_name": "_suggest_function_based_split",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\auto_split_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 193,
      "function_name": "_suggest_logical_split",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\auto_split_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 215,
      "function_name": "_fallback_split_suggestion",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_split_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 240,
      "function_name": "_group_functions_by_pattern",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_split_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 271,
      "function_name": "_find_logical_split_points",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_split_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 297,
      "function_name": "scan_for_oversized_files",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\auto_split_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 322,
      "function_name": "generate_split_report",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\benchmark_optimization.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 396,
      "function_name": "main",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\benchmark_optimization.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 38,
      "function_name": "run_comprehensive_benchmark",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\benchmark_optimization.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 69,
      "function_name": "_discover_test_files",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\benchmark_optimization.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 93,
      "function_name": "_run_standard_execution",
      "actual_value": 63,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\benchmark_optimization.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 159,
      "function_name": "_run_optimized_execution",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\benchmark_optimization.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 201,
      "function_name": "_simulate_optimized_execution",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\benchmark_optimization.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 227,
      "function_name": "_compare_executions",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\benchmark_optimization.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 253,
      "function_name": "_classify_productivity_gain",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\benchmark_optimization.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 270,
      "function_name": "_estimate_cost_savings",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\benchmark_optimization.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 290,
      "function_name": "_generate_benchmark_report",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\benchmark_optimization.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 311,
      "function_name": "_generate_optimization_recommendations",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\benchmark_optimization.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 335,
      "function_name": "_print_benchmark_summary",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\benchmark_optimization.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 382,
      "function_name": "_save_benchmark_results",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\boundary_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 191,
      "function_name": "main",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\boundary_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 86,
      "function_name": "_check_system_boundaries",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\boundary_enforcer_cli_handler.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 61,
      "function_name": "_create_pre_commit_config",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\boundary_enforcer_cli_handler.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 90,
      "function_name": "_create_ci_workflow_config",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\boundary_enforcer_cli_handler.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 191,
      "function_name": "handle_specific_checks",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\boundary_enforcer_report_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 48,
      "function_name": "_assess_growth_risk",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\boundary_enforcer_report_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 80,
      "function_name": "_build_report_object",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\boundary_enforcer_report_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 250,
      "function_name": "_build_violations_section",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\boundary_enforcer_report_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 265,
      "function_name": "_build_tools_section",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\boundary_enforcer_system_checks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 104,
      "function_name": "calculate_complexity_debt",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\boundary_enforcer_type_checks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 38,
      "function_name": "check_test_stub_boundaries",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\bulk_syntax_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 15,
      "function_name": "fix_all_syntax_issues",
      "actual_value": 103,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 13 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\bulk_syntax_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 124,
      "function_name": "validate_syntax",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\bulk_syntax_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 137,
      "function_name": "fix_file",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\bulk_syntax_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 171,
      "function_name": "main",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 770,
      "function_name": "main",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 68,
      "function_name": "__init__",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 120,
      "function_name": "scan_tests",
      "actual_value": 76,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 200,
      "function_name": "_scan_python_test",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 222,
      "function_name": "_extract_decorators_from_node",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 251,
      "function_name": "_extract_python_test_metadata",
      "actual_value": 55,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 311,
      "function_name": "_scan_typescript_test",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 346,
      "function_name": "_determine_test_type",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 393,
      "function_name": "_determine_component",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 419,
      "function_name": "_determine_category",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 434,
      "function_name": "_detect_real_services",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 452,
      "function_name": "_calculate_business_value_score",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 487,
      "function_name": "_generate_value_justification",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 511,
      "function_name": "aggregate_coverage",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 543,
      "function_name": "load_coverage_data",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 571,
      "function_name": "load_test_results",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 587,
      "function_name": "generate_report",
      "actual_value": 62,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 652,
      "function_name": "_identify_coverage_gaps",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 686,
      "function_name": "_generate_recommendations",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 716,
      "function_name": "save_report",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 729,
      "function_name": "print_summary",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 138,
      "function_name": "should_skip_file",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\categorize_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 341,
      "function_name": "main",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\categorize_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 32,
      "function_name": "_initialize_patterns",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\categorize_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 123,
      "function_name": "analyze_file",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\categorize_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 138,
      "function_name": "categorize_test",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\categorize_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 178,
      "function_name": "scan_tests",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\categorize_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 326,
      "function_name": "save_categorization",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\check_architecture_compliance.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 30,
      "function_name": "_create_enforcer",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\check_conftest_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 27,
      "function_name": "find_all_conftest_files",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\check_conftest_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 44,
      "function_name": "check_conftest_violations",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\check_conftest_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 64,
      "function_name": "main",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 262,
      "function_name": "main",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 35,
      "function_name": "__init__",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\check_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 54,
      "function_name": "find_e2e_test_files",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\check_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 72,
      "function_name": "check_file_imports",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 101,
      "function_name": "extract_imports",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\check_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 120,
      "function_name": "fix_common_import_issues",
      "actual_value": 62,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 185,
      "function_name": "check_all",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 221,
      "function_name": "generate_report",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_function_lengths.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 6,
      "function_name": "count_function_lines",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\check_function_lengths.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 28,
      "function_name": "check_file",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\check_netra_backend_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 309,
      "function_name": "main",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_netra_backend_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 38,
      "function_name": "__init__",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_netra_backend_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 64,
      "function_name": "analyze_file",
      "actual_value": 70,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_netra_backend_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 137,
      "function_name": "_check_import",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_netra_backend_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 164,
      "function_name": "_create_issue",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_netra_backend_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 193,
      "function_name": "analyze_directory",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\check_netra_backend_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 209,
      "function_name": "generate_report",
      "actual_value": 77,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_netra_backend_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 289,
      "function_name": "export_issues_json",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\check_relative_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 13,
      "function_name": "check_relative_imports",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_relative_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 50,
      "function_name": "main",
      "actual_value": 51,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 405,
      "function_name": "main",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 39,
      "function_name": "to_dict",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\check_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 96,
      "function_name": "_build_schema_registry",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\check_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 126,
      "function_name": "_scan_directory_for_schemas",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 157,
      "function_name": "_is_schema_class",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\check_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 174,
      "function_name": "analyze_file",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 216,
      "function_name": "_check_import",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 260,
      "function_name": "analyze_codebase",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 304,
      "function_name": "generate_report",
      "actual_value": 75,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 382,
      "function_name": "export_violations_json",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\check_test_compliance.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 23,
      "function_name": "check_function_lengths",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_test_compliance.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 67,
      "function_name": "check_mock_components",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\check_test_compliance.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 86,
      "function_name": "scan_test_files",
      "actual_value": 52,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_test_compliance.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 141,
      "function_name": "calculate_compliance_rate",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\check_test_compliance.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 154,
      "function_name": "print_report",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_test_compliance.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 196,
      "function_name": "main",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\check_test_import_order.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 8,
      "function_name": "check_import_order",
      "actual_value": 51,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_test_import_order.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 62,
      "function_name": "main",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\claude_audit_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 393,
      "function_name": "main",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\claude_audit_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 60,
      "function_name": "get",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\claude_audit_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 105,
      "function_name": "check_recursion",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\claude_audit_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 139,
      "function_name": "_analyze",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\claude_audit_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 176,
      "function_name": "_prepare_context",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\claude_audit_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 192,
      "function_name": "_build_prompt",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\claude_audit_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 229,
      "function_name": "_call_claude",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\claude_audit_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 260,
      "function_name": "_parse_response",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\claude_audit_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 284,
      "function_name": "_fallback_response",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\claude_audit_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 323,
      "function_name": "analyze_batch",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\claude_audit_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 339,
      "function_name": "generate_remediation_plan",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\claude_commit_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 273,
      "function_name": "main",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\claude_commit_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 22,
      "function_name": "__init__",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\claude_commit_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 44,
      "function_name": "check_recursion",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\claude_commit_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 57,
      "function_name": "should_bypass",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\claude_commit_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 83,
      "function_name": "get_staged_changes_summary",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\claude_commit_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 119,
      "function_name": "generate_commit_message",
      "actual_value": 67,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\claude_commit_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 189,
      "function_name": "get_fallback_message",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\claude_commit_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 212,
      "function_name": "save_state",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\claude_commit_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 233,
      "function_name": "run",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\claude_session_end_hook.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 19,
      "function_name": "run_command",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\claude_session_end_hook.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 47,
      "function_name": "create_commit_message",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\claude_session_end_hook.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 63,
      "function_name": "main",
      "actual_value": 75,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_duplicate_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 279,
      "function_name": "main",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_duplicate_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 44,
      "function_name": "is_auto_generated_file",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\cleanup_duplicate_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 63,
      "function_name": "has_standalone_test_module_import",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_duplicate_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 102,
      "function_name": "remove_test_module_import_function",
      "actual_value": 67,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_duplicate_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 172,
      "function_name": "find_test_files",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_duplicate_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 198,
      "function_name": "process_file",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_duplicate_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 238,
      "function_name": "run_cleanup",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_generated_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 92,
      "function_name": "cleanup_directory",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_generated_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 153,
      "function_name": "scan_for_cleanup",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_generated_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 182,
      "function_name": "print_scan_summary",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_generated_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 220,
      "function_name": "main",
      "actual_value": 103,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 13 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_test_processes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 18,
      "function_name": "kill_process_tree",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_test_processes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 57,
      "function_name": "find_test_processes",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_test_processes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 94,
      "function_name": "cleanup_test_processes",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_test_processes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 141,
      "function_name": "main",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_workflow_runs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 15,
      "function_name": "run_gh_command",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_workflow_runs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 46,
      "function_name": "get_workflow_runs",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_workflow_runs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 89,
      "function_name": "get_artifacts",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_workflow_runs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 128,
      "function_name": "clean_local_directories",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_workflow_runs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 169,
      "function_name": "parse_args",
      "actual_value": 40,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_workflow_runs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 213,
      "function_name": "get_repo_from_git",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_workflow_runs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 248,
      "function_name": "_clean_workflow_runs",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\cleanup_workflow_runs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 264,
      "function_name": "_clean_artifacts",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\clean_duplicate_mock_justifications.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 13,
      "function_name": "clean_file",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\clean_duplicate_mock_justifications.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 55,
      "function_name": "main",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\clean_slate_executor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 219,
      "function_name": "main",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\clean_slate_executor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 53,
      "function_name": "phase1_assessment",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\clean_slate_executor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 95,
      "function_name": "phase2_database_reset",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\clean_slate_executor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 120,
      "function_name": "phase3_code_cleanup",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\clean_slate_executor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 155,
      "function_name": "phase4_validation",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\clean_slate_executor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 185,
      "function_name": "execute",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\code_audit_orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 392,
      "function_name": "main",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\code_audit_orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 25,
      "function_name": "__init__",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\code_audit_orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 40,
      "function_name": "check_bypass",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\code_audit_orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 60,
      "function_name": "run_audit",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\code_audit_orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 110,
      "function_name": "_get_changed_files",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\code_audit_orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 133,
      "function_name": "_detect_duplicates",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\code_audit_orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 167,
      "function_name": "_detect_legacy",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\code_audit_orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 197,
      "function_name": "_run_claude_analysis",
      "actual_value": 52,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\code_audit_orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 252,
      "function_name": "_determine_blocking",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\code_audit_orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 268,
      "function_name": "_get_statistics",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\code_audit_orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 285,
      "function_name": "_generate_report",
      "actual_value": 90,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 12 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\code_audit_orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 378,
      "function_name": "_save_report",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\code_review_ai_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 21,
      "function_name": "run_command",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\code_review_ai_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 44,
      "function_name": "_check_duplicates",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\code_review_ai_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 76,
      "function_name": "_check_type_consistency",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\code_review_ai_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 101,
      "function_name": "_check_error_handling",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\code_review_ai_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 121,
      "function_name": "_check_ai_patterns",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\code_review_analysis.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 24,
      "function_name": "run_command",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\code_review_analysis.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 54,
      "function_name": "_analyze_hotspots",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\code_review_analysis.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 74,
      "function_name": "_analyze_large_changes",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\code_review_analysis.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 99,
      "function_name": "check_spec_code_alignment",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\code_review_analysis.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 111,
      "function_name": "_check_key_specifications",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\code_review_analysis.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 133,
      "function_name": "_check_missing_specifications",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\code_review_analysis.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 168,
      "function_name": "_check_frontend_bundle_size",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\code_review_analysis.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 187,
      "function_name": "_check_hardcoded_secrets",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\code_review_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 17,
      "function_name": "__init__",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\code_review_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 23,
      "function_name": "_add_executive_summary",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\code_review_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 119,
      "function_name": "_add_recommendations",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\code_review_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 142,
      "function_name": "generate_report",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\code_review_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 169,
      "function_name": "save_report",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\code_review_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 215,
      "function_name": "determine_final_status",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\code_review_smoke_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 21,
      "function_name": "run_command",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\code_review_smoke_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 34,
      "function_name": "run_smoke_tests",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\code_review_smoke_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 55,
      "function_name": "_run_backend_tests",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\code_review_smoke_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 73,
      "function_name": "_run_frontend_tests",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\code_review_smoke_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 91,
      "function_name": "_run_import_tests",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\comprehensive_e2e_import_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 318,
      "function_name": "main",
      "actual_value": 66,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_e2e_import_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 41,
      "function_name": "fix_schemas_import",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_e2e_import_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 75,
      "function_name": "fix_test_helpers_imports",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_e2e_import_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 104,
      "function_name": "fix_websocket_imports",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_e2e_import_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 133,
      "function_name": "fix_agent_schema_imports",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_e2e_import_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 162,
      "function_name": "fix_unified_test_imports",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_e2e_import_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 191,
      "function_name": "fix_syntax_errors",
      "actual_value": 49,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_e2e_import_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 243,
      "function_name": "fix_file",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_e2e_import_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 267,
      "function_name": "fix_all_failed_tests",
      "actual_value": 46,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 747,
      "function_name": "main",
      "actual_value": 49,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 74,
      "function_name": "to_json",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 97,
      "function_name": "print_summary",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 139,
      "function_name": "__init__",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 160,
      "function_name": "_pre_validate_imports",
      "actual_value": 69,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 232,
      "function_name": "scan_file",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 279,
      "function_name": "_analyze_import",
      "actual_value": 85,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 11 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 367,
      "function_name": "_validate_module",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 395,
      "function_name": "_validate_name_in_module",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 430,
      "function_name": "_find_module_file",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 444,
      "function_name": "_resolve_relative_import",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 463,
      "function_name": "_suggest_module_fix",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 489,
      "function_name": "_suggest_name_fix",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 510,
      "function_name": "detect_circular_imports",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 547,
      "function_name": "_path_to_module",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 563,
      "function_name": "scan_directory",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 609,
      "function_name": "run_comprehensive_scan",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 660,
      "function_name": "fix_missing_name",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 693,
      "function_name": "fix_missing_module",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 719,
      "function_name": "auto_fix_issues",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 523,
      "function_name": "dfs",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\comprehensive_test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 25,
      "function_name": "analyze_test_output",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 76,
      "function_name": "generate_function_stub",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\comprehensive_test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 177,
      "function_name": "fix_missing_function",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 221,
      "function_name": "_module_to_file_path",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\comprehensive_test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 257,
      "function_name": "_add_import",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\comprehensive_test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 286,
      "function_name": "process_all_failures",
      "actual_value": 56,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 346,
      "function_name": "_get_failing_tests",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\comprehensive_test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 360,
      "function_name": "_run_test",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 385,
      "function_name": "generate_report",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\configure_audit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 247,
      "function_name": "main",
      "actual_value": 70,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\configure_audit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 30,
      "function_name": "show_status",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\configure_audit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 64,
      "function_name": "set_level",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\configure_audit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 80,
      "function_name": "set_feature",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\configure_audit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 99,
      "function_name": "set_threshold",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\configure_audit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 125,
      "function_name": "quick_setup",
      "actual_value": 59,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\configure_audit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 187,
      "function_name": "add_team",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\configure_audit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 200,
      "function_name": "test_config",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\configure_claude_commit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 164,
      "function_name": "main",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\configure_claude_commit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 29,
      "function_name": "status",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\configure_claude_commit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 61,
      "function_name": "enable",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\configure_claude_commit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 90,
      "function_name": "test",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\configure_claude_commit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 125,
      "function_name": "show_usage_tips",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\config_setup.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 20,
      "function_name": "combine_config_results",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\config_setup_core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 245,
      "function_name": "combine_config_results",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\config_setup_scripts.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 28,
      "function_name": "create_windows_startup_script",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\config_setup_scripts.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 41,
      "function_name": "get_windows_script_content",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\config_setup_scripts.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 68,
      "function_name": "create_unix_startup_script",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\config_setup_scripts.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 82,
      "function_name": "get_unix_script_content",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\config_setup_scripts.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 149,
      "function_name": "verify_module_imports",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\config_setup_scripts.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 190,
      "function_name": "get_db_test_script",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\config_setup_scripts.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 209,
      "function_name": "combine_test_results",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\consolidate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 219,
      "function_name": "main",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\consolidate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 20,
      "function_name": "__init__",
      "actual_value": 47,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\consolidate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 69,
      "function_name": "scan_all_types",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\consolidate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 103,
      "function_name": "plan_consolidation",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\consolidate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 136,
      "function_name": "generate_import_updates",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\consolidate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 157,
      "function_name": "_calculate_relative_import",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\consolidate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 172,
      "function_name": "print_consolidation_report",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\consolidate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 207,
      "function_name": "_print_category",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\create_additional_shims.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 256,
      "function_name": "create_shim_module",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\create_additional_shims.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 277,
      "function_name": "main",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\create_agent_fix_tasks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 7,
      "function_name": "create_agent_tasks",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\create_enforcement_tools.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 364,
      "function_name": "create_argument_parser",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\create_enforcement_tools.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 61,
      "function_name": "update",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\create_enforcement_tools.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 78,
      "function_name": "__init__",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\create_enforcement_tools.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 108,
      "function_name": "get_all_files",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\create_enforcement_tools.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 127,
      "function_name": "check_file_size_violations",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\create_enforcement_tools.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 154,
      "function_name": "analyze_function_complexity",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\create_enforcement_tools.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 187,
      "function_name": "check_function_complexity_violations",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\create_enforcement_tools.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 208,
      "function_name": "find_duplicate_types",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\create_enforcement_tools.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 250,
      "function_name": "detect_test_stubs",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\create_enforcement_tools.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 298,
      "function_name": "_count_function_lines",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\create_enforcement_tools.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 318,
      "function_name": "run_all_checks",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\create_import_shims.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 112,
      "function_name": "create_shim_module",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\create_import_shims.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 133,
      "function_name": "main",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\create_staging_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 38,
      "function_name": "check_secret_exists",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\create_staging_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 53,
      "function_name": "create_secret",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\create_staging_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 88,
      "function_name": "get_production_secret",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\create_staging_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 125,
      "function_name": "_check_existing_secrets",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\create_staging_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 138,
      "function_name": "_create_missing_secrets",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\create_staging_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 164,
      "function_name": "_print_summary",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\create_staging_secrets_complete.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 184,
      "function_name": "main",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\create_staging_secrets_complete.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 19,
      "function_name": "create_all_secrets",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\create_staging_secrets_complete.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 44,
      "function_name": "_generate_secret_values",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\create_staging_secrets_complete.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 63,
      "function_name": "_generate_secure_key",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\create_staging_secrets_complete.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 85,
      "function_name": "_create_secret",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\create_staging_secrets_complete.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 133,
      "function_name": "validate_secrets",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\create_staging_secrets_complete.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 167,
      "function_name": "print_manual_fixes_needed",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 67,
      "function_name": "find_violations",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 92,
      "function_name": "_analyze_file",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 104,
      "function_name": "suggest_decomposition",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 135,
      "function_name": "generate_report",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 165,
      "function_name": "main",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 30,
      "function_name": "visit_FunctionDef",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\deduplicate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 383,
      "function_name": "main",
      "actual_value": 56,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deduplicate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 71,
      "function_name": "_setup_python_mappings",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\deduplicate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 83,
      "function_name": "_setup_websocket_mappings",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\deduplicate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 125,
      "function_name": "find_python_imports",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deduplicate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 166,
      "function_name": "find_typescript_imports",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deduplicate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 220,
      "function_name": "preview_changes",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deduplicate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 250,
      "function_name": "apply_replacements",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deduplicate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 294,
      "function_name": "run_tests",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deduplicate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 332,
      "function_name": "delete_duplicate_files",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deduplicate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 357,
      "function_name": "generate_report",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\demo_enhanced_categorizer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 28,
      "function_name": "compare_categorization_approaches",
      "actual_value": 69,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\demo_enhanced_categorizer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 101,
      "function_name": "categorize_specific_examples",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\demo_feature_flag_system.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 36,
      "function_name": "demonstrate_feature_flag_basics",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\demo_feature_flag_system.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 61,
      "function_name": "demonstrate_tdd_workflow",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\demo_feature_flag_system.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 87,
      "function_name": "demonstrate_environment_overrides",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\demo_feature_flag_system.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 124,
      "function_name": "demonstrate_ci_cd_integration",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\demo_feature_flag_system.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 161,
      "function_name": "demonstrate_decorator_usage",
      "actual_value": 46,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\demo_feature_flag_system.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 211,
      "function_name": "demonstrate_business_value",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\demo_feature_flag_system.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 253,
      "function_name": "main",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\demo_real_llm_testing.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "demo_environment_validation",
      "actual_value": 57,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\demo_real_llm_testing.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 94,
      "function_name": "demo_real_llm_configuration",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\demo_real_llm_testing.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 128,
      "function_name": "demo_seed_data_management",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\demo_real_llm_testing.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 171,
      "function_name": "demo_test_environment_orchestration",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\demo_real_llm_testing.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 206,
      "function_name": "demo_cli_usage",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\demo_real_llm_testing.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 240,
      "function_name": "main",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\dependency_installer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 60,
      "function_name": "upgrade_pip",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\dependency_installer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 108,
      "function_name": "install_package_list",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dependency_installer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 178,
      "function_name": "build_frontend",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\dependency_installer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 195,
      "function_name": "combine_dependency_results",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dependency_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 43,
      "function_name": "scan_python_dependencies",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dependency_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 59,
      "function_name": "parse_requirements_file",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\dependency_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 72,
      "function_name": "extract_package_info",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\dependency_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 95,
      "function_name": "validate_python_dependency",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\dependency_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 109,
      "function_name": "scan_node_dependencies",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dependency_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 150,
      "function_name": "scan_system_dependencies",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dependency_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 166,
      "function_name": "check_system_dependency",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\dependency_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 180,
      "function_name": "is_version_compatible",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\dependency_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 195,
      "function_name": "generate_dependency_report",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dependency_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 221,
      "function_name": "apply_dependency_fixes",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dependency_services.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 40,
      "function_name": "get_os_specific_pg_instructions",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dependency_services.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 58,
      "function_name": "get_mac_pg_instructions",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\dependency_services.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 93,
      "function_name": "get_os_specific_redis_instructions",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dependency_services.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 145,
      "function_name": "combine_service_results",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\deploy_staging_with_sa.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 21,
      "function_name": "find_service_account_key",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_staging_with_sa.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 55,
      "function_name": "main",
      "actual_value": 78,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_staging_with_validation.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 17,
      "function_name": "run_pre_deployment_validation",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\deploy_staging_with_validation.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 35,
      "function_name": "deploy_with_enhanced_configuration",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_staging_with_validation.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 58,
      "function_name": "run_post_deployment_validation",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\deploy_staging_with_validation.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 80,
      "function_name": "main",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 943,
      "function_name": "main",
      "actual_value": 58,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 62,
      "function_name": "__init__",
      "actual_value": 62,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 126,
      "function_name": "check_gcloud",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 171,
      "function_name": "authenticate_with_service_account",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 185,
      "function_name": "validate_deployment_configuration",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 214,
      "function_name": "run_pre_deployment_checks",
      "actual_value": 58,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 275,
      "function_name": "enable_apis",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 323,
      "function_name": "create_dockerfile",
      "actual_value": 103,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 13 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 429,
      "function_name": "build_image_local",
      "actual_value": 53,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 485,
      "function_name": "build_image_cloud",
      "actual_value": 47,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 542,
      "function_name": "deploy_service",
      "actual_value": 83,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 11 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 628,
      "function_name": "wait_for_revision_ready",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 665,
      "function_name": "update_traffic_to_latest",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 709,
      "function_name": "get_service_url",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 734,
      "function_name": "setup_secrets",
      "actual_value": 66,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 803,
      "function_name": "health_check",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 838,
      "function_name": "deploy_all",
      "actual_value": 68,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 916,
      "function_name": "cleanup",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\detect_duplicate_code.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 282,
      "function_name": "main",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\detect_duplicate_code.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 41,
      "function_name": "scan_codebase",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\detect_duplicate_code.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 63,
      "function_name": "_analyze_file",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\detect_duplicate_code.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 81,
      "function_name": "_record_class",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\detect_duplicate_code.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 99,
      "function_name": "detect_duplicates",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\detect_duplicate_code.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 126,
      "function_name": "_detect_websocket_duplicates",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\detect_duplicate_code.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 151,
      "function_name": "_detect_component_duplicates",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\detect_duplicate_code.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 178,
      "function_name": "_detect_wrapper_patterns",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\detect_duplicate_code.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 211,
      "function_name": "generate_report",
      "actual_value": 47,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\detect_duplicate_code.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 261,
      "function_name": "save_json_report",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\dev_launcher_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 28,
      "function_name": "_find_project_root_by_markers",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\dev_launcher_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 50,
      "function_name": "resolve_path",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\dev_launcher_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 135,
      "function_name": "setup_environment_variables",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dev_launcher_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 151,
      "function_name": "setup_frontend_environment",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\dev_launcher_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 175,
      "function_name": "validate_dependencies",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dev_launcher_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 193,
      "function_name": "validate_frontend_directory",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dev_launcher_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 231,
      "function_name": "_try_last_resort_import",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\dev_launcher_core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 37,
      "function_name": "__init__",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dev_launcher_core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 72,
      "function_name": "_setup_process_tracking",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\dev_launcher_core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 109,
      "function_name": "cleanup",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dev_launcher_core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 125,
      "function_name": "check_dependencies",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\dev_launcher_core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 147,
      "function_name": "run",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\dev_launcher_core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 171,
      "function_name": "_run_services",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dev_launcher_core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 190,
      "function_name": "_start_backend_service",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\dev_launcher_core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 211,
      "function_name": "_start_frontend_service",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\dev_launcher_core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 232,
      "function_name": "_monitor_services",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dev_launcher_core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 248,
      "function_name": "_wait_for_processes",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\dev_launcher_improved.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 31,
      "function_name": "_get_usage_examples",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dev_launcher_improved.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 76,
      "function_name": "_create_launcher_from_args",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dev_launcher_monitoring.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 14,
      "function_name": "wait_for_service",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dev_launcher_monitoring.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 46,
      "function_name": "open_browser",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dev_launcher_monitoring.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 80,
      "function_name": "validate_backend_health",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dev_launcher_monitoring.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 97,
      "function_name": "validate_frontend_health",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dev_launcher_monitoring.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 114,
      "function_name": "print_service_summary",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\dev_launcher_monitoring.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 141,
      "function_name": "print_configuration_summary",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\dev_launcher_monitoring.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 156,
      "function_name": "monitor_processes_loop",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dev_launcher_processes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 206,
      "function_name": "create_backend_process",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\dev_launcher_processes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 230,
      "function_name": "create_frontend_process",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\dev_launcher_processes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 256,
      "function_name": "cleanup_process",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dev_launcher_processes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 76,
      "function_name": "__init__",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dev_launcher_processes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 109,
      "function_name": "_terminate_process",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\dev_launcher_processes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 122,
      "function_name": "_monitor_loop",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\dev_launcher_processes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 135,
      "function_name": "_handle_process_crash",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\dev_launcher_processes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 155,
      "function_name": "_log_crash",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dev_launcher_processes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 171,
      "function_name": "_attempt_restart",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\dev_launcher_processes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 186,
      "function_name": "_perform_restart",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dev_launcher_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 39,
      "function_name": "_parse_env_file",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\dev_launcher_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 57,
      "function_name": "load_from_google_secrets",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dev_launcher_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 82,
      "function_name": "_fetch_all_secrets",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\dev_launcher_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 101,
      "function_name": "_get_secret_mappings",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dev_launcher_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 122,
      "function_name": "load_all_secrets",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dev_launcher_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 138,
      "function_name": "_finalize_secret_loading",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\dev_launcher_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 177,
      "function_name": "_print_summary",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dev_launcher_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 200,
      "function_name": "_write_env_file",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dev_launcher_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 233,
      "function_name": "_get_env_file_categories",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\dev_launcher_service.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 40,
      "function_name": "start_backend",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dev_launcher_service.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 56,
      "function_name": "_get_backend_port",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\dev_launcher_service.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 68,
      "function_name": "_get_server_script",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\dev_launcher_service.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 82,
      "function_name": "_build_backend_command",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dev_launcher_service.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 100,
      "function_name": "_start_backend_process",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\dev_launcher_service.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 119,
      "function_name": "_finalize_backend_startup",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dev_launcher_service.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 139,
      "function_name": "start_frontend",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\dev_launcher_service.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 159,
      "function_name": "_get_frontend_port",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\dev_launcher_service.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 179,
      "function_name": "_build_frontend_command",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\dev_launcher_service.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 200,
      "function_name": "_start_frontend_process",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\dev_launcher_service.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 224,
      "function_name": "_finalize_frontend_startup",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\diagnostic_helpers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 57,
      "function_name": "create_dependency_error",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\diagnostic_helpers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 94,
      "function_name": "get_system_state",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\diagnostic_helpers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 123,
      "function_name": "get_configuration",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\diagnostic_helpers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 148,
      "function_name": "run_command_async",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 391,
      "function_name": "analyze_changed_files",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 36,
      "function_name": "similarity_to",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 83,
      "function_name": "_init_legacy_patterns",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 136,
      "function_name": "analyze_file",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 163,
      "function_name": "_extract_code_block",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 223,
      "function_name": "_semantic_hash",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 250,
      "function_name": "_check_legacy_patterns",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 266,
      "function_name": "find_duplicates",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 322,
      "function_name": "_suggest_action",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 336,
      "function_name": "get_statistics",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 348,
      "function_name": "generate_report",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\e2e_import_fixer_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 551,
      "function_name": "main",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\e2e_import_fixer_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 59,
      "function_name": "__init__",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\e2e_import_fixer_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 111,
      "function_name": "discover_all_e2e_tests",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\e2e_import_fixer_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 140,
      "function_name": "analyze_file",
      "actual_value": 64,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\e2e_import_fixer_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 207,
      "function_name": "_check_import",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\e2e_import_fixer_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 249,
      "function_name": "_check_import_from",
      "actual_value": 72,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\e2e_import_fixer_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 324,
      "function_name": "_suggest_fix_for_module",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\e2e_import_fixer_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 351,
      "function_name": "_try_import_file",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\e2e_import_fixer_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 370,
      "function_name": "fix_file",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\e2e_import_fixer_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 404,
      "function_name": "run_comprehensive_fix",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\e2e_import_fixer_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 429,
      "function_name": "generate_report",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\e2e_import_fixer_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 476,
      "function_name": "validate_all_tests_load",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\e2e_import_fixer_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 497,
      "function_name": "print_report",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\e2e_import_fixer_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 534,
      "function_name": "save_report",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\emergency_boundary_actions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 429,
      "function_name": "main",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\emergency_boundary_actions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 42,
      "function_name": "assess_emergency_level",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\emergency_boundary_actions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 57,
      "function_name": "execute_emergency_response",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\emergency_boundary_actions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 73,
      "function_name": "_get_current_violations",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\emergency_boundary_actions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 108,
      "function_name": "_execute_critical_response",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\emergency_boundary_actions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 133,
      "function_name": "_execute_high_response",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\emergency_boundary_actions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 152,
      "function_name": "_execute_medium_response",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\emergency_boundary_actions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 278,
      "function_name": "_execute_action",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\emergency_boundary_actions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 323,
      "function_name": "_generate_emergency_report",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\emergency_boundary_actions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 381,
      "function_name": "_get_recommended_actions",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\emergency_boundary_actions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 409,
      "function_name": "_log_emergency_actions",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\enable_metadata_tracking.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 14,
      "function_name": "_get_argument_parser",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\enable_metadata_tracking.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 54,
      "function_name": "main",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\enforce_limits.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 221,
      "function_name": "create_argument_parser",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\enforce_limits.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 266,
      "function_name": "collect_target_files",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\enforce_limits.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 285,
      "function_name": "main",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\enforce_limits.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 38,
      "function_name": "check_file",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\enforce_limits.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 74,
      "function_name": "check_file",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\enforce_limits.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 96,
      "function_name": "_check_function_node",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\enforce_limits.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 128,
      "function_name": "check_files",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\enforce_limits.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 161,
      "function_name": "generate_console_report",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\enforce_limits.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 189,
      "function_name": "generate_json_report",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\enhanced_fix_datetime_deprecation.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 70,
      "function_name": "_replace_datetime_patterns",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\enhanced_fix_datetime_deprecation.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 93,
      "function_name": "main",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\enhance_dev_launcher_boundaries.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 12,
      "function_name": "enhance_launcher_config",
      "actual_value": 47,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\enhance_dev_launcher_boundaries.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 62,
      "function_name": "enhance_launcher_args",
      "actual_value": 48,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\enhance_dev_launcher_boundaries.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 113,
      "function_name": "enhance_launcher_main",
      "actual_value": 54,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\enhance_dev_launcher_boundaries.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 170,
      "function_name": "_get_vscode_settings_content",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\enhance_dev_launcher_boundaries.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 203,
      "function_name": "_get_vscode_tasks_content",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\enhance_dev_launcher_boundaries.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 283,
      "function_name": "main",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\extract_function_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 75,
      "function_name": "main",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\extract_function_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 15,
      "function_name": "check_file",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\extract_function_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 45,
      "function_name": "_is_critical_path",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\extract_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 6,
      "function_name": "extract_violations",
      "actual_value": 55,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fast_import_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 15,
      "function_name": "check_module_exists",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\fast_import_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 31,
      "function_name": "get_module_exports",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\fast_import_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 54,
      "function_name": "fix_known_import_issues",
      "actual_value": 272,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 35 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fast_import_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 331,
      "function_name": "scan_e2e_tests",
      "actual_value": 52,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fast_import_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 387,
      "function_name": "verify_fixes",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fast_import_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 420,
      "function_name": "main",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\final_syntax_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 10,
      "function_name": "create_minimal_test_file",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\final_syntax_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 63,
      "function_name": "get_files_with_errors",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\final_syntax_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 85,
      "function_name": "main",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\find_all_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 9,
      "function_name": "run_pytest_collect",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\find_all_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 50,
      "function_name": "main",
      "actual_value": 56,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\find_large_app_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 16,
      "function_name": "find_large_files",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\find_long_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 16,
      "function_name": "find_long_functions",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\find_long_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 38,
      "function_name": "scan_directory",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\find_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 14,
      "function_name": "scan_python_file",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\find_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 40,
      "function_name": "scan_directory",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\find_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 66,
      "function_name": "print_results",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\find_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 85,
      "function_name": "main",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_connection_manager_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 7,
      "function_name": "fix_file",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_connection_manager_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 49,
      "function_name": "main",
      "actual_value": 47,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 9,
      "function_name": "fix_file",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\fix_all_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 27,
      "function_name": "main",
      "actual_value": 100,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 13 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 131,
      "function_name": "fix_syntax_error",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 15,
      "function_name": "find_actual_location",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\fix_all_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 34,
      "function_name": "analyze_import_errors",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 70,
      "function_name": "fix_imports_in_file",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 109,
      "function_name": "find_test_files_with_imports",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\fix_all_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 127,
      "function_name": "run_pytest_check",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\fix_all_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 140,
      "function_name": "main",
      "actual_value": 80,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 11 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_import_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 71,
      "function_name": "fix_imports_in_file",
      "actual_value": 71,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_import_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 146,
      "function_name": "remove_sys_path_manipulation",
      "actual_value": 63,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_import_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 213,
      "function_name": "fix_pytest_config",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_import_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 245,
      "function_name": "main",
      "actual_value": 111,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 14 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_import_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 24,
      "function_name": "visit_ImportFrom",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_import_syntax.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 11,
      "function_name": "fix_import_syntax_patterns",
      "actual_value": 72,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_import_syntax.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 87,
      "function_name": "fix_file",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_import_syntax.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 119,
      "function_name": "main",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 36,
      "function_name": "fix_function_signature_colon",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\fix_all_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 54,
      "function_name": "fix_incomplete_imports",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 92,
      "function_name": "fix_indentation_issues",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\fix_all_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 112,
      "function_name": "fix_malformed_function_definitions",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\fix_all_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 130,
      "function_name": "fix_missing_indentation",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\fix_all_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 160,
      "function_name": "fix_file",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 186,
      "function_name": "scan_and_fix_directory",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 219,
      "function_name": "main",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_test_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 11,
      "function_name": "find_test_files",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\fix_all_test_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 28,
      "function_name": "fix_invalid_syntax_at_line_4_5",
      "actual_value": 48,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_test_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 79,
      "function_name": "fix_unmatched_parens",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_test_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 119,
      "function_name": "split_large_test_file",
      "actual_value": 88,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 12 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_test_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 210,
      "function_name": "main",
      "actual_value": 84,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 11 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_background_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 7,
      "function_name": "fix_file",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_background_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 42,
      "function_name": "main",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_boolean_comparisons.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 9,
      "function_name": "fix_boolean_comparisons",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_common_test_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 25,
      "function_name": "run_simple_unit_tests",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_common_test_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 64,
      "function_name": "main",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_comprehensive_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 297,
      "function_name": "main",
      "actual_value": 55,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_comprehensive_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 29,
      "function_name": "scan_for_import_issues",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\fix_comprehensive_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 49,
      "function_name": "fix_data_sub_agent_imports",
      "actual_value": 74,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_comprehensive_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 126,
      "function_name": "fix_demo_service_imports",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_comprehensive_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 165,
      "function_name": "fix_supervisor_imports",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_comprehensive_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 197,
      "function_name": "fix_supply_researcher_imports",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_comprehensive_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 236,
      "function_name": "fix_all_imports",
      "actual_value": 57,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_critical_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 29,
      "function_name": "fix_common_issues",
      "actual_value": 55,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_critical_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 91,
      "function_name": "get_files_with_syntax_errors",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\fix_critical_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 113,
      "function_name": "main",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_database_duplicates.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 18,
      "function_name": "find_files_with_database_imports",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_database_duplicates.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 49,
      "function_name": "fix_database_imports",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_database_duplicates.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 97,
      "function_name": "main",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_datetime_deprecation.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 9,
      "function_name": "fix_datetime_in_file",
      "actual_value": 48,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_datetime_deprecation.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 60,
      "function_name": "main",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\fix_deployment_logging.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 320,
      "function_name": "main",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_deployment_logging.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 28,
      "function_name": "run",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\fix_deployment_logging.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 49,
      "function_name": "analyze_current_state",
      "actual_value": 70,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_deployment_logging.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 122,
      "function_name": "apply_fixes",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\fix_deployment_logging.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 144,
      "function_name": "fix_dockerfile",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_deployment_logging.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 190,
      "function_name": "fix_requirements",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_deployment_logging.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 222,
      "function_name": "validate_deployment",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\fix_deployment_logging.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 234,
      "function_name": "validate_docker_builds",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\fix_deployment_logging.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 251,
      "function_name": "validate_shared_imports",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\fix_deployment_logging.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 266,
      "function_name": "validate_environment_vars",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_deployment_logging.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 289,
      "function_name": "generate_report",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_double_modern.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 6,
      "function_name": "fix_file",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_double_modern.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 31,
      "function_name": "main",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\fix_e2e_connection_manager_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 23,
      "function_name": "find_files_with_connection_manager_imports",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_connection_manager_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 51,
      "function_name": "fix_connection_manager_imports",
      "actual_value": 51,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_connection_manager_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 105,
      "function_name": "main",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 406,
      "function_name": "main",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\fix_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "__init__",
      "actual_value": 65,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 100,
      "function_name": "fix_file",
      "actual_value": 70,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 199,
      "function_name": "cleanup_content",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\fix_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 219,
      "function_name": "create_missing_helpers",
      "actual_value": 144,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 19 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 366,
      "function_name": "fix_all_e2e_tests",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 345,
      "function_name": "main",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 47,
      "function_name": "_get_common_fixtures",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 77,
      "function_name": "analyze_test_file",
      "actual_value": 60,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 140,
      "function_name": "_find_missing_fixtures",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 166,
      "function_name": "_find_import_errors",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\fix_e2e_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 183,
      "function_name": "fix_test_file",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 216,
      "function_name": "_fix_import_errors",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\fix_e2e_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 230,
      "function_name": "_add_basic_tests",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 281,
      "function_name": "generate_report",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 322,
      "function_name": "fix_all_issues",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\fix_e2e_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 218,
      "function_name": "main",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\fix_e2e_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 31,
      "function_name": "__init__",
      "actual_value": 76,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 109,
      "function_name": "scan_test_directories",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 132,
      "function_name": "fix_imports_in_file",
      "actual_value": 55,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 190,
      "function_name": "run",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_websocket_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "analyze_file_imports",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_websocket_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 66,
      "function_name": "fix_file_imports",
      "actual_value": 75,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_websocket_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 144,
      "function_name": "main",
      "actual_value": 78,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_embedded_setup_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 226,
      "function_name": "main",
      "actual_value": 52,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_embedded_setup_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 50,
      "function_name": "fix_embedded_setup",
      "actual_value": 72,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_embedded_setup_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 128,
      "function_name": "process_file",
      "actual_value": 46,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_embedded_setup_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 190,
      "function_name": "generate_report",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_frontend_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 20,
      "function_name": "_add_test_providers_import",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\fix_frontend_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 92,
      "function_name": "_insert_fetch_mock",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\fix_frontend_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 113,
      "function_name": "fix_test_file",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\fix_frontend_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 126,
      "function_name": "main",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_import_indents.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 7,
      "function_name": "fix_import_indents",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_import_indents.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 52,
      "function_name": "main",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_import_indents.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 20,
      "function_name": "fix_import",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\fix_import_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 17,
      "function_name": "fix_validate_token_imports",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_import_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 49,
      "function_name": "fix_websockets_import",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_import_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 89,
      "function_name": "fix_connection_manager_specs",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_import_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 121,
      "function_name": "main",
      "actual_value": 60,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_import_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 13,
      "function_name": "fix_import_syntax_in_file",
      "actual_value": 94,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 12 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_import_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 111,
      "function_name": "main",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_integration_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 274,
      "function_name": "main",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\fix_integration_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 31,
      "function_name": "find_test_files",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\fix_integration_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 52,
      "function_name": "fix_environment_assertions",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_integration_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 92,
      "function_name": "fix_database_url_expectations",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_integration_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 118,
      "function_name": "fix_mock_configuration_issues",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_integration_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 165,
      "function_name": "fix_import_issues",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_integration_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 205,
      "function_name": "add_environment_override_decorator",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\fix_integration_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 221,
      "function_name": "fix_file",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_integration_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 247,
      "function_name": "run_fixes",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_malformed_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 271,
      "function_name": "main",
      "actual_value": 60,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_malformed_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 59,
      "function_name": "find_malformed_pattern",
      "actual_value": 48,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_malformed_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 113,
      "function_name": "fix_malformed_imports",
      "actual_value": 54,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_malformed_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 173,
      "function_name": "process_file",
      "actual_value": 46,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_malformed_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 235,
      "function_name": "generate_report",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_missing_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 39,
      "function_name": "add_missing_imports",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\fix_missing_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 60,
      "function_name": "add_missing_functions",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_missing_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 97,
      "function_name": "main",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_monitoring_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 11,
      "function_name": "fix_alert_manager_core",
      "actual_value": 59,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_monitoring_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 73,
      "function_name": "fix_alert_notifications",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_monitoring_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 113,
      "function_name": "fix_all_violations",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\fix_nested_unified_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 8,
      "function_name": "fix_nested_unified_imports",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_nested_unified_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 48,
      "function_name": "main",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\fix_netra_backend_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 227,
      "function_name": "main",
      "actual_value": 62,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_netra_backend_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 35,
      "function_name": "__init__",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_netra_backend_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 62,
      "function_name": "fix_file",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_netra_backend_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 108,
      "function_name": "_determine_fix_type",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\fix_netra_backend_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 121,
      "function_name": "fix_directory",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_netra_backend_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 145,
      "function_name": "generate_report",
      "actual_value": 78,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_netra_domain.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 9,
      "function_name": "fix_domain_in_file",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_netra_domain.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 44,
      "function_name": "main",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_performance_monitor_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 13,
      "function_name": "fix_imports_in_file",
      "actual_value": 75,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_performance_monitor_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 94,
      "function_name": "find_files_to_fix",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_performance_monitor_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 127,
      "function_name": "main",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_remaining_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 9,
      "function_name": "fix_file",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\fix_remaining_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 27,
      "function_name": "main",
      "actual_value": 63,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_remaining_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 94,
      "function_name": "create_missing_helpers",
      "actual_value": 76,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_remaining_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 6,
      "function_name": "fix_import_indents",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_remaining_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 42,
      "function_name": "main",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_remaining_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 15,
      "function_name": "fix_import",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\fix_remaining_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 11,
      "function_name": "fix_empty_imports",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\fix_remaining_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 25,
      "function_name": "fix_unmatched_parentheses",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_remaining_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 49,
      "function_name": "fix_docstring_in_class",
      "actual_value": 53,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_remaining_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 105,
      "function_name": "fix_file_structure_issues",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_remaining_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 142,
      "function_name": "check_syntax",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\fix_remaining_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 155,
      "function_name": "fix_file",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_remaining_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 179,
      "function_name": "main",
      "actual_value": 58,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 264,
      "function_name": "main",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 28,
      "function_name": "move_schemas_to_canonical_location",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\fix_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 42,
      "function_name": "_move_schema_file",
      "actual_value": 70,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 117,
      "function_name": "fix_imports_in_file",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 152,
      "function_name": "fix_all_imports",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\fix_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 173,
      "function_name": "update_init_files",
      "actual_value": 48,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 226,
      "function_name": "generate_report",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_simple_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 14,
      "function_name": "fix_simple_import_error",
      "actual_value": 60,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_simple_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 78,
      "function_name": "main",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 467,
      "function_name": "main",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 50,
      "function_name": "__init__",
      "actual_value": 62,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 120,
      "function_name": "run_command",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\fix_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 143,
      "function_name": "generate_secret_value",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\fix_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 160,
      "function_name": "create_secret",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 190,
      "function_name": "fix_secrets",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\fix_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 207,
      "function_name": "get_service_url",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\fix_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 219,
      "function_name": "update_service_secrets",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\fix_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 239,
      "function_name": "fix_service_configuration",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 292,
      "function_name": "validate_endpoint",
      "actual_value": 47,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 352,
      "function_name": "wait_for_service_deployment",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 376,
      "function_name": "generate_validation_report",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 401,
      "function_name": "run_complete_fix",
      "actual_value": 63,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_supervisor_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 20,
      "function_name": "fix_supervisor_imports",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_supervisor_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 52,
      "function_name": "find_files_with_bad_imports",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_supervisor_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 84,
      "function_name": "main",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\fix_syntax_errors_precise.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 35,
      "function_name": "fix_import_issues",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_syntax_errors_precise.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 60,
      "function_name": "fix_function_signature_issues",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_syntax_errors_precise.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 103,
      "function_name": "fix_unmatched_parentheses",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\fix_syntax_errors_precise.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 122,
      "function_name": "fix_indentation_after_keywords",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\fix_syntax_errors_precise.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 144,
      "function_name": "fix_try_except_blocks",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_syntax_errors_precise.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 189,
      "function_name": "fix_specific_file_issues",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\fix_syntax_errors_precise.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 212,
      "function_name": "fix_file",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_syntax_errors_precise.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 239,
      "function_name": "get_files_with_syntax_errors",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\fix_syntax_errors_precise.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 261,
      "function_name": "main",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_testcontainers_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 15,
      "function_name": "fix_testcontainers_imports",
      "actual_value": 47,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_testcontainers_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 74,
      "function_name": "find_files_with_testcontainers_imports",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\fix_testcontainers_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 103,
      "function_name": "main",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_batch.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 342,
      "function_name": "main",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_batch.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 31,
      "function_name": "analyze_failure",
      "actual_value": 48,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_batch.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 90,
      "function_name": "fix_import_error",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_batch.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 131,
      "function_name": "_find_similar_names",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_batch.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 156,
      "function_name": "_levenshtein_distance",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\fix_test_batch.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 176,
      "function_name": "_update_test_import",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\fix_test_batch.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 198,
      "function_name": "_create_stub_function",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\fix_test_batch.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 224,
      "function_name": "process_failing_tests",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_batch.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 326,
      "function_name": "process_single_test",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\fix_test_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 297,
      "function_name": "main",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 23,
      "function_name": "__init__",
      "actual_value": 113,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 15 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 138,
      "function_name": "scan_directory_for_errors",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\fix_test_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 152,
      "function_name": "has_import_errors",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\fix_test_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 168,
      "function_name": "analyze_import_errors",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 191,
      "function_name": "fix_file_imports",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 224,
      "function_name": "apply_common_fixes",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\fix_test_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 248,
      "function_name": "get_all_failing_test_files",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\fix_test_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 262,
      "function_name": "run_comprehensive_fix",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_import_order.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 9,
      "function_name": "fix_import_order",
      "actual_value": 75,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_import_order.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 87,
      "function_name": "main",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 11,
      "function_name": "fix_unclosed_parenthesis",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 48,
      "function_name": "fix_orphaned_methods",
      "actual_value": 49,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 100,
      "function_name": "fix_incomplete_imports",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\fix_test_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 120,
      "function_name": "fix_unexpected_indent",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 152,
      "function_name": "fix_invalid_syntax",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 184,
      "function_name": "check_syntax",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\fix_test_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 197,
      "function_name": "fix_file",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 222,
      "function_name": "main",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_syntax_fix_classes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 11,
      "function_name": "fix_test_syntax_fix_class",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_syntax_fix_classes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 38,
      "function_name": "process_file",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_syntax_fix_classes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 64,
      "function_name": "main",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_syntax_fix_classes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 17,
      "function_name": "replace_init",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\fix_test_utils_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 23,
      "function_name": "fix_test_utils_imports",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_utils_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 59,
      "function_name": "main",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_unjustified_mocks_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 78,
      "function_name": "should_add_justification",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_unjustified_mocks_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 106,
      "function_name": "get_mock_justification",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\fix_unjustified_mocks_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 125,
      "function_name": "process_file",
      "actual_value": 51,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_unjustified_mocks_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 179,
      "function_name": "main",
      "actual_value": 49,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_warp_runners.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 9,
      "function_name": "update_runners",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_warp_runners.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 34,
      "function_name": "main",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\fix_websocket_connection_manager_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 168,
      "function_name": "main",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_websocket_connection_manager_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 34,
      "function_name": "__init__",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_websocket_connection_manager_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 81,
      "function_name": "fix_file",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_websocket_connection_manager_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 113,
      "function_name": "fix_all_imports",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_websocket_connection_manager_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 153,
      "function_name": "verify_fixes",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\fix_websocket_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 341,
      "function_name": "main",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_websocket_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 29,
      "function_name": "__init__",
      "actual_value": 102,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 13 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_websocket_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 134,
      "function_name": "_fix_multiline_websocket_core_import",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_websocket_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 175,
      "function_name": "scan_file",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_websocket_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 205,
      "function_name": "fix_file",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_websocket_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 240,
      "function_name": "find_python_files",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\fix_websocket_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 255,
      "function_name": "run_fixes",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_websocket_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 301,
      "function_name": "validate_fixes",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\force_cancel_workflow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 11,
      "function_name": "get_workflow_runs",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\force_cancel_workflow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 28,
      "function_name": "force_cancel_workflow",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\force_cancel_workflow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 59,
      "function_name": "_display_and_find_stuck_runs",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\force_cancel_workflow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 128,
      "function_name": "main",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\function_complexity_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 350,
      "function_name": "main",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\function_complexity_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 379,
      "function_name": "_convert_results_to_json",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\function_complexity_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 47,
      "function_name": "_analyze_function",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\function_complexity_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 143,
      "function_name": "_get_focus_areas",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\function_complexity_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 165,
      "function_name": "_analyze_area",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\function_complexity_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 187,
      "function_name": "_analyze_file",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\function_complexity_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 210,
      "function_name": "_create_report_header",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\function_complexity_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 222,
      "function_name": "_create_summary_section",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\function_complexity_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 250,
      "function_name": "_analyze_area_functions",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\function_complexity_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 262,
      "function_name": "_format_function_analysis",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\function_complexity_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 278,
      "function_name": "_get_complexity_flags",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\function_complexity_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 293,
      "function_name": "_create_recommendations",
      "actual_value": 54,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_auth_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 240,
      "function_name": "main",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_auth_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 45,
      "function_name": "find_service_account_key",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_auth_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 77,
      "function_name": "_is_service_account_key",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\gcp_auth_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 91,
      "function_name": "setup_authentication",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_auth_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 129,
      "function_name": "_activate_gcloud_service_account",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_auth_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 178,
      "function_name": "get_authenticated_project_id",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\gcp_auth_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 211,
      "function_name": "get_config_summary",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_health_diagnostics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 32,
      "function_name": "__init__",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_health_diagnostics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 69,
      "function_name": "run_comprehensive_diagnostics",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\gcp_health_diagnostics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 86,
      "function_name": "_analyze_service",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_health_diagnostics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 116,
      "function_name": "_test_endpoint",
      "actual_value": 51,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_health_diagnostics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 170,
      "function_name": "_analyze_response_patterns",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_health_diagnostics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 206,
      "function_name": "_generate_recommendations",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_health_diagnostics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 242,
      "function_name": "_display_service_analysis",
      "actual_value": 53,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_health_diagnostics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 298,
      "function_name": "_generate_analysis_summary",
      "actual_value": 55,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_health_monitor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 359,
      "function_name": "main",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_health_monitor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 83,
      "function_name": "__init__",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\gcp_health_monitor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 98,
      "function_name": "_configure_services",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_health_monitor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 131,
      "function_name": "start_monitoring",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_health_monitor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 173,
      "function_name": "_check_service_health",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_health_monitor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 217,
      "function_name": "_perform_health_check",
      "actual_value": 47,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_health_monitor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 267,
      "function_name": "_display_status",
      "actual_value": 58,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_health_monitor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 344,
      "function_name": "_display_final_summary",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\gcp_quick_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 19,
      "function_name": "quick_health_check",
      "actual_value": 76,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\generate-json-schema.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 9,
      "function_name": "main",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\generate_openAPI_schema.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 17,
      "function_name": "generate_openapi_schema",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\generate_openapi_spec.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 30,
      "function_name": "get_openapi_spec",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\generate_openapi_spec.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 61,
      "function_name": "_add_contact_info",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\generate_openapi_spec.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 94,
      "function_name": "_get_security_schemes",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\generate_openapi_spec.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 115,
      "function_name": "save_spec_to_file",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\generate_openapi_spec.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 162,
      "function_name": "create_readme_version",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\generate_openapi_spec.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 179,
      "function_name": "upload_spec_to_readme",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\generate_openapi_spec.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 208,
      "function_name": "sync_to_readme",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\generate_openapi_spec.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 240,
      "function_name": "validate_spec",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\generate_openapi_spec.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 294,
      "function_name": "_add_readme_args",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\generate_startup_integration_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 226,
      "function_name": "generate_test_file",
      "actual_value": 152,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 20 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\generate_startup_integration_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 382,
      "function_name": "main",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\generate_startup_integration_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 410,
      "function_name": "generate_summary",
      "actual_value": 80,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 11 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\generate_test_audit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 36,
      "function_name": "count_test_files",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\generate_test_audit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 60,
      "function_name": "analyze_test_structure",
      "actual_value": 48,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\generate_test_audit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 111,
      "function_name": "check_test_health",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\generate_test_audit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 138,
      "function_name": "generate_audit_report",
      "actual_value": 122,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 16 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\generate_test_audit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 263,
      "function_name": "main",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\generate_wip_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 29,
      "function_name": "run_compliance_check",
      "actual_value": 56,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\generate_wip_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 101,
      "function_name": "calculate_testing_score",
      "actual_value": 63,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\generate_wip_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 167,
      "function_name": "generate_report",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\generate_wip_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 212,
      "function_name": "_format_action_items",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\generate_wip_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 232,
      "function_name": "_generate_markdown_report",
      "actual_value": 139,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 18 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\identify_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 15,
      "function_name": "analyze_file",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\identify_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 37,
      "function_name": "scan_codebase",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\import_management.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 295,
      "function_name": "main",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\import_management.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 36,
      "function_name": "__init__",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\import_management.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 60,
      "function_name": "check_imports",
      "actual_value": 40,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\import_management.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 103,
      "function_name": "fix_imports",
      "actual_value": 52,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\import_management.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 158,
      "function_name": "verify_imports",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\import_management.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 188,
      "function_name": "generate_report",
      "actual_value": 61,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\import_management.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 252,
      "function_name": "run_workflow",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\init_database.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 29,
      "function_name": "create_tables",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\installer_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 47,
      "function_name": "create_installer_config",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\installer_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 62,
      "function_name": "create_version_requirements",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\local_secrets_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 204,
      "function_name": "main",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\local_secrets_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 37,
      "function_name": "_add_to_gitignore",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\local_secrets_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 58,
      "function_name": "_generate_key",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\local_secrets_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 92,
      "function_name": "_load_secrets",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\local_secrets_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 106,
      "function_name": "_save_secrets",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\local_secrets_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 126,
      "function_name": "list_secrets",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\local_secrets_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 190,
      "function_name": "_import_env_vars",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\manage_precommit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "enable_hooks",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\manage_precommit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 52,
      "function_name": "disable_hooks",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\manage_precommit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 74,
      "function_name": "status",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\manage_precommit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 107,
      "function_name": "main",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\manage_workflows.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 51,
      "function_name": "get_workflow_status",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\manage_workflows.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 75,
      "function_name": "_get_workflow_category",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\manage_workflows.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 88,
      "function_name": "enable_workflow",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\manage_workflows.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 103,
      "function_name": "disable_workflow",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\manage_workflows.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 128,
      "function_name": "set_cost_budget",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\metadata_header_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 353,
      "function_name": "main",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\metadata_header_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 36,
      "function_name": "_get_git_state",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\metadata_header_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 72,
      "function_name": "generate_metadata",
      "actual_value": 49,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\metadata_header_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 133,
      "function_name": "format_python_header",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\metadata_header_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 150,
      "function_name": "format_javascript_header",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\metadata_header_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 169,
      "function_name": "get_header_for_file",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\metadata_header_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 189,
      "function_name": "_format_html_header",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\metadata_header_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 208,
      "function_name": "_format_sql_header",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\metadata_header_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 225,
      "function_name": "_format_yaml_header",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\metadata_header_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 253,
      "function_name": "add_header_to_file",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\metadata_header_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 302,
      "function_name": "add_headers_to_batch",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\metadata_header_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 328,
      "function_name": "save_metadata_log",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\monitor_oauth_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 199,
      "function_name": "main",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\monitor_oauth_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 21,
      "function_name": "check_services",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\monitor_oauth_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 41,
      "function_name": "check_oauth_config",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\monitor_oauth_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 62,
      "function_name": "test_oauth_initiation",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\monitor_oauth_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 95,
      "function_name": "monitor_logs",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\monitor_oauth_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 127,
      "function_name": "simulate_oauth_callback",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\monitor_oauth_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 152,
      "function_name": "run_full_diagnostics",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\precommit_duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 34,
      "function_name": "_load_critical_patterns",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\precommit_duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 61,
      "function_name": "check_files",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\precommit_duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 80,
      "function_name": "_check_file_naming",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\precommit_duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 104,
      "function_name": "_check_class_duplicates",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\precommit_duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 132,
      "function_name": "_check_existing_implementations",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\precommit_duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 172,
      "function_name": "_check_function_signatures",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\precommit_duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 196,
      "function_name": "_check_function_uniqueness",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\precommit_duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 221,
      "function_name": "_check_critical_patterns",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\precommit_duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 250,
      "function_name": "_run_comprehensive_scan",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\precommit_duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 286,
      "function_name": "_report_issues",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\prevent_numbered_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 54,
      "function_name": "check_file_naming",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\prevent_numbered_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 88,
      "function_name": "suggest_better_name",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\prevent_numbered_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 116,
      "function_name": "main",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\query_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 125,
      "function_name": "main",
      "actual_value": 78,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\query_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 32,
      "function_name": "search",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\query_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 50,
      "function_name": "get_exact",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\query_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 66,
      "function_name": "suggest",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\query_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 80,
      "function_name": "validate",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\query_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 107,
      "function_name": "get_stats",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\real_service_test_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 16,
      "function_name": "__init__",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\real_service_test_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 82,
      "function_name": "finalize",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\real_service_test_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 128,
      "function_name": "_build_test_summary_section",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\real_service_test_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 142,
      "function_name": "_build_llm_section",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\real_service_test_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 154,
      "function_name": "_build_database_section",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\real_service_test_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 166,
      "function_name": "_build_cache_section",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\real_service_test_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 178,
      "function_name": "_build_quality_section",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\real_service_test_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 191,
      "function_name": "_build_test_details_section",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\real_service_test_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 234,
      "function_name": "_build_html_header",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\remove_duplicate_test_setup.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 12,
      "function_name": "remove_duplicate_setup",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\remove_duplicate_test_setup.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 34,
      "function_name": "main",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\remove_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 352,
      "function_name": "main",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\remove_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 41,
      "function_name": "__init__",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\remove_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 86,
      "function_name": "should_scan_file",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\remove_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 104,
      "function_name": "scan_directory",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\remove_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 120,
      "function_name": "scan_file",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\remove_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 140,
      "function_name": "_scan_comments",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\remove_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 160,
      "function_name": "_scan_hardcoded_data",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\remove_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 184,
      "function_name": "_scan_args_kwargs_stubs",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\remove_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 206,
      "function_name": "_scan_empty_implementations",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\remove_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 240,
      "function_name": "scan_all",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\remove_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 253,
      "function_name": "generate_report",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\remove_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 288,
      "function_name": "_generate_csv_report",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\remove_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 303,
      "function_name": "_generate_text_report",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\remove_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 339,
      "function_name": "save_report",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\reset_clickhouse.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 29,
      "function_name": "get_client",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\reset_clickhouse.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 43,
      "function_name": "list_tables",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\reset_clickhouse.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 90,
      "function_name": "_fetch_and_display_tables",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\reset_clickhouse.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 110,
      "function_name": "connect_to_clickhouse",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\reset_clickhouse.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 123,
      "function_name": "fetch_and_display_tables",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\reset_clickhouse.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 137,
      "function_name": "confirm_table_deletion",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\reset_clickhouse.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 156,
      "function_name": "verify_table_cleanup",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\reset_clickhouse.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 170,
      "function_name": "reset_clickhouse_instance",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\reset_clickhouse_auto.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 30,
      "function_name": "get_client",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\reset_clickhouse_auto.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 44,
      "function_name": "list_tables",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\reset_clickhouse_auto.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 91,
      "function_name": "_process_existing_tables",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\reset_clickhouse_auto.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 122,
      "function_name": "reset_clickhouse_instance",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\reset_clickhouse_auto.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 149,
      "function_name": "determine_target_configs",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\reset_clickhouse_auto.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 172,
      "function_name": "display_auto_summary",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\reset_clickhouse_final.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 15,
      "function_name": "_check_docker_container",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\reset_clickhouse_final.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 56,
      "function_name": "_verify_tables_dropped",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\reset_clickhouse_final.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 69,
      "function_name": "_process_single_database",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\reset_clickhouse_final.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 81,
      "function_name": "reset_local_clickhouse",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\reset_clickhouse_final.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 96,
      "function_name": "reset_cloud_clickhouse",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\scan_for_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 284,
      "function_name": "main",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\scan_for_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 45,
      "function_name": "_initialize_patterns",
      "actual_value": 83,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 11 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\scan_for_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 131,
      "function_name": "_get_excluded_paths",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\scan_for_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 152,
      "function_name": "_should_scan_file",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\scan_for_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 165,
      "function_name": "scan_file",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\scan_for_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 203,
      "function_name": "generate_report",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\scan_for_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 233,
      "function_name": "print_report",
      "actual_value": 40,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\scan_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 413,
      "function_name": "main",
      "actual_value": 104,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 14 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\scan_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 73,
      "function_name": "should_skip_file",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\scan_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 100,
      "function_name": "categorize_literal",
      "actual_value": 76,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\scan_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 180,
      "function_name": "scan_python_file",
      "actual_value": 54,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\scan_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 237,
      "function_name": "scan_javascript_file",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\scan_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 272,
      "function_name": "scan_file",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\scan_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 298,
      "function_name": "scan_directory",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\scan_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 311,
      "function_name": "generate_index",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\scan_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 344,
      "function_name": "save_index",
      "actual_value": 65,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\scan_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 194,
      "function_name": "visit_FunctionDef",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\scan_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 208,
      "function_name": "visit_ClassDef",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\schema_sync.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 46,
      "function_name": "parse_command_line_args",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\schema_sync.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 144,
      "function_name": "main",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\schema_sync.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 173,
      "function_name": "print_usage",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\seed_staging_data.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 44,
      "function_name": "__init__",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\seed_staging_data.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 58,
      "function_name": "seed_all",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\seed_staging_data.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 136,
      "function_name": "_build_regular_user_data",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\seed_staging_data.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 148,
      "function_name": "seed_threads_and_messages",
      "actual_value": 49,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\seed_staging_data.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 250,
      "function_name": "_build_optimization_request_data",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\seed_staging_data.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 294,
      "function_name": "_generate_metric_value",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\seed_staging_data.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 310,
      "function_name": "_create_metric_entry",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\seed_staging_data.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 324,
      "function_name": "seed_metrics",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\seed_staging_data.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 342,
      "function_name": "generate_summary",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\service_discovery.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 12,
      "function_name": "__init__",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\service_discovery.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 34,
      "function_name": "write_backend_info",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\service_discovery.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 58,
      "function_name": "write_frontend_info",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\service_discovery.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 85,
      "function_name": "is_service_running",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\setup.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 47,
      "function_name": "_execute_installer",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\setup_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 35,
      "function_name": "install_act",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\setup_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 61,
      "function_name": "create_config_files",
      "actual_value": 53,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\setup_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 118,
      "function_name": "install_dependencies",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\setup_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 131,
      "function_name": "run_validation",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\setup_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 153,
      "function_name": "main",
      "actual_value": 56,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\setup_assistant.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 48,
      "function_name": "_create_assistant_config",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\setup_assistant.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 88,
      "function_name": "setup_netra_assistant",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\setup_claude_hooks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 18,
      "function_name": "setup_claude_hook",
      "actual_value": 86,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 11 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\setup_gcp_service_account.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 21,
      "function_name": "create_service_account",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\setup_gcp_service_account.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 69,
      "function_name": "download_key",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\setup_gcp_service_account.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 90,
      "function_name": "setup_default_credentials",
      "actual_value": 59,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\setup_gcp_service_account.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 153,
      "function_name": "main",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\setup_graceful_shutdown.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 19,
      "function_name": "setup_auth_service_shutdown",
      "actual_value": 88,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 12 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\setup_graceful_shutdown.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 110,
      "function_name": "setup_backend_shutdown",
      "actual_value": 94,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 12 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\setup_graceful_shutdown.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 207,
      "function_name": "create_dockerfile_optimizations",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\setup_graceful_shutdown.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 255,
      "function_name": "setup_all",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\setup_import_hooks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 20,
      "function_name": "setup_pre_commit_hook",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\setup_import_hooks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 59,
      "function_name": "verify_tools",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\setup_import_hooks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 83,
      "function_name": "test_import_check",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\setup_import_hooks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 116,
      "function_name": "main",
      "actual_value": 51,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\simple_enhance_boundaries.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 11,
      "function_name": "main",
      "actual_value": 57,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\simple_launcher.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 14,
      "function_name": "test_imports",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\simple_launcher.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 29,
      "function_name": "test_basic_launcher",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\simple_launcher.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 61,
      "function_name": "main",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\split_large_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 264,
      "function_name": "main",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\split_large_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 47,
      "function_name": "analyze_file",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\split_large_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 74,
      "function_name": "_find_imports_end",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\split_large_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 89,
      "function_name": "_analyze_classes",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\split_large_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 119,
      "function_name": "_find_class_end",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\split_large_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 132,
      "function_name": "_suggest_module_names",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\split_large_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 148,
      "function_name": "split_file",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\split_large_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 176,
      "function_name": "_create_module_content",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\split_learnings.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 17,
      "function_name": "parse_learnings",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\split_learnings.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 56,
      "function_name": "create_category_file",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\split_learnings.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 86,
      "function_name": "create_index",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\split_learnings.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 118,
      "function_name": "main",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\split_learnings_robust.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 10,
      "function_name": "extract_learnings",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\split_learnings_robust.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 46,
      "function_name": "create_category_file",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\split_learnings_robust.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 80,
      "function_name": "create_index",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\split_learnings_robust.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 127,
      "function_name": "main",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\staging_error_monitor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 240,
      "function_name": "load_config_from_args",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\staging_error_monitor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 264,
      "function_name": "main",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\staging_error_monitor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 119,
      "function_name": "should_fail_deployment",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\staging_error_monitor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 175,
      "function_name": "check_deployment_errors",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\staging_error_monitor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 196,
      "function_name": "format_console_output",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\staging_error_monitor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 225,
      "function_name": "run_error_check",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\standardize_l3_test_names.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "check_name_conflicts",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\standardize_l3_test_names.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 50,
      "function_name": "find_references_to_file",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\standardize_l3_test_names.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 96,
      "function_name": "update_file_references",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\standardize_l3_test_names.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 129,
      "function_name": "rename_with_git",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\standardize_l3_test_names.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 154,
      "function_name": "rename_l3_file",
      "actual_value": 40,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\standardize_l3_test_names.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 197,
      "function_name": "prioritize_files",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\standardize_l3_test_names.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 224,
      "function_name": "main",
      "actual_value": 70,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\startup_diagnostics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 85,
      "function_name": "check_dependencies",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\startup_diagnostics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 134,
      "function_name": "apply_single_fix",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\startup_diagnostics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 178,
      "function_name": "diagnose_startup",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\startup_diagnostics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 206,
      "function_name": "main",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\startup_performance.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 84,
      "function_name": "run_tests",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\startup_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 117,
      "function_name": "_build_test_results",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\startup_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 139,
      "function_name": "_build_failed_details",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\startup_test_executor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 40,
      "function_name": "run_tests",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\startup_test_executor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 110,
      "function_name": "run_tests",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\startup_test_executor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 182,
      "function_name": "run_tests",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\start_auth_service.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 22,
      "function_name": "start_dependencies",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\start_auth_service.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 47,
      "function_name": "start_auth_service",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\start_auth_service.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 82,
      "function_name": "stop_all",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\start_auth_service.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 95,
      "function_name": "run",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\start_test_services.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 19,
      "function_name": "check_docker_running",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\start_test_services.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 34,
      "function_name": "start_docker_services",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\start_test_services.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 59,
      "function_name": "create_test_compose_file",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\start_test_services.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 93,
      "function_name": "start_local_services",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\start_test_services.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 133,
      "function_name": "check_service_health",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\start_test_services.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 149,
      "function_name": "set_environment_variables",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\start_test_services.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 167,
      "function_name": "main",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\status_agent_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 36,
      "function_name": "check_agent_system",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_agent_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 48,
      "function_name": "_check_supervisor_status",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_agent_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 60,
      "function_name": "_determine_active_supervisor",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\status_agent_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 76,
      "function_name": "_check_sub_agents",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_agent_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 88,
      "function_name": "_analyze_sub_agent",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\status_agent_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 101,
      "function_name": "_check_apex_optimizer",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\status_agent_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 148,
      "function_name": "_check_backend_coverage",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_agent_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 174,
      "function_name": "_check_frontend_coverage",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_collector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 92,
      "function_name": "_find_pattern_in_lines",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\status_collector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 125,
      "function_name": "analyze_component_health",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\status_collector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 139,
      "function_name": "_process_health_check",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\status_collector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 191,
      "function_name": "collect_wip_items",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_collector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 203,
      "function_name": "_process_wip_check",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_collector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 248,
      "function_name": "run_quick_tests",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_collector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 270,
      "function_name": "_parse_test_results",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\status_integration_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 37,
      "function_name": "check_integration_status",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_integration_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 49,
      "function_name": "_check_websocket_integration",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_integration_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 61,
      "function_name": "_check_backend_websocket",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\status_integration_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 79,
      "function_name": "_check_api_sync",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_integration_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 91,
      "function_name": "_scan_backend_routes",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_integration_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 113,
      "function_name": "_scan_frontend_calls",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_integration_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 145,
      "function_name": "_check_backend_oauth",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_integration_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 157,
      "function_name": "_check_frontend_oauth",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_renderer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 37,
      "function_name": "build_complete_report",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\status_renderer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 68,
      "function_name": "_build_key_metrics",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\status_renderer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 98,
      "function_name": "_extract_critical_issues",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\status_renderer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 113,
      "function_name": "_build_wip_summary",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\status_section_renderers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 87,
      "function_name": "_build_agent_section",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_section_renderers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 127,
      "function_name": "build_integration_section",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\status_section_renderers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 166,
      "function_name": "build_test_section",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\status_section_renderers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 193,
      "function_name": "_build_quick_results",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_section_renderers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 209,
      "function_name": "build_recommendations",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\status_section_renderers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 253,
      "function_name": "build_appendix",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\switch_hooks_mode.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 11,
      "function_name": "switch_mode",
      "actual_value": 66,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\switch_hooks_mode.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 80,
      "function_name": "main",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\team_updates.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 15,
      "function_name": "main",
      "actual_value": 72,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\team_updates_compliance_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 21,
      "function_name": "analyze",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\team_updates_compliance_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 35,
      "function_name": "check_300_line_violations",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\team_updates_compliance_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 56,
      "function_name": "check_8_line_violations",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\team_updates_compliance_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 69,
      "function_name": "get_compliance_trends",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\team_updates_compliance_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 85,
      "function_name": "_should_skip_file",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\team_updates_compliance_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 98,
      "function_name": "_check_functions_in_file",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\team_updates_compliance_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 121,
      "function_name": "_count_function_lines",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\team_updates_compliance_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 141,
      "function_name": "_determine_status",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\team_updates_compliance_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 154,
      "function_name": "_parse_compliance_output",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\team_updates_documentation_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 22,
      "function_name": "analyze",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\team_updates_documentation_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 35,
      "function_name": "find_doc_changes",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\team_updates_documentation_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 52,
      "function_name": "find_spec_updates",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\team_updates_documentation_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 69,
      "function_name": "extract_learnings",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\team_updates_documentation_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 88,
      "function_name": "_run_git_command",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\team_updates_documentation_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 100,
      "function_name": "_parse_doc_changes",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\team_updates_documentation_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 124,
      "function_name": "_parse_spec_updates",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\team_updates_documentation_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 150,
      "function_name": "_extract_learning_from_xml",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\team_updates_documentation_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 187,
      "function_name": "_assess_doc_health",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\team_updates_formatter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 21,
      "function_name": "format_full_report",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\team_updates_formatter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 61,
      "function_name": "format_executive_summary",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\team_updates_formatter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 84,
      "function_name": "format_features",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\team_updates_formatter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 104,
      "function_name": "format_bugs",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\team_updates_formatter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 121,
      "function_name": "format_test_health",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\team_updates_formatter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 149,
      "function_name": "format_code_quality",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\team_updates_formatter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 174,
      "function_name": "format_documentation",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\team_updates_formatter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 197,
      "function_name": "format_action_items",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\team_updates_git_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 22,
      "function_name": "analyze",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\team_updates_git_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 35,
      "function_name": "get_commits",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\team_updates_git_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 47,
      "function_name": "summarize_commits",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\team_updates_git_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 60,
      "function_name": "identify_authors",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\team_updates_git_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 84,
      "function_name": "_parse_commit_log",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\team_updates_git_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 100,
      "function_name": "_extract_feature_descriptions",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\team_updates_git_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 113,
      "function_name": "_extract_bug_descriptions",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\team_updates_git_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 126,
      "function_name": "_format_author_stats",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\team_updates_orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 97,
      "function_name": "main",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\team_updates_orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 28,
      "function_name": "generate_update",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\team_updates_orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 40,
      "function_name": "get_time_range",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\team_updates_sync.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 10,
      "function_name": "get_top_changed_files",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\team_updates_sync.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 35,
      "function_name": "generate_simple_report",
      "actual_value": 116,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 15 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\team_updates_sync.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 157,
      "function_name": "main",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\team_updates_test_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 20,
      "function_name": "analyze",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\team_updates_test_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "load_latest_reports",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\team_updates_test_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 50,
      "function_name": "extract_failures",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\team_updates_test_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 66,
      "function_name": "calculate_coverage_delta",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\team_updates_test_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 87,
      "function_name": "_determine_overall_status",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\team_updates_test_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 102,
      "function_name": "_parse_report_content",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\team_updates_test_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 120,
      "function_name": "_simplify_error",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\team_updates_test_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 133,
      "function_name": "_extract_metrics",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\test_async_postgres.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 22,
      "function_name": "test_backend_connection",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_async_postgres.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 65,
      "function_name": "test_auth_connection",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_async_postgres.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 108,
      "function_name": "test_cloud_sql_imports",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_async_postgres.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 122,
      "function_name": "main",
      "actual_value": 69,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_auth_integration.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 163,
      "function_name": "main",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_auth_integration.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 27,
      "function_name": "test_auth_service_health",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\test_auth_integration.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 39,
      "function_name": "test_auth_service_endpoints",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\test_auth_integration.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 61,
      "function_name": "test_backend_auth_client",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\test_auth_integration.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 81,
      "function_name": "test_token_validation_flow",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_auth_integration.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 104,
      "function_name": "test_cors_configuration",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_auth_integration.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 127,
      "function_name": "run_all_tests",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_backend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 75,
      "function_name": "_create_test_environment_dict",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\test_backend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 136,
      "function_name": "_check_postgresql_service",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_backend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 170,
      "function_name": "build_pytest_args",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_backend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 457,
      "function_name": "_get_advanced_usage_examples",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\test_backend_optimized.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 280,
      "function_name": "discover_test_files",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_backend_optimized.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 320,
      "function_name": "print_results_summary",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_backend_optimized.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 359,
      "function_name": "main",
      "actual_value": 91,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 12 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_backend_optimized.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 108,
      "function_name": "__init__",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_backend_optimized.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 121,
      "function_name": "execute_optimized_tests",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_backend_optimized.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 160,
      "function_name": "_create_optimization_config",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_backend_optimized.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 199,
      "function_name": "_compile_final_results",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\test_backend_optimized.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 223,
      "function_name": "_update_optimization_models",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\test_backend_optimized.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 241,
      "function_name": "_fallback_execution",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_cold_start_e2e.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 500,
      "function_name": "main",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_cold_start_e2e.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 71,
      "function_name": "run_full_test",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_cold_start_e2e.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 110,
      "function_name": "start_services",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_cold_start_e2e.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 143,
      "function_name": "wait_for_services",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_cold_start_e2e.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 171,
      "function_name": "read_service_discovery",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\test_cold_start_e2e.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 189,
      "function_name": "check_service_health",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_cold_start_e2e.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 216,
      "function_name": "test_authentication",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_cold_start_e2e.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 261,
      "function_name": "test_websocket",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_cold_start_e2e.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 309,
      "function_name": "test_chat_flow",
      "actual_value": 58,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_cold_start_e2e.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 370,
      "function_name": "test_model_response",
      "actual_value": 60,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_cold_start_e2e.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 443,
      "function_name": "get_websocket_url",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\test_cold_start_e2e.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 461,
      "function_name": "cleanup",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\test_cold_start_e2e.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 479,
      "function_name": "print_summary",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\test_config_loading.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 11,
      "function_name": "test_config_loading",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_coordination_fixes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 403,
      "function_name": "main",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_coordination_fixes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 37,
      "function_name": "run_all_tests",
      "actual_value": 40,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_coordination_fixes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 80,
      "function_name": "test_dependency_resolution",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_coordination_fixes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 121,
      "function_name": "test_readiness_vs_health_separation",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_coordination_fixes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 156,
      "function_name": "test_port_allocation_coordination",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_coordination_fixes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 185,
      "function_name": "test_service_discovery_timing",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_coordination_fixes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 229,
      "function_name": "test_graceful_degradation",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_coordination_fixes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 277,
      "function_name": "test_complete_coordination_workflow",
      "actual_value": 69,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_coordination_fixes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 349,
      "function_name": "test_resource_cleanup",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\test_coordination_fixes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 369,
      "function_name": "_print_test_summary",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_coordination_fixes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 298,
      "function_name": "start_backend",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\test_coordination_fixes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 312,
      "function_name": "start_frontend",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_discovery_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 162,
      "function_name": "main",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\test_discovery_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 41,
      "function_name": "_categorize_single_test",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\test_discovery_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 69,
      "function_name": "_print_real_e2e_section",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\test_discovery_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 98,
      "function_name": "_print_test_categories_section",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_discovery_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 111,
      "function_name": "_print_test_type_summary",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_discovery_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 124,
      "function_name": "print_real_e2e_details",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_error_monitor_logic.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 107,
      "function_name": "create_test_errors",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_error_monitor_logic.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 144,
      "function_name": "create_critical_test_errors",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\test_error_monitor_logic.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 161,
      "function_name": "test_normal_deployment",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_error_monitor_logic.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 185,
      "function_name": "test_critical_deployment",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_error_monitor_logic.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 209,
      "function_name": "test_error_categorization",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\test_error_monitor_logic.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 228,
      "function_name": "main",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\test_error_monitor_logic.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 93,
      "function_name": "should_fail_deployment",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_example_message_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 367,
      "function_name": "run_quick_validation",
      "actual_value": 55,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_example_message_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 427,
      "function_name": "main",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\test_example_message_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 35,
      "function_name": "run_all_tests",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_example_message_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 77,
      "function_name": "_run_test_suite",
      "actual_value": 48,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_example_message_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 129,
      "function_name": "_parse_test_results",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_example_message_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 172,
      "function_name": "_run_validation_checks",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_example_message_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 203,
      "function_name": "_validate_imports",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_example_message_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 227,
      "function_name": "_validate_configuration",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\test_example_message_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 246,
      "function_name": "_test_handler_initialization",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_example_message_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 271,
      "function_name": "_test_message_validation",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_example_message_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 307,
      "function_name": "_generate_test_report",
      "actual_value": 55,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_exclusion_check.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 10,
      "function_name": "check_test_file_locations",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_failure_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 35,
      "function_name": "_get_test_paths_to_scan",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\test_failure_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 83,
      "function_name": "_execute_pytest_and_parse_results",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_failure_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 125,
      "function_name": "_count_tests_and_failures",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_failure_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 218,
      "function_name": "_print_final_summary",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\test_frontend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 45,
      "function_name": "install_dependencies",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\test_frontend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 65,
      "function_name": "check_dependencies",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_frontend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 169,
      "function_name": "_build_test_patterns",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\test_frontend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 201,
      "function_name": "run_cypress_tests",
      "actual_value": 40,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_frontend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 246,
      "function_name": "check_backend_running",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_frontend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 260,
      "function_name": "check_frontend_running",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_frontend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 294,
      "function_name": "build_frontend",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_frontend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 309,
      "function_name": "run_lint",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\test_frontend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 329,
      "function_name": "run_type_check",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_frontend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 354,
      "function_name": "get_usage_examples",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_frontend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 483,
      "function_name": "execute_tests",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_frontend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 518,
      "function_name": "handle_cleanup",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\test_frontend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 531,
      "function_name": "main",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_frontend_quick.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 12,
      "function_name": "run_frontend_tests",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_frontend_simple.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 15,
      "function_name": "run_frontend_tests",
      "actual_value": 49,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_frontend_simple.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 70,
      "function_name": "main",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 24,
      "function_name": "main",
      "actual_value": 95,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 12 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_oauth_local.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 433,
      "function_name": "async_main",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_oauth_local.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 41,
      "function_name": "__init__",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_oauth_local.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 55,
      "function_name": "check_environment",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_oauth_local.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 97,
      "function_name": "check_service_health",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_oauth_local.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 138,
      "function_name": "test_oauth_config_endpoint",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_oauth_local.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 179,
      "function_name": "test_oauth_login_flow",
      "actual_value": 53,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_oauth_local.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 235,
      "function_name": "test_token_generation",
      "actual_value": 57,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_oauth_local.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 295,
      "function_name": "test_token_validation",
      "actual_value": 46,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_oauth_local.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 344,
      "function_name": "generate_report",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_oauth_local.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 389,
      "function_name": "_print_recommendations",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_staging.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 19,
      "function_name": "setup_staging_env",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_staging.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 50,
      "function_name": "run_staging_tests",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\test_staging.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 71,
      "function_name": "main",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_staging_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 10,
      "function_name": "test_staging_config",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_staging_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 37,
      "function_name": "_set_staging_env_vars",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 37,
      "function_name": "test_endpoint",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 81,
      "function_name": "test_service_health",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\test_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 101,
      "function_name": "test_api_endpoints",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\test_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 124,
      "function_name": "test_auth_flow",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\test_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 145,
      "function_name": "test_websocket_connectivity",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 183,
      "function_name": "main",
      "actual_value": 54,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_staging_startup.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 282,
      "function_name": "main",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_staging_startup.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "test_service_initialization_order",
      "actual_value": 40,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_staging_startup.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 76,
      "function_name": "test_dependency_resolution",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_staging_startup.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 105,
      "function_name": "test_configuration_loading",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_staging_startup.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 136,
      "function_name": "test_secret_access",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_staging_startup.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 174,
      "function_name": "test_health_endpoints",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\test_staging_startup.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 194,
      "function_name": "test_startup_timing",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\test_staging_startup.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 223,
      "function_name": "run_all_tests",
      "actual_value": 55,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_verify_workflow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 14,
      "function_name": "run_command",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_verify_workflow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 52,
      "function_name": "test_missing_token",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\test_verify_workflow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 75,
      "function_name": "main",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "run_test",
      "actual_value": 40,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 84,
      "function_name": "test_argument_validation",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\test_verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 100,
      "function_name": "test_token_handling",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\test_verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 134,
      "function_name": "test_output_formats",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\test_verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 158,
      "function_name": "generate_report",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 194,
      "function_name": "run_all_tests",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_verify_workflow_status_corrected.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 206,
      "function_name": "main",
      "actual_value": 55,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_verify_workflow_status_corrected.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 21,
      "function_name": "run_test",
      "actual_value": 56,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_verify_workflow_status_corrected.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 80,
      "function_name": "test_basic_functionality",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_verify_workflow_status_corrected.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 111,
      "function_name": "test_authentication",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\test_verify_workflow_status_corrected.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 133,
      "function_name": "test_repository_handling",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\test_verify_workflow_status_corrected.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 155,
      "function_name": "test_output_formats",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\test_verify_workflow_status_corrected.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 176,
      "function_name": "run_all_tests",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_websocket_dev_mode.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 331,
      "function_name": "main",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\test_websocket_dev_mode.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 32,
      "function_name": "__init__",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\test_websocket_dev_mode.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 47,
      "function_name": "start_dev_server",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_websocket_dev_mode.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 82,
      "function_name": "test_config_endpoint",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_websocket_dev_mode.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 112,
      "function_name": "test_health_endpoint",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_websocket_dev_mode.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 142,
      "function_name": "test_cors_validation",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_websocket_dev_mode.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 169,
      "function_name": "test_websocket_functionality",
      "actual_value": 63,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_websocket_dev_mode.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 235,
      "function_name": "stop_dev_server",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_websocket_dev_mode.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 258,
      "function_name": "run_all_tests",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_websocket_dev_mode.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 285,
      "function_name": "generate_report",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_workflows_with_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 32,
      "function_name": "check_prerequisites",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_workflows_with_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 78,
      "function_name": "create_mock_secrets",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\test_workflows_with_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 94,
      "function_name": "get_workflows",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_workflows_with_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 108,
      "function_name": "validate_workflow_syntax",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_workflows_with_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 142,
      "function_name": "test_workflow_dry_run",
      "actual_value": 40,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_workflows_with_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 185,
      "function_name": "create_event_file",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\test_workflows_with_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 202,
      "function_name": "extract_error",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\test_workflows_with_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 223,
      "function_name": "check_common_issues",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_workflows_with_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 246,
      "function_name": "fix_common_issues",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_workflows_with_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 269,
      "function_name": "run_tests",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_workflows_with_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 322,
      "function_name": "generate_report",
      "actual_value": 40,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\unified_import_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 565,
      "function_name": "run_precommit_check",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\unified_import_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 584,
      "function_name": "main",
      "actual_value": 81,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 11 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\unified_import_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 67,
      "function_name": "__init__",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\unified_import_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 86,
      "function_name": "check_compliance",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\unified_import_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 112,
      "function_name": "fix_all_imports",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\unified_import_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 138,
      "function_name": "_check_backend_imports",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\unified_import_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 186,
      "function_name": "_fix_backend_imports",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\unified_import_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 232,
      "function_name": "_check_test_imports",
      "actual_value": 59,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\unified_import_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 294,
      "function_name": "_fix_test_imports",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\unified_import_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 338,
      "function_name": "_check_specific_issues",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\unified_import_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 391,
      "function_name": "_fix_specific_issues",
      "actual_value": 51,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\unified_import_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 445,
      "function_name": "generate_report",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\unified_import_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 487,
      "function_name": "save_report",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\unified_import_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 503,
      "function_name": "print_report_summary",
      "actual_value": 58,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\update_spec_timestamps.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 78,
      "function_name": "is_legacy_spec",
      "actual_value": 55,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\update_spec_timestamps.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 141,
      "function_name": "add_timestamp_to_xml",
      "actual_value": 53,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\update_spec_timestamps.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 200,
      "function_name": "main",
      "actual_value": 99,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 13 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\update_staging_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 219,
      "function_name": "main",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\update_staging_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 25,
      "function_name": "check_secret",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\update_staging_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 56,
      "function_name": "update_secret",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\update_staging_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 87,
      "function_name": "get_required_secrets",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\update_staging_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 122,
      "function_name": "check_all_secrets",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\update_staging_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 170,
      "function_name": "interactive_update",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 326,
      "function_name": "main",
      "actual_value": 40,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 74,
      "function_name": "validate_test_structure",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 97,
      "function_name": "check_test_assertions",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 111,
      "function_name": "run_test_suite",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 128,
      "function_name": "_parse_test_results",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 146,
      "function_name": "analyze_coverage_data",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 160,
      "function_name": "analyze_async_usage",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 175,
      "function_name": "analyze_mock_usage",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 189,
      "function_name": "check_test_dependencies",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 201,
      "function_name": "validate_all_tests",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 216,
      "function_name": "_compile_validation_result",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 235,
      "function_name": "_generate_recommendations",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 250,
      "function_name": "generate_console_summary",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 268,
      "function_name": "create_html_report",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 288,
      "function_name": "export_json_metrics",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 308,
      "function_name": "save_reports",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\validate_atomic_change.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 424,
      "function_name": "main",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_atomic_change.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 61,
      "function_name": "run_command",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\validate_atomic_change.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 81,
      "function_name": "validate_phase_1_pre_change",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_atomic_change.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 117,
      "function_name": "validate_phase_2_scope",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\validate_atomic_change.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 133,
      "function_name": "validate_phase_3_implementation",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_atomic_change.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 181,
      "function_name": "validate_phase_4_legacy_cleanup",
      "actual_value": 47,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_atomic_change.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 231,
      "function_name": "validate_phase_5_validation_suite",
      "actual_value": 52,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_atomic_change.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 286,
      "function_name": "validate_phase_6_documentation",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\validate_atomic_change.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 307,
      "function_name": "generate_report",
      "actual_value": 63,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_atomic_change.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 373,
      "function_name": "validate",
      "actual_value": 48,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 55,
      "function_name": "check_environment",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 86,
      "function_name": "check_dependencies",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 131,
      "function_name": "test_database_connection",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 166,
      "function_name": "test_auth_service",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 205,
      "function_name": "test_ai_service",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 245,
      "function_name": "test_websocket_connectivity",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 270,
      "function_name": "test_frontend_build",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 303,
      "function_name": "generate_report",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 342,
      "function_name": "run_validation",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 138,
      "function_name": "test_db",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 210,
      "function_name": "test_ai",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_frontend_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 225,
      "function_name": "main",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_frontend_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 28,
      "function_name": "validate",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_frontend_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 57,
      "function_name": "_discover_test_files",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_frontend_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 84,
      "function_name": "_check_jest_config",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_frontend_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 107,
      "function_name": "_check_imports",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_frontend_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 154,
      "function_name": "_test_execution",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_frontend_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 193,
      "function_name": "_generate_report",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\validate_frontend_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 207,
      "function_name": "_get_recommendations",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\validate_jwt_consistency.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 41,
      "function_name": "validate_jwt_secret_consistency",
      "actual_value": 174,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 22 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_mock_real_spectrum_compliance.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 290,
      "function_name": "main",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_mock_real_spectrum_compliance.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 44,
      "function_name": "__init__",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_mock_real_spectrum_compliance.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 67,
      "function_name": "scan_test_files",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\validate_mock_real_spectrum_compliance.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 79,
      "function_name": "analyze_file",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_mock_real_spectrum_compliance.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 117,
      "function_name": "_analyze_function",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_mock_real_spectrum_compliance.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 192,
      "function_name": "validate_compliance",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_mock_real_spectrum_compliance.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 226,
      "function_name": "generate_report",
      "actual_value": 60,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_network_constants.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 36,
      "function_name": "validate_service_ports",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\validate_network_constants.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 58,
      "function_name": "validate_host_constants",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\validate_network_constants.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 73,
      "function_name": "validate_database_constants",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_network_constants.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 110,
      "function_name": "validate_url_constants",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_network_constants.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 142,
      "function_name": "validate_service_endpoints",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\validate_network_constants.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 161,
      "function_name": "validate_network_environment_helper",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_network_constants.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 203,
      "function_name": "main",
      "actual_value": 47,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_service_independence.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 248,
      "function_name": "main",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_service_independence.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 23,
      "function_name": "validate",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\validate_service_independence.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 51,
      "function_name": "_check_no_main_app_imports",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_service_independence.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 84,
      "function_name": "_check_dockerfile_copies_entire_service",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_service_independence.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 113,
      "function_name": "_check_requirements_complete",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_service_independence.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 148,
      "function_name": "_service_needs_dependency",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_service_independence.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 172,
      "function_name": "_check_service_can_import",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_service_independence.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 203,
      "function_name": "_check_unique_module_names",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\validate_service_independence.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 226,
      "function_name": "_report_results",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\validate_staging_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 178,
      "function_name": "perform_database_connection_test",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\validate_staging_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 199,
      "function_name": "check_redis_connection",
      "actual_value": 53,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 255,
      "function_name": "check_clickhouse_connection",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 308,
      "function_name": "check_environment_variables",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 342,
      "function_name": "check_gcp_configuration",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 409,
      "function_name": "run_core_validation_checks",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\validate_staging_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 428,
      "function_name": "determine_final_result",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\validate_staging_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 442,
      "function_name": "main",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\validate_staging_config_partial.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 43,
      "function_name": "check_github_secrets",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_config_partial.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 82,
      "function_name": "_parse_cloud_sql_url",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\validate_staging_config_partial.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 94,
      "function_name": "_connect_cloud_sql",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\validate_staging_config_partial.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 114,
      "function_name": "_check_db_tables",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\validate_staging_config_partial.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 133,
      "function_name": "check_database_connection",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 541,
      "function_name": "main",
      "actual_value": 84,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 11 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 55,
      "function_name": "__init__",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 76,
      "function_name": "validate_all",
      "actual_value": 105,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 14 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 185,
      "function_name": "check_gcp_auth",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 211,
      "function_name": "check_apis_enabled",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 233,
      "function_name": "check_secrets_exist",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 255,
      "function_name": "check_secret_values",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 290,
      "function_name": "check_dockerfiles",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 312,
      "function_name": "check_config_files",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 333,
      "function_name": "check_cloud_sql",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 359,
      "function_name": "check_database_connectivity",
      "actual_value": 48,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 410,
      "function_name": "check_jwt_consistency",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 442,
      "function_name": "check_oauth_configuration",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 473,
      "function_name": "check_ssl_parameters",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 506,
      "function_name": "check_staging_urls",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 528,
      "function_name": "_get_secret_value",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 382,
      "function_name": "test_connection",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\validate_staging_health.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 252,
      "function_name": "print_validation_summary",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\validate_staging_health.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 274,
      "function_name": "main",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_health.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 36,
      "function_name": "validate_all_health_checks",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\validate_staging_health.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 62,
      "function_name": "_check_endpoint",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\validate_staging_health.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 151,
      "function_name": "_check_response_time",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\validate_staging_health.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 168,
      "function_name": "_check_throughput",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\validate_staging_health.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 185,
      "function_name": "_check_error_rate",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\validate_staging_health.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 225,
      "function_name": "_check_security_headers",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\validate_staging_health.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 239,
      "function_name": "_check_cors_configuration",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\validate_type_deduplication.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 340,
      "function_name": "main",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_type_deduplication.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 54,
      "function_name": "_load_canonical_imports",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_type_deduplication.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 86,
      "function_name": "scan_python_duplicates",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_type_deduplication.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 128,
      "function_name": "scan_typescript_duplicates",
      "actual_value": 46,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_type_deduplication.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 177,
      "function_name": "validate_canonical_imports",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_type_deduplication.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 216,
      "function_name": "run_validation",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_type_deduplication.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 262,
      "function_name": "_add_critical_duplicates_section",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\validate_type_deduplication.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 276,
      "function_name": "_add_python_duplicates_section",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\validate_type_deduplication.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 288,
      "function_name": "_add_typescript_duplicates_section",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\validate_type_deduplication.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 300,
      "function_name": "_add_violations_section",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\validate_type_deduplication.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 323,
      "function_name": "generate_report",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\validate_workflow_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 20,
      "function_name": "validate_config_structure",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_workflow_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 58,
      "function_name": "check_workflow_references",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_workflow_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 189,
      "function_name": "_print_config_details",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\verify_auth_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 14,
      "function_name": "check_auth_service_endpoints",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_auth_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 42,
      "function_name": "verify_environment_config",
      "actual_value": 54,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_auth_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 99,
      "function_name": "main",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 365,
      "function_name": "main",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 80,
      "function_name": "verify_environment_files",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\verify_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 97,
      "function_name": "verify_port_availability",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 122,
      "function_name": "verify_environment_variables",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 160,
      "function_name": "verify_configuration_consistency",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 188,
      "function_name": "verify_service_startup_readiness",
      "actual_value": 47,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 238,
      "function_name": "verify_python_imports",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 263,
      "function_name": "test_websocket_configuration",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\verify_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 282,
      "function_name": "run_quick_startup_test",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 331,
      "function_name": "run_full_verification",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_oauth_redirect_uris.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 22,
      "function_name": "main",
      "actual_value": 120,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 16 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_staging_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 16,
      "function_name": "verify_test_files",
      "actual_value": 52,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_staging_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 71,
      "function_name": "verify_test_runner_config",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_staging_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 109,
      "function_name": "verify_test_discovery",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_staging_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 147,
      "function_name": "print_usage_instructions",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_staging_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 172,
      "function_name": "main",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_startup_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 23,
      "function_name": "test_help_command",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\verify_startup_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 42,
      "function_name": "test_config_creation",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\verify_startup_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 57,
      "function_name": "test_environment_files",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\verify_startup_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 74,
      "function_name": "main",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 309,
      "function_name": "create_config_from_args",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 324,
      "function_name": "main",
      "actual_value": 46,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 70,
      "function_name": "_create_client",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 87,
      "function_name": "_api_request",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 117,
      "function_name": "_parse_workflow_run",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 131,
      "function_name": "wait_for_completion",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 160,
      "function_name": "parse_args",
      "actual_value": 40,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 203,
      "function_name": "_get_usage_examples",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 242,
      "function_name": "display_table",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 270,
      "function_name": "display_json",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 13,
      "function_name": "find_backend_events",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 51,
      "function_name": "find_frontend_handlers",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 81,
      "function_name": "check_event_structure",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 108,
      "function_name": "check_payload_completeness",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 135,
      "function_name": "generate_report",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 148,
      "function_name": "_build_report_header",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 165,
      "function_name": "_build_fixes_section",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 185,
      "function_name": "_build_structure_fix_section",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 197,
      "function_name": "_build_events_fix_section",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 259,
      "function_name": "_build_event_inventory",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 278,
      "function_name": "_build_alignment_section",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 329,
      "function_name": "_build_structure_issues_section",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 342,
      "function_name": "_build_payload_issues_section",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 355,
      "function_name": "_build_recommendations_section",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 399,
      "function_name": "_build_next_steps_section",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 411,
      "function_name": "_build_conclusion_section",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 430,
      "function_name": "main",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\workflow_config_utils.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 50,
      "function_name": "_show_test_hierarchy",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\workflow_introspection.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 332,
      "function_name": "main",
      "actual_value": 70,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\workflow_introspection.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 68,
      "function_name": "_run_gh_command",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\workflow_introspection.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 88,
      "function_name": "list_workflows",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\workflow_introspection.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 108,
      "function_name": "get_recent_runs",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\workflow_introspection.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 135,
      "function_name": "get_run_details",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\workflow_introspection.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 180,
      "function_name": "get_run_logs",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\workflow_introspection.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 194,
      "function_name": "get_workflow_outputs",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\workflow_introspection.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 218,
      "function_name": "display_workflows_table",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\workflow_introspection.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 236,
      "function_name": "display_runs_table",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\workflow_introspection.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 265,
      "function_name": "display_run_details",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\workflow_introspection.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 299,
      "function_name": "display_outputs",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\workflow_introspection.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 313,
      "function_name": "_get_status_style",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\workflow_presets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 24,
      "function_name": "get_minimal_preset",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\workflow_presets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 39,
      "function_name": "get_standard_preset",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\workflow_presets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 54,
      "function_name": "get_full_preset",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\workflow_presets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 69,
      "function_name": "get_cost_optimized_preset",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\workflow_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 248,
      "function_name": "main",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\workflow_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 54,
      "function_name": "validate_file",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\workflow_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 167,
      "function_name": "_report_file_status",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\workflow_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 183,
      "function_name": "_display_summary",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\workflow_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 215,
      "function_name": "validate",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\autonomous_review\\main.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 64,
      "function_name": "_determine_review_mode",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\autonomous_review\\main.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 94,
      "function_name": "_run_continuous_review",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\autonomous_review\\report_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 21,
      "function_name": "generate_report",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\autonomous_review\\report_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 39,
      "function_name": "_generate_markdown_report",
      "actual_value": 54,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\autonomous_review\\test_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 97,
      "function_name": "_build_test_header",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\autonomous_review\\test_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 117,
      "function_name": "_build_test_class",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\autonomous_review\\test_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 149,
      "function_name": "_generate_basic_function_test",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\autonomous_review\\test_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 194,
      "function_name": "_generate_single_class_tests",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\autonomous_review\\test_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 209,
      "function_name": "_generate_method_tests",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\autonomous_review\\test_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 223,
      "function_name": "_generate_critical_path_tests",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\autonomous_review\\test_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 243,
      "function_name": "_get_modernization_replacements",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\autonomous_review\\test_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 21,
      "function_name": "generate_smart_test",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\autonomous_review\\test_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 62,
      "function_name": "remove_redundant_test",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\autonomous_review\\test_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 83,
      "function_name": "find_test_file",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\autonomous_review\\test_reviewer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 22,
      "function_name": "__init__",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\autonomous_review\\test_reviewer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "run_review",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\autonomous_review\\test_reviewer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 71,
      "function_name": "_perform_ultra_analysis",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\autonomous_review\\test_reviewer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 107,
      "function_name": "_analyze_coverage",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\autonomous_review\\test_reviewer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 137,
      "function_name": "_assess_test_quality",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\autonomous_review\\test_reviewer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 184,
      "function_name": "_identify_test_gaps",
      "actual_value": 54,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\autonomous_review\\test_reviewer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 242,
      "function_name": "_generate_recommendations",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\autonomous_review\\test_reviewer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 272,
      "function_name": "_apply_auto_fixes",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\autonomous_review\\test_reviewer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 301,
      "function_name": "_find_test_file",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\autonomous_review\\ultra_thinking_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 22,
      "function_name": "analyze_code_semantics",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\autonomous_review\\ultra_thinking_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 117,
      "function_name": "_calculate_test_priority",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\autonomous_review\\ultra_thinking_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 159,
      "function_name": "_identify_critical_paths",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\autonomous_review\\ultra_thinking_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 180,
      "function_name": "_extract_business_logic",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\ci\\analyze_failures.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 206,
      "function_name": "main",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\ci\\analyze_failures.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 61,
      "function_name": "analyze_all",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\analyze_failures.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 87,
      "function_name": "_analyze_file",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\ci\\analyze_failures.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 103,
      "function_name": "_analyze_failure",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\analyze_failures.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 140,
      "function_name": "_determine_context",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\ci\\analyze_failures.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 155,
      "function_name": "_suggest_approach",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\ci\\analyze_failures.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 183,
      "function_name": "_determine_strategy",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\ci\\check_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 91,
      "function_name": "setup_github_actions_annotations",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\ci\\check_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 104,
      "function_name": "main",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\check_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 31,
      "function_name": "run_check",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\check_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 59,
      "function_name": "_print_detailed_report",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\generate_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 350,
      "function_name": "load_context",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\generate_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 382,
      "function_name": "main",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\generate_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "_get_api_key",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\ci\\generate_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 62,
      "function_name": "_generate_claude_fix",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\generate_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 102,
      "function_name": "_generate_gemini_fix",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\generate_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 139,
      "function_name": "_generate_gpt4_fix",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\generate_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 237,
      "function_name": "_parse_fix_response",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\generate_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 284,
      "function_name": "validate_fix",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\ci\\generate_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 299,
      "function_name": "_apply_patch",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\generate_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 335,
      "function_name": "_run_test",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\ci\\generate_performance_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 46,
      "function_name": "add_performance_issues",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\ci\\generate_performance_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 79,
      "function_name": "add_test_results",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\ci\\generate_performance_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 94,
      "function_name": "add_duration_metrics",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\ci\\generate_performance_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 116,
      "function_name": "add_recommendations",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\ci\\generate_performance_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 131,
      "function_name": "generate_markdown_performance_report",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\ci\\generate_performance_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 186,
      "function_name": "main",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\ci\\generate_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 154,
      "function_name": "parse_coverage_xml",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\ci\\generate_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 173,
      "function_name": "main",
      "actual_value": 48,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\generate_security_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 20,
      "function_name": "generate_markdown_security_report",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\ci\\generate_security_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 41,
      "function_name": "_build_security_summary_section",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\ci\\generate_security_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 74,
      "function_name": "_build_vulnerabilities_section",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\ci\\generate_security_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 97,
      "function_name": "_format_vulnerability_groups",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\ci\\generate_security_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 120,
      "function_name": "_format_vulnerability_list",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\ci\\generate_security_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 138,
      "function_name": "_build_test_issues_section",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\ci\\generate_security_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 195,
      "function_name": "_generate_security_recommendations",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\generate_security_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 237,
      "function_name": "_generate_compliance_checks",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\ci\\generate_security_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 256,
      "function_name": "main",
      "actual_value": 40,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\process_results.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 206,
      "function_name": "main",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\ci\\process_results.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 48,
      "function_name": "_generate_summary_section",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\ci\\process_results.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 64,
      "function_name": "_format_test_failure",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\ci\\process_results.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 77,
      "function_name": "_format_traceback",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\ci\\process_results.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 89,
      "function_name": "_generate_failed_tests_section",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\ci\\process_results.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 104,
      "function_name": "_generate_slow_tests_section",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\ci\\process_results.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 121,
      "function_name": "_generate_coverage_section",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\ci\\process_results.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 137,
      "function_name": "_format_file_coverage",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\ci\\process_results.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 153,
      "function_name": "generate_markdown_report",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\ci\\process_results.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 165,
      "function_name": "generate_json_summary",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\process_results.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 191,
      "function_name": "save_report",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\analyze_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 286,
      "function_name": "main",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\analyze_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "__init__",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\analyze_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 61,
      "function_name": "find_test_files",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\analyze_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 77,
      "function_name": "analyze_file",
      "actual_value": 56,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\analyze_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 136,
      "function_name": "_is_mock_decorator",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\analyze_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 215,
      "function_name": "generate_report",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\analyze_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 240,
      "function_name": "print_summary",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\analyze_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 266,
      "function_name": "export_unjustified_list",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\compliance\\cli.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 43,
      "function_name": "_add_parser_arguments",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\cli.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 96,
      "function_name": "process_output",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\cli.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 115,
      "function_name": "_print_test_suggestions",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\compliance\\core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 84,
      "function_name": "_get_skip_patterns",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 108,
      "function_name": "file_size_violation",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 138,
      "function_name": "function_violation",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 173,
      "function_name": "duplicate_violation",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 203,
      "function_name": "test_stub_violation",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\demo_test_size_enforcement.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 17,
      "function_name": "demo_test_size_validator",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\demo_test_size_enforcement.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 54,
      "function_name": "demo_test_refactor_helper",
      "actual_value": 49,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\demo_test_size_enforcement.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 106,
      "function_name": "demo_test_runner_integration",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\demo_test_size_enforcement.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 136,
      "function_name": "demo_compliant_examples",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\demo_test_size_enforcement.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 169,
      "function_name": "demo_cli_usage",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\demo_test_size_enforcement.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 199,
      "function_name": "main",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\enhanced_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 22,
      "function_name": "generate_report",
      "actual_value": 60,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\enhanced_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 85,
      "function_name": "_categorize_violations",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\compliance\\enhanced_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 115,
      "function_name": "_format_executive_summary",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\enhanced_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 140,
      "function_name": "_format_severity_breakdown",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\compliance\\enhanced_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 160,
      "function_name": "_format_critical_violations",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\enhanced_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 175,
      "function_name": "_format_high_violations",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\enhanced_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 191,
      "function_name": "_format_medium_violations",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\enhanced_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 222,
      "function_name": "_format_low_violations",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\compliance\\enhanced_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 242,
      "function_name": "_format_action_items",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\enhanced_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 272,
      "function_name": "_format_business_impact",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\fake_test_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 358,
      "function_name": "main",
      "actual_value": 115,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 15 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\fake_test_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 45,
      "function_name": "scan_all_tests",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\fake_test_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 94,
      "function_name": "scan_directory",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\compliance\\fake_test_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 121,
      "function_name": "scan_file",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\fake_test_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 154,
      "function_name": "_get_critical_files",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\fake_test_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 181,
      "function_name": "_generate_recommendations",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\fake_test_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 225,
      "function_name": "generate_comprehensive_report",
      "actual_value": 85,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 11 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\fake_test_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 322,
      "function_name": "_get_combined_recommendations",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\file_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 30,
      "function_name": "check_file_naming",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\find_top_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 12,
      "function_name": "find_mock_patterns",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\find_top_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 57,
      "function_name": "analyze_mock_targets",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\compliance\\find_top_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 78,
      "function_name": "check_for_justification",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\find_top_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 105,
      "function_name": "main",
      "actual_value": 52,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\mock_justification_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 177,
      "function_name": "create_mock_justified_decorator",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\compliance\\mock_justification_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 20,
      "function_name": "__init__",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\mock_justification_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 42,
      "function_name": "check_mock_justifications",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\mock_justification_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 55,
      "function_name": "_get_test_patterns",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\mock_justification_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 68,
      "function_name": "_check_file",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\mock_justification_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 93,
      "function_name": "_check_decorators",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\mock_justification_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 109,
      "function_name": "_check_inline_mocks",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\compliance\\mock_justification_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 129,
      "function_name": "_is_mock_decorator",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\mock_justification_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 142,
      "function_name": "_has_justification_nearby",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\mock_justification_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 159,
      "function_name": "_create_violation",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 29,
      "function_name": "__init__",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 47,
      "function_name": "run_all_checks",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\compliance\\orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 59,
      "function_name": "_collect_all_violations",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 87,
      "function_name": "_calculate_category_scores",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 115,
      "function_name": "_count_files_by_category",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 138,
      "function_name": "_build_category_scores",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 166,
      "function_name": "generate_test_splitting_suggestions",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 382,
      "function_name": "main",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 34,
      "function_name": "__init__",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 54,
      "function_name": "_find_project_test_files",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 90,
      "function_name": "_is_project_file",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 106,
      "function_name": "_is_test_file",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 123,
      "function_name": "_validate_file",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 160,
      "function_name": "_check_mock_components",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 195,
      "function_name": "_check_function_sizes",
      "actual_value": 59,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 258,
      "function_name": "_check_integration_test_mocking",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 291,
      "function_name": "_add_violation",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 307,
      "function_name": "generate_report",
      "actual_value": 56,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 366,
      "function_name": "get_examples_for_fixes",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 168,
      "function_name": "visit_ClassDef",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 180,
      "function_name": "visit_FunctionDef",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 212,
      "function_name": "_check_function_size",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\real_test_linter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 251,
      "function_name": "main",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\real_test_linter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 42,
      "function_name": "lint_files",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\real_test_linter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 84,
      "function_name": "_validate_specific_files",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\real_test_linter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 102,
      "function_name": "_print_results",
      "actual_value": 47,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\real_test_linter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 152,
      "function_name": "_attempt_fixes",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\real_test_linter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 182,
      "function_name": "generate_fix_report",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\real_test_linter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 224,
      "function_name": "check_git_diff",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 581,
      "function_name": "main",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 46,
      "function_name": "__init__",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 76,
      "function_name": "validate_all_tests",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 91,
      "function_name": "_find_all_test_files",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 126,
      "function_name": "_is_valid_test_file",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 147,
      "function_name": "_contains_test_code",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 162,
      "function_name": "_validate_file",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 184,
      "function_name": "_validate_python_file",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 226,
      "function_name": "_check_python_mock_components",
      "actual_value": 46,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 276,
      "function_name": "_check_python_function_sizes",
      "actual_value": 58,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 338,
      "function_name": "_check_python_integration_mocking",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 375,
      "function_name": "_check_javascript_mock_components",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 390,
      "function_name": "_check_javascript_excessive_mocking",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 406,
      "function_name": "_check_javascript_function_sizes",
      "actual_value": 46,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 456,
      "function_name": "_add_violation",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 469,
      "function_name": "generate_report",
      "actual_value": 104,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 14 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 234,
      "function_name": "visit_ClassDef",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 256,
      "function_name": "visit_FunctionDef",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 292,
      "function_name": "_check_function_size",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\relaxed_violation_counter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 21,
      "function_name": "add_violations",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\compliance\\relaxed_violation_counter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "get_relaxed_counts",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\relaxed_violation_counter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 73,
      "function_name": "get_detailed_summary",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\relaxed_violation_counter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 101,
      "function_name": "get_top_violating_files",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\compliance\\relaxed_violation_counter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 122,
      "function_name": "_is_test_file",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\compliance\\relaxed_violation_counter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 134,
      "function_name": "get_relaxed_violations_list",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 67,
      "function_name": "_print_violation_list",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 235,
      "function_name": "_print_category_scores",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 314,
      "function_name": "_get_violation_counts_by_type",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\reporter_stats.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 52,
      "function_name": "display_statistics",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\reporter_utils.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 30,
      "function_name": "get_smart_limit",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\reporter_utils.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 43,
      "function_name": "get_severity_marker",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\severity_tiers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 122,
      "function_name": "get_severity_for_violation",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\severity_tiers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 165,
      "function_name": "categorize_violations",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\compliance\\severity_tiers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 195,
      "function_name": "check_deployment_readiness",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\severity_tiers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 220,
      "function_name": "get_violation_summary",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\compliance\\ssot_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 22,
      "function_name": "check_ssot_violations",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\compliance\\ssot_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 34,
      "function_name": "_check_duplicate_functions",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\ssot_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 79,
      "function_name": "_check_duplicate_handlers",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\ssot_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 120,
      "function_name": "_get_function_signature",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\ssot_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 157,
      "function_name": "_are_likely_duplicates",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\stub_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 37,
      "function_name": "_get_test_stub_patterns",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 26,
      "function_name": "fix_mock_component_function",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 72,
      "function_name": "split_large_file",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 125,
      "function_name": "_group_tests_by_class",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 165,
      "function_name": "_extract_file_header",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 202,
      "function_name": "_generate_test_file_header",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 216,
      "function_name": "split_large_function",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 263,
      "function_name": "_split_function_content",
      "actual_value": 40,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 309,
      "function_name": "reduce_mocking_in_integration_test",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 346,
      "function_name": "generate_fix_plan",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_limits_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 25,
      "function_name": "check_test_limits",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\compliance\\test_limits_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 37,
      "function_name": "generate_splitting_suggestions",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\test_limits_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 50,
      "function_name": "_find_test_files",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\compliance\\test_limits_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 100,
      "function_name": "_create_file_violation_if_needed",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\test_limits_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 142,
      "function_name": "_check_test_function_node",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\test_limits_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 190,
      "function_name": "_suggest_file_split",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\test_limits_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 206,
      "function_name": "_suggest_function_split",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\test_limits_examples.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 8,
      "function_name": "test_user_authentication_flow_long",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 656,
      "function_name": "main",
      "actual_value": 79,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 71,
      "function_name": "analyze_file_for_splitting",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 109,
      "function_name": "_extract_imports",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 136,
      "function_name": "_extract_functions",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 148,
      "function_name": "_analyze_function",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 185,
      "function_name": "_determine_function_category",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 215,
      "function_name": "_extract_function_dependencies",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 233,
      "function_name": "_estimate_function_complexity",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 265,
      "function_name": "_analyze_class",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 305,
      "function_name": "_extract_fixtures",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 325,
      "function_name": "_analyze_dependencies",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 361,
      "function_name": "_generate_splitting_strategies",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 397,
      "function_name": "_strategy_split_by_category",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 447,
      "function_name": "_strategy_split_by_class",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 487,
      "function_name": "_strategy_split_by_feature",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 520,
      "function_name": "_identify_features",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 544,
      "function_name": "_extract_feature_from_name",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 557,
      "function_name": "_strategy_extract_utilities",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 585,
      "function_name": "generate_split_files",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 609,
      "function_name": "validate_split",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_size_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 504,
      "function_name": "main",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_size_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 68,
      "function_name": "validate_all_tests",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_size_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 121,
      "function_name": "_discover_test_files",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_size_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 149,
      "function_name": "_is_test_file",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_size_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 174,
      "function_name": "_analyze_test_file",
      "actual_value": 81,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 11 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_size_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 281,
      "function_name": "_analyze_function",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_size_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 317,
      "function_name": "_analyze_class",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\test_size_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 334,
      "function_name": "_estimate_complexity",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\test_size_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 355,
      "function_name": "_generate_splitting_suggestions",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_size_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 412,
      "function_name": "_generate_text_report",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_size_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 450,
      "function_name": "_generate_markdown_report",
      "actual_value": 51,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_violations_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 24,
      "function_name": "generate_report",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_violations_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 69,
      "function_name": "_print_file_violations",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\compliance\\test_violations_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 88,
      "function_name": "_print_function_violations",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_violations_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 136,
      "function_name": "_print_splitting_suggestions",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\compliance\\type_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 87,
      "function_name": "_find_typescript_types",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\type_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 117,
      "function_name": "_categorize_files",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\compliance\\type_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 147,
      "function_name": "_filter_backend_files",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\type_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 165,
      "function_name": "_is_layer_separation",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\type_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 183,
      "function_name": "_are_legitimate_separations",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\compliance\\type_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 201,
      "function_name": "_are_separated_modules",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\metadata_tracking\\archiver_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 19,
      "function_name": "_get_archiver_imports",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\metadata_tracking\\archiver_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 42,
      "function_name": "_get_commit_method",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\metadata_tracking\\archiver_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 55,
      "function_name": "_get_database_connection_method",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\metadata_tracking\\archiver_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 68,
      "function_name": "_get_archive_method",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\metadata_tracking\\archiver_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 91,
      "function_name": "_get_verification_methods",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\metadata_tracking\\archiver_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 116,
      "function_name": "_get_main_function",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\metadata_tracking\\archiver_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 146,
      "function_name": "_generate_complete_content",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\metadata_tracking\\config_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 60,
      "function_name": "_get_settings_config",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\metadata_tracking\\config_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 91,
      "function_name": "create_configuration",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\metadata_tracking\\database_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 23,
      "function_name": "_get_ai_modifications_schema",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\metadata_tracking\\database_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 50,
      "function_name": "_get_audit_log_schema",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\metadata_tracking\\database_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 63,
      "function_name": "_get_rollback_history_schema",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\metadata_tracking\\database_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 88,
      "function_name": "_create_indices",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\metadata_tracking\\database_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 107,
      "function_name": "create_database",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\metadata_tracking\\database_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 123,
      "function_name": "validate_schema",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\metadata_tracking\\enabler.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 67,
      "function_name": "_run_setup_steps",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\metadata_tracking\\enabler.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 101,
      "function_name": "enable_all",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\metadata_tracking\\git_hooks_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 19,
      "function_name": "install_hooks",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\metadata_tracking\\git_hooks_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 57,
      "function_name": "_get_pre_commit_content",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\metadata_tracking\\git_hooks_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 76,
      "function_name": "_get_post_commit_content",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\metadata_tracking\\git_hooks_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 90,
      "function_name": "get_status",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\metadata_tracking\\hooks_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 26,
      "function_name": "_get_pre_commit_content",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\metadata_tracking\\hooks_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 45,
      "function_name": "_get_post_commit_content",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\metadata_tracking\\hooks_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 84,
      "function_name": "install_hooks",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\metadata_tracking\\metadata_enabler.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 30,
      "function_name": "enable_all",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\metadata_tracking\\metadata_enabler.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 77,
      "function_name": "get_status",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\metadata_tracking\\metadata_enabler.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 92,
      "function_name": "print_status",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\metadata_tracking\\metadata_enabler.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 117,
      "function_name": "_calculate_overall_status",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\metadata_tracking\\script_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 39,
      "function_name": "_create_script",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\metadata_tracking\\script_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 91,
      "function_name": "validate_script_content",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\metadata_tracking\\status_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 53,
      "function_name": "_is_system_enabled",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\metadata_tracking\\status_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 75,
      "function_name": "get_status",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\metadata_tracking\\status_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 114,
      "function_name": "print_status",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\metadata_tracking\\validator_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 29,
      "function_name": "_get_class_constants",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\metadata_tracking\\validator_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 48,
      "function_name": "_get_modified_files_method",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\metadata_tracking\\validator_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 62,
      "function_name": "_get_validate_file_method",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\metadata_tracking\\validator_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 83,
      "function_name": "_get_helper_methods",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\metadata_tracking\\validator_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 110,
      "function_name": "_get_validate_all_method",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\metadata_tracking\\validator_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 150,
      "function_name": "_get_main_function",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\metadata_tracking\\validator_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 173,
      "function_name": "_generate_complete_content",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\audit_duplicates_hook.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 19,
      "function_name": "get_commit_message",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\permissive_hooks\\audit_duplicates_hook.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 32,
      "function_name": "run_audit_hook",
      "actual_value": 71,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\audit_duplicates_hook.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 108,
      "function_name": "main",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\permissive_hooks\\check_edited_lines.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 12,
      "function_name": "get_modified_lines",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\check_edited_lines.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 36,
      "function_name": "check_modified_lines",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\check_edited_lines.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 72,
      "function_name": "main",
      "actual_value": 51,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\check_new_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 11,
      "function_name": "get_new_files",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\permissive_hooks\\check_new_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "check_new_file_compliance",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\check_new_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 69,
      "function_name": "main",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\check_new_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 14,
      "function_name": "get_git_diff_lines",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\check_new_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 50,
      "function_name": "check_relative_imports",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\check_new_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 79,
      "function_name": "main",
      "actual_value": 49,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\claude_commit_hook.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 24,
      "function_name": "should_activate",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\claude_commit_hook.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 57,
      "function_name": "run",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\emergency_check.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 10,
      "function_name": "check_for_emergency_flag",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\emergency_check.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 34,
      "function_name": "main",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\prioritized_check.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 11,
      "function_name": "get_file_priority",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\prioritized_check.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 44,
      "function_name": "check_file_by_priority",
      "actual_value": 46,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\prioritized_check.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 93,
      "function_name": "main",
      "actual_value": 49,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\review\\ai_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 55,
      "function_name": "_parse_function_duplicates",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\review\\cli.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 120,
      "function_name": "determine_final_status",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\review\\command_runner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 21,
      "function_name": "run",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\review\\git_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 44,
      "function_name": "_parse_hotspots",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\review\\git_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 69,
      "function_name": "_analyze_change_sizes",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\review\\performance_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 51,
      "function_name": "_is_bundle_too_large",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\review\\report_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 20,
      "function_name": "generate_report",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\review\\report_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 140,
      "function_name": "_add_medium_action_items",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\review\\security_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 41,
      "function_name": "_find_hardcoded_credentials",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\review\\smoke_tester.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 29,
      "function_name": "_run_backend_tests",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\review\\smoke_tester.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 41,
      "function_name": "_get_backend_test_commands",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\review\\smoke_tester.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 54,
      "function_name": "_run_frontend_tests",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "SYSTEM_WIDE",
      "violation_type": "module_count_boundary",
      "severity": "critical",
      "boundary_name": "MODULE_COUNT_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 1619,
      "expected_value": 700,
      "description": "System exceeds 700 module HARD LIMIT",
      "fix_suggestion": "EMERGENCY: Archive unused modules, consolidate similar modules",
      "auto_split_suggestion": null,
      "impact_score": 10
    },
    {
      "file_path": "SYSTEM_WIDE",
      "violation_type": "total_loc_boundary",
      "severity": "critical",
      "boundary_name": "TOTAL_LOC_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 365853,
      "expected_value": 200000,
      "description": "System exceeds 200000 LOC HARD LIMIT",
      "fix_suggestion": "EMERGENCY: Remove deprecated code, refactor duplicates",
      "auto_split_suggestion": null,
      "impact_score": 10
    },
    {
      "file_path": "frontend\\test-env.d.ts, frontend\\cypress\\e2e\\thread-management-simple.cy.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'to' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'to' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\test-env.d.ts, frontend\\types\\jest.d.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 4,
      "expected_value": 1,
      "description": "Duplicate type 'Matchers' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'Matchers' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\app\\corpus\\types\\corpus.ts, frontend\\components\\chat\\overflow-panel\\overflow-panel-ui.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'TabType' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'TabType' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\app\\corpus\\types\\corpus.ts, frontend\\components\\chat\\ChatSidebarTypes.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'FilterType' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'FilterType' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\app\\enterprise-demo\\demoConfig.ts, frontend\\app\\enterprise-demo\\DemoHeader.tsx...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 4,
      "expected_value": 1,
      "description": "Duplicate type 'DemoStep' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'DemoStep' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\app\\enterprise-demo\\demoConfig.ts, frontend\\app\\enterprise-demo\\DemoHeader.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'IconType' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'IconType' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\auth\\unified-auth-service.ts, frontend\\services\\webSocketService.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'JWTPayload' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'JWTPayload' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\ChatSidebarTypes.ts, frontend\\components\\chat\\admin\\DiscoveryComponents.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'SearchBarProps' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'SearchBarProps' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\admin\\ConfigurationBuilder.types.ts, frontend\\services\\reconciliation\\types.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 22,
      "expected_value": 1,
      "description": "Duplicate type 'definitions' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'definitions' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\admin\\ConfigurationBuilder.types.ts, frontend\\components\\chat\\admin\\ConfigurationBuilder.backup.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ComplexityLevel' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ComplexityLevel' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\admin\\ConfigurationBuilder.types.ts, frontend\\components\\chat\\admin\\ConfigurationBuilder.backup.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'DistributionType' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'DistributionType' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\admin\\ConfigurationBuilder.types.ts, frontend\\components\\chat\\admin\\ConfigurationBuilder.backup.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'OptimizationFocus' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'OptimizationFocus' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\admin\\ConfigurationBuilder.types.ts, frontend\\components\\chat\\admin\\ConfigurationBuilder.backup.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'DomainType' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'DomainType' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\admin\\ConfigurationBuilder.types.ts, frontend\\components\\chat\\admin\\ConfigurationBuilder.backup.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'WorkloadType' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'WorkloadType' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\admin\\ConfigurationBuilder.types.ts, frontend\\components\\chat\\admin\\ConfigurationBuilder.backup.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'GenerationParams' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'GenerationParams' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\admin\\ConfigurationBuilder.types.ts, frontend\\lib\\hydration-validator.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'ValidationResult' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ValidationResult' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\admin\\ConfigurationBuilder.types.ts, frontend\\types\\agents.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 9,
      "expected_value": 1,
      "description": "Duplicate type 'export' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'export' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\admin\\ConfigurationBuilder.types.ts, frontend\\components\\chat\\admin\\ConfigurationBuilder.backup.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'CorpusConfiguration' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'CorpusConfiguration' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\admin\\ConfigurationBuilder.types.ts, frontend\\components\\chat\\admin\\ConfigurationBuilder.backup.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ConfigurationBuilderProps' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ConfigurationBuilderProps' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\agent-status\\types.ts, frontend\\types\\agent-types.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'AgentStatusCardProps' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'AgentStatusCardProps' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\agent-status\\types.ts, frontend\\components\\chat\\agent-status-panel\\types.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'Metrics' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'Metrics' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\agent-status-panel\\types.ts, frontend\\types\\layer-types.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ToolExecutionStatus' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ToolExecutionStatus' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\layers\\streaming-utils.ts, frontend\\components\\chat\\layers\\MediumLayer.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'StreamingRefs' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'StreamingRefs' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\demo\\DemoChat.types.ts, frontend\\components\\demo\\agent-orchestration\\types.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'Agent' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'Agent' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\demo\\DemoChat.types.ts, frontend\\types\\chat-store.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ChatState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ChatState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\demo\\DemoChat.types.ts, frontend\\types\\chat-store.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ChatAction' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ChatAction' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\demo\\roadmap-types.ts, frontend\\cypress\\support\\demo-export-utilities.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'ExportFormat' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ExportFormat' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\demo\\types.ts, frontend\\components\\chat\\layers\\slow-layer\\PerformanceMetrics.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'PerformanceMetricsProps' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'PerformanceMetricsProps' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\demo\\WorkloadTypes.ts, frontend\\app\\ingestion\\components\\FileUploadSection.tsx...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'ActionButtonsProps' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ActionButtonsProps' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\demo\\synthetic-data\\types.ts, frontend\\services\\demoService.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'IndustryTemplate' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'IndustryTemplate' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\agent-interaction-flow.cy.ts, frontend\\cypress\\e2e\\file-upload-filter.cy.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 7,
      "expected_value": 1,
      "description": "Duplicate type 'and' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'and' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\agent-interaction-flow.cy.ts, frontend\\cypress\\e2e\\agent-interaction-flow.cy.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'elements' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'elements' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\agent-interaction-flow.cy.ts, frontend\\cypress\\support\\user-settings-helpers.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 5,
      "expected_value": 1,
      "description": "Duplicate type 'in' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'in' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\data-generation-flow.cy.ts, frontend\\lib\\unified-auth-service.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 17,
      "expected_value": 1,
      "description": "Duplicate type 'for' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'for' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\demo-export-reporting.cy.ts, frontend\\services\\threadLoadingService.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 18,
      "expected_value": 1,
      "description": "Duplicate type 'safety' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'safety' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\file-references-simple.cy.ts, frontend\\__tests__\\critical\\chat-functionality\\file-upload.test.tsx...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'not' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'not' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\thread-test-helpers.ts, frontend\\__tests__\\test-utils\\comprehensive-test-factories.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'MockThread' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MockThread' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\thread-test-helpers.ts, frontend\\__tests__\\test-utils\\comprehensive-test-factories.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 4,
      "expected_value": 1,
      "description": "Duplicate type 'MockMessage' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MockMessage' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\support\\roi-calculator-helpers.ts, frontend\\components\\chat\\admin\\ConfigurationBuilder.components.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'selection' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'selection' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\hooks\\useAgentUpdates.ts, frontend\\services\\agent-update-stream.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'AgentUpdate' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'AgentUpdate' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\hooks\\useAgentUpdates.ts, frontend\\services\\agent-update-stream.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'StreamBatch' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'StreamBatch' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\hooks\\useAgentUpdates.ts, frontend\\components\\chat\\PersistentResponseCard.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'UseAgentUpdatesReturn' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'UseAgentUpdatesReturn' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\hooks\\useChatWebSocket.ts, frontend\\types\\agent-types.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'AgentMetrics' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'AgentMetrics' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\hooks\\useEventProcessor.ts, frontend\\__mocks__\\WebSocketProvider.tsx...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'const' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'const' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\hooks\\useMessageReconciliation.ts, frontend\\types\\jest.d.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 5,
      "expected_value": 1,
      "description": "Duplicate type 'with' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'with' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\hooks\\useRAFAnimation.ts, frontend\\services\\animation-engine.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'AnimationConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'AnimationConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\hooks\\useToolTracking.ts, frontend\\services\\tool-tracking-service.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ToolTrackingConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ToolTrackingConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\hooks\\useWebSocketResilience.ts, frontend\\services\\webSocketService.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'WebSocketOptions' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'WebSocketOptions' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\lib\\auth-integration-test.ts, frontend\\lib\\event-queue.test.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'TestResult' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'TestResult' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\lib\\auth-interceptor.ts, frontend\\services\\apiClientWrapper.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'RequestConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'RequestConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\lib\\circular-buffer.ts, frontend\\__tests__\\lib\\circular-buffer.test.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'statistics' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'statistics' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\lib\\hydration-validator.ts, frontend\\lib\\hydration-validator.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'mismatch' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'mismatch' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\lib\\hydration-validator.ts, frontend\\providers\\AgentProvider.tsx...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'from' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'from' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\services\\animation-engine.ts, frontend\\types\\performance-metrics.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 7,
      "expected_value": 1,
      "description": "Duplicate type 'PerformanceMetrics' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'PerformanceMetrics' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\services\\messageFormatter.ts, frontend\\__tests__\\services\\messageFormatter.test.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ContentTypeInfo' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ContentTypeInfo' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\services\\messageFormatter.ts, frontend\\__tests__\\services\\messageFormatter.test.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'FormattingMetadata' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'FormattingMetadata' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\services\\messageFormatter.ts, frontend\\components\\chat\\FormattedMessageContent.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'RendererConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'RendererConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\services\\messageService.ts, frontend\\__tests__\\integration\\websocket-resilience.test.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'QueuedMessage' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'QueuedMessage' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\services\\optimistic-updates.ts, frontend\\services\\reconciliation\\types.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'OptimisticMessage' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'OptimisticMessage' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\services\\optimistic-updates.ts, frontend\\types\\store-types.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'OptimisticState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'OptimisticState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\services\\websocketDebugger.ts, frontend\\providers\\EnhancedWebSocketProvider.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'field' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'field' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\services\\webSocketService.ts, frontend\\components\\chat\\MessageList.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'based' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'based' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\store\\chatStore.ts, frontend\\types\\agent-types.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'AgentStatus' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'AgentStatus' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\store\\thread-store.ts, frontend\\store\\threadStore.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ThreadStoreState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ThreadStoreState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\store\\unified-chat-modular.ts, frontend\\store\\slices\\types.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'LayerDataState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'LayerDataState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\store\\unified-chat-modular.ts, frontend\\store\\slices\\types.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MessageState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MessageState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\store\\unified-chat-modular.ts, frontend\\store\\slices\\types.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'AgentTrackingState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'AgentTrackingState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\store\\unified-chat-modular.ts, frontend\\store\\slices\\types.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 5,
      "expected_value": 1,
      "description": "Duplicate type 'ThreadState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ThreadState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\store\\unified-chat-modular.ts, frontend\\types\\store-types.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 4,
      "expected_value": 1,
      "description": "Duplicate type 'ConnectionState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ConnectionState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\store\\unified-chat-modular.ts, frontend\\types\\backend_schema_base.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 4,
      "expected_value": 1,
      "description": "Duplicate type 'SubAgentState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'SubAgentState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\store\\unified-chat-modular.ts, frontend\\store\\slices\\types.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'PerformanceState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'PerformanceState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\store\\slices\\types.ts, frontend\\types\\store-types.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'AgentExecution' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'AgentExecution' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\store\\slices\\websocketHandlers.ts, frontend\\store\\slices\\websocketSlice.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'WebSocketHandlerState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'WebSocketHandlerState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\agents.ts, frontend\\types\\backend_schema_base.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'AgentMessage' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'AgentMessage' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\agents.ts, frontend\\types\\backend_schema_base.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'AgentState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'AgentState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\agents.ts, frontend\\types\\backend_schema_base.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'StartAgentMessage' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'StartAgentMessage' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\agents.ts, frontend\\types\\backend_schema_base.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'StartAgentPayload' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'StartAgentPayload' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_auth.ts, frontend\\types\\domains\\auth.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 4,
      "expected_value": 1,
      "description": "Duplicate type 'AuthConfigResponse' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'AuthConfigResponse' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_auth.ts, frontend\\types\\config.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 5,
      "expected_value": 1,
      "description": "Duplicate type 'AuthEndpoints' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'AuthEndpoints' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_auth.ts, frontend\\types\\domains\\auth.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 6,
      "expected_value": 1,
      "description": "Duplicate type 'User' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'User' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_auth.ts, frontend\\types\\domains\\auth.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'UserBase' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'UserBase' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_auth.ts, frontend\\types\\domains\\auth.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'UserCreate' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'UserCreate' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_auth.ts, frontend\\types\\domains\\auth.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'UserCreateOAuth' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'UserCreateOAuth' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_auth.ts, frontend\\types\\domains\\auth.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'UserUpdate' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'UserUpdate' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_auth.ts, frontend\\types\\domains\\auth.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'DevUser' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'DevUser' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_auth.ts, frontend\\types\\domains\\auth.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'DevLoginRequest' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'DevLoginRequest' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_auth.ts, frontend\\types\\domains\\auth.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'GoogleUser' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'GoogleUser' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_auth.ts, frontend\\types\\domains\\auth.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'Token' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'Token' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_auth.ts, frontend\\types\\domains\\auth.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'TokenPayload' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'TokenPayload' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_base.ts, frontend\\__tests__\\mocks\\index.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'MessageType' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MessageType' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_base.ts, frontend\\types\\domains\\agents.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'SubAgentLifecycle' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'SubAgentLifecycle' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_base.ts, frontend\\types\\domains\\tools.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ToolStatus' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ToolStatus' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_base.ts, frontend\\types\\domains\\agents.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 4,
      "expected_value": 1,
      "description": "Duplicate type 'BaseMessage' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'BaseMessage' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_base.ts, frontend\\types\\chat-store.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'SubAgentStatus' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'SubAgentStatus' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_base.ts, frontend\\types\\messages.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'StreamEvent' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'StreamEvent' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_base.ts, frontend\\types\\messages.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'RunComplete' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'RunComplete' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_base.ts, frontend\\types\\domains\\messages.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'Message' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'Message' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_base.ts, frontend\\types\\messages.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MessageToUser' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MessageToUser' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_base.ts, frontend\\types\\messages.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'UserMessage' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'UserMessage' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_base.ts, frontend\\types\\config.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'Settings' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'Settings' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_base.ts, frontend\\types\\Request.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'RequestModel' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'RequestModel' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_base.ts, frontend\\types\\Workload.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'Workload' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'Workload' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_base.ts, frontend\\types\\TimeRange.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'TimeRange' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'TimeRange' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_config.ts, frontend\\types\\config.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'LLMConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'LLMConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_config.ts, frontend\\types\\config.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'RedisConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'RedisConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_config.ts, frontend\\types\\config.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'WebSocketConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'WebSocketConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_config.ts, frontend\\types\\config.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'GoogleCloudConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'GoogleCloudConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_config.ts, frontend\\types\\config.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'OAuthConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'OAuthConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_config.ts, frontend\\types\\config.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'LangfuseConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'LangfuseConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_config.ts, frontend\\types\\config.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ClickHouseNativeConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ClickHouseNativeConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_config.ts, frontend\\types\\config.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ClickHouseHTTPSConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ClickHouseHTTPSConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_config.ts, frontend\\types\\config.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ClickHouseLoggingConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ClickHouseLoggingConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_config.ts, frontend\\types\\config.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ClickHouseCredentials' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ClickHouseCredentials' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_config.ts, frontend\\types\\config.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'AppConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'AppConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_config.ts, frontend\\types\\config.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'DevelopmentConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'DevelopmentConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_config.ts, frontend\\types\\config.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ProductionConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ProductionConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_config.ts, frontend\\types\\config.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'TestingConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'TestingConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_tools.ts, frontend\\types\\domains\\tools.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ToolInput' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ToolInput' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_tools.ts, frontend\\types\\domains\\tools.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ToolResult' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ToolResult' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_tools.ts, frontend\\types\\domains\\tools.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ToolCompleted' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ToolCompleted' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_tools.ts, frontend\\types\\domains\\tools.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ToolStarted' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ToolStarted' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_tools.ts, frontend\\types\\Corpus.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'Corpus' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'Corpus' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_tools.ts, frontend\\types\\Corpus.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'CorpusCreate' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'CorpusCreate' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_tools.ts, frontend\\types\\Corpus.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'CorpusUpdate' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'CorpusUpdate' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_tools.ts, frontend\\types\\Reference.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'ReferenceItem' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ReferenceItem' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\chat-store.ts, frontend\\types\\chat.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MessageBuilder' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MessageBuilder' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\layer-types.ts, frontend\\components\\chat\\layers\\RecommendationsSection.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'Recommendation' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'Recommendation' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\layer-types.ts, frontend\\components\\chat\\layers\\ActionPlanSection.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ActionStep' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ActionStep' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\loading-state.ts, frontend\\types\\thread-error-types.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ThreadLoadingState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ThreadLoadingState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\loading-state.ts, frontend\\types\\store-types.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ProcessingState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ProcessingState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\mcp-types.ts, frontend\\types\\report-data.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'consistency' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'consistency' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\mcp-types.ts, frontend\\__mocks__\\services\\mcp-client-service.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MCPServerInfo' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MCPServerInfo' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\mcp-types.ts, frontend\\__mocks__\\services\\mcp-client-service.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MCPTool' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MCPTool' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\mcp-types.ts, frontend\\__mocks__\\services\\mcp-client-service.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MCPToolResult' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MCPToolResult' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\mcp-types.ts, frontend\\__mocks__\\services\\mcp-client-service.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MCPResource' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MCPResource' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\registry.ts, frontend\\__tests__\\imports\\external-imports.test.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'imports' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'imports' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\report-data.ts, frontend\\utils\\export\\types.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 4,
      "expected_value": 1,
      "description": "Duplicate type 'ReportData' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ReportData' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\report-data.ts, frontend\\components\\chat\\layers\\slow-layer-types.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'RecommendationItem' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'RecommendationItem' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\report-data.ts, frontend\\components\\chat\\layers\\slow-layer-types.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ActionPlanItem' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ActionPlanItem' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\report-data.ts, frontend\\components\\chat\\layers\\slow-layer-types.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'AgentTimelineItem' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'AgentTimelineItem' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\store-types.ts, frontend\\utils\\layer-state-manager.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'LayerState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'LayerState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\store-types.ts, frontend\\__tests__\\components\\ChatHistorySection\\shared-setup.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'StoreConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'StoreConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\websocket-context-types.ts, frontend\\__tests__\\unified_system\\websocket-state.test.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'WebSocketContextType' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'WebSocketContextType' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\websocket-context-types.ts, frontend\\providers\\EnhancedWebSocketProvider.tsx...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'WebSocketProviderProps' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'WebSocketProviderProps' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend-sync\\payloads.ts, frontend\\types\\domains\\tools.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ToolCallPayload' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ToolCallPayload' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend-sync\\payloads.ts, frontend\\types\\domains\\tools.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ToolResultPayload' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ToolResultPayload' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend-sync\\payloads.ts, frontend\\providers\\EnhancedWebSocketProvider.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'WebSocketError' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'WebSocketError' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend-sync\\websockets.ts, frontend\\__tests__\\startup\\type-exports.test.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'guards' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'guards' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend-sync\\websockets.ts, frontend\\types\\domains\\websocket.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MessageTypeLiteral' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MessageTypeLiteral' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend-sync\\websockets.ts, frontend\\types\\domains\\websocket.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'WebSocketPayload' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'WebSocketPayload' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\domains\\agents.ts, frontend\\types\\domains\\tools.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ToolResultData' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ToolResultData' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\domains\\agents.ts, frontend\\__tests__\\integration\\thread-switching.test.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MessageData' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MessageData' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\domains\\messages.ts, frontend\\types\\shared\\base.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'MessageMetadata' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MessageMetadata' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\domains\\messages.ts, frontend\\__tests__\\utils\\message-test-helpers.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MessageRole' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MessageRole' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\domains\\messages.ts, frontend\\types\\shared\\base.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MessageAttachment' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MessageAttachment' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\domains\\messages.ts, frontend\\types\\shared\\base.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MessageReaction' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MessageReaction' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\domains\\threads.ts, frontend\\__tests__\\utils\\thread-test-helpers.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ThreadMetadata' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ThreadMetadata' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\domains\\threads.ts, frontend\\__tests__\\utils\\thread-test-helpers.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 6,
      "expected_value": 1,
      "description": "Duplicate type 'Thread' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'Thread' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\domains\\websocket.ts, frontend\\providers\\EnhancedWebSocketProvider.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'WebSocketStatus' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'WebSocketStatus' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\domains\\websocket.ts, frontend\\__tests__\\mocks\\index.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 4,
      "expected_value": 1,
      "description": "Duplicate type 'WebSocketState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'WebSocketState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\domains\\websocket.ts, frontend\\types\\unified\\websocket.types.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'WebSocketMessage' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'WebSocketMessage' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\unified\\index.ts, frontend\\__tests__\\imports\\internal-imports.test.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'files' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'files' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\utils\\connection-status-utils.ts, frontend\\__tests__\\integration\\websocket-resilience.test.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ConnectionMetrics' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ConnectionMetrics' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\utils\\layer-visibility-manager.ts, frontend\\__tests__\\utils\\layer-visibility-manager.test.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'LayerVisibilityConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'LayerVisibilityConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\utils\\layer-visibility-manager.ts, frontend\\components\\chat\\features\\LayerManager.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'LayerVisibilityResult' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'LayerVisibilityResult' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\utils\\tool-lifecycle-tracker.ts, frontend\\__tests__\\utils\\tool-lifecycle-tracker.test.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ToolLifecycleMap' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ToolLifecycleMap' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\validate-failing-tests.ts, frontend\\__tests__\\types\\circular-dependency-detector.test.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 5,
      "expected_value": 1,
      "description": "Duplicate type 'modules' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'modules' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\validate-failing-tests.ts, frontend\\__tests__\\types\\type-export-conflicts.test.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 5,
      "expected_value": 1,
      "description": "Duplicate type 'vs' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'vs' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\e2e\\utils\\e2e-test-helpers.ts, frontend\\__tests__\\e2e\\complete-conversation.playwright.test.tsx...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'TestUser' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'TestUser' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\e2e\\utils\\e2e-test-helpers.ts, frontend\\__tests__\\e2e\\complete-conversation.playwright.test.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'PerformanceThresholds' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'PerformanceThresholds' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\helpers\\websocket-test-utilities.ts, frontend\\__tests__\\integration\\utils\\websocket-test-components.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'WebSocketConnectionLifecycle' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'WebSocketConnectionLifecycle' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\helpers\\test-assertions.ts, frontend\\__tests__\\integration\\comprehensive\\theme-preferences.test.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'but' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'but' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\mocks\\index.ts, frontend\\__tests__\\mocks\\websocket-mocks.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 5,
      "expected_value": 1,
      "description": "Duplicate type 'MockWebSocketMessage' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MockWebSocketMessage' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\mocks\\index.ts, frontend\\__tests__\\mocks\\websocket-mocks.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'StreamingMessageChunk' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'StreamingMessageChunk' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\store\\cache-management.test.ts, frontend\\__tests__\\cross-browser\\compatibility.test.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'as' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'as' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\api-test-mocks.ts, frontend\\__tests__\\utils\\test-helpers.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MockAPIResponse' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MockAPIResponse' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\api-test-mocks.ts, frontend\\__tests__\\utils\\test-helpers.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MockAPIError' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MockAPIError' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\auth-test-mocks.ts, frontend\\__tests__\\utils\\auth-test-helpers.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'MockAuthState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MockAuthState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\comprehensive-test-factories.ts, frontend\\__tests__\\utils\\auth-test-helpers.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 4,
      "expected_value": 1,
      "description": "Duplicate type 'MockUser' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MockUser' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\comprehensive-test-factories.ts, frontend\\__tests__\\utils\\test-helpers.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MockMCPServer' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MockMCPServer' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\comprehensive-test-factories.ts, frontend\\__tests__\\utils\\test-helpers.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MockMCPTool' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MockMCPTool' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\comprehensive-test-factories.ts, frontend\\__tests__\\utils\\test-helpers.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MockMCPToolResult' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MockMCPToolResult' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\integration-test-setup.ts, frontend\\__tests__\\first-time-user\\initial-chat-helpers.tsx...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'MockAuthStore' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MockAuthStore' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\websocket-test-mocks.ts, frontend\\__tests__\\utils\\test-helpers.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MockWebSocketError' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MockWebSocketError' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\types\\type-export-conflicts.test.ts, frontend\\__tests__\\integration\\module-resolution-failures.test.tsx...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 5,
      "expected_value": 1,
      "description": "Duplicate type 'exports' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'exports' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\utils\\auth-test-helpers.ts, frontend\\__tests__\\utils\\test-helpers.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MockToken' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MockToken' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\utils\\mock-factories.ts, frontend\\__tests__\\utils\\mock-factories.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 5,
      "expected_value": 1,
      "description": "Duplicate type 'imported' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'imported' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\app\\enterprise-demo\\DemoHeader.tsx, frontend\\components\\demo\\DemoHeader.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'DemoHeaderProps' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'DemoHeaderProps' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\auth\\context.tsx, frontend\\__mocks__\\contexts\\AuthContext.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'AuthContextType' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'AuthContextType' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\FormattedMessageContent.tsx, frontend\\components\\chat\\MessageItem.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'FormattedContent' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'FormattedContent' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\MainChat.tsx, frontend\\__tests__\\components\\chat\\interface\\comprehensive-chat-interface.test.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'your' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'your' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\ThreadSidebarComponents.tsx, frontend\\__tests__\\components\\ThreadList\\navigation.test.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ThreadItemProps' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ThreadItemProps' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\components\\ExecutiveSummary.tsx, frontend\\components\\chat\\layers\\slow-layer\\ExecutiveSummary.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ExecutiveSummaryProps' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ExecutiveSummaryProps' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\layers\\slow-layer-types.tsx, frontend\\components\\chat\\layers\\slow-layer\\PerformanceMetrics.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MetricCardProps' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MetricCardProps' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\layers\\slow-layer-types.tsx, frontend\\components\\chat\\layers\\slow-layer\\ActionPlanStepper.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'StepButtonProps' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'StepButtonProps' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\layers\\slow-layer-types.tsx, frontend\\components\\chat\\layers\\slow-layer\\AgentTimeline.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'TimelineBarProps' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'TimelineBarProps' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\ui\\alert.tsx, frontend\\components\\ui\\badge.tsx...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 5,
      "expected_value": 1,
      "description": "Duplicate type 'VariantProps' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'VariantProps' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\ui\\Input.complete.test.tsx, frontend\\__tests__\\integration\\comprehensive\\theme-preferences.test.tsx...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'is' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'is' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\critical\\memory-exhaustion.test.tsx, frontend\\__tests__\\performance\\memory-usage.test.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MemorySnapshot' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MemorySnapshot' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\first-time-user\\initial-chat-helpers.tsx, frontend\\__tests__\\utils\\test-helpers.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MockWebSocket' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MockWebSocket' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\first-time-user\\initial-chat-helpers.tsx, frontend\\__tests__\\utils\\test-helpers.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MockChatStore' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MockChatStore' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\error-handling-core.test.tsx, frontend\\__tests__\\integration\\error-handling-retry.test.tsx...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'RetryConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'RetryConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\first-load-bundle.test.tsx, frontend\\__tests__\\test-utils\\index.tsx...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'TestRenderOptions' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'TestRenderOptions' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\comprehensive\\theme-preferences.test.tsx, frontend\\__tests__\\integration\\comprehensive\\user-journey-workflow.test.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'fireEvent' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'fireEvent' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\AgentStatusIndicator.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 347,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\ExampleMessageFlow.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 455,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\components\\chat\\FormattedMessageContent.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 323,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\MainChat.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 338,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\admin\\ConfigurationBuilder.backup.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 467,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\providers\\EnhancedWebSocketProvider.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 702,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 7
    },
    {
      "file_path": "frontend\\__tests__\\a11y\\components-basic.a11y.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 340,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\a11y\\components-complex.a11y.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 484,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\a11y\\components-ui.a11y.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 408,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\a11y\\forms-keyboard.a11y.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 367,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\a11y\\forms-validation.a11y.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 359,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\a11y\\navigation-focus.a11y.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 430,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\a11y\\navigation-keyboard.a11y.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 338,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\a11y\\navigation-landmarks.a11y.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 404,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\a11y\\navigation-screen-reader.a11y.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 488,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\a11y\\shared-a11y-helpers.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 353,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\auth\\auth-session-detection.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 323,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\auth\\auth-token-refresh-auto.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 434,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\auth\\logout-security.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 371,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\auth\\logout-state-cleanup-complete.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 390,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\basic-chat\\message-flow.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 312,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\basic-chat\\thread-management.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 344,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\chat\\chat-authentication.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 305,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\chat\\chatUIUX-shared-utilities.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 338,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\chat\\keyboard-shortcuts.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 445,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\chat\\message-content-edge-cases.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 554,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\chat\\message-content-handling.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 366,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\chat\\message-content-normalization.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 522,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\chat\\message-content-rendering.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 524,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\chat\\message-exchange.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 725,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 7
    },
    {
      "file_path": "frontend\\__tests__\\chat\\message-input-features.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 571,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\chat\\ui-improvements.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 367,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\chat\\ui-responsive-accessibility.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 567,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\chat\\ui-test-utilities.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 345,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\FinalReportView.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 399,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\StartButton.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 322,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\ThreadList.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 430,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\components\\auth\\Authentication.errors.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 433,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\components\\auth\\Authentication.loading.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 394,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\auth\\Authentication.redirects.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 518,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\components\\auth\\Logout.flow.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 574,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\components\\auth\\MultiFactorAuth.ui.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 416,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\components\\auth\\OAuth.interactions.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 334,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\auth\\PasswordReset.flow.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 390,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\auth\\RememberMe.persistence.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 490,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\components\\auth\\Session.status.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 485,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\components\\chat\\MainChat.agent.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 371,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\chat\\MainChat.core.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 366,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\chat\\MainChat.interactions.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 608,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\components\\chat\\send-flow.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 547,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\components\\chat\\StartChatButton-complete.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 377,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\chat\\StartupMessage.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 431,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\components\\chat\\streaming.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 543,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\components\\chat\\interface\\advanced-chat-features.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 472,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\components\\chat\\interface\\basic-chat-interface.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 426,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\components\\chat\\interface\\comprehensive-chat-interface.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 365,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\chat\\interface\\shared-test-setup.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 302,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\chat\\interface\\websocket-and-error-handling.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 632,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\components\\ChatHistorySection\\basic-loading.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 343,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\ChatHistorySection\\basic.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 335,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\ChatHistorySection\\edge-cases-data.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 377,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\ChatHistorySection\\edge-cases.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 480,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\components\\ChatHistorySection\\interaction-delete.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 334,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\ChatHistorySection\\interaction-navigation.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 430,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\components\\ChatHistorySection\\interaction-search.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 390,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\ChatHistorySection\\interaction.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 302,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\ChatHistorySection\\performance-accessibility.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 554,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\components\\ChatSidebar\\basic.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 398,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\ChatSidebar\\edge-cases.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 540,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\components\\ChatSidebar\\interaction.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 924,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 9
    },
    {
      "file_path": "frontend\\__tests__\\components\\ChatSidebar\\setup.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 911,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 9
    },
    {
      "file_path": "frontend\\__tests__\\components\\MessageInput\\complete-coverage.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 310,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\MessageInput\\complete.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 554,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\components\\MessageInput\\edge-cases-backup.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 303,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\MessageInput\\edge-cases.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 303,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\MessageInput\\mobile-navigation.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 429,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\components\\MessageInput\\validation-final.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 341,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\Sidebar\\complete.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 356,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\ThreadList\\navigation.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 591,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\components\\ui\\ActionButtons.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 414,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\components\\ui\\Button.complete.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 335,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\ui\\IconButton.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 425,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\components\\ui\\Input.complete.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 444,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\components\\ui\\SearchInput.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 626,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\components\\ui\\TextArea.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 563,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\critical\\memory-exhaustion.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 508,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\critical\\auth-flow\\signup-flow.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 608,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\critical\\chat-functionality\\file-upload.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 508,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\critical\\chat-functionality\\message-formatting.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 473,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\critical\\chat-functionality\\message-send-receive.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 370,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\critical\\chat-functionality\\thread-management.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 436,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\critical\\chat-init\\first-message.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 669,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\cross-browser\\compatibility.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 302,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\cross-browser\\feature-detection.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 371,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\cross-browser\\polyfills.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 504,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\e2e\\chat-interaction-simple.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 404,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\first-time-user\\initial-chat.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 306,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\first-time-user\\onboarding-test-helpers.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 340,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\hooks\\additionalHooks.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 345,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\hooks\\useAuthState.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 442,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\hooks\\useKeyboardShortcuts.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 329,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\hooks\\useLoadingState.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 385,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\hooks\\useMCPTools.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 305,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\hooks\\usePerformanceMetrics.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 541,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\hooks\\useStore.integration.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 478,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\hooks\\useWebSocketLifecycle.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 363,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\imports\\external-imports.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 403,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\imports\\internal-imports.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 365,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\advanced-features.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 522,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\integration\\analytics-clickhouse.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 331,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\analytics-realtime.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 394,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\api-calls-advanced.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 509,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\integration\\api-calls-basic.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 319,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\auth-complete.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 646,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\integration\\auth-flow.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 425,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\basic-integration-ui.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 327,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\caching-integration.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 344,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\collaboration-state.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 604,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\integration\\comprehensive-integration-elite.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 333,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\connection-management-advanced.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 312,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\connection-management-core.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 369,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\connection-performance.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 311,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\data-fetching-core.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 356,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\data-fetching-optimistic.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 381,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\data-fetching-pagination.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 443,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\database-integration.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 324,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\deep-linking.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 550,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\integration\\error-context-tracing.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 338,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\error-handling-core.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 492,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\error-handling-retry.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 607,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\integration\\error-recovery.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 610,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\integration\\error-remediation.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 429,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\first-load-bundle.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 448,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\first-load-edge-cases.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 652,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\integration\\first-load-performance.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 494,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\initial-state.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 320,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\integration-comprehensive-helpers.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 321,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\integration-data-generation.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 301,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\integration-health.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 302,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\integration-tasks.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 313,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\login-complete-flow.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 438,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\login-complete.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 347,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\login-token-management.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 489,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\login-websocket-setup.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 563,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\integration\\logout-websocket.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 309,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\message-reception.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 508,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\integration\\message-sending.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 581,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\integration\\module-resolution-failures.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 509,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\integration\\navigation-complete.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 402,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\offline-mode.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 854,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 8
    },
    {
      "file_path": "frontend\\__tests__\\integration\\role-based-access.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 868,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 8
    },
    {
      "file_path": "frontend\\__tests__\\integration\\route-guards.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 438,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\security-auth.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 389,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\session-management.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 805,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 8
    },
    {
      "file_path": "frontend\\__tests__\\integration\\store-persistence.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 426,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\store-sync.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 389,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\system-management.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 346,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\task-processing-basic.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 332,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\task-retry-mechanisms.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 382,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\thread-creation-advanced.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 468,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\thread-creation.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 366,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\thread-navigation.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 392,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\thread-switching.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 722,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 7
    },
    {
      "file_path": "frontend\\__tests__\\integration\\websocket-large-messages.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 301,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\websocket-performance.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 314,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\websocket-setup.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 333,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\advanced-integration\\collaborative-features.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 320,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\advanced-integration\\error-handling-edge-cases.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 397,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\advanced-integration\\error-i18n-websocket.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 357,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\advanced-integration\\form-validation.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 304,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\advanced-integration\\infinite-scroll-animations.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 328,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\advanced-integration\\offline-navigation.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 312,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\advanced-integration\\search-ui-interactions.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 489,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\comprehensive\\collaboration-features.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 496,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\comprehensive\\collaboration-sync.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 607,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\integration\\comprehensive\\error-recovery.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 573,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\integration\\comprehensive\\memory-management.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 438,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\comprehensive\\navigation-search.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 508,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\integration\\comprehensive\\theme-preferences.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 369,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\critical\\websocket-auth-headers.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 397,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\critical\\websocket-auth-rejection.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 341,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\critical\\websocket-cors-validation.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 677,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\integration\\critical\\websocket-token-refresh-working.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 383,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\critical\\websocket-token-refresh.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 309,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\message-pipeline\\EdgeCasesAndConcurrency.pipeline.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 760,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 7
    },
    {
      "file_path": "frontend\\__tests__\\message-pipeline\\ErrorHandlingAndRetry.pipeline.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 747,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 7
    },
    {
      "file_path": "frontend\\__tests__\\message-pipeline\\MessageInput.pipeline.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 471,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\message-pipeline\\MessagePipeline.integration.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 728,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 7
    },
    {
      "file_path": "frontend\\__tests__\\message-pipeline\\OptimisticMessageManager.pipeline.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 603,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\message-pipeline\\OptimisticUIAndReconciliation.pipeline.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 861,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 8
    },
    {
      "file_path": "frontend\\__tests__\\message-pipeline\\useMessageSending.pipeline.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 772,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 7
    },
    {
      "file_path": "frontend\\__tests__\\message-pipeline\\WebSocketProvider.pipeline.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 825,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 8
    },
    {
      "file_path": "frontend\\__tests__\\mobile\\mobile-navigation.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 479,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\mobile\\responsive-layout.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 399,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\mobile\\touch-interactions.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 374,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\performance\\bundle-size-network.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 311,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\performance\\bundle-size-optimization.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 305,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\performance\\memory-usage.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 471,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\performance\\render-performance.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 339,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\store\\websocket-state-sync.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 488,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\system\\startup-connectivity.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 320,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\system\\startup-initialization.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 465,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\system\\startup-system.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 480,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\comprehensive-test-helpers.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 482,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\mock-service-alignment.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 356,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\unified_system\\oauth-flow.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 701,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 7
    },
    {
      "file_path": "frontend\\__tests__\\unified_system\\websocket-state.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 834,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 8
    },
    {
      "file_path": "frontend\\__tests__\\utils\\layer-visibility-manager.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 348,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\utils\\test-helpers.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 542,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\visual\\components.visual.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 344,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\visual\\pages.visual.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 458,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\visual\\responsive.visual.test.tsx",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 575,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\cypress\\e2e\\agent-optimization-workflow.cy.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 381,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\demo-auth-onboarding.cy.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 315,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\demo-chat-optimization.cy.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 359,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\demo-chat-utilities.cy.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 301,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\demo-roi-calculation.cy.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 320,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\file-upload-search-advanced.cy.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 310,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\optimization-results-flow.cy.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 369,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\synthetic-data-advanced-features.cy.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 326,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\synthetic-data-generation-workflow.cy.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 306,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\synthetic-data-quality-assurance.cy.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 319,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\user-api-key-management.cy.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 366,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\user-notifications-settings.cy.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 320,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\user-security-privacy.cy.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 454,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\cypress\\e2e\\websocket-resilience.cy.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 358,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\utils\\critical-test-utils.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 307,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\utils\\recovery-test-helpers.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 312,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\hooks\\useEventProcessor.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 312,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\hooks\\useThreadSwitching.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 413,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\lib\\asset-fallback-manager.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 363,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\lib\\event-queue.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 337,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\lib\\hydration-validator.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 479,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\lib\\logger.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 321,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\mocks\\handlers.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 316,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\services\\messageFormatter.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 358,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\services\\messageService.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 320,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\services\\optimistic-updates.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 328,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\services\\websocketDebugger.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 416,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\services\\webSocketService.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 1330,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 10
    },
    {
      "file_path": "frontend\\store\\unified-chat.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 352,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\store\\websocket-agent-handlers.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 301,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\agent-types.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 303,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\websocket-event-types.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 401,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\types\\shared\\base.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 302,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\auth\\auth-login.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 364,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\auth\\auth-logout.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 326,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\auth\\auth-security.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 437,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\auth\\auth-token.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 314,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\demo\\ROICalculator.calculations.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 325,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\demo\\ROICalculator.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 405,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\first-time-user\\mobile-experience-helpers.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 406,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\helpers\\websocket-test-manager.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 399,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\hooks\\useChatWebSocket.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 373,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\integration-shared-utilities.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 401,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\integration\\tool-lifecycle-integration.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 333,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\lib\\circular-buffer.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 475,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\lib\\utils.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 323,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\mocks\\api-mocks.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 315,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\mocks\\index.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 326,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\mocks\\mcp-service-mock.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 324,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\mocks\\websocket-mocks.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 416,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\services\\apiClient.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 615,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\services\\demoService.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 560,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\services\\messageService.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 395,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\services\\threadService.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 394,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\services\\webSocketService.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 517,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\store\\auth-store-state-management.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 304,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\store\\authStore.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 398,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\store\\cache-management.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 391,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\store\\error-state-recovery.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 486,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\store\\localStorage-persistence.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 401,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\store\\middleware-behavior.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 589,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\store\\multi-tab-sync.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 540,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\store\\offline-mode.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 607,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\store\\optimistic-updates.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 497,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\store\\state-migration.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 472,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\store\\store-actions-reducers.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 334,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\store\\undo-redo-history.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 600,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 6
    },
    {
      "file_path": "frontend\\__tests__\\store\\unified-chat-websocket-events.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 354,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\store\\unified-chat.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 368,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\api-test-mocks.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 461,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\auth-test-mocks.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 427,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\comprehensive-matchers.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 421,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\comprehensive-test-factories.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 400,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\react-act-utils.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 311,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\websocket-test-mocks.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 375,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\types\\circular-dependency-detector.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 462,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\types\\type-export-conflicts.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 531,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\utils\\auth-test-helpers.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 410,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\utils\\custom-matchers.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 355,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\utils\\exportService.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 526,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 5
    },
    {
      "file_path": "frontend\\__tests__\\utils\\loading-state-machine.test.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 400,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "frontend\\__tests__\\utils\\mock-factories.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 375,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\utils\\thread-test-helpers.ts",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 371,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\agent_tracking_helper.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 402,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class AgentTrackingHelper (line 21) | Split by functions: function _create_argument_parser (line 361), function _add_required_arguments (line 369), function _add_optional_arguments (line 377)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\align_test_imports.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 459,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestImportAligner (line 24) | Split by functions: function main (line 452), function __init__ (line 27), function run (line 39)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 668,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class TestInfo (line 25), class SimilarityResult (line 41), class TestOverlapAnalyzer (line 54) | Split by functions: function main (line 647), function __init__ (line 57), function analyze (line 69)",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\audit_config.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 323,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class AuditLevel (line 14), class DuplicateThreshold (line 24), class FeatureFlags (line 33) | Split by functions: function get_default_config (line 279), function __init__ (line 108), function _find_config_file (line 114)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\audit_oauth_gcp_logs.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 581,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class OAuthLogAnalyzer (line 43) | Split by functions: function main (line 539), function __init__ (line 46), function fetch_oauth_logs (line 88)",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 478,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class FunctionDecomposition (line 16), class FunctionDecomposer (line 25) | Split by functions: function main (line 447), function __init__ (line 28), function analyze_function_for_decomposition (line 33)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 767,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class TestFunction (line 34), class TestClass (line 48), class TestModule (line 59) | Split by functions: function main (line 713), function __init__ (line 74), function analyze_file (line 78)",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 1024,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 modules",
      "auto_split_suggestion": "Split by classes: class TestViolation (line 47), class FunctionInfo (line 56), class ClassInfo (line 68) | Split by functions: function main (line 911), function __init__ (line 80), function find_test_files (line 85)",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_split_files.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 388,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class SplitSuggestion (line 18), class FileSplitter (line 25) | Split by functions: function main (line 355), function __init__ (line 28), function analyze_file_for_splitting (line 33)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\benchmark_optimization.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 437,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestExecutionBenchmark (line 28) | Split by functions: function __init__ (line 31), function _discover_test_files (line 69), function _compare_executions (line 227)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 806,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class TestMetadata (line 24), class ComponentCoverage (line 48), class BusinessValueTestIndexer (line 65) | Split by functions: function main (line 770), function __init__ (line 68), function _load_business_value_spec (line 113)",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\categorize_tests.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 374,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestCategorizer (line 17) | Split by functions: function main (line 341), function __init__ (line 20), function _initialize_categories (line 25)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\check_imports.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 407,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\check_netra_backend_imports.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 353,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ImportIssue (line 18), class FileAnalysis (line 27), class ImportAnalyzer (line 35) | Split by functions: function main (line 309), function __init__ (line 38), function analyze_file (line 64)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\check_schema_imports.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 443,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class SchemaViolation (line 29), class SchemaDefinition (line 52), class ImportAnalysis (line 61) | Split by functions: function main (line 405), function to_dict (line 39), function __init__ (line 91)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\claude_audit_analyzer.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 426,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class AuditRequest (line 23), class AuditResponse (line 33), class ClaudeAuditCache (line 45) | Split by functions: function __init__ (line 48), function get_key (line 53), function get (line 60)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\cleanup_duplicate_tests.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 318,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestModuleImportCleaner (line 31) | Split by functions: function main (line 279), function __init__ (line 34), function is_auto_generated_file (line 44)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\cleanup_generated_files.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 347,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function get_file_age_days (line 71), function should_delete_file (line 82), function cleanup_directory (line 92)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\cleanup_workflow_runs.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 314,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function run_gh_command (line 15), function get_workflow_runs (line 46), function delete_workflow_run (line 82)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\code_audit_orchestrator.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 448,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class CodeAuditOrchestrator (line 22) | Split by functions: function __init__ (line 25), function check_bypass (line 40), function _get_changed_files (line 110)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\comprehensive_e2e_import_fixer.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 389,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ComprehensiveE2EImportFixer (line 33) | Split by functions: function main (line 318), function __init__ (line 36), function fix_schemas_import (line 41)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 801,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class ImportIssue (line 26), class ImportScanResult (line 43), class ComprehensiveScanReport (line 58) | Split by functions: function main (line 747), function to_dict (line 38), function has_issues (line 53)",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\comprehensive_test_fixer.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 426,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestFailureAnalyzer (line 18), class CodeGenerator (line 73), class TestFixer (line 169) | Split by functions: function main (line 416), function __init__ (line 21), function analyze_test_output (line 25)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\configure_audit.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 322,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class AuditConfigurator (line 24) | Split by functions: function main (line 247), function __init__ (line 27), function show_status (line 30)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\create_additional_shims.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 308,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function create_shim_module (line 256), function main (line 277)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\create_enforcement_tools.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 490,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ViolationReport (line 28), class ComplianceReport (line 42), class ProgressTracker (line 52) | Split by functions: function create_argument_parser (line 364), function add_basic_arguments (line 377), function add_advanced_arguments (line 385)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\deduplicate_types.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 444,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ImportReplacement (line 33), class DuplicateTypeInfo (line 43), class TypeDeduplicator (line 52) | Split by functions: function main (line 383), function _setup_project_paths (line 55), function _setup_duplicate_files_list (line 61)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 1028,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 modules",
      "auto_split_suggestion": "Split by classes: class ServiceConfig (line 44), class GCPDeployer (line 59) | Split by functions: function main (line 943), function __init__ (line 62), function check_gcloud (line 126)",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\detect_duplicate_code.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 329,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class DuplicateCodeDetector (line 28) | Split by functions: function main (line 282), function __init__ (line 31), function scan_codebase (line 41)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\duplicate_detector.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 446,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class CodeBlock (line 20), class Duplicate (line 52), class LegacyPattern (line 63) | Split by functions: function analyze_changed_files (line 391), function line_count (line 33), function similarity_to (line 36)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\e2e_import_fixer_comprehensive.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 600,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class ImportIssue (line 23), class FileAnalysisResult (line 34), class E2EImportReport (line 44) | Split by functions: function main (line 551), function __init__ (line 59), function discover_all_e2e_tests (line 111)",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\emergency_boundary_actions.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 471,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class EmergencyAction (line 20), class EmergencyActionSystem (line 32) | Split by functions: function main (line 429), function __init__ (line 35), function assess_emergency_level (line 42)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\enforce_limits.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 322,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ViolationDetail (line 20), class FileLineChecker (line 32), class FunctionLineChecker (line 68) | Split by functions: function create_argument_parser (line 221), function collect_target_files (line 266), function main (line 285)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\enhance_dev_launcher_boundaries.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 314,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function enhance_launcher_config (line 12), function enhance_launcher_args (line 62), function enhance_launcher_main (line 113)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\fast_import_checker.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 450,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function check_module_exists (line 15), function get_module_exports (line 31), function fix_known_import_issues (line 54)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\fix_all_import_issues.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 360,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ImportFixer (line 16) | Split by functions: function get_module_path (line 60), function fix_imports_in_file (line 71), function remove_sys_path_manipulation (line 146)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\fix_comprehensive_imports.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 357,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ComprehensiveImportFixerV2 (line 20) | Split by functions: function main (line 297), function __init__ (line 23), function scan_for_import_issues (line 29)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\fix_deployment_logging.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 346,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class DeploymentLoggingFixer (line 20) | Split by functions: function main (line 320), function __init__ (line 23), function run (line 28)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\fix_e2e_imports.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 430,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class E2EImportFixer (line 30) | Split by functions: function main (line 406), function __init__ (line 33), function fix_file (line 100)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\fix_e2e_tests_comprehensive.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 391,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestFileAnalysis (line 28), class E2ETestFixer (line 40) | Split by functions: function main (line 345), function __init__ (line 43), function _get_common_fixtures (line 47)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\fix_imports.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 380,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\fix_malformed_imports.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 336,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class MalformedImportFixer (line 38) | Split by functions: function main (line 271), function __init__ (line 41), function check_syntax (line 49)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\fix_schema_imports.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 304,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class SchemaImportFixer (line 19) | Split by functions: function main (line 264), function __init__ (line 22), function move_schemas_to_canonical_location (line 28)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\fix_staging_deployment.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 494,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class SecretConfig (line 31), class ServiceEndpoint (line 40), class StagingDeploymentFixer (line 47) | Split by functions: function main (line 467), function __init__ (line 50), function print_header (line 114)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\fix_test_batch.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 397,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestAnalyzer (line 22), class TestFixer (line 83), class BatchTestProcessor (line 215) | Split by functions: function main (line 342), function __init__ (line 25), function analyze_failure (line 31)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\fix_test_import_errors.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 337,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ImportFix (line 17), class TestImportFixer (line 22) | Split by functions: function main (line 297), function __init__ (line 23), function scan_directory_for_errors (line 138)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\fix_websocket_imports.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 369,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class WebSocketImportFixer (line 26) | Split by functions: function main (line 341), function __init__ (line 29), function _fix_multiline_websocket_core_import (line 134)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\function_complexity_analyzer.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 400,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class FunctionInfo (line 18), class FunctionVisitor (line 30), class ComplexityAnalyzer (line 78) | Split by functions: function main (line 350), function _convert_results_to_json (line 379), function __init__ (line 33)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\gcp_health_diagnostics.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 371,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class GCPHealthDiagnostics (line 29) | Split by functions: function __init__ (line 32), function _analyze_response_patterns (line 170), function _generate_recommendations (line 206)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\gcp_health_monitor.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 400,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ServiceStatus (line 35), class HealthCheck (line 43), class ServiceConfig (line 52) | Split by functions: function main (line 359), function __init__ (line 83), function _configure_services (line 98)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\generate_openapi_spec.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 347,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function get_openapi_spec (line 30), function _extract_base_schema (line 43), function _add_metadata (line 49)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\generate_startup_integration_tests.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 495,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function generate_test_file (line 226), function main (line 382), function generate_summary (line 410)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\generate_wip_report.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 378,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class WIPReportGenerator (line 20) | Split by functions: function __init__ (line 23), function run_compliance_check (line 29), function _is_test_file (line 88)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\import_management.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 341,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ImportManagementSystem (line 33) | Split by functions: function main (line 295), function __init__ (line 36), function check_imports (line 60)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\metadata_header_generator.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 396,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class MetadataHeaderGenerator (line 18) | Split by functions: function main (line 353), function __init__ (line 21), function _get_agent_info (line 27)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\precommit_duplicate_detector.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 343,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class PrecommitDuplicateDetector (line 25) | Split by functions: function main (line 332), function __init__ (line 28), function _load_critical_patterns (line 34)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\remove_test_stubs.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 395,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestStubViolation (line 26), class TestStubDetector (line 38) | Split by functions: function main (line 352), function __init__ (line 41), function should_scan_file (line 86)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\scan_for_secrets.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 326,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class SecretPattern (line 18), class Finding (line 27), class SecretsScanner (line 37) | Split by functions: function main (line 284), function __init__ (line 40), function _initialize_patterns (line 45)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\scan_string_literals.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 522,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class StringLiteralScanner (line 16), class LiteralVisitor (line 189) | Split by functions: function main (line 413), function __init__ (line 58), function should_skip_dir (line 65)",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\seed_staging_data.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 477,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class StagingDataSeeder (line 41) | Split by functions: function _create_seeding_parser (line 371), function _add_basic_arguments (line 379), function _add_data_count_arguments (line 384)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\standardize_l3_test_names.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 307,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function find_l3_files (line 19), function get_new_filename (line 26), function check_name_conflicts (line 33)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\status_collector.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 314,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class StatusDataCollector (line 52), class ComponentHealthCollector (line 118), class WipItemsCollector (line 184) | Split by functions: function __init__ (line 55), function load_spec_root (line 59), function find_pattern_matches (line 64)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\test_backend.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 562,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function setup_test_environment (line 45), function _configure_windows_asyncio (line 54), function _setup_dotenv_test_config (line 59)",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_backend_optimized.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 460,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class OptimizedTestManager (line 105) | Split by functions: function discover_test_files (line 280), function print_results_summary (line 320), function __init__ (line 108)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\test_cold_start_e2e.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 515,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ColdStartE2ETest (line 59) | Split by functions: function __init__ (line 62), function read_service_discovery (line 171), function get_api_url (line 433)",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_coordination_fixes.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 434,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class CoordinationFixValidator (line 30) | Split by functions: function __init__ (line 33), function _print_test_summary (line 369)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\test_example_message_flow.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 448,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ExampleMessageFlowTestRunner (line 24) | Split by functions: function run_quick_validation (line 367), function main (line 427), function __init__ (line 27)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\test_frontend.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 560,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function check_node_modules (line 39), function install_dependencies (line 45), function check_dependencies (line 65)",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_oauth_local.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 481,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class OAuthLocalTester (line 38) | Split by functions: function main (line 475), function __init__ (line 41), function generate_report (line 344)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\test_staging_startup.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 313,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class StagingStartupTester (line 24) | Split by functions: function main (line 282), function __init__ (line 27), function test_service_initialization_order (line 33)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\test_websocket_dev_mode.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 354,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class WebSocketDevModeTest (line 29) | Split by functions: function __init__ (line 32), function stop_dev_server (line 235), function generate_report (line 285)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\test_workflows_with_act.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 372,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class WorkflowTester (line 22) | Split by functions: function main (line 365), function __init__ (line 25), function check_prerequisites (line 32)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\unified_import_manager.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 670,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class ImportCheckResult (line 44), class UnifiedImportReport (line 55), class UnifiedImportManager (line 64) | Split by functions: function run_precommit_check (line 565), function main (line 584), function __init__ (line 67)",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\update_spec_timestamps.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 305,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function is_legacy_spec (line 78), function add_timestamp_to_xml (line 141), function main (line 200)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 371,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestMetrics (line 31), class ValidationResult (line 49), class AgentTestValidator (line 58) | Split by functions: function __post_init__ (line 43), function __init__ (line 61), function find_critical_test_files (line 67)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\validate_atomic_change.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 458,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ValidationResult (line 19), class AtomicChangeReport (line 29), class AtomicChangeValidator (line 51) | Split by functions: function main (line 424), function is_atomic (line 40), function compliance_score (line 45)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\validate_cold_start.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 380,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ColdStartValidator (line 30) | Split by functions: function main (line 373), function __init__ (line 33), function print_header (line 38)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\validate_mock_real_spectrum_compliance.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 321,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class MockViolation (line 19), class ComplianceReport (line 31), class MockRealSpectrumValidator (line 41) | Split by functions: function main (line 290), function __init__ (line 44), function scan_test_files (line 67)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\validate_staging_config.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 455,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function print_section (line 26), function get_env_var_value (line 32), function format_env_display_value (line 36)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 630,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class StagingValidator (line 52) | Split by functions: function main (line 541), function __init__ (line 55), function validate_all (line 76)",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\validate_type_deduplication.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 378,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class DuplicateType (line 27), class ValidationResult (line 36), class TypeDeduplicationValidator (line 46) | Split by functions: function main (line 340), function __init__ (line 49), function _load_canonical_imports (line 54)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\verify_cold_start.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 390,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ColdStartVerifier (line 35) | Split by functions: function main (line 365), function __init__ (line 38), function log (line 43)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\verify_workflow_status.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 375,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class WorkflowRun (line 29), class VerificationConfig (line 43), class GitHubAPIError (line 54) | Split by functions: function create_config_from_args (line 309), function main (line 324), function __init__ (line 57)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 463,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function find_backend_events (line 13), function find_frontend_handlers (line 51), function check_event_structure (line 81)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\workflow_introspection.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 407,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class WorkflowStep (line 25), class WorkflowJob (line 34), class WorkflowRun (line 45) | Split by functions: function main (line 332), function __init__ (line 64), function _run_gh_command (line 68)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\autonomous_review\\test_reviewer.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 330,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class AutonomousTestReviewer (line 19) | Split by functions: function __init__ (line 22), function _find_test_file (line 301)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\ci\\generate_fix.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 426,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class FixResult (line 16), class AIFixGenerator (line 25), class FixValidator (line 277) | Split by functions: function load_context (line 350), function main (line 382), function __init__ (line 28)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\compliance\\analyze_mocks.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 306,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class MockUsage (line 18), class MockAnalyzer (line 30) | Split by functions: function main (line 286), function __init__ (line 33), function find_test_files (line 61)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\compliance\\enhanced_reporter.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 305,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class EnhancedComplianceReporter (line 14) | Split by functions: function __init__ (line 17), function generate_report (line 22), function _categorize_violations (line 85)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\compliance\\fake_test_scanner.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 478,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class FakeTestScanner (line 37) | Split by functions: function main (line 358), function __init__ (line 40), function scan_all_tests (line 45)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 411,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestViolation (line 22), class ProjectTestValidator (line 31), class MockComponentVisitor (line 163) | Split by functions: function main (line 382), function __init__ (line 34), function validate_project_tests (line 45)",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 616,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class TestViolation (line 32), class RealTestRequirementsEnforcer (line 43), class MockComponentVisitor (line 229) | Split by functions: function main (line 581), function __init__ (line 46), function validate_all_tests (line 76)",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\real_test_validator.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 357,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\compliance\\reporter.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 326,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ComplianceReporter (line 14) | Split by functions: function __init__ (line 17), function generate_report (line 25), function _print_report_header (line 31)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\compliance\\test_fixer.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 389,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestFixer (line 20), class TestGrouper (line 129) | Split by functions: function main (line 376), function __init__ (line 23), function fix_mock_component_function (line 26)",
      "impact_score": 3
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 739,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class TestFunction (line 32), class TestClass (line 45), class SplitSuggestion (line 56) | Split by functions: function main (line 656), function __init__ (line 68), function analyze_file_for_splitting (line 71)",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\test_size_validator.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 550,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class SizeViolation (line 32), class TestFileAnalysis (line 46), class TestSizeValidator (line 56) | Split by functions: function main (line 504), function __init__ (line 63), function validate_all_tests (line 68)",
      "impact_score": 5
    },
    {
      "file_path": "test_framework\\auth_helpers.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 605,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class AuthTestConfig (line 36), class AuthManager (line 61), class JWTTestHelper (line 187) | Split by functions: function skip_if_services_unavailable (line 465), function assert_auth_performance (line 508), function assert_token_rejection (line 532)",
      "impact_score": 6
    },
    {
      "file_path": "test_framework\\auto_splitter.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 1081,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 modules",
      "auto_split_suggestion": "Split by classes: class SplittingStrategy (line 17), class WindowPriority (line 27), class TestItem (line 37) | Split by functions: function __post_init__ (line 61), function effective_duration (line 73), function reliability_score (line 83)",
      "impact_score": 10
    },
    {
      "file_path": "test_framework\\category_system.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 752,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class CategoryPriority (line 16), class CategoryType (line 25), class TestCategory (line 37) | Split by functions: function __post_init__ (line 75), function is_leaf_category (line 86), function is_root_category (line 90)",
      "impact_score": 7
    },
    {
      "file_path": "test_framework\\conftest_base.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 458,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class MockSessionFactory (line 306), class PerformanceMonitor (line 342), class E2ELogger (line 377) | Split by functions: function common_test_user (line 64), function sample_data (line 75), function mock_redis_client (line 84)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\decorators.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 359,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function feature_flag (line 21), function requires_feature (line 55), function experimental_test (line 87)",
      "impact_score": 3
    },
    {
      "file_path": "test_framework\\fail_fast_strategies.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 801,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class FailFastMode (line 17), class FailureImpact (line 28), class SkipReason (line 36) | Split by functions: function __post_init__ (line 72), function is_retriable (line 84), function is_critical (line 91)",
      "impact_score": 8
    },
    {
      "file_path": "test_framework\\http_client.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 318,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ConnectionState (line 24), class ClientConfig (line 49), class ConnectionMetrics (line 68) | Split by functions: function create_auth_client (line 260), function create_backend_client (line 267), function create_unified_client (line 274)",
      "impact_score": 3
    },
    {
      "file_path": "test_framework\\import_tester.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 442,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Unable to analyze - manual split required",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\optimized_executor.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 667,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class TestExecutionResult (line 52), class ShardExecutionStats (line 67), class FastTestDatabase (line 79) | Split by functions: function __init__ (line 82), function _initialize_pool (line 89), function __init__ (line 156)",
      "impact_score": 6
    },
    {
      "file_path": "test_framework\\performance.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 473,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class PerformanceMetrics (line 19), class PerformanceMonitor (line 62), class ResponseTimeTracker (line 140) | Split by functions: function create_performance_benchmark (line 424), function measure_time (line 441), function example_sync_operation (line 459)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\progress_tracker.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 793,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class ProgressStatus (line 19), class ProgressEvent (line 29), class CategoryProgress (line 47) | Split by functions: function __post_init__ (line 85), function is_complete (line 91), function is_successful (line 97)",
      "impact_score": 7
    },
    {
      "file_path": "test_framework\\real_llm_config.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 672,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class LLMProvider (line 33), class TestingMode (line 40), class ModelConfig (line 49) | Split by functions: function get_real_llm_manager (line 538), function configure_real_llm_testing (line 546), function pytest_configure_real_llm (line 553)",
      "impact_score": 6
    },
    {
      "file_path": "test_framework\\report_generators.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 391,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function status_badge (line 13), function extract_test_counts_from_output (line 27), function calculate_total_counts (line 76)",
      "impact_score": 3
    },
    {
      "file_path": "test_framework\\seed_data_manager.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 721,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class SeedDataSet (line 37), class TestEnvironmentConfig (line 48), class DatabaseTransactionManager (line 59) | Split by functions: function __init__ (line 62), function get_transaction_stats (line 212), function __init__ (line 241)",
      "impact_score": 7
    },
    {
      "file_path": "test_framework\\test_discovery.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 304,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestMetrics (line 18), class CoverageAnalyzer (line 35), class SpecificationParser (line 145) | Split by functions: function __post_init__ (line 29), function __init__ (line 38), function _extract_coverage_percentage (line 77)",
      "impact_score": 3
    },
    {
      "file_path": "test_framework\\test_helpers.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 476,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function get_project_root (line 24), function is_windows (line 29), function get_available_port (line 34)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\test_parser.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 419,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function parse_test_counts (line 8), function _count_import_errors (line 104), function parse_coverage (line 117)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\test_quality_analyzer.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 410,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestQualityIssue (line 30), class TestQualityAnalyzer (line 42), class FakeTestVisitor (line 354) | Split by functions: function __init__ (line 45), function _get_default_data_file (line 65), function _generate_run_id (line 71)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\test_utils.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 351,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function create_test_user (line 94), function generate_test_token (line 256)",
      "impact_score": 3
    },
    {
      "file_path": "test_framework\\unified_orchestrator.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 455,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ServiceManager (line 28), class TestExecutor (line 128), class ResultAggregator (line 254) | Split by functions: function __init__ (line 31), function _load_service_configs (line 37), function start_service (line 45)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\websocket_helpers.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 422,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class WebSocketTestHelpers (line 39), class MockWebSocket (line 105), class MockWebSocketManager (line 164) | Split by functions: function websocket_performance_monitor (line 293), function validate_websocket_message (line 411), function assert_websocket_response_time (line 418)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\archived\\duplicates\\bad_test_detector.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 383,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class BadTestDetector (line 15) | Split by functions: function __init__ (line 18), function _get_default_data_file (line 29), function _generate_run_id (line 36)",
      "impact_score": 3
    },
    {
      "file_path": "test_framework\\archived\\duplicates\\fake_test_detector.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 850,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class FakeTestResult (line 46), class FakeTestStats (line 60), class FakeTestDetector (line 75) | Split by functions: function main (line 824), function __post_init__ (line 68), function __init__ (line 137)",
      "impact_score": 8
    },
    {
      "file_path": "test_framework\\archived\\duplicates\\ultra_test_orchestrator.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 433,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestProfileBuilder (line 24), class UltraTestOrchestrator (line 158) | Split by functions: function build_backend_profiles (line 27), function build_frontend_profiles (line 53), function _categorize_test (line 79)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\archived\\duplicates\\unified\\base_interfaces.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 432,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestEnvironment (line 16), class TestLevel (line 24), class ServiceStatus (line 34) | Split by functions: function __post_init__ (line 57), function __post_init__ (line 74), function __post_init__ (line 91)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\archived\\duplicates\\unified\\orchestrator.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 558,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestSuite (line 38), class OrchestratorConfig (line 53), class UnifiedTestOrchestrator (line 66) | Split by functions: function __init__ (line 69), function get_test_registry (line 349)",
      "impact_score": 5
    },
    {
      "file_path": "test_framework\\archived\\executors\\intelligent_parallelization.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 461,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestType (line 37), class TestPriority (line 46), class TestMetrics (line 55) | Split by functions: function __init__ (line 80), function create_optimal_shards (line 88), function _analyze_test_characteristics (line 94)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\archived\\executors\\memory_optimized_executor.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 418,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class MemoryMonitor (line 22), class TestExecutor (line 71), class MemoryOptimizedExecutor (line 189) | Split by functions: function __init__ (line 25), function get_memory_usage (line 30), function should_throttle (line 45)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\archived\\executors\\test_execution_engine.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 431,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by functions: function execute_test_suite (line 25), function execute_backend_only_tests (line 40), function execute_frontend_only_tests (line 51)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\archived\\experimental\\patterns.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 486,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class BaseIntegrationTest (line 19), class L3IntegrationTest (line 113), class L4IntegrationTest (line 240) | Split by functions: function require_environment (line 457), function require_real_services (line 468), function timeout_test (line 479)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\archived\\experimental\\performance_optimizer.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 522,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class PerformanceMetrics (line 35), class TestTypeMetrics (line 65), class OptimizationRecommendation (line 78) | Split by functions: function __init__ (line 91), function analyze_execution_performance (line 97), function _calculate_cpu_utilization (line 133)",
      "impact_score": 5
    },
    {
      "file_path": "test_framework\\archived\\experimental\\resource_monitor.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 570,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class SystemMetrics (line 36), class TestResourceUsage (line 51), class ResourceMonitor (line 63) | Split by functions: function __init__ (line 66), function start_monitoring (line 84), function stop_monitoring (line 95)",
      "impact_score": 5
    },
    {
      "file_path": "test_framework\\archived\\experimental\\smart_cache.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 389,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class CacheEntry (line 19), class FileHashCalculator (line 31), class SmartCache (line 78) | Split by functions: function __init__ (line 34), function calculate_test_file_hash (line 38), function calculate_dependency_hash (line 62)",
      "impact_score": 3
    },
    {
      "file_path": "test_framework\\archived\\experimental\\test_isolation.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 305,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestIsolationManager (line 15) | Split by functions: function create_isolated_test_env (line 285), function get_isolated_pytest_args (line 294), function get_isolated_jest_args (line 301)",
      "impact_score": 3
    },
    {
      "file_path": "test_framework\\archived\\experimental\\test_updater.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 351,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class TestUpdateMode (line 24), class TestUpdater (line 38), class TestUpdateModeHandler (line 278) | Split by functions: function _create_argument_parser (line 230), function _add_all_arguments (line 236), function _add_mode_arguments (line 243)",
      "impact_score": 3
    },
    {
      "file_path": "test_framework\\archived\\experimental\\test_user_journeys.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 443,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class JourneyTestResult (line 42), class ServiceOrchestrator (line 79), class JourneyTestBase (line 113) | Split by functions: function __init__ (line 45), function add_step (line 54), function add_error (line 58)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\archived\\experimental\\test_user_journeys_extended.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 507,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class OAuthLoginJourneyTest (line 46), class RealWebSocketJourneyTest (line 204), class DataConsistencyValidator (line 382) | Split by functions: function _verify_response_quality (line 361), function __init__ (line 385), function __init__ (line 431)",
      "impact_score": 5
    },
    {
      "file_path": "test_framework\\archived\\experimental\\test_user_journeys_integration.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 353,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class UserJourneyTestOrchestrator (line 43), class UserJourneyTestReporter (line 243) | Split by functions: function get_user_journey_test_config (line 317), function __init__ (line 46), function _generate_recommendations (line 221)",
      "impact_score": 3
    },
    {
      "file_path": "test_framework\\config\\category_config.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 861,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 modules",
      "auto_split_suggestion": "Split by classes: class CategoryConfigData (line 25), class ExecutionConfig (line 63), class TestRunnerConfig (line 103) | Split by functions: function __init__ (line 130), function load_env_files (line 151), function load_config (line 164)",
      "impact_score": 8
    },
    {
      "file_path": "test_framework\\config\\config_manager.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 434,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class EnvironmentConfig (line 27), class TestLevelConfig (line 49), class ConfigurationManager (line 66) | Split by functions: function __post_init__ (line 41), function __post_init__ (line 61), function __init__ (line 69)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\docker_testing\\compose_manager.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 402,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class ContainerInfo (line 29), class DockerComposeManager (line 83) | Split by functions: function from_docker_inspect (line 41), function __init__ (line 86)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\fixtures\\auth.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 325,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class MockAuthToken (line 16), class MockAuthService (line 46), class MockJWTManager (line 129) | Split by functions: function create_mock_auth_service (line 262), function create_mock_jwt_manager (line 266), function create_mock_oauth_provider (line 270)",
      "impact_score": 3
    },
    {
      "file_path": "test_framework\\fixtures\\routes.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 412,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class MockRequest (line 15), class MockResponse (line 42), class MockRouteHandler (line 56) | Split by functions: function create_mock_request (line 273), function create_mock_response (line 278), function create_mock_api_client (line 283)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\fixtures\\websocket_types.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 500,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class MockWebSocketState (line 18), class MockMessageType (line 27), class MockWebSocketMessage (line 40) | Split by functions: function create_mock_websocket_connection (line 391), function create_mock_websocket_manager (line 395), function create_mock_websocket_message (line 399)",
      "impact_score": 5
    },
    {
      "file_path": "test_framework\\mocks\\database_mocks.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 396,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class MockDatabaseSession (line 11), class MockAsyncDatabaseFactory (line 76), class MockPostgreSQLConnection (line 114) | Split by functions: function __init__ (line 14), function add (line 41), function get_operations (line 71)",
      "impact_score": 3
    },
    {
      "file_path": "test_framework\\mocks\\http_mocks.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 357,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class MockTimeoutException (line 13), class MockResponse (line 18), class MockHttpClient (line 41) | Split by functions: function __init__ (line 21), function raise_for_status (line 35), function __init__ (line 44)",
      "impact_score": 3
    },
    {
      "file_path": "test_framework\\mocks\\llm.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 402,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class MockLLMProvider (line 17), class MockLLMModel (line 24), class MockLLMUsage (line 35) | Split by functions: function create_mock_llm_client (line 295), function create_fast_llm_client (line 300), function create_slow_llm_client (line 306)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\mocks\\llm_mocks.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 329,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class MockLLMService (line 14), class MockAgentService (line 130), class MockOpenAIClient (line 229) | Split by functions: function create_mock_structured_response (line 185), function get_mock_value_for_field (line 194), function get_complex_mock_value (line 208)",
      "impact_score": 3
    },
    {
      "file_path": "test_framework\\mocks\\service_mocks.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 403,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class MockClickHouseService (line 10), class MockRedisService (line 32), class MockLLMService (line 68) | Split by functions: function setup_redis_mock_with_error (line 335), function setup_redis_mock_with_large_cache (line 343), function setup_quality_service_with_redis_error (line 351)",
      "impact_score": 4
    },
    {
      "file_path": "test_framework\\mocks\\websocket_mocks.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 332,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class MockWebSocket (line 16), class MockWebSocketManager (line 103), class MockWebSocketConnectionManager (line 159) | Split by functions: function __init__ (line 19), function _generate_user_id (line 27), function _init_failure_flags (line 31)",
      "impact_score": 3
    },
    {
      "file_path": "test_framework\\staging_testing\\endpoint_validator.py",
      "violation_type": "file_line_boundary",
      "severity": "critical",
      "boundary_name": "FILE_SIZE_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 595,
      "expected_value": 300,
      "description": "File exceeds 300 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 modules",
      "auto_split_suggestion": "Split by classes: class EndpointTestResult (line 30), class APIContractViolation (line 47), class StagingEndpointValidator (line 57) | Split by functions: function __post_init__ (line 41), function __init__ (line 60), function _validate_json_schema (line 455)",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\act_wrapper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 230,
      "function_name": "execute_command",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\act_wrapper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 171,
      "function_name": "_temporary_env_file",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\act_wrapper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 177,
      "function_name": "_temp_env",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\add_test_markers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 230,
      "function_name": "main",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\add_test_markers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 18,
      "function_name": "__init__",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\add_test_markers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 31,
      "function_name": "get_markers_for_file",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\add_test_markers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 61,
      "function_name": "add_markers_to_class",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\add_test_markers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 98,
      "function_name": "add_markers_to_function",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\add_test_markers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 132,
      "function_name": "process_file",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\add_test_markers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 179,
      "function_name": "add_conditional_skip_for_real_services",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\add_test_markers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 198,
      "function_name": "run",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\agent_tracking_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 71,
      "function_name": "_get_git_info",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\agent_tracking_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 88,
      "function_name": "_should_exclude",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\agent_tracking_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 122,
      "function_name": "_create_header_lines",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\agent_tracking_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 176,
      "function_name": "_extract_existing_header",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\agent_tracking_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 196,
      "function_name": "_extract_history",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\agent_tracking_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 218,
      "function_name": "_format_history",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\agent_tracking_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 300,
      "function_name": "_finalize_content",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\agent_tracking_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 316,
      "function_name": "add_tracking_header",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\agent_tracking_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 332,
      "function_name": "create_audit_log_entry",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\aggressive_syntax_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 11,
      "function_name": "get_files_with_errors",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\aggressive_syntax_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "aggressive_fix",
      "actual_value": 140,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 18 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\aggressive_syntax_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 176,
      "function_name": "main",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\aggressive_syntax_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 15,
      "function_name": "fix_mismatched_brackets",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\aggressive_syntax_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 32,
      "function_name": "fix_unclosed_parentheses",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\aggressive_syntax_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 58,
      "function_name": "fix_unexpected_indent",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\aggressive_syntax_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 79,
      "function_name": "fix_empty_blocks",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\aggressive_syntax_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 102,
      "function_name": "fix_syntax_errors",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\aggressive_syntax_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 124,
      "function_name": "validate_syntax",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\aggressive_syntax_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 138,
      "function_name": "fix_file",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\aggressive_syntax_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 172,
      "function_name": "main",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\align_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 27,
      "function_name": "__init__",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\align_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 39,
      "function_name": "run",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\align_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 64,
      "function_name": "scan_test_files",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\align_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 82,
      "function_name": "fix_import_issues",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\align_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 112,
      "function_name": "fix_relative_imports",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\align_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 151,
      "function_name": "fix_sys_path",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\align_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 185,
      "function_name": "fix_module_imports",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\align_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 211,
      "function_name": "fix_test_runner_config",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\align_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 239,
      "function_name": "update_test_directories",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\align_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 273,
      "function_name": "update_component_mappings",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\align_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 310,
      "function_name": "fix_test_discovery_paths",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\align_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 344,
      "function_name": "fix_syntax_issues",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\align_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 372,
      "function_name": "fix_common_syntax_issues",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\align_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 400,
      "function_name": "generate_report",
      "actual_value": 48,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\analyze_critical_paths.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 23,
      "function_name": "analyze_file",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\analyze_test_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 28,
      "function_name": "categorize_mock",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\analyze_test_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 70,
      "function_name": "find_mock_justification",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\analyze_test_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 87,
      "function_name": "analyze_file_for_mocks",
      "actual_value": 48,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\analyze_test_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 139,
      "function_name": "main",
      "actual_value": 55,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 647,
      "function_name": "main",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 57,
      "function_name": "__init__",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 69,
      "function_name": "analyze",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 89,
      "function_name": "_collect_tests",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 102,
      "function_name": "_extract_tests_from_file",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 134,
      "function_name": "_extract_imports",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 147,
      "function_name": "_create_test_info",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 183,
      "function_name": "_extract_fixtures",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 205,
      "function_name": "_extract_assertions",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 223,
      "function_name": "_calculate_complexity",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 237,
      "function_name": "_analyze_similarities",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 281,
      "function_name": "_calculate_detailed_similarity",
      "actual_value": 57,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 343,
      "function_name": "_generate_report",
      "actual_value": 91,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 12 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 437,
      "function_name": "_generate_recommendations",
      "actual_value": 55,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 495,
      "function_name": "_save_report",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 515,
      "function_name": "_save_markdown_report",
      "actual_value": 97,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 13 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\analyze_test_overlap.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 615,
      "function_name": "_save_csv_report",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\architecture_dashboard.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 23,
      "function_name": "generate_html_dashboard",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\architecture_dashboard.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 87,
      "function_name": "_generate_tab_contents",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\architecture_dashboard.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 136,
      "function_name": "_generate_violation_chart",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\architecture_dashboard.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 160,
      "function_name": "_generate_severity_chart",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\architecture_dashboard.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 177,
      "function_name": "_generate_compliance_chart",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\architecture_dashboard_html.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 16,
      "function_name": "generate_dashboard_header",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\architecture_dashboard_html.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 49,
      "function_name": "generate_metrics_section",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\architecture_dashboard_html.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 102,
      "function_name": "generate_charts_section",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\architecture_dashboard_tables.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 25,
      "function_name": "_generate_file_violation_rows",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\architecture_dashboard_tables.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 51,
      "function_name": "_generate_function_violation_rows",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\architecture_dashboard_tables.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 78,
      "function_name": "_generate_duplicate_rows",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\architecture_dashboard_tables.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 113,
      "function_name": "_generate_offender_rows",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\architecture_health.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 63,
      "function_name": "main",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\architecture_health.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 22,
      "function_name": "__init__",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\architecture_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 25,
      "function_name": "calculate_health_metrics",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\architecture_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 43,
      "function_name": "_calculate_violation_counts",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\architecture_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 65,
      "function_name": "_calculate_compliance_scores",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\architecture_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 144,
      "function_name": "_get_file_offenders",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\architecture_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 156,
      "function_name": "_get_function_offenders",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\architecture_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 195,
      "function_name": "_get_type_suggestions",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\architecture_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 207,
      "function_name": "_get_general_suggestions",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\architecture_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 249,
      "function_name": "_count_file_functions",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\architecture_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 20,
      "function_name": "export_json_report",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\architecture_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 96,
      "function_name": "_print_violation_breakdown",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\architecture_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 25,
      "function_name": "scan_all_violations",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\architecture_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 58,
      "function_name": "_check_file_size",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\architecture_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 81,
      "function_name": "_scan_file_functions",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\architecture_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 122,
      "function_name": "_extract_python_types",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\architecture_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 147,
      "function_name": "_extract_typescript_types",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\architecture_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 163,
      "function_name": "_filter_duplicates",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\architecture_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 188,
      "function_name": "_scan_file_for_missing_types",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\architecture_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 202,
      "function_name": "_check_function_types",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\architecture_scanner_helpers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 109,
      "function_name": "get_stub_patterns",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\architecture_scanner_helpers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 125,
      "function_name": "get_debt_patterns",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\architecture_scanner_helpers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 171,
      "function_name": "create_function_violation",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\architecture_scanner_helpers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 185,
      "function_name": "create_missing_return_type",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\architecture_scanner_helpers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 198,
      "function_name": "create_missing_param_type",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\architecture_scanner_quality.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 21,
      "function_name": "scan_test_stubs",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\architecture_scanner_quality.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "_scan_file_for_stubs",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\architecture_scanner_quality.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 50,
      "function_name": "_find_stub_pattern",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\architecture_scanner_quality.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 66,
      "function_name": "scan_architectural_debt",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\architecture_scanner_quality.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 78,
      "function_name": "_scan_file_for_debt",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\architecture_scanner_quality.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 92,
      "function_name": "_find_debt_patterns",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\architecture_scanner_quality.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 109,
      "function_name": "scan_code_quality",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\architecture_scanner_quality.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 121,
      "function_name": "_scan_file_for_quality",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\architecture_scanner_quality.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 135,
      "function_name": "_find_quality_patterns",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\audit_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 114,
      "function_name": "_find_config_file",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\audit_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 135,
      "function_name": "load_config",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\audit_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 167,
      "function_name": "save_config",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\audit_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 198,
      "function_name": "can_bypass",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\audit_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 259,
      "function_name": "from_env",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\audit_oauth_gcp_logs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 539,
      "function_name": "main",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\audit_oauth_gcp_logs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 46,
      "function_name": "__init__",
      "actual_value": 40,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\audit_oauth_gcp_logs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 88,
      "function_name": "fetch_oauth_logs",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\audit_oauth_gcp_logs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 135,
      "function_name": "_parse_log_entry",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\audit_oauth_gcp_logs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 178,
      "function_name": "analyze_oauth_flow",
      "actual_value": 55,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\audit_oauth_gcp_logs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 236,
      "function_name": "_extract_session_id",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\audit_oauth_gcp_logs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 264,
      "function_name": "_analyze_session",
      "actual_value": 86,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 11 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\audit_oauth_gcp_logs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 353,
      "function_name": "_get_log_message",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\audit_oauth_gcp_logs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 370,
      "function_name": "_check_configuration_issues",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\audit_oauth_gcp_logs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 410,
      "function_name": "generate_report",
      "actual_value": 49,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\audit_oauth_gcp_logs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 462,
      "function_name": "_print_recommendations",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\audit_oauth_gcp_logs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 501,
      "function_name": "export_session_details",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\audit_permissions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 10,
      "function_name": "analyze_route_file",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\audit_permissions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 47,
      "function_name": "main",
      "actual_value": 67,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 447,
      "function_name": "main",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "analyze_function_for_decomposition",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 52,
      "function_name": "_count_function_lines",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 72,
      "function_name": "_analyze_function_structure",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 98,
      "function_name": "_identify_logical_blocks",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 133,
      "function_name": "_identify_conditional_branches",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 151,
      "function_name": "_identify_validation_processing",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 176,
      "function_name": "_identify_error_handling",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 193,
      "function_name": "_is_validation_check",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 213,
      "function_name": "_suggest_logical_decomposition",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 235,
      "function_name": "_suggest_conditional_decomposition",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 266,
      "function_name": "_suggest_validation_processing_decomposition",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 301,
      "function_name": "_suggest_error_handling_decomposition",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 332,
      "function_name": "_suggest_simple_decomposition",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 369,
      "function_name": "scan_for_complex_functions",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 384,
      "function_name": "_analyze_file_functions",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\auto_decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 413,
      "function_name": "generate_decomposition_report",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 713,
      "function_name": "main",
      "actual_value": 49,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 78,
      "function_name": "analyze_file",
      "actual_value": 47,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 128,
      "function_name": "_extract_imports",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 141,
      "function_name": "_extract_bvj_comment",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 163,
      "function_name": "_analyze_function",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 203,
      "function_name": "_analyze_class",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 232,
      "function_name": "_extract_dependencies",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 253,
      "function_name": "split_oversized_file",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 295,
      "function_name": "_categorize_functions",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 333,
      "function_name": "_determine_test_category",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 361,
      "function_name": "_determine_class_category",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 374,
      "function_name": "_create_split_module",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 420,
      "function_name": "_get_fixture_dependencies",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 440,
      "function_name": "optimize_function",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 454,
      "function_name": "_split_test_function",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 482,
      "function_name": "_identify_assertion_blocks",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 517,
      "function_name": "_create_test_function",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 559,
      "function_name": "_manual_function_reconstruction",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 613,
      "function_name": "fix_all_violations",
      "actual_value": 62,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_sizes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 679,
      "function_name": "fix_specific_file",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 911,
      "function_name": "main",
      "actual_value": 109,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 14 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 85,
      "function_name": "find_test_files",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 111,
      "function_name": "analyze_file_structure",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 148,
      "function_name": "_extract_class_info",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 170,
      "function_name": "_extract_function_info",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 189,
      "function_name": "find_violations",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 226,
      "function_name": "_check_function_violations",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 252,
      "function_name": "_check_function_violations_simple",
      "actual_value": 55,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 321,
      "function_name": "split_large_file",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 359,
      "function_name": "_split_into_multiple_files",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 391,
      "function_name": "_split_into_two_files",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 433,
      "function_name": "_extract_utilities",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 468,
      "function_name": "_categorize_tests",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 483,
      "function_name": "_determine_category",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 512,
      "function_name": "_create_split_file",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 541,
      "function_name": "_create_utilities_file",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 569,
      "function_name": "_update_file_with_utils_import",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 604,
      "function_name": "refactor_long_function",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 627,
      "function_name": "_extract_setup_and_assertions",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 681,
      "function_name": "__init__",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 693,
      "function_name": "scan_violations",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 728,
      "function_name": "_validate_test_file",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 750,
      "function_name": "_create_backup",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 769,
      "function_name": "analyze_and_suggest_fixes",
      "actual_value": 66,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_fix_test_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 850,
      "function_name": "generate_report",
      "actual_value": 58,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_split_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 355,
      "function_name": "main",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_split_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "analyze_file_for_splitting",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\auto_split_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 55,
      "function_name": "_analyze_python_file",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_split_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 86,
      "function_name": "_analyze_typescript_file",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_split_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 152,
      "function_name": "_suggest_class_based_split",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\auto_split_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 172,
      "function_name": "_suggest_function_based_split",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\auto_split_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 193,
      "function_name": "_suggest_logical_split",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\auto_split_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 215,
      "function_name": "_fallback_split_suggestion",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_split_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 240,
      "function_name": "_group_functions_by_pattern",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_split_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 271,
      "function_name": "_find_logical_split_points",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\auto_split_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 297,
      "function_name": "scan_for_oversized_files",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\auto_split_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 322,
      "function_name": "generate_split_report",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\benchmark_optimization.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 396,
      "function_name": "main",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\benchmark_optimization.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 38,
      "function_name": "run_comprehensive_benchmark",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\benchmark_optimization.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 69,
      "function_name": "_discover_test_files",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\benchmark_optimization.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 93,
      "function_name": "_run_standard_execution",
      "actual_value": 63,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\benchmark_optimization.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 159,
      "function_name": "_run_optimized_execution",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\benchmark_optimization.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 201,
      "function_name": "_simulate_optimized_execution",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\benchmark_optimization.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 227,
      "function_name": "_compare_executions",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\benchmark_optimization.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 253,
      "function_name": "_classify_productivity_gain",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\benchmark_optimization.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 270,
      "function_name": "_estimate_cost_savings",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\benchmark_optimization.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 290,
      "function_name": "_generate_benchmark_report",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\benchmark_optimization.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 311,
      "function_name": "_generate_optimization_recommendations",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\benchmark_optimization.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 335,
      "function_name": "_print_benchmark_summary",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\benchmark_optimization.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 382,
      "function_name": "_save_benchmark_results",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\boundary_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 191,
      "function_name": "main",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\boundary_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 86,
      "function_name": "_check_system_boundaries",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\boundary_enforcer_cli_handler.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 61,
      "function_name": "_create_pre_commit_config",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\boundary_enforcer_cli_handler.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 90,
      "function_name": "_create_ci_workflow_config",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\boundary_enforcer_cli_handler.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 191,
      "function_name": "handle_specific_checks",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\boundary_enforcer_report_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 48,
      "function_name": "_assess_growth_risk",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\boundary_enforcer_report_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 80,
      "function_name": "_build_report_object",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\boundary_enforcer_report_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 250,
      "function_name": "_build_violations_section",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\boundary_enforcer_report_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 265,
      "function_name": "_build_tools_section",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\boundary_enforcer_system_checks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 104,
      "function_name": "calculate_complexity_debt",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\boundary_enforcer_type_checks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 38,
      "function_name": "check_test_stub_boundaries",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\bulk_syntax_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 15,
      "function_name": "fix_all_syntax_issues",
      "actual_value": 103,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 13 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\bulk_syntax_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 124,
      "function_name": "validate_syntax",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\bulk_syntax_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 137,
      "function_name": "fix_file",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\bulk_syntax_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 171,
      "function_name": "main",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 770,
      "function_name": "main",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 68,
      "function_name": "__init__",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 120,
      "function_name": "scan_tests",
      "actual_value": 76,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 200,
      "function_name": "_scan_python_test",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 222,
      "function_name": "_extract_decorators_from_node",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 251,
      "function_name": "_extract_python_test_metadata",
      "actual_value": 55,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 311,
      "function_name": "_scan_typescript_test",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 346,
      "function_name": "_determine_test_type",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 393,
      "function_name": "_determine_component",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 419,
      "function_name": "_determine_category",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 434,
      "function_name": "_detect_real_services",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 452,
      "function_name": "_calculate_business_value_score",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 487,
      "function_name": "_generate_value_justification",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 511,
      "function_name": "aggregate_coverage",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 543,
      "function_name": "load_coverage_data",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 571,
      "function_name": "load_test_results",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 587,
      "function_name": "generate_report",
      "actual_value": 62,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 652,
      "function_name": "_identify_coverage_gaps",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 686,
      "function_name": "_generate_recommendations",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 716,
      "function_name": "save_report",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 729,
      "function_name": "print_summary",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\business_value_test_index.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 138,
      "function_name": "should_skip_file",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\categorize_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 341,
      "function_name": "main",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\categorize_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 32,
      "function_name": "_initialize_patterns",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\categorize_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 123,
      "function_name": "analyze_file",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\categorize_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 138,
      "function_name": "categorize_test",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\categorize_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 178,
      "function_name": "scan_tests",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\categorize_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 326,
      "function_name": "save_categorization",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\check_architecture_compliance.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 30,
      "function_name": "_create_enforcer",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\check_conftest_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 27,
      "function_name": "find_all_conftest_files",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\check_conftest_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 44,
      "function_name": "check_conftest_violations",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\check_conftest_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 64,
      "function_name": "main",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 262,
      "function_name": "main",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 35,
      "function_name": "__init__",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\check_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 54,
      "function_name": "find_e2e_test_files",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\check_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 72,
      "function_name": "check_file_imports",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 101,
      "function_name": "extract_imports",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\check_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 120,
      "function_name": "fix_common_import_issues",
      "actual_value": 62,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 185,
      "function_name": "check_all",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 221,
      "function_name": "generate_report",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_function_lengths.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 6,
      "function_name": "count_function_lines",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\check_function_lengths.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 28,
      "function_name": "check_file",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\check_netra_backend_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 309,
      "function_name": "main",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_netra_backend_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 38,
      "function_name": "__init__",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_netra_backend_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 64,
      "function_name": "analyze_file",
      "actual_value": 70,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_netra_backend_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 137,
      "function_name": "_check_import",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_netra_backend_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 164,
      "function_name": "_create_issue",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_netra_backend_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 193,
      "function_name": "analyze_directory",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\check_netra_backend_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 209,
      "function_name": "generate_report",
      "actual_value": 77,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_netra_backend_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 289,
      "function_name": "export_issues_json",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\check_relative_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 13,
      "function_name": "check_relative_imports",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_relative_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 50,
      "function_name": "main",
      "actual_value": 51,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 405,
      "function_name": "main",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 39,
      "function_name": "to_dict",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\check_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 96,
      "function_name": "_build_schema_registry",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\check_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 126,
      "function_name": "_scan_directory_for_schemas",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 157,
      "function_name": "_is_schema_class",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\check_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 174,
      "function_name": "analyze_file",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 216,
      "function_name": "_check_import",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 260,
      "function_name": "analyze_codebase",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 304,
      "function_name": "generate_report",
      "actual_value": 75,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 382,
      "function_name": "export_violations_json",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\check_test_compliance.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 23,
      "function_name": "check_function_lengths",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_test_compliance.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 67,
      "function_name": "check_mock_components",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\check_test_compliance.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 86,
      "function_name": "scan_test_files",
      "actual_value": 52,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_test_compliance.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 141,
      "function_name": "calculate_compliance_rate",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\check_test_compliance.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 154,
      "function_name": "print_report",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_test_compliance.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 196,
      "function_name": "main",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\check_test_import_order.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 8,
      "function_name": "check_import_order",
      "actual_value": 51,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\check_test_import_order.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 62,
      "function_name": "main",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\claude_audit_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 393,
      "function_name": "main",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\claude_audit_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 60,
      "function_name": "get",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\claude_audit_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 105,
      "function_name": "check_recursion",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\claude_audit_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 139,
      "function_name": "_analyze",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\claude_audit_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 176,
      "function_name": "_prepare_context",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\claude_audit_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 192,
      "function_name": "_build_prompt",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\claude_audit_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 229,
      "function_name": "_call_claude",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\claude_audit_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 260,
      "function_name": "_parse_response",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\claude_audit_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 284,
      "function_name": "_fallback_response",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\claude_audit_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 323,
      "function_name": "analyze_batch",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\claude_audit_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 339,
      "function_name": "generate_remediation_plan",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\claude_commit_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 273,
      "function_name": "main",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\claude_commit_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 22,
      "function_name": "__init__",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\claude_commit_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 44,
      "function_name": "check_recursion",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\claude_commit_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 57,
      "function_name": "should_bypass",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\claude_commit_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 83,
      "function_name": "get_staged_changes_summary",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\claude_commit_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 119,
      "function_name": "generate_commit_message",
      "actual_value": 67,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\claude_commit_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 189,
      "function_name": "get_fallback_message",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\claude_commit_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 212,
      "function_name": "save_state",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\claude_commit_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 233,
      "function_name": "run",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\claude_session_end_hook.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 19,
      "function_name": "run_command",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\claude_session_end_hook.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 47,
      "function_name": "create_commit_message",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\claude_session_end_hook.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 63,
      "function_name": "main",
      "actual_value": 75,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_duplicate_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 279,
      "function_name": "main",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_duplicate_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 44,
      "function_name": "is_auto_generated_file",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\cleanup_duplicate_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 63,
      "function_name": "has_standalone_test_module_import",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_duplicate_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 102,
      "function_name": "remove_test_module_import_function",
      "actual_value": 67,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_duplicate_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 172,
      "function_name": "find_test_files",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_duplicate_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 198,
      "function_name": "process_file",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_duplicate_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 238,
      "function_name": "run_cleanup",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_generated_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 92,
      "function_name": "cleanup_directory",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_generated_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 153,
      "function_name": "scan_for_cleanup",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_generated_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 182,
      "function_name": "print_scan_summary",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_generated_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 220,
      "function_name": "main",
      "actual_value": 103,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 13 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_test_processes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 18,
      "function_name": "kill_process_tree",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_test_processes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 57,
      "function_name": "find_test_processes",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_test_processes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 94,
      "function_name": "cleanup_test_processes",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_test_processes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 141,
      "function_name": "main",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_workflow_runs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 15,
      "function_name": "run_gh_command",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_workflow_runs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 46,
      "function_name": "get_workflow_runs",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_workflow_runs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 89,
      "function_name": "get_artifacts",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_workflow_runs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 128,
      "function_name": "clean_local_directories",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_workflow_runs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 169,
      "function_name": "parse_args",
      "actual_value": 40,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_workflow_runs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 213,
      "function_name": "get_repo_from_git",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\cleanup_workflow_runs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 248,
      "function_name": "_clean_workflow_runs",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\cleanup_workflow_runs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 264,
      "function_name": "_clean_artifacts",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\clean_duplicate_mock_justifications.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 13,
      "function_name": "clean_file",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\clean_duplicate_mock_justifications.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 55,
      "function_name": "main",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\clean_slate_executor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 219,
      "function_name": "main",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\clean_slate_executor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 53,
      "function_name": "phase1_assessment",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\clean_slate_executor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 95,
      "function_name": "phase2_database_reset",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\clean_slate_executor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 120,
      "function_name": "phase3_code_cleanup",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\clean_slate_executor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 155,
      "function_name": "phase4_validation",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\clean_slate_executor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 185,
      "function_name": "execute",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\code_audit_orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 392,
      "function_name": "main",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\code_audit_orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 25,
      "function_name": "__init__",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\code_audit_orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 40,
      "function_name": "check_bypass",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\code_audit_orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 60,
      "function_name": "run_audit",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\code_audit_orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 110,
      "function_name": "_get_changed_files",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\code_audit_orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 133,
      "function_name": "_detect_duplicates",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\code_audit_orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 167,
      "function_name": "_detect_legacy",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\code_audit_orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 197,
      "function_name": "_run_claude_analysis",
      "actual_value": 52,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\code_audit_orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 252,
      "function_name": "_determine_blocking",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\code_audit_orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 268,
      "function_name": "_get_statistics",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\code_audit_orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 285,
      "function_name": "_generate_report",
      "actual_value": 90,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 12 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\code_audit_orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 378,
      "function_name": "_save_report",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\code_review_ai_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 21,
      "function_name": "run_command",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\code_review_ai_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 44,
      "function_name": "_check_duplicates",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\code_review_ai_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 76,
      "function_name": "_check_type_consistency",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\code_review_ai_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 101,
      "function_name": "_check_error_handling",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\code_review_ai_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 121,
      "function_name": "_check_ai_patterns",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\code_review_analysis.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 24,
      "function_name": "run_command",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\code_review_analysis.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 54,
      "function_name": "_analyze_hotspots",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\code_review_analysis.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 74,
      "function_name": "_analyze_large_changes",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\code_review_analysis.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 99,
      "function_name": "check_spec_code_alignment",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\code_review_analysis.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 111,
      "function_name": "_check_key_specifications",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\code_review_analysis.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 133,
      "function_name": "_check_missing_specifications",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\code_review_analysis.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 168,
      "function_name": "_check_frontend_bundle_size",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\code_review_analysis.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 187,
      "function_name": "_check_hardcoded_secrets",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\code_review_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 17,
      "function_name": "__init__",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\code_review_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 23,
      "function_name": "_add_executive_summary",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\code_review_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 119,
      "function_name": "_add_recommendations",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\code_review_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 142,
      "function_name": "generate_report",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\code_review_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 169,
      "function_name": "save_report",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\code_review_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 215,
      "function_name": "determine_final_status",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\code_review_smoke_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 21,
      "function_name": "run_command",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\code_review_smoke_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 34,
      "function_name": "run_smoke_tests",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\code_review_smoke_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 55,
      "function_name": "_run_backend_tests",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\code_review_smoke_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 73,
      "function_name": "_run_frontend_tests",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\code_review_smoke_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 91,
      "function_name": "_run_import_tests",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\comprehensive_e2e_import_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 318,
      "function_name": "main",
      "actual_value": 66,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_e2e_import_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 41,
      "function_name": "fix_schemas_import",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_e2e_import_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 75,
      "function_name": "fix_test_helpers_imports",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_e2e_import_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 104,
      "function_name": "fix_websocket_imports",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_e2e_import_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 133,
      "function_name": "fix_agent_schema_imports",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_e2e_import_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 162,
      "function_name": "fix_unified_test_imports",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_e2e_import_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 191,
      "function_name": "fix_syntax_errors",
      "actual_value": 49,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_e2e_import_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 243,
      "function_name": "fix_file",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_e2e_import_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 267,
      "function_name": "fix_all_failed_tests",
      "actual_value": 46,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 747,
      "function_name": "main",
      "actual_value": 49,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 74,
      "function_name": "to_json",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 97,
      "function_name": "print_summary",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 139,
      "function_name": "__init__",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 160,
      "function_name": "_pre_validate_imports",
      "actual_value": 69,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 232,
      "function_name": "scan_file",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 279,
      "function_name": "_analyze_import",
      "actual_value": 85,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 11 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 367,
      "function_name": "_validate_module",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 395,
      "function_name": "_validate_name_in_module",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 430,
      "function_name": "_find_module_file",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 444,
      "function_name": "_resolve_relative_import",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 463,
      "function_name": "_suggest_module_fix",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 489,
      "function_name": "_suggest_name_fix",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 510,
      "function_name": "detect_circular_imports",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 547,
      "function_name": "_path_to_module",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 563,
      "function_name": "scan_directory",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 609,
      "function_name": "run_comprehensive_scan",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 660,
      "function_name": "fix_missing_name",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 693,
      "function_name": "fix_missing_module",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 719,
      "function_name": "auto_fix_issues",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_import_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 523,
      "function_name": "dfs",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\comprehensive_test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 25,
      "function_name": "analyze_test_output",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 76,
      "function_name": "generate_function_stub",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\comprehensive_test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 177,
      "function_name": "fix_missing_function",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 221,
      "function_name": "_module_to_file_path",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\comprehensive_test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 257,
      "function_name": "_add_import",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\comprehensive_test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 286,
      "function_name": "process_all_failures",
      "actual_value": 56,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 346,
      "function_name": "_get_failing_tests",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\comprehensive_test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 360,
      "function_name": "_run_test",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\comprehensive_test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 385,
      "function_name": "generate_report",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\configure_audit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 247,
      "function_name": "main",
      "actual_value": 70,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\configure_audit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 30,
      "function_name": "show_status",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\configure_audit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 64,
      "function_name": "set_level",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\configure_audit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 80,
      "function_name": "set_feature",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\configure_audit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 99,
      "function_name": "set_threshold",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\configure_audit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 125,
      "function_name": "quick_setup",
      "actual_value": 59,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\configure_audit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 187,
      "function_name": "add_team",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\configure_audit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 200,
      "function_name": "test_config",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\configure_claude_commit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 164,
      "function_name": "main",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\configure_claude_commit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 29,
      "function_name": "status",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\configure_claude_commit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 61,
      "function_name": "enable",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\configure_claude_commit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 90,
      "function_name": "test",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\configure_claude_commit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 125,
      "function_name": "show_usage_tips",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\config_setup.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 20,
      "function_name": "combine_config_results",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\config_setup_core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 245,
      "function_name": "combine_config_results",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\config_setup_scripts.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 28,
      "function_name": "create_windows_startup_script",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\config_setup_scripts.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 41,
      "function_name": "get_windows_script_content",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\config_setup_scripts.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 68,
      "function_name": "create_unix_startup_script",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\config_setup_scripts.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 82,
      "function_name": "get_unix_script_content",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\config_setup_scripts.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 149,
      "function_name": "verify_module_imports",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\config_setup_scripts.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 190,
      "function_name": "get_db_test_script",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\config_setup_scripts.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 209,
      "function_name": "combine_test_results",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\consolidate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 219,
      "function_name": "main",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\consolidate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 20,
      "function_name": "__init__",
      "actual_value": 47,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\consolidate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 69,
      "function_name": "scan_all_types",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\consolidate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 103,
      "function_name": "plan_consolidation",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\consolidate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 136,
      "function_name": "generate_import_updates",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\consolidate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 157,
      "function_name": "_calculate_relative_import",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\consolidate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 172,
      "function_name": "print_consolidation_report",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\consolidate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 207,
      "function_name": "_print_category",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\create_additional_shims.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 256,
      "function_name": "create_shim_module",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\create_additional_shims.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 277,
      "function_name": "main",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\create_agent_fix_tasks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 7,
      "function_name": "create_agent_tasks",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\create_enforcement_tools.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 364,
      "function_name": "create_argument_parser",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\create_enforcement_tools.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 61,
      "function_name": "update",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\create_enforcement_tools.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 78,
      "function_name": "__init__",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\create_enforcement_tools.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 108,
      "function_name": "get_all_files",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\create_enforcement_tools.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 127,
      "function_name": "check_file_size_violations",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\create_enforcement_tools.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 154,
      "function_name": "analyze_function_complexity",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\create_enforcement_tools.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 187,
      "function_name": "check_function_complexity_violations",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\create_enforcement_tools.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 208,
      "function_name": "find_duplicate_types",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\create_enforcement_tools.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 250,
      "function_name": "detect_test_stubs",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\create_enforcement_tools.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 298,
      "function_name": "_count_function_lines",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\create_enforcement_tools.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 318,
      "function_name": "run_all_checks",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\create_import_shims.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 112,
      "function_name": "create_shim_module",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\create_import_shims.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 133,
      "function_name": "main",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\create_staging_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 38,
      "function_name": "check_secret_exists",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\create_staging_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 53,
      "function_name": "create_secret",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\create_staging_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 88,
      "function_name": "get_production_secret",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\create_staging_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 125,
      "function_name": "_check_existing_secrets",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\create_staging_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 138,
      "function_name": "_create_missing_secrets",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\create_staging_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 164,
      "function_name": "_print_summary",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\create_staging_secrets_complete.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 184,
      "function_name": "main",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\create_staging_secrets_complete.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 19,
      "function_name": "create_all_secrets",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\create_staging_secrets_complete.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 44,
      "function_name": "_generate_secret_values",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\create_staging_secrets_complete.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 63,
      "function_name": "_generate_secure_key",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\create_staging_secrets_complete.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 85,
      "function_name": "_create_secret",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\create_staging_secrets_complete.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 133,
      "function_name": "validate_secrets",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\create_staging_secrets_complete.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 167,
      "function_name": "print_manual_fixes_needed",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 67,
      "function_name": "find_violations",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 92,
      "function_name": "_analyze_file",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 104,
      "function_name": "suggest_decomposition",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 135,
      "function_name": "generate_report",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 165,
      "function_name": "main",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\decompose_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 30,
      "function_name": "visit_FunctionDef",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\deduplicate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 383,
      "function_name": "main",
      "actual_value": 56,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deduplicate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 71,
      "function_name": "_setup_python_mappings",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\deduplicate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 83,
      "function_name": "_setup_websocket_mappings",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\deduplicate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 125,
      "function_name": "find_python_imports",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deduplicate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 166,
      "function_name": "find_typescript_imports",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deduplicate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 220,
      "function_name": "preview_changes",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deduplicate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 250,
      "function_name": "apply_replacements",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deduplicate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 294,
      "function_name": "run_tests",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deduplicate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 332,
      "function_name": "delete_duplicate_files",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deduplicate_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 357,
      "function_name": "generate_report",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\demo_enhanced_categorizer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 28,
      "function_name": "compare_categorization_approaches",
      "actual_value": 69,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\demo_enhanced_categorizer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 101,
      "function_name": "categorize_specific_examples",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\demo_feature_flag_system.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 36,
      "function_name": "demonstrate_feature_flag_basics",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\demo_feature_flag_system.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 61,
      "function_name": "demonstrate_tdd_workflow",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\demo_feature_flag_system.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 87,
      "function_name": "demonstrate_environment_overrides",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\demo_feature_flag_system.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 124,
      "function_name": "demonstrate_ci_cd_integration",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\demo_feature_flag_system.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 161,
      "function_name": "demonstrate_decorator_usage",
      "actual_value": 46,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\demo_feature_flag_system.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 211,
      "function_name": "demonstrate_business_value",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\demo_feature_flag_system.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 253,
      "function_name": "main",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\demo_real_llm_testing.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "demo_environment_validation",
      "actual_value": 57,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\demo_real_llm_testing.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 94,
      "function_name": "demo_real_llm_configuration",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\demo_real_llm_testing.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 128,
      "function_name": "demo_seed_data_management",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\demo_real_llm_testing.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 171,
      "function_name": "demo_test_environment_orchestration",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\demo_real_llm_testing.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 206,
      "function_name": "demo_cli_usage",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\demo_real_llm_testing.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 240,
      "function_name": "main",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\dependency_installer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 60,
      "function_name": "upgrade_pip",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\dependency_installer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 108,
      "function_name": "install_package_list",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dependency_installer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 178,
      "function_name": "build_frontend",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\dependency_installer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 195,
      "function_name": "combine_dependency_results",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dependency_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 43,
      "function_name": "scan_python_dependencies",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dependency_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 59,
      "function_name": "parse_requirements_file",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\dependency_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 72,
      "function_name": "extract_package_info",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\dependency_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 95,
      "function_name": "validate_python_dependency",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\dependency_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 109,
      "function_name": "scan_node_dependencies",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dependency_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 150,
      "function_name": "scan_system_dependencies",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dependency_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 166,
      "function_name": "check_system_dependency",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\dependency_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 180,
      "function_name": "is_version_compatible",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\dependency_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 195,
      "function_name": "generate_dependency_report",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dependency_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 221,
      "function_name": "apply_dependency_fixes",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dependency_services.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 40,
      "function_name": "get_os_specific_pg_instructions",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dependency_services.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 58,
      "function_name": "get_mac_pg_instructions",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\dependency_services.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 93,
      "function_name": "get_os_specific_redis_instructions",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dependency_services.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 145,
      "function_name": "combine_service_results",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\deploy_staging_with_sa.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 21,
      "function_name": "find_service_account_key",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_staging_with_sa.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 55,
      "function_name": "main",
      "actual_value": 78,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_staging_with_validation.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 17,
      "function_name": "run_pre_deployment_validation",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\deploy_staging_with_validation.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 35,
      "function_name": "deploy_with_enhanced_configuration",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_staging_with_validation.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 58,
      "function_name": "run_post_deployment_validation",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\deploy_staging_with_validation.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 80,
      "function_name": "main",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 943,
      "function_name": "main",
      "actual_value": 58,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 62,
      "function_name": "__init__",
      "actual_value": 62,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 126,
      "function_name": "check_gcloud",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 171,
      "function_name": "authenticate_with_service_account",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 185,
      "function_name": "validate_deployment_configuration",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 214,
      "function_name": "run_pre_deployment_checks",
      "actual_value": 58,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 275,
      "function_name": "enable_apis",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 323,
      "function_name": "create_dockerfile",
      "actual_value": 103,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 13 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 429,
      "function_name": "build_image_local",
      "actual_value": 53,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 485,
      "function_name": "build_image_cloud",
      "actual_value": 47,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 542,
      "function_name": "deploy_service",
      "actual_value": 83,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 11 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 628,
      "function_name": "wait_for_revision_ready",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 665,
      "function_name": "update_traffic_to_latest",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 709,
      "function_name": "get_service_url",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 734,
      "function_name": "setup_secrets",
      "actual_value": 66,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 803,
      "function_name": "health_check",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 838,
      "function_name": "deploy_all",
      "actual_value": 68,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\deploy_to_gcp.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 916,
      "function_name": "cleanup",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\detect_duplicate_code.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 282,
      "function_name": "main",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\detect_duplicate_code.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 41,
      "function_name": "scan_codebase",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\detect_duplicate_code.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 63,
      "function_name": "_analyze_file",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\detect_duplicate_code.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 81,
      "function_name": "_record_class",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\detect_duplicate_code.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 99,
      "function_name": "detect_duplicates",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\detect_duplicate_code.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 126,
      "function_name": "_detect_websocket_duplicates",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\detect_duplicate_code.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 151,
      "function_name": "_detect_component_duplicates",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\detect_duplicate_code.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 178,
      "function_name": "_detect_wrapper_patterns",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\detect_duplicate_code.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 211,
      "function_name": "generate_report",
      "actual_value": 47,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\detect_duplicate_code.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 261,
      "function_name": "save_json_report",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\dev_launcher_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 28,
      "function_name": "_find_project_root_by_markers",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\dev_launcher_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 50,
      "function_name": "resolve_path",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\dev_launcher_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 135,
      "function_name": "setup_environment_variables",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dev_launcher_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 151,
      "function_name": "setup_frontend_environment",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\dev_launcher_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 175,
      "function_name": "validate_dependencies",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dev_launcher_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 193,
      "function_name": "validate_frontend_directory",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dev_launcher_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 231,
      "function_name": "_try_last_resort_import",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\dev_launcher_core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 37,
      "function_name": "__init__",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dev_launcher_core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 72,
      "function_name": "_setup_process_tracking",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\dev_launcher_core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 109,
      "function_name": "cleanup",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dev_launcher_core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 125,
      "function_name": "check_dependencies",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\dev_launcher_core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 147,
      "function_name": "run",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\dev_launcher_core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 171,
      "function_name": "_run_services",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dev_launcher_core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 190,
      "function_name": "_start_backend_service",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\dev_launcher_core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 211,
      "function_name": "_start_frontend_service",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\dev_launcher_core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 232,
      "function_name": "_monitor_services",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dev_launcher_core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 248,
      "function_name": "_wait_for_processes",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\dev_launcher_improved.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 31,
      "function_name": "_get_usage_examples",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dev_launcher_improved.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 76,
      "function_name": "_create_launcher_from_args",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dev_launcher_monitoring.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 14,
      "function_name": "wait_for_service",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dev_launcher_monitoring.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 46,
      "function_name": "open_browser",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dev_launcher_monitoring.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 80,
      "function_name": "validate_backend_health",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dev_launcher_monitoring.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 97,
      "function_name": "validate_frontend_health",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dev_launcher_monitoring.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 114,
      "function_name": "print_service_summary",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\dev_launcher_monitoring.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 141,
      "function_name": "print_configuration_summary",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\dev_launcher_monitoring.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 156,
      "function_name": "monitor_processes_loop",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dev_launcher_processes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 206,
      "function_name": "create_backend_process",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\dev_launcher_processes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 230,
      "function_name": "create_frontend_process",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\dev_launcher_processes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 256,
      "function_name": "cleanup_process",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dev_launcher_processes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 76,
      "function_name": "__init__",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dev_launcher_processes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 109,
      "function_name": "_terminate_process",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\dev_launcher_processes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 122,
      "function_name": "_monitor_loop",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\dev_launcher_processes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 135,
      "function_name": "_handle_process_crash",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\dev_launcher_processes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 155,
      "function_name": "_log_crash",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dev_launcher_processes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 171,
      "function_name": "_attempt_restart",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\dev_launcher_processes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 186,
      "function_name": "_perform_restart",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dev_launcher_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 39,
      "function_name": "_parse_env_file",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\dev_launcher_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 57,
      "function_name": "load_from_google_secrets",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dev_launcher_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 82,
      "function_name": "_fetch_all_secrets",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\dev_launcher_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 101,
      "function_name": "_get_secret_mappings",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dev_launcher_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 122,
      "function_name": "load_all_secrets",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dev_launcher_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 138,
      "function_name": "_finalize_secret_loading",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\dev_launcher_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 177,
      "function_name": "_print_summary",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dev_launcher_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 200,
      "function_name": "_write_env_file",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dev_launcher_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 233,
      "function_name": "_get_env_file_categories",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\dev_launcher_service.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 40,
      "function_name": "start_backend",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\dev_launcher_service.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 56,
      "function_name": "_get_backend_port",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\dev_launcher_service.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 68,
      "function_name": "_get_server_script",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\dev_launcher_service.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 82,
      "function_name": "_build_backend_command",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dev_launcher_service.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 100,
      "function_name": "_start_backend_process",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\dev_launcher_service.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 119,
      "function_name": "_finalize_backend_startup",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\dev_launcher_service.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 139,
      "function_name": "start_frontend",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\dev_launcher_service.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 159,
      "function_name": "_get_frontend_port",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\dev_launcher_service.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 179,
      "function_name": "_build_frontend_command",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\dev_launcher_service.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 200,
      "function_name": "_start_frontend_process",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\dev_launcher_service.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 224,
      "function_name": "_finalize_frontend_startup",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\diagnostic_helpers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 57,
      "function_name": "create_dependency_error",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\diagnostic_helpers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 94,
      "function_name": "get_system_state",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\diagnostic_helpers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 123,
      "function_name": "get_configuration",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\diagnostic_helpers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 148,
      "function_name": "run_command_async",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 391,
      "function_name": "analyze_changed_files",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 36,
      "function_name": "similarity_to",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 83,
      "function_name": "_init_legacy_patterns",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 136,
      "function_name": "analyze_file",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 163,
      "function_name": "_extract_code_block",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 223,
      "function_name": "_semantic_hash",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 250,
      "function_name": "_check_legacy_patterns",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 266,
      "function_name": "find_duplicates",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 322,
      "function_name": "_suggest_action",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 336,
      "function_name": "get_statistics",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 348,
      "function_name": "generate_report",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\e2e_import_fixer_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 551,
      "function_name": "main",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\e2e_import_fixer_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 59,
      "function_name": "__init__",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\e2e_import_fixer_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 111,
      "function_name": "discover_all_e2e_tests",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\e2e_import_fixer_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 140,
      "function_name": "analyze_file",
      "actual_value": 64,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\e2e_import_fixer_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 207,
      "function_name": "_check_import",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\e2e_import_fixer_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 249,
      "function_name": "_check_import_from",
      "actual_value": 72,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\e2e_import_fixer_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 324,
      "function_name": "_suggest_fix_for_module",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\e2e_import_fixer_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 351,
      "function_name": "_try_import_file",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\e2e_import_fixer_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 370,
      "function_name": "fix_file",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\e2e_import_fixer_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 404,
      "function_name": "run_comprehensive_fix",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\e2e_import_fixer_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 429,
      "function_name": "generate_report",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\e2e_import_fixer_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 476,
      "function_name": "validate_all_tests_load",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\e2e_import_fixer_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 497,
      "function_name": "print_report",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\e2e_import_fixer_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 534,
      "function_name": "save_report",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\emergency_boundary_actions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 429,
      "function_name": "main",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\emergency_boundary_actions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 42,
      "function_name": "assess_emergency_level",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\emergency_boundary_actions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 57,
      "function_name": "execute_emergency_response",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\emergency_boundary_actions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 73,
      "function_name": "_get_current_violations",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\emergency_boundary_actions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 108,
      "function_name": "_execute_critical_response",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\emergency_boundary_actions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 133,
      "function_name": "_execute_high_response",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\emergency_boundary_actions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 152,
      "function_name": "_execute_medium_response",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\emergency_boundary_actions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 278,
      "function_name": "_execute_action",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\emergency_boundary_actions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 323,
      "function_name": "_generate_emergency_report",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\emergency_boundary_actions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 381,
      "function_name": "_get_recommended_actions",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\emergency_boundary_actions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 409,
      "function_name": "_log_emergency_actions",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\enable_metadata_tracking.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 14,
      "function_name": "_get_argument_parser",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\enable_metadata_tracking.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 54,
      "function_name": "main",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\enforce_limits.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 221,
      "function_name": "create_argument_parser",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\enforce_limits.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 266,
      "function_name": "collect_target_files",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\enforce_limits.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 285,
      "function_name": "main",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\enforce_limits.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 38,
      "function_name": "check_file",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\enforce_limits.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 74,
      "function_name": "check_file",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\enforce_limits.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 96,
      "function_name": "_check_function_node",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\enforce_limits.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 128,
      "function_name": "check_files",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\enforce_limits.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 161,
      "function_name": "generate_console_report",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\enforce_limits.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 189,
      "function_name": "generate_json_report",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\enhanced_fix_datetime_deprecation.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 70,
      "function_name": "_replace_datetime_patterns",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\enhanced_fix_datetime_deprecation.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 93,
      "function_name": "main",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\enhance_dev_launcher_boundaries.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 12,
      "function_name": "enhance_launcher_config",
      "actual_value": 47,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\enhance_dev_launcher_boundaries.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 62,
      "function_name": "enhance_launcher_args",
      "actual_value": 48,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\enhance_dev_launcher_boundaries.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 113,
      "function_name": "enhance_launcher_main",
      "actual_value": 54,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\enhance_dev_launcher_boundaries.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 170,
      "function_name": "_get_vscode_settings_content",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\enhance_dev_launcher_boundaries.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 203,
      "function_name": "_get_vscode_tasks_content",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\enhance_dev_launcher_boundaries.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 283,
      "function_name": "main",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\extract_function_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 75,
      "function_name": "main",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\extract_function_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 15,
      "function_name": "check_file",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\extract_function_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 45,
      "function_name": "_is_critical_path",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\extract_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 6,
      "function_name": "extract_violations",
      "actual_value": 55,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fast_import_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 15,
      "function_name": "check_module_exists",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\fast_import_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 31,
      "function_name": "get_module_exports",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\fast_import_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 54,
      "function_name": "fix_known_import_issues",
      "actual_value": 272,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 35 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fast_import_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 331,
      "function_name": "scan_e2e_tests",
      "actual_value": 52,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fast_import_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 387,
      "function_name": "verify_fixes",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fast_import_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 420,
      "function_name": "main",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\final_syntax_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 10,
      "function_name": "create_minimal_test_file",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\final_syntax_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 63,
      "function_name": "get_files_with_errors",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\final_syntax_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 85,
      "function_name": "main",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\find_all_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 9,
      "function_name": "run_pytest_collect",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\find_all_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 50,
      "function_name": "main",
      "actual_value": 56,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\find_large_app_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 16,
      "function_name": "find_large_files",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\find_long_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 16,
      "function_name": "find_long_functions",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\find_long_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 38,
      "function_name": "scan_directory",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\find_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 14,
      "function_name": "scan_python_file",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\find_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 40,
      "function_name": "scan_directory",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\find_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 66,
      "function_name": "print_results",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\find_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 85,
      "function_name": "main",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_connection_manager_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 7,
      "function_name": "fix_file",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_connection_manager_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 49,
      "function_name": "main",
      "actual_value": 47,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 9,
      "function_name": "fix_file",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\fix_all_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 27,
      "function_name": "main",
      "actual_value": 100,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 13 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 131,
      "function_name": "fix_syntax_error",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 15,
      "function_name": "find_actual_location",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\fix_all_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 34,
      "function_name": "analyze_import_errors",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 70,
      "function_name": "fix_imports_in_file",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 109,
      "function_name": "find_test_files_with_imports",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\fix_all_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 127,
      "function_name": "run_pytest_check",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\fix_all_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 140,
      "function_name": "main",
      "actual_value": 80,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 11 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_import_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 71,
      "function_name": "fix_imports_in_file",
      "actual_value": 71,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_import_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 146,
      "function_name": "remove_sys_path_manipulation",
      "actual_value": 63,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_import_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 213,
      "function_name": "fix_pytest_config",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_import_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 245,
      "function_name": "main",
      "actual_value": 111,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 14 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_import_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 24,
      "function_name": "visit_ImportFrom",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_import_syntax.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 11,
      "function_name": "fix_import_syntax_patterns",
      "actual_value": 72,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_import_syntax.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 87,
      "function_name": "fix_file",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_import_syntax.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 119,
      "function_name": "main",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 36,
      "function_name": "fix_function_signature_colon",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\fix_all_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 54,
      "function_name": "fix_incomplete_imports",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 92,
      "function_name": "fix_indentation_issues",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\fix_all_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 112,
      "function_name": "fix_malformed_function_definitions",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\fix_all_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 130,
      "function_name": "fix_missing_indentation",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\fix_all_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 160,
      "function_name": "fix_file",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 186,
      "function_name": "scan_and_fix_directory",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 219,
      "function_name": "main",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_test_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 11,
      "function_name": "find_test_files",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\fix_all_test_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 28,
      "function_name": "fix_invalid_syntax_at_line_4_5",
      "actual_value": 48,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_test_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 79,
      "function_name": "fix_unmatched_parens",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_test_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 119,
      "function_name": "split_large_test_file",
      "actual_value": 88,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 12 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_all_test_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 210,
      "function_name": "main",
      "actual_value": 84,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 11 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_background_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 7,
      "function_name": "fix_file",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_background_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 42,
      "function_name": "main",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_boolean_comparisons.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 9,
      "function_name": "fix_boolean_comparisons",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_common_test_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 25,
      "function_name": "run_simple_unit_tests",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_common_test_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 64,
      "function_name": "main",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_comprehensive_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 297,
      "function_name": "main",
      "actual_value": 55,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_comprehensive_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 29,
      "function_name": "scan_for_import_issues",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\fix_comprehensive_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 49,
      "function_name": "fix_data_sub_agent_imports",
      "actual_value": 74,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_comprehensive_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 126,
      "function_name": "fix_demo_service_imports",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_comprehensive_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 165,
      "function_name": "fix_supervisor_imports",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_comprehensive_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 197,
      "function_name": "fix_supply_researcher_imports",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_comprehensive_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 236,
      "function_name": "fix_all_imports",
      "actual_value": 57,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_critical_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 29,
      "function_name": "fix_common_issues",
      "actual_value": 55,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_critical_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 91,
      "function_name": "get_files_with_syntax_errors",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\fix_critical_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 113,
      "function_name": "main",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_database_duplicates.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 18,
      "function_name": "find_files_with_database_imports",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_database_duplicates.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 49,
      "function_name": "fix_database_imports",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_database_duplicates.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 97,
      "function_name": "main",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_datetime_deprecation.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 9,
      "function_name": "fix_datetime_in_file",
      "actual_value": 48,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_datetime_deprecation.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 60,
      "function_name": "main",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\fix_deployment_logging.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 320,
      "function_name": "main",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_deployment_logging.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 28,
      "function_name": "run",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\fix_deployment_logging.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 49,
      "function_name": "analyze_current_state",
      "actual_value": 70,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_deployment_logging.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 122,
      "function_name": "apply_fixes",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\fix_deployment_logging.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 144,
      "function_name": "fix_dockerfile",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_deployment_logging.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 190,
      "function_name": "fix_requirements",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_deployment_logging.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 222,
      "function_name": "validate_deployment",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\fix_deployment_logging.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 234,
      "function_name": "validate_docker_builds",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\fix_deployment_logging.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 251,
      "function_name": "validate_shared_imports",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\fix_deployment_logging.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 266,
      "function_name": "validate_environment_vars",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_deployment_logging.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 289,
      "function_name": "generate_report",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_double_modern.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 6,
      "function_name": "fix_file",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_double_modern.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 31,
      "function_name": "main",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\fix_e2e_connection_manager_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 23,
      "function_name": "find_files_with_connection_manager_imports",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_connection_manager_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 51,
      "function_name": "fix_connection_manager_imports",
      "actual_value": 51,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_connection_manager_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 105,
      "function_name": "main",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 406,
      "function_name": "main",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\fix_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "__init__",
      "actual_value": 65,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 100,
      "function_name": "fix_file",
      "actual_value": 70,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 199,
      "function_name": "cleanup_content",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\fix_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 219,
      "function_name": "create_missing_helpers",
      "actual_value": 144,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 19 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 366,
      "function_name": "fix_all_e2e_tests",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 345,
      "function_name": "main",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 47,
      "function_name": "_get_common_fixtures",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 77,
      "function_name": "analyze_test_file",
      "actual_value": 60,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 140,
      "function_name": "_find_missing_fixtures",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 166,
      "function_name": "_find_import_errors",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\fix_e2e_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 183,
      "function_name": "fix_test_file",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 216,
      "function_name": "_fix_import_errors",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\fix_e2e_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 230,
      "function_name": "_add_basic_tests",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 281,
      "function_name": "generate_report",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 322,
      "function_name": "fix_all_issues",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\fix_e2e_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 218,
      "function_name": "main",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\fix_e2e_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 31,
      "function_name": "__init__",
      "actual_value": 76,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 109,
      "function_name": "scan_test_directories",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 132,
      "function_name": "fix_imports_in_file",
      "actual_value": 55,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 190,
      "function_name": "run",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_websocket_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "analyze_file_imports",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_websocket_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 66,
      "function_name": "fix_file_imports",
      "actual_value": 75,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_e2e_websocket_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 144,
      "function_name": "main",
      "actual_value": 78,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_embedded_setup_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 226,
      "function_name": "main",
      "actual_value": 52,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_embedded_setup_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 50,
      "function_name": "fix_embedded_setup",
      "actual_value": 72,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_embedded_setup_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 128,
      "function_name": "process_file",
      "actual_value": 46,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_embedded_setup_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 190,
      "function_name": "generate_report",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_frontend_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 20,
      "function_name": "_add_test_providers_import",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\fix_frontend_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 92,
      "function_name": "_insert_fetch_mock",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\fix_frontend_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 113,
      "function_name": "fix_test_file",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\fix_frontend_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 126,
      "function_name": "main",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_import_indents.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 7,
      "function_name": "fix_import_indents",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_import_indents.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 52,
      "function_name": "main",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_import_indents.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 20,
      "function_name": "fix_import",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\fix_import_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 17,
      "function_name": "fix_validate_token_imports",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_import_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 49,
      "function_name": "fix_websockets_import",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_import_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 89,
      "function_name": "fix_connection_manager_specs",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_import_issues.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 121,
      "function_name": "main",
      "actual_value": 60,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_import_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 13,
      "function_name": "fix_import_syntax_in_file",
      "actual_value": 94,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 12 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_import_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 111,
      "function_name": "main",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_integration_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 274,
      "function_name": "main",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\fix_integration_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 31,
      "function_name": "find_test_files",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\fix_integration_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 52,
      "function_name": "fix_environment_assertions",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_integration_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 92,
      "function_name": "fix_database_url_expectations",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_integration_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 118,
      "function_name": "fix_mock_configuration_issues",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_integration_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 165,
      "function_name": "fix_import_issues",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_integration_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 205,
      "function_name": "add_environment_override_decorator",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\fix_integration_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 221,
      "function_name": "fix_file",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_integration_tests_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 247,
      "function_name": "run_fixes",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_malformed_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 271,
      "function_name": "main",
      "actual_value": 60,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_malformed_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 59,
      "function_name": "find_malformed_pattern",
      "actual_value": 48,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_malformed_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 113,
      "function_name": "fix_malformed_imports",
      "actual_value": 54,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_malformed_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 173,
      "function_name": "process_file",
      "actual_value": 46,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_malformed_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 235,
      "function_name": "generate_report",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_missing_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 39,
      "function_name": "add_missing_imports",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\fix_missing_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 60,
      "function_name": "add_missing_functions",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_missing_functions.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 97,
      "function_name": "main",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_monitoring_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 11,
      "function_name": "fix_alert_manager_core",
      "actual_value": 59,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_monitoring_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 73,
      "function_name": "fix_alert_notifications",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_monitoring_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 113,
      "function_name": "fix_all_violations",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\fix_nested_unified_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 8,
      "function_name": "fix_nested_unified_imports",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_nested_unified_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 48,
      "function_name": "main",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\fix_netra_backend_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 227,
      "function_name": "main",
      "actual_value": 62,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_netra_backend_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 35,
      "function_name": "__init__",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_netra_backend_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 62,
      "function_name": "fix_file",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_netra_backend_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 108,
      "function_name": "_determine_fix_type",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\fix_netra_backend_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 121,
      "function_name": "fix_directory",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_netra_backend_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 145,
      "function_name": "generate_report",
      "actual_value": 78,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_netra_domain.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 9,
      "function_name": "fix_domain_in_file",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_netra_domain.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 44,
      "function_name": "main",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_performance_monitor_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 13,
      "function_name": "fix_imports_in_file",
      "actual_value": 75,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_performance_monitor_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 94,
      "function_name": "find_files_to_fix",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_performance_monitor_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 127,
      "function_name": "main",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_remaining_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 9,
      "function_name": "fix_file",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\fix_remaining_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 27,
      "function_name": "main",
      "actual_value": 63,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_remaining_e2e_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 94,
      "function_name": "create_missing_helpers",
      "actual_value": 76,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_remaining_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 6,
      "function_name": "fix_import_indents",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_remaining_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 42,
      "function_name": "main",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_remaining_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 15,
      "function_name": "fix_import",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\fix_remaining_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 11,
      "function_name": "fix_empty_imports",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\fix_remaining_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 25,
      "function_name": "fix_unmatched_parentheses",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_remaining_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 49,
      "function_name": "fix_docstring_in_class",
      "actual_value": 53,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_remaining_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 105,
      "function_name": "fix_file_structure_issues",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_remaining_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 142,
      "function_name": "check_syntax",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\fix_remaining_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 155,
      "function_name": "fix_file",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_remaining_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 179,
      "function_name": "main",
      "actual_value": 58,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 264,
      "function_name": "main",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 28,
      "function_name": "move_schemas_to_canonical_location",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\fix_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 42,
      "function_name": "_move_schema_file",
      "actual_value": 70,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 117,
      "function_name": "fix_imports_in_file",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 152,
      "function_name": "fix_all_imports",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\fix_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 173,
      "function_name": "update_init_files",
      "actual_value": 48,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_schema_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 226,
      "function_name": "generate_report",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_simple_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 14,
      "function_name": "fix_simple_import_error",
      "actual_value": 60,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_simple_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 78,
      "function_name": "main",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 467,
      "function_name": "main",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 50,
      "function_name": "__init__",
      "actual_value": 62,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 120,
      "function_name": "run_command",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\fix_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 143,
      "function_name": "generate_secret_value",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\fix_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 160,
      "function_name": "create_secret",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 190,
      "function_name": "fix_secrets",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\fix_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 207,
      "function_name": "get_service_url",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\fix_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 219,
      "function_name": "update_service_secrets",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\fix_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 239,
      "function_name": "fix_service_configuration",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 292,
      "function_name": "validate_endpoint",
      "actual_value": 47,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 352,
      "function_name": "wait_for_service_deployment",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 376,
      "function_name": "generate_validation_report",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 401,
      "function_name": "run_complete_fix",
      "actual_value": 63,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_supervisor_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 20,
      "function_name": "fix_supervisor_imports",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_supervisor_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 52,
      "function_name": "find_files_with_bad_imports",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_supervisor_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 84,
      "function_name": "main",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\fix_syntax_errors_precise.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 35,
      "function_name": "fix_import_issues",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_syntax_errors_precise.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 60,
      "function_name": "fix_function_signature_issues",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_syntax_errors_precise.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 103,
      "function_name": "fix_unmatched_parentheses",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\fix_syntax_errors_precise.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 122,
      "function_name": "fix_indentation_after_keywords",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\fix_syntax_errors_precise.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 144,
      "function_name": "fix_try_except_blocks",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_syntax_errors_precise.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 189,
      "function_name": "fix_specific_file_issues",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\fix_syntax_errors_precise.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 212,
      "function_name": "fix_file",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_syntax_errors_precise.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 239,
      "function_name": "get_files_with_syntax_errors",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\fix_syntax_errors_precise.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 261,
      "function_name": "main",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_testcontainers_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 15,
      "function_name": "fix_testcontainers_imports",
      "actual_value": 47,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_testcontainers_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 74,
      "function_name": "find_files_with_testcontainers_imports",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\fix_testcontainers_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 103,
      "function_name": "main",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_batch.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 342,
      "function_name": "main",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_batch.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 31,
      "function_name": "analyze_failure",
      "actual_value": 48,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_batch.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 90,
      "function_name": "fix_import_error",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_batch.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 131,
      "function_name": "_find_similar_names",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_batch.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 156,
      "function_name": "_levenshtein_distance",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\fix_test_batch.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 176,
      "function_name": "_update_test_import",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\fix_test_batch.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 198,
      "function_name": "_create_stub_function",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\fix_test_batch.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 224,
      "function_name": "process_failing_tests",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_batch.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 326,
      "function_name": "process_single_test",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\fix_test_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 297,
      "function_name": "main",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 23,
      "function_name": "__init__",
      "actual_value": 113,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 15 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 138,
      "function_name": "scan_directory_for_errors",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\fix_test_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 152,
      "function_name": "has_import_errors",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\fix_test_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 168,
      "function_name": "analyze_import_errors",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 191,
      "function_name": "fix_file_imports",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 224,
      "function_name": "apply_common_fixes",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\fix_test_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 248,
      "function_name": "get_all_failing_test_files",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\fix_test_import_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 262,
      "function_name": "run_comprehensive_fix",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_import_order.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 9,
      "function_name": "fix_import_order",
      "actual_value": 75,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_import_order.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 87,
      "function_name": "main",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 11,
      "function_name": "fix_unclosed_parenthesis",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 48,
      "function_name": "fix_orphaned_methods",
      "actual_value": 49,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 100,
      "function_name": "fix_incomplete_imports",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\fix_test_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 120,
      "function_name": "fix_unexpected_indent",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 152,
      "function_name": "fix_invalid_syntax",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 184,
      "function_name": "check_syntax",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\fix_test_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 197,
      "function_name": "fix_file",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_syntax_errors.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 222,
      "function_name": "main",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_syntax_fix_classes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 11,
      "function_name": "fix_test_syntax_fix_class",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_syntax_fix_classes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 38,
      "function_name": "process_file",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_syntax_fix_classes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 64,
      "function_name": "main",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_syntax_fix_classes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 17,
      "function_name": "replace_init",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\fix_test_utils_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 23,
      "function_name": "fix_test_utils_imports",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_test_utils_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 59,
      "function_name": "main",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_unjustified_mocks_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 78,
      "function_name": "should_add_justification",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_unjustified_mocks_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 106,
      "function_name": "get_mock_justification",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\fix_unjustified_mocks_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 125,
      "function_name": "process_file",
      "actual_value": 51,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_unjustified_mocks_comprehensive.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 179,
      "function_name": "main",
      "actual_value": 49,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_warp_runners.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 9,
      "function_name": "update_runners",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_warp_runners.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 34,
      "function_name": "main",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\fix_websocket_connection_manager_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 168,
      "function_name": "main",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_websocket_connection_manager_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 34,
      "function_name": "__init__",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_websocket_connection_manager_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 81,
      "function_name": "fix_file",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_websocket_connection_manager_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 113,
      "function_name": "fix_all_imports",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_websocket_connection_manager_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 153,
      "function_name": "verify_fixes",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\fix_websocket_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 341,
      "function_name": "main",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_websocket_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 29,
      "function_name": "__init__",
      "actual_value": 102,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 13 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_websocket_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 134,
      "function_name": "_fix_multiline_websocket_core_import",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_websocket_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 175,
      "function_name": "scan_file",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_websocket_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 205,
      "function_name": "fix_file",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_websocket_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 240,
      "function_name": "find_python_files",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\fix_websocket_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 255,
      "function_name": "run_fixes",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\fix_websocket_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 301,
      "function_name": "validate_fixes",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\force_cancel_workflow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 11,
      "function_name": "get_workflow_runs",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\force_cancel_workflow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 28,
      "function_name": "force_cancel_workflow",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\force_cancel_workflow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 59,
      "function_name": "_display_and_find_stuck_runs",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\force_cancel_workflow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 128,
      "function_name": "main",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\function_complexity_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 350,
      "function_name": "main",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\function_complexity_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 379,
      "function_name": "_convert_results_to_json",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\function_complexity_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 47,
      "function_name": "_analyze_function",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\function_complexity_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 143,
      "function_name": "_get_focus_areas",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\function_complexity_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 165,
      "function_name": "_analyze_area",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\function_complexity_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 187,
      "function_name": "_analyze_file",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\function_complexity_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 210,
      "function_name": "_create_report_header",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\function_complexity_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 222,
      "function_name": "_create_summary_section",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\function_complexity_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 250,
      "function_name": "_analyze_area_functions",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\function_complexity_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 262,
      "function_name": "_format_function_analysis",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\function_complexity_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 278,
      "function_name": "_get_complexity_flags",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\function_complexity_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 293,
      "function_name": "_create_recommendations",
      "actual_value": 54,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_auth_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 240,
      "function_name": "main",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_auth_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 45,
      "function_name": "find_service_account_key",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_auth_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 77,
      "function_name": "_is_service_account_key",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\gcp_auth_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 91,
      "function_name": "setup_authentication",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_auth_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 129,
      "function_name": "_activate_gcloud_service_account",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_auth_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 178,
      "function_name": "get_authenticated_project_id",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\gcp_auth_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 211,
      "function_name": "get_config_summary",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_health_diagnostics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 32,
      "function_name": "__init__",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_health_diagnostics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 69,
      "function_name": "run_comprehensive_diagnostics",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\gcp_health_diagnostics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 86,
      "function_name": "_analyze_service",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_health_diagnostics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 116,
      "function_name": "_test_endpoint",
      "actual_value": 51,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_health_diagnostics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 170,
      "function_name": "_analyze_response_patterns",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_health_diagnostics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 206,
      "function_name": "_generate_recommendations",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_health_diagnostics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 242,
      "function_name": "_display_service_analysis",
      "actual_value": 53,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_health_diagnostics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 298,
      "function_name": "_generate_analysis_summary",
      "actual_value": 55,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_health_monitor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 359,
      "function_name": "main",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_health_monitor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 83,
      "function_name": "__init__",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\gcp_health_monitor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 98,
      "function_name": "_configure_services",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_health_monitor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 131,
      "function_name": "start_monitoring",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_health_monitor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 173,
      "function_name": "_check_service_health",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_health_monitor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 217,
      "function_name": "_perform_health_check",
      "actual_value": 47,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_health_monitor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 267,
      "function_name": "_display_status",
      "actual_value": 58,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\gcp_health_monitor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 344,
      "function_name": "_display_final_summary",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\gcp_quick_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 19,
      "function_name": "quick_health_check",
      "actual_value": 76,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\generate-json-schema.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 9,
      "function_name": "main",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\generate_openAPI_schema.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 17,
      "function_name": "generate_openapi_schema",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\generate_openapi_spec.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 30,
      "function_name": "get_openapi_spec",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\generate_openapi_spec.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 61,
      "function_name": "_add_contact_info",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\generate_openapi_spec.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 94,
      "function_name": "_get_security_schemes",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\generate_openapi_spec.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 115,
      "function_name": "save_spec_to_file",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\generate_openapi_spec.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 162,
      "function_name": "create_readme_version",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\generate_openapi_spec.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 179,
      "function_name": "upload_spec_to_readme",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\generate_openapi_spec.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 208,
      "function_name": "sync_to_readme",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\generate_openapi_spec.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 240,
      "function_name": "validate_spec",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\generate_openapi_spec.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 294,
      "function_name": "_add_readme_args",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\generate_startup_integration_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 226,
      "function_name": "generate_test_file",
      "actual_value": 152,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 20 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\generate_startup_integration_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 382,
      "function_name": "main",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\generate_startup_integration_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 410,
      "function_name": "generate_summary",
      "actual_value": 80,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 11 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\generate_test_audit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 36,
      "function_name": "count_test_files",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\generate_test_audit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 60,
      "function_name": "analyze_test_structure",
      "actual_value": 48,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\generate_test_audit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 111,
      "function_name": "check_test_health",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\generate_test_audit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 138,
      "function_name": "generate_audit_report",
      "actual_value": 122,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 16 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\generate_test_audit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 263,
      "function_name": "main",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\generate_wip_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 29,
      "function_name": "run_compliance_check",
      "actual_value": 56,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\generate_wip_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 101,
      "function_name": "calculate_testing_score",
      "actual_value": 63,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\generate_wip_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 167,
      "function_name": "generate_report",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\generate_wip_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 212,
      "function_name": "_format_action_items",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\generate_wip_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 232,
      "function_name": "_generate_markdown_report",
      "actual_value": 139,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 18 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\identify_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 15,
      "function_name": "analyze_file",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\identify_violations.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 37,
      "function_name": "scan_codebase",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\import_management.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 295,
      "function_name": "main",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\import_management.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 36,
      "function_name": "__init__",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\import_management.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 60,
      "function_name": "check_imports",
      "actual_value": 40,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\import_management.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 103,
      "function_name": "fix_imports",
      "actual_value": 52,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\import_management.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 158,
      "function_name": "verify_imports",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\import_management.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 188,
      "function_name": "generate_report",
      "actual_value": 61,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\import_management.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 252,
      "function_name": "run_workflow",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\init_database.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 29,
      "function_name": "create_tables",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\installer_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 47,
      "function_name": "create_installer_config",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\installer_types.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 62,
      "function_name": "create_version_requirements",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\local_secrets_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 204,
      "function_name": "main",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\local_secrets_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 37,
      "function_name": "_add_to_gitignore",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\local_secrets_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 58,
      "function_name": "_generate_key",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\local_secrets_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 92,
      "function_name": "_load_secrets",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\local_secrets_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 106,
      "function_name": "_save_secrets",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\local_secrets_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 126,
      "function_name": "list_secrets",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\local_secrets_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 190,
      "function_name": "_import_env_vars",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\manage_precommit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "enable_hooks",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\manage_precommit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 52,
      "function_name": "disable_hooks",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\manage_precommit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 74,
      "function_name": "status",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\manage_precommit.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 107,
      "function_name": "main",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\manage_workflows.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 51,
      "function_name": "get_workflow_status",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\manage_workflows.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 75,
      "function_name": "_get_workflow_category",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\manage_workflows.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 88,
      "function_name": "enable_workflow",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\manage_workflows.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 103,
      "function_name": "disable_workflow",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\manage_workflows.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 128,
      "function_name": "set_cost_budget",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\metadata_header_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 353,
      "function_name": "main",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\metadata_header_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 36,
      "function_name": "_get_git_state",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\metadata_header_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 72,
      "function_name": "generate_metadata",
      "actual_value": 49,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\metadata_header_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 133,
      "function_name": "format_python_header",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\metadata_header_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 150,
      "function_name": "format_javascript_header",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\metadata_header_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 169,
      "function_name": "get_header_for_file",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\metadata_header_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 189,
      "function_name": "_format_html_header",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\metadata_header_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 208,
      "function_name": "_format_sql_header",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\metadata_header_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 225,
      "function_name": "_format_yaml_header",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\metadata_header_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 253,
      "function_name": "add_header_to_file",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\metadata_header_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 302,
      "function_name": "add_headers_to_batch",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\metadata_header_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 328,
      "function_name": "save_metadata_log",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\monitor_oauth_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 199,
      "function_name": "main",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\monitor_oauth_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 21,
      "function_name": "check_services",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\monitor_oauth_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 41,
      "function_name": "check_oauth_config",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\monitor_oauth_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 62,
      "function_name": "test_oauth_initiation",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\monitor_oauth_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 95,
      "function_name": "monitor_logs",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\monitor_oauth_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 127,
      "function_name": "simulate_oauth_callback",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\monitor_oauth_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 152,
      "function_name": "run_full_diagnostics",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\precommit_duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 34,
      "function_name": "_load_critical_patterns",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\precommit_duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 61,
      "function_name": "check_files",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\precommit_duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 80,
      "function_name": "_check_file_naming",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\precommit_duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 104,
      "function_name": "_check_class_duplicates",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\precommit_duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 132,
      "function_name": "_check_existing_implementations",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\precommit_duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 172,
      "function_name": "_check_function_signatures",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\precommit_duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 196,
      "function_name": "_check_function_uniqueness",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\precommit_duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 221,
      "function_name": "_check_critical_patterns",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\precommit_duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 250,
      "function_name": "_run_comprehensive_scan",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\precommit_duplicate_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 286,
      "function_name": "_report_issues",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\prevent_numbered_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 54,
      "function_name": "check_file_naming",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\prevent_numbered_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 88,
      "function_name": "suggest_better_name",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\prevent_numbered_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 116,
      "function_name": "main",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\query_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 125,
      "function_name": "main",
      "actual_value": 78,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\query_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 32,
      "function_name": "search",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\query_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 50,
      "function_name": "get_exact",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\query_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 66,
      "function_name": "suggest",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\query_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 80,
      "function_name": "validate",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\query_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 107,
      "function_name": "get_stats",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\real_service_test_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 16,
      "function_name": "__init__",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\real_service_test_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 82,
      "function_name": "finalize",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\real_service_test_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 128,
      "function_name": "_build_test_summary_section",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\real_service_test_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 142,
      "function_name": "_build_llm_section",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\real_service_test_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 154,
      "function_name": "_build_database_section",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\real_service_test_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 166,
      "function_name": "_build_cache_section",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\real_service_test_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 178,
      "function_name": "_build_quality_section",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\real_service_test_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 191,
      "function_name": "_build_test_details_section",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\real_service_test_metrics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 234,
      "function_name": "_build_html_header",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\remove_duplicate_test_setup.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 12,
      "function_name": "remove_duplicate_setup",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\remove_duplicate_test_setup.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 34,
      "function_name": "main",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\remove_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 352,
      "function_name": "main",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\remove_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 41,
      "function_name": "__init__",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\remove_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 86,
      "function_name": "should_scan_file",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\remove_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 104,
      "function_name": "scan_directory",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\remove_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 120,
      "function_name": "scan_file",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\remove_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 140,
      "function_name": "_scan_comments",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\remove_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 160,
      "function_name": "_scan_hardcoded_data",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\remove_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 184,
      "function_name": "_scan_args_kwargs_stubs",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\remove_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 206,
      "function_name": "_scan_empty_implementations",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\remove_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 240,
      "function_name": "scan_all",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\remove_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 253,
      "function_name": "generate_report",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\remove_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 288,
      "function_name": "_generate_csv_report",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\remove_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 303,
      "function_name": "_generate_text_report",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\remove_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 339,
      "function_name": "save_report",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\reset_clickhouse.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 29,
      "function_name": "get_client",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\reset_clickhouse.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 43,
      "function_name": "list_tables",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\reset_clickhouse.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 90,
      "function_name": "_fetch_and_display_tables",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\reset_clickhouse.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 110,
      "function_name": "connect_to_clickhouse",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\reset_clickhouse.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 123,
      "function_name": "fetch_and_display_tables",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\reset_clickhouse.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 137,
      "function_name": "confirm_table_deletion",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\reset_clickhouse.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 156,
      "function_name": "verify_table_cleanup",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\reset_clickhouse.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 170,
      "function_name": "reset_clickhouse_instance",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\reset_clickhouse_auto.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 30,
      "function_name": "get_client",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\reset_clickhouse_auto.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 44,
      "function_name": "list_tables",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\reset_clickhouse_auto.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 91,
      "function_name": "_process_existing_tables",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\reset_clickhouse_auto.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 122,
      "function_name": "reset_clickhouse_instance",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\reset_clickhouse_auto.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 149,
      "function_name": "determine_target_configs",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\reset_clickhouse_auto.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 172,
      "function_name": "display_auto_summary",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\reset_clickhouse_final.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 15,
      "function_name": "_check_docker_container",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\reset_clickhouse_final.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 56,
      "function_name": "_verify_tables_dropped",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\reset_clickhouse_final.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 69,
      "function_name": "_process_single_database",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\reset_clickhouse_final.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 81,
      "function_name": "reset_local_clickhouse",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\reset_clickhouse_final.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 96,
      "function_name": "reset_cloud_clickhouse",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\scan_for_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 284,
      "function_name": "main",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\scan_for_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 45,
      "function_name": "_initialize_patterns",
      "actual_value": 83,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 11 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\scan_for_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 131,
      "function_name": "_get_excluded_paths",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\scan_for_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 152,
      "function_name": "_should_scan_file",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\scan_for_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 165,
      "function_name": "scan_file",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\scan_for_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 203,
      "function_name": "generate_report",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\scan_for_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 233,
      "function_name": "print_report",
      "actual_value": 40,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\scan_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 413,
      "function_name": "main",
      "actual_value": 104,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 14 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\scan_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 73,
      "function_name": "should_skip_file",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\scan_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 100,
      "function_name": "categorize_literal",
      "actual_value": 76,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\scan_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 180,
      "function_name": "scan_python_file",
      "actual_value": 54,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\scan_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 237,
      "function_name": "scan_javascript_file",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\scan_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 272,
      "function_name": "scan_file",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\scan_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 298,
      "function_name": "scan_directory",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\scan_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 311,
      "function_name": "generate_index",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\scan_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 344,
      "function_name": "save_index",
      "actual_value": 65,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\scan_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 194,
      "function_name": "visit_FunctionDef",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\scan_string_literals.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 208,
      "function_name": "visit_ClassDef",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\schema_sync.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 46,
      "function_name": "parse_command_line_args",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\schema_sync.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 144,
      "function_name": "main",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\schema_sync.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 173,
      "function_name": "print_usage",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\seed_staging_data.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 44,
      "function_name": "__init__",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\seed_staging_data.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 58,
      "function_name": "seed_all",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\seed_staging_data.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 136,
      "function_name": "_build_regular_user_data",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\seed_staging_data.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 148,
      "function_name": "seed_threads_and_messages",
      "actual_value": 49,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\seed_staging_data.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 250,
      "function_name": "_build_optimization_request_data",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\seed_staging_data.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 294,
      "function_name": "_generate_metric_value",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\seed_staging_data.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 310,
      "function_name": "_create_metric_entry",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\seed_staging_data.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 324,
      "function_name": "seed_metrics",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\seed_staging_data.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 342,
      "function_name": "generate_summary",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\service_discovery.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 12,
      "function_name": "__init__",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\service_discovery.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 34,
      "function_name": "write_backend_info",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\service_discovery.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 58,
      "function_name": "write_frontend_info",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\service_discovery.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 85,
      "function_name": "is_service_running",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\setup.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 47,
      "function_name": "_execute_installer",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\setup_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 35,
      "function_name": "install_act",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\setup_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 61,
      "function_name": "create_config_files",
      "actual_value": 53,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\setup_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 118,
      "function_name": "install_dependencies",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\setup_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 131,
      "function_name": "run_validation",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\setup_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 153,
      "function_name": "main",
      "actual_value": 56,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\setup_assistant.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 48,
      "function_name": "_create_assistant_config",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\setup_assistant.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 88,
      "function_name": "setup_netra_assistant",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\setup_claude_hooks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 18,
      "function_name": "setup_claude_hook",
      "actual_value": 86,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 11 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\setup_gcp_service_account.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 21,
      "function_name": "create_service_account",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\setup_gcp_service_account.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 69,
      "function_name": "download_key",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\setup_gcp_service_account.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 90,
      "function_name": "setup_default_credentials",
      "actual_value": 59,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\setup_gcp_service_account.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 153,
      "function_name": "main",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\setup_graceful_shutdown.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 19,
      "function_name": "setup_auth_service_shutdown",
      "actual_value": 88,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 12 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\setup_graceful_shutdown.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 110,
      "function_name": "setup_backend_shutdown",
      "actual_value": 94,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 12 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\setup_graceful_shutdown.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 207,
      "function_name": "create_dockerfile_optimizations",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\setup_graceful_shutdown.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 255,
      "function_name": "setup_all",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\setup_import_hooks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 20,
      "function_name": "setup_pre_commit_hook",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\setup_import_hooks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 59,
      "function_name": "verify_tools",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\setup_import_hooks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 83,
      "function_name": "test_import_check",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\setup_import_hooks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 116,
      "function_name": "main",
      "actual_value": 51,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\simple_enhance_boundaries.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 11,
      "function_name": "main",
      "actual_value": 57,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\simple_launcher.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 14,
      "function_name": "test_imports",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\simple_launcher.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 29,
      "function_name": "test_basic_launcher",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\simple_launcher.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 61,
      "function_name": "main",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\split_large_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 264,
      "function_name": "main",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\split_large_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 47,
      "function_name": "analyze_file",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\split_large_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 74,
      "function_name": "_find_imports_end",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\split_large_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 89,
      "function_name": "_analyze_classes",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\split_large_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 119,
      "function_name": "_find_class_end",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\split_large_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 132,
      "function_name": "_suggest_module_names",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\split_large_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 148,
      "function_name": "split_file",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\split_large_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 176,
      "function_name": "_create_module_content",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\split_learnings.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 17,
      "function_name": "parse_learnings",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\split_learnings.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 56,
      "function_name": "create_category_file",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\split_learnings.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 86,
      "function_name": "create_index",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\split_learnings.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 118,
      "function_name": "main",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\split_learnings_robust.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 10,
      "function_name": "extract_learnings",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\split_learnings_robust.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 46,
      "function_name": "create_category_file",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\split_learnings_robust.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 80,
      "function_name": "create_index",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\split_learnings_robust.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 127,
      "function_name": "main",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\staging_error_monitor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 240,
      "function_name": "load_config_from_args",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\staging_error_monitor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 264,
      "function_name": "main",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\staging_error_monitor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 119,
      "function_name": "should_fail_deployment",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\staging_error_monitor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 175,
      "function_name": "check_deployment_errors",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\staging_error_monitor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 196,
      "function_name": "format_console_output",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\staging_error_monitor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 225,
      "function_name": "run_error_check",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\standardize_l3_test_names.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "check_name_conflicts",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\standardize_l3_test_names.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 50,
      "function_name": "find_references_to_file",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\standardize_l3_test_names.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 96,
      "function_name": "update_file_references",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\standardize_l3_test_names.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 129,
      "function_name": "rename_with_git",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\standardize_l3_test_names.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 154,
      "function_name": "rename_l3_file",
      "actual_value": 40,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\standardize_l3_test_names.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 197,
      "function_name": "prioritize_files",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\standardize_l3_test_names.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 224,
      "function_name": "main",
      "actual_value": 70,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\startup_diagnostics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 85,
      "function_name": "check_dependencies",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\startup_diagnostics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 134,
      "function_name": "apply_single_fix",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\startup_diagnostics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 178,
      "function_name": "diagnose_startup",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\startup_diagnostics.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 206,
      "function_name": "main",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\startup_performance.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 84,
      "function_name": "run_tests",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\startup_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 117,
      "function_name": "_build_test_results",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\startup_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 139,
      "function_name": "_build_failed_details",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\startup_test_executor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 40,
      "function_name": "run_tests",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\startup_test_executor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 110,
      "function_name": "run_tests",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\startup_test_executor.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 182,
      "function_name": "run_tests",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\start_auth_service.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 22,
      "function_name": "start_dependencies",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\start_auth_service.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 47,
      "function_name": "start_auth_service",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\start_auth_service.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 82,
      "function_name": "stop_all",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\start_auth_service.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 95,
      "function_name": "run",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\start_test_services.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 19,
      "function_name": "check_docker_running",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\start_test_services.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 34,
      "function_name": "start_docker_services",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\start_test_services.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 59,
      "function_name": "create_test_compose_file",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\start_test_services.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 93,
      "function_name": "start_local_services",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\start_test_services.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 133,
      "function_name": "check_service_health",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\start_test_services.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 149,
      "function_name": "set_environment_variables",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\start_test_services.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 167,
      "function_name": "main",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\status_agent_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 36,
      "function_name": "check_agent_system",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_agent_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 48,
      "function_name": "_check_supervisor_status",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_agent_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 60,
      "function_name": "_determine_active_supervisor",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\status_agent_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 76,
      "function_name": "_check_sub_agents",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_agent_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 88,
      "function_name": "_analyze_sub_agent",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\status_agent_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 101,
      "function_name": "_check_apex_optimizer",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\status_agent_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 148,
      "function_name": "_check_backend_coverage",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_agent_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 174,
      "function_name": "_check_frontend_coverage",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_collector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 92,
      "function_name": "_find_pattern_in_lines",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\status_collector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 125,
      "function_name": "analyze_component_health",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\status_collector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 139,
      "function_name": "_process_health_check",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\status_collector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 191,
      "function_name": "collect_wip_items",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_collector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 203,
      "function_name": "_process_wip_check",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_collector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 248,
      "function_name": "run_quick_tests",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_collector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 270,
      "function_name": "_parse_test_results",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\status_integration_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 37,
      "function_name": "check_integration_status",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_integration_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 49,
      "function_name": "_check_websocket_integration",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_integration_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 61,
      "function_name": "_check_backend_websocket",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\status_integration_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 79,
      "function_name": "_check_api_sync",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_integration_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 91,
      "function_name": "_scan_backend_routes",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_integration_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 113,
      "function_name": "_scan_frontend_calls",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_integration_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 145,
      "function_name": "_check_backend_oauth",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_integration_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 157,
      "function_name": "_check_frontend_oauth",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_renderer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 37,
      "function_name": "build_complete_report",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\status_renderer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 68,
      "function_name": "_build_key_metrics",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\status_renderer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 98,
      "function_name": "_extract_critical_issues",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\status_renderer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 113,
      "function_name": "_build_wip_summary",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\status_section_renderers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 87,
      "function_name": "_build_agent_section",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_section_renderers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 127,
      "function_name": "build_integration_section",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\status_section_renderers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 166,
      "function_name": "build_test_section",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\status_section_renderers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 193,
      "function_name": "_build_quick_results",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\status_section_renderers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 209,
      "function_name": "build_recommendations",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\status_section_renderers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 253,
      "function_name": "build_appendix",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\switch_hooks_mode.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 11,
      "function_name": "switch_mode",
      "actual_value": 66,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\switch_hooks_mode.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 80,
      "function_name": "main",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\team_updates.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 15,
      "function_name": "main",
      "actual_value": 72,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\team_updates_compliance_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 21,
      "function_name": "analyze",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\team_updates_compliance_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 35,
      "function_name": "check_300_line_violations",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\team_updates_compliance_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 56,
      "function_name": "check_8_line_violations",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\team_updates_compliance_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 69,
      "function_name": "get_compliance_trends",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\team_updates_compliance_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 85,
      "function_name": "_should_skip_file",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\team_updates_compliance_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 98,
      "function_name": "_check_functions_in_file",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\team_updates_compliance_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 121,
      "function_name": "_count_function_lines",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\team_updates_compliance_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 141,
      "function_name": "_determine_status",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\team_updates_compliance_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 154,
      "function_name": "_parse_compliance_output",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\team_updates_documentation_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 22,
      "function_name": "analyze",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\team_updates_documentation_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 35,
      "function_name": "find_doc_changes",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\team_updates_documentation_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 52,
      "function_name": "find_spec_updates",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\team_updates_documentation_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 69,
      "function_name": "extract_learnings",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\team_updates_documentation_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 88,
      "function_name": "_run_git_command",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\team_updates_documentation_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 100,
      "function_name": "_parse_doc_changes",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\team_updates_documentation_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 124,
      "function_name": "_parse_spec_updates",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\team_updates_documentation_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 150,
      "function_name": "_extract_learning_from_xml",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\team_updates_documentation_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 187,
      "function_name": "_assess_doc_health",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\team_updates_formatter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 21,
      "function_name": "format_full_report",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\team_updates_formatter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 61,
      "function_name": "format_executive_summary",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\team_updates_formatter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 84,
      "function_name": "format_features",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\team_updates_formatter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 104,
      "function_name": "format_bugs",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\team_updates_formatter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 121,
      "function_name": "format_test_health",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\team_updates_formatter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 149,
      "function_name": "format_code_quality",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\team_updates_formatter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 174,
      "function_name": "format_documentation",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\team_updates_formatter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 197,
      "function_name": "format_action_items",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\team_updates_git_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 22,
      "function_name": "analyze",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\team_updates_git_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 35,
      "function_name": "get_commits",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\team_updates_git_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 47,
      "function_name": "summarize_commits",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\team_updates_git_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 60,
      "function_name": "identify_authors",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\team_updates_git_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 84,
      "function_name": "_parse_commit_log",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\team_updates_git_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 100,
      "function_name": "_extract_feature_descriptions",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\team_updates_git_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 113,
      "function_name": "_extract_bug_descriptions",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\team_updates_git_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 126,
      "function_name": "_format_author_stats",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\team_updates_orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 97,
      "function_name": "main",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\team_updates_orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 28,
      "function_name": "generate_update",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\team_updates_orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 40,
      "function_name": "get_time_range",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\team_updates_sync.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 10,
      "function_name": "get_top_changed_files",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\team_updates_sync.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 35,
      "function_name": "generate_simple_report",
      "actual_value": 116,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 15 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\team_updates_sync.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 157,
      "function_name": "main",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\team_updates_test_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 20,
      "function_name": "analyze",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\team_updates_test_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "load_latest_reports",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\team_updates_test_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 50,
      "function_name": "extract_failures",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\team_updates_test_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 66,
      "function_name": "calculate_coverage_delta",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\team_updates_test_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 87,
      "function_name": "_determine_overall_status",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\team_updates_test_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 102,
      "function_name": "_parse_report_content",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\team_updates_test_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 120,
      "function_name": "_simplify_error",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\team_updates_test_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 133,
      "function_name": "_extract_metrics",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\test_async_postgres.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 22,
      "function_name": "test_backend_connection",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_async_postgres.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 65,
      "function_name": "test_auth_connection",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_async_postgres.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 108,
      "function_name": "test_cloud_sql_imports",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_async_postgres.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 122,
      "function_name": "main",
      "actual_value": 69,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_auth_integration.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 163,
      "function_name": "main",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_auth_integration.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 27,
      "function_name": "test_auth_service_health",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\test_auth_integration.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 39,
      "function_name": "test_auth_service_endpoints",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\test_auth_integration.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 61,
      "function_name": "test_backend_auth_client",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\test_auth_integration.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 81,
      "function_name": "test_token_validation_flow",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_auth_integration.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 104,
      "function_name": "test_cors_configuration",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_auth_integration.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 127,
      "function_name": "run_all_tests",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_backend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 75,
      "function_name": "_create_test_environment_dict",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\test_backend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 136,
      "function_name": "_check_postgresql_service",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_backend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 170,
      "function_name": "build_pytest_args",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_backend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 457,
      "function_name": "_get_advanced_usage_examples",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\test_backend_optimized.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 280,
      "function_name": "discover_test_files",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_backend_optimized.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 320,
      "function_name": "print_results_summary",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_backend_optimized.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 359,
      "function_name": "main",
      "actual_value": 91,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 12 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_backend_optimized.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 108,
      "function_name": "__init__",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_backend_optimized.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 121,
      "function_name": "execute_optimized_tests",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_backend_optimized.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 160,
      "function_name": "_create_optimization_config",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_backend_optimized.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 199,
      "function_name": "_compile_final_results",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\test_backend_optimized.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 223,
      "function_name": "_update_optimization_models",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\test_backend_optimized.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 241,
      "function_name": "_fallback_execution",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_cold_start_e2e.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 500,
      "function_name": "main",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_cold_start_e2e.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 71,
      "function_name": "run_full_test",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_cold_start_e2e.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 110,
      "function_name": "start_services",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_cold_start_e2e.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 143,
      "function_name": "wait_for_services",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_cold_start_e2e.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 171,
      "function_name": "read_service_discovery",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\test_cold_start_e2e.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 189,
      "function_name": "check_service_health",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_cold_start_e2e.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 216,
      "function_name": "test_authentication",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_cold_start_e2e.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 261,
      "function_name": "test_websocket",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_cold_start_e2e.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 309,
      "function_name": "test_chat_flow",
      "actual_value": 58,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_cold_start_e2e.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 370,
      "function_name": "test_model_response",
      "actual_value": 60,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_cold_start_e2e.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 443,
      "function_name": "get_websocket_url",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\test_cold_start_e2e.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 461,
      "function_name": "cleanup",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\test_cold_start_e2e.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 479,
      "function_name": "print_summary",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\test_config_loading.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 11,
      "function_name": "test_config_loading",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_coordination_fixes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 403,
      "function_name": "main",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_coordination_fixes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 37,
      "function_name": "run_all_tests",
      "actual_value": 40,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_coordination_fixes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 80,
      "function_name": "test_dependency_resolution",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_coordination_fixes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 121,
      "function_name": "test_readiness_vs_health_separation",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_coordination_fixes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 156,
      "function_name": "test_port_allocation_coordination",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_coordination_fixes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 185,
      "function_name": "test_service_discovery_timing",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_coordination_fixes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 229,
      "function_name": "test_graceful_degradation",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_coordination_fixes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 277,
      "function_name": "test_complete_coordination_workflow",
      "actual_value": 69,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_coordination_fixes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 349,
      "function_name": "test_resource_cleanup",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\test_coordination_fixes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 369,
      "function_name": "_print_test_summary",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_coordination_fixes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 298,
      "function_name": "start_backend",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\test_coordination_fixes.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 312,
      "function_name": "start_frontend",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_discovery_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 162,
      "function_name": "main",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\test_discovery_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 41,
      "function_name": "_categorize_single_test",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\test_discovery_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 69,
      "function_name": "_print_real_e2e_section",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\test_discovery_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 98,
      "function_name": "_print_test_categories_section",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_discovery_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 111,
      "function_name": "_print_test_type_summary",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_discovery_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 124,
      "function_name": "print_real_e2e_details",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_error_monitor_logic.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 107,
      "function_name": "create_test_errors",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_error_monitor_logic.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 144,
      "function_name": "create_critical_test_errors",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\test_error_monitor_logic.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 161,
      "function_name": "test_normal_deployment",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_error_monitor_logic.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 185,
      "function_name": "test_critical_deployment",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_error_monitor_logic.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 209,
      "function_name": "test_error_categorization",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\test_error_monitor_logic.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 228,
      "function_name": "main",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\test_error_monitor_logic.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 93,
      "function_name": "should_fail_deployment",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_example_message_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 367,
      "function_name": "run_quick_validation",
      "actual_value": 55,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_example_message_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 427,
      "function_name": "main",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\test_example_message_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 35,
      "function_name": "run_all_tests",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_example_message_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 77,
      "function_name": "_run_test_suite",
      "actual_value": 48,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_example_message_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 129,
      "function_name": "_parse_test_results",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_example_message_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 172,
      "function_name": "_run_validation_checks",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_example_message_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 203,
      "function_name": "_validate_imports",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_example_message_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 227,
      "function_name": "_validate_configuration",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\test_example_message_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 246,
      "function_name": "_test_handler_initialization",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_example_message_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 271,
      "function_name": "_test_message_validation",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_example_message_flow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 307,
      "function_name": "_generate_test_report",
      "actual_value": 55,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_exclusion_check.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 10,
      "function_name": "check_test_file_locations",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_failure_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 35,
      "function_name": "_get_test_paths_to_scan",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\test_failure_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 83,
      "function_name": "_execute_pytest_and_parse_results",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_failure_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 125,
      "function_name": "_count_tests_and_failures",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_failure_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 218,
      "function_name": "_print_final_summary",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\test_frontend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 45,
      "function_name": "install_dependencies",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\test_frontend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 65,
      "function_name": "check_dependencies",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_frontend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 169,
      "function_name": "_build_test_patterns",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\test_frontend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 201,
      "function_name": "run_cypress_tests",
      "actual_value": 40,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_frontend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 246,
      "function_name": "check_backend_running",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_frontend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 260,
      "function_name": "check_frontend_running",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_frontend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 294,
      "function_name": "build_frontend",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_frontend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 309,
      "function_name": "run_lint",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\test_frontend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 329,
      "function_name": "run_type_check",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_frontend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 354,
      "function_name": "get_usage_examples",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_frontend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 483,
      "function_name": "execute_tests",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_frontend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 518,
      "function_name": "handle_cleanup",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\test_frontend.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 531,
      "function_name": "main",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_frontend_quick.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 12,
      "function_name": "run_frontend_tests",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_frontend_simple.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 15,
      "function_name": "run_frontend_tests",
      "actual_value": 49,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_frontend_simple.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 70,
      "function_name": "main",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\test_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 24,
      "function_name": "main",
      "actual_value": 95,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 12 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_oauth_local.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 433,
      "function_name": "async_main",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_oauth_local.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 41,
      "function_name": "__init__",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_oauth_local.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 55,
      "function_name": "check_environment",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_oauth_local.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 97,
      "function_name": "check_service_health",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_oauth_local.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 138,
      "function_name": "test_oauth_config_endpoint",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_oauth_local.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 179,
      "function_name": "test_oauth_login_flow",
      "actual_value": 53,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_oauth_local.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 235,
      "function_name": "test_token_generation",
      "actual_value": 57,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_oauth_local.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 295,
      "function_name": "test_token_validation",
      "actual_value": 46,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_oauth_local.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 344,
      "function_name": "generate_report",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_oauth_local.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 389,
      "function_name": "_print_recommendations",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_staging.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 19,
      "function_name": "setup_staging_env",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_staging.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 50,
      "function_name": "run_staging_tests",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\test_staging.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 71,
      "function_name": "main",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_staging_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 10,
      "function_name": "test_staging_config",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_staging_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 37,
      "function_name": "_set_staging_env_vars",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 37,
      "function_name": "test_endpoint",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 81,
      "function_name": "test_service_health",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\test_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 101,
      "function_name": "test_api_endpoints",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\test_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 124,
      "function_name": "test_auth_flow",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\test_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 145,
      "function_name": "test_websocket_connectivity",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 183,
      "function_name": "main",
      "actual_value": 54,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_staging_startup.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 282,
      "function_name": "main",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_staging_startup.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "test_service_initialization_order",
      "actual_value": 40,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_staging_startup.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 76,
      "function_name": "test_dependency_resolution",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_staging_startup.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 105,
      "function_name": "test_configuration_loading",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_staging_startup.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 136,
      "function_name": "test_secret_access",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_staging_startup.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 174,
      "function_name": "test_health_endpoints",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\test_staging_startup.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 194,
      "function_name": "test_startup_timing",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\test_staging_startup.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 223,
      "function_name": "run_all_tests",
      "actual_value": 55,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_verify_workflow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 14,
      "function_name": "run_command",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_verify_workflow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 52,
      "function_name": "test_missing_token",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\test_verify_workflow.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 75,
      "function_name": "main",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "run_test",
      "actual_value": 40,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 84,
      "function_name": "test_argument_validation",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\test_verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 100,
      "function_name": "test_token_handling",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\test_verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 134,
      "function_name": "test_output_formats",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\test_verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 158,
      "function_name": "generate_report",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 194,
      "function_name": "run_all_tests",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_verify_workflow_status_corrected.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 206,
      "function_name": "main",
      "actual_value": 55,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_verify_workflow_status_corrected.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 21,
      "function_name": "run_test",
      "actual_value": 56,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_verify_workflow_status_corrected.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 80,
      "function_name": "test_basic_functionality",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_verify_workflow_status_corrected.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 111,
      "function_name": "test_authentication",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\test_verify_workflow_status_corrected.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 133,
      "function_name": "test_repository_handling",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\test_verify_workflow_status_corrected.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 155,
      "function_name": "test_output_formats",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\test_verify_workflow_status_corrected.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 176,
      "function_name": "run_all_tests",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_websocket_dev_mode.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 331,
      "function_name": "main",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\test_websocket_dev_mode.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 32,
      "function_name": "__init__",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\test_websocket_dev_mode.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 47,
      "function_name": "start_dev_server",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_websocket_dev_mode.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 82,
      "function_name": "test_config_endpoint",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_websocket_dev_mode.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 112,
      "function_name": "test_health_endpoint",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_websocket_dev_mode.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 142,
      "function_name": "test_cors_validation",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_websocket_dev_mode.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 169,
      "function_name": "test_websocket_functionality",
      "actual_value": 63,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_websocket_dev_mode.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 235,
      "function_name": "stop_dev_server",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_websocket_dev_mode.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 258,
      "function_name": "run_all_tests",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_websocket_dev_mode.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 285,
      "function_name": "generate_report",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_workflows_with_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 32,
      "function_name": "check_prerequisites",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_workflows_with_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 78,
      "function_name": "create_mock_secrets",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\test_workflows_with_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 94,
      "function_name": "get_workflows",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\test_workflows_with_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 108,
      "function_name": "validate_workflow_syntax",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_workflows_with_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 142,
      "function_name": "test_workflow_dry_run",
      "actual_value": 40,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_workflows_with_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 185,
      "function_name": "create_event_file",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\test_workflows_with_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 202,
      "function_name": "extract_error",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\test_workflows_with_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 223,
      "function_name": "check_common_issues",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_workflows_with_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 246,
      "function_name": "fix_common_issues",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_workflows_with_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 269,
      "function_name": "run_tests",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\test_workflows_with_act.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 322,
      "function_name": "generate_report",
      "actual_value": 40,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\unified_import_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 565,
      "function_name": "run_precommit_check",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\unified_import_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 584,
      "function_name": "main",
      "actual_value": 81,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 11 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\unified_import_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 67,
      "function_name": "__init__",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\unified_import_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 86,
      "function_name": "check_compliance",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\unified_import_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 112,
      "function_name": "fix_all_imports",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\unified_import_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 138,
      "function_name": "_check_backend_imports",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\unified_import_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 186,
      "function_name": "_fix_backend_imports",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\unified_import_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 232,
      "function_name": "_check_test_imports",
      "actual_value": 59,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\unified_import_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 294,
      "function_name": "_fix_test_imports",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\unified_import_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 338,
      "function_name": "_check_specific_issues",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\unified_import_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 391,
      "function_name": "_fix_specific_issues",
      "actual_value": 51,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\unified_import_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 445,
      "function_name": "generate_report",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\unified_import_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 487,
      "function_name": "save_report",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\unified_import_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 503,
      "function_name": "print_report_summary",
      "actual_value": 58,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\update_spec_timestamps.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 78,
      "function_name": "is_legacy_spec",
      "actual_value": 55,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\update_spec_timestamps.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 141,
      "function_name": "add_timestamp_to_xml",
      "actual_value": 53,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\update_spec_timestamps.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 200,
      "function_name": "main",
      "actual_value": 99,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 13 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\update_staging_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 219,
      "function_name": "main",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\update_staging_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 25,
      "function_name": "check_secret",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\update_staging_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 56,
      "function_name": "update_secret",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\update_staging_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 87,
      "function_name": "get_required_secrets",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\update_staging_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 122,
      "function_name": "check_all_secrets",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\update_staging_secrets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 170,
      "function_name": "interactive_update",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 326,
      "function_name": "main",
      "actual_value": 40,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 74,
      "function_name": "validate_test_structure",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 97,
      "function_name": "check_test_assertions",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 111,
      "function_name": "run_test_suite",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 128,
      "function_name": "_parse_test_results",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 146,
      "function_name": "analyze_coverage_data",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 160,
      "function_name": "analyze_async_usage",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 175,
      "function_name": "analyze_mock_usage",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 189,
      "function_name": "check_test_dependencies",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 201,
      "function_name": "validate_all_tests",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 216,
      "function_name": "_compile_validation_result",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 235,
      "function_name": "_generate_recommendations",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 250,
      "function_name": "generate_console_summary",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 268,
      "function_name": "create_html_report",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 288,
      "function_name": "export_json_metrics",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\validate_agent_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 308,
      "function_name": "save_reports",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\validate_atomic_change.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 424,
      "function_name": "main",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_atomic_change.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 61,
      "function_name": "run_command",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\validate_atomic_change.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 81,
      "function_name": "validate_phase_1_pre_change",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_atomic_change.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 117,
      "function_name": "validate_phase_2_scope",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\validate_atomic_change.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 133,
      "function_name": "validate_phase_3_implementation",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_atomic_change.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 181,
      "function_name": "validate_phase_4_legacy_cleanup",
      "actual_value": 47,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_atomic_change.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 231,
      "function_name": "validate_phase_5_validation_suite",
      "actual_value": 52,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_atomic_change.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 286,
      "function_name": "validate_phase_6_documentation",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\validate_atomic_change.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 307,
      "function_name": "generate_report",
      "actual_value": 63,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_atomic_change.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 373,
      "function_name": "validate",
      "actual_value": 48,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 55,
      "function_name": "check_environment",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 86,
      "function_name": "check_dependencies",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 131,
      "function_name": "test_database_connection",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 166,
      "function_name": "test_auth_service",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 205,
      "function_name": "test_ai_service",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 245,
      "function_name": "test_websocket_connectivity",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 270,
      "function_name": "test_frontend_build",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 303,
      "function_name": "generate_report",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 342,
      "function_name": "run_validation",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 138,
      "function_name": "test_db",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 210,
      "function_name": "test_ai",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_frontend_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 225,
      "function_name": "main",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_frontend_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 28,
      "function_name": "validate",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_frontend_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 57,
      "function_name": "_discover_test_files",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_frontend_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 84,
      "function_name": "_check_jest_config",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_frontend_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 107,
      "function_name": "_check_imports",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_frontend_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 154,
      "function_name": "_test_execution",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_frontend_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 193,
      "function_name": "_generate_report",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\validate_frontend_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 207,
      "function_name": "_get_recommendations",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\validate_jwt_consistency.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 41,
      "function_name": "validate_jwt_secret_consistency",
      "actual_value": 174,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 22 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_mock_real_spectrum_compliance.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 290,
      "function_name": "main",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_mock_real_spectrum_compliance.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 44,
      "function_name": "__init__",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_mock_real_spectrum_compliance.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 67,
      "function_name": "scan_test_files",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\validate_mock_real_spectrum_compliance.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 79,
      "function_name": "analyze_file",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_mock_real_spectrum_compliance.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 117,
      "function_name": "_analyze_function",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_mock_real_spectrum_compliance.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 192,
      "function_name": "validate_compliance",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_mock_real_spectrum_compliance.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 226,
      "function_name": "generate_report",
      "actual_value": 60,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_network_constants.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 36,
      "function_name": "validate_service_ports",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\validate_network_constants.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 58,
      "function_name": "validate_host_constants",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\validate_network_constants.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 73,
      "function_name": "validate_database_constants",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_network_constants.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 110,
      "function_name": "validate_url_constants",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_network_constants.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 142,
      "function_name": "validate_service_endpoints",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\validate_network_constants.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 161,
      "function_name": "validate_network_environment_helper",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_network_constants.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 203,
      "function_name": "main",
      "actual_value": 47,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_service_independence.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 248,
      "function_name": "main",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_service_independence.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 23,
      "function_name": "validate",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\validate_service_independence.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 51,
      "function_name": "_check_no_main_app_imports",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_service_independence.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 84,
      "function_name": "_check_dockerfile_copies_entire_service",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_service_independence.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 113,
      "function_name": "_check_requirements_complete",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_service_independence.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 148,
      "function_name": "_service_needs_dependency",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_service_independence.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 172,
      "function_name": "_check_service_can_import",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_service_independence.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 203,
      "function_name": "_check_unique_module_names",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\validate_service_independence.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 226,
      "function_name": "_report_results",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\validate_staging_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 178,
      "function_name": "perform_database_connection_test",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\validate_staging_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 199,
      "function_name": "check_redis_connection",
      "actual_value": 53,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 255,
      "function_name": "check_clickhouse_connection",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 308,
      "function_name": "check_environment_variables",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 342,
      "function_name": "check_gcp_configuration",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 409,
      "function_name": "run_core_validation_checks",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\validate_staging_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 428,
      "function_name": "determine_final_result",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\validate_staging_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 442,
      "function_name": "main",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\validate_staging_config_partial.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 43,
      "function_name": "check_github_secrets",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_config_partial.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 82,
      "function_name": "_parse_cloud_sql_url",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\validate_staging_config_partial.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 94,
      "function_name": "_connect_cloud_sql",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\validate_staging_config_partial.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 114,
      "function_name": "_check_db_tables",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\validate_staging_config_partial.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 133,
      "function_name": "check_database_connection",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 541,
      "function_name": "main",
      "actual_value": 84,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 11 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 55,
      "function_name": "__init__",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 76,
      "function_name": "validate_all",
      "actual_value": 105,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 14 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 185,
      "function_name": "check_gcp_auth",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 211,
      "function_name": "check_apis_enabled",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 233,
      "function_name": "check_secrets_exist",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 255,
      "function_name": "check_secret_values",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 290,
      "function_name": "check_dockerfiles",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 312,
      "function_name": "check_config_files",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 333,
      "function_name": "check_cloud_sql",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 359,
      "function_name": "check_database_connectivity",
      "actual_value": 48,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 410,
      "function_name": "check_jwt_consistency",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 442,
      "function_name": "check_oauth_configuration",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 473,
      "function_name": "check_ssl_parameters",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 506,
      "function_name": "check_staging_urls",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 528,
      "function_name": "_get_secret_value",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\validate_staging_deployment.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 382,
      "function_name": "test_connection",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\validate_staging_health.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 252,
      "function_name": "print_validation_summary",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\validate_staging_health.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 274,
      "function_name": "main",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_staging_health.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 36,
      "function_name": "validate_all_health_checks",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\validate_staging_health.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 62,
      "function_name": "_check_endpoint",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\validate_staging_health.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 151,
      "function_name": "_check_response_time",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\validate_staging_health.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 168,
      "function_name": "_check_throughput",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\validate_staging_health.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 185,
      "function_name": "_check_error_rate",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\validate_staging_health.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 225,
      "function_name": "_check_security_headers",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\validate_staging_health.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 239,
      "function_name": "_check_cors_configuration",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\validate_type_deduplication.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 340,
      "function_name": "main",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_type_deduplication.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 54,
      "function_name": "_load_canonical_imports",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_type_deduplication.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 86,
      "function_name": "scan_python_duplicates",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_type_deduplication.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 128,
      "function_name": "scan_typescript_duplicates",
      "actual_value": 46,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_type_deduplication.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 177,
      "function_name": "validate_canonical_imports",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_type_deduplication.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 216,
      "function_name": "run_validation",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_type_deduplication.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 262,
      "function_name": "_add_critical_duplicates_section",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\validate_type_deduplication.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 276,
      "function_name": "_add_python_duplicates_section",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\validate_type_deduplication.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 288,
      "function_name": "_add_typescript_duplicates_section",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\validate_type_deduplication.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 300,
      "function_name": "_add_violations_section",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\validate_type_deduplication.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 323,
      "function_name": "generate_report",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\validate_workflow_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 20,
      "function_name": "validate_config_structure",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_workflow_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 58,
      "function_name": "check_workflow_references",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\validate_workflow_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 189,
      "function_name": "_print_config_details",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\verify_auth_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 14,
      "function_name": "check_auth_service_endpoints",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_auth_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 42,
      "function_name": "verify_environment_config",
      "actual_value": 54,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_auth_config.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 99,
      "function_name": "main",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 365,
      "function_name": "main",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 80,
      "function_name": "verify_environment_files",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\verify_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 97,
      "function_name": "verify_port_availability",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 122,
      "function_name": "verify_environment_variables",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 160,
      "function_name": "verify_configuration_consistency",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 188,
      "function_name": "verify_service_startup_readiness",
      "actual_value": 47,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 238,
      "function_name": "verify_python_imports",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 263,
      "function_name": "test_websocket_configuration",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\verify_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 282,
      "function_name": "run_quick_startup_test",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_cold_start.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 331,
      "function_name": "run_full_verification",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_oauth_redirect_uris.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 22,
      "function_name": "main",
      "actual_value": 120,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 16 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_staging_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 16,
      "function_name": "verify_test_files",
      "actual_value": 52,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_staging_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 71,
      "function_name": "verify_test_runner_config",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_staging_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 109,
      "function_name": "verify_test_discovery",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_staging_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 147,
      "function_name": "print_usage_instructions",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_staging_tests.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 172,
      "function_name": "main",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_startup_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 23,
      "function_name": "test_help_command",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\verify_startup_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 42,
      "function_name": "test_config_creation",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\verify_startup_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 57,
      "function_name": "test_environment_files",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\verify_startup_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 74,
      "function_name": "main",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 309,
      "function_name": "create_config_from_args",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 324,
      "function_name": "main",
      "actual_value": 46,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 70,
      "function_name": "_create_client",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 87,
      "function_name": "_api_request",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 117,
      "function_name": "_parse_workflow_run",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 131,
      "function_name": "wait_for_completion",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 160,
      "function_name": "parse_args",
      "actual_value": 40,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 203,
      "function_name": "_get_usage_examples",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 242,
      "function_name": "display_table",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\verify_workflow_status.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 270,
      "function_name": "display_json",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 13,
      "function_name": "find_backend_events",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 51,
      "function_name": "find_frontend_handlers",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 81,
      "function_name": "check_event_structure",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 108,
      "function_name": "check_payload_completeness",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 135,
      "function_name": "generate_report",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 148,
      "function_name": "_build_report_header",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 165,
      "function_name": "_build_fixes_section",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 185,
      "function_name": "_build_structure_fix_section",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 197,
      "function_name": "_build_events_fix_section",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 259,
      "function_name": "_build_event_inventory",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 278,
      "function_name": "_build_alignment_section",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 329,
      "function_name": "_build_structure_issues_section",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 342,
      "function_name": "_build_payload_issues_section",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 355,
      "function_name": "_build_recommendations_section",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 399,
      "function_name": "_build_next_steps_section",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 411,
      "function_name": "_build_conclusion_section",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\websocket_coherence_review.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 430,
      "function_name": "main",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\workflow_config_utils.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 50,
      "function_name": "_show_test_hierarchy",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\workflow_introspection.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 332,
      "function_name": "main",
      "actual_value": 70,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\workflow_introspection.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 68,
      "function_name": "_run_gh_command",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\workflow_introspection.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 88,
      "function_name": "list_workflows",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\workflow_introspection.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 108,
      "function_name": "get_recent_runs",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\workflow_introspection.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 135,
      "function_name": "get_run_details",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\workflow_introspection.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 180,
      "function_name": "get_run_logs",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\workflow_introspection.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 194,
      "function_name": "get_workflow_outputs",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\workflow_introspection.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 218,
      "function_name": "display_workflows_table",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\workflow_introspection.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 236,
      "function_name": "display_runs_table",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\workflow_introspection.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 265,
      "function_name": "display_run_details",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\workflow_introspection.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 299,
      "function_name": "display_outputs",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\workflow_introspection.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 313,
      "function_name": "_get_status_style",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\workflow_presets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 24,
      "function_name": "get_minimal_preset",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\workflow_presets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 39,
      "function_name": "get_standard_preset",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\workflow_presets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 54,
      "function_name": "get_full_preset",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\workflow_presets.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 69,
      "function_name": "get_cost_optimized_preset",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\workflow_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 248,
      "function_name": "main",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\workflow_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 54,
      "function_name": "validate_file",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\workflow_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 167,
      "function_name": "_report_file_status",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\workflow_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 183,
      "function_name": "_display_summary",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\workflow_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 215,
      "function_name": "validate",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\autonomous_review\\main.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 64,
      "function_name": "_determine_review_mode",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\autonomous_review\\main.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 94,
      "function_name": "_run_continuous_review",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\autonomous_review\\report_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 21,
      "function_name": "generate_report",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\autonomous_review\\report_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 39,
      "function_name": "_generate_markdown_report",
      "actual_value": 54,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\autonomous_review\\test_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 97,
      "function_name": "_build_test_header",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\autonomous_review\\test_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 117,
      "function_name": "_build_test_class",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\autonomous_review\\test_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 149,
      "function_name": "_generate_basic_function_test",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\autonomous_review\\test_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 194,
      "function_name": "_generate_single_class_tests",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\autonomous_review\\test_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 209,
      "function_name": "_generate_method_tests",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\autonomous_review\\test_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 223,
      "function_name": "_generate_critical_path_tests",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\autonomous_review\\test_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 243,
      "function_name": "_get_modernization_replacements",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\autonomous_review\\test_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 21,
      "function_name": "generate_smart_test",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\autonomous_review\\test_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 62,
      "function_name": "remove_redundant_test",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\autonomous_review\\test_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 83,
      "function_name": "find_test_file",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\autonomous_review\\test_reviewer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 22,
      "function_name": "__init__",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\autonomous_review\\test_reviewer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "run_review",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\autonomous_review\\test_reviewer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 71,
      "function_name": "_perform_ultra_analysis",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\autonomous_review\\test_reviewer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 107,
      "function_name": "_analyze_coverage",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\autonomous_review\\test_reviewer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 137,
      "function_name": "_assess_test_quality",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\autonomous_review\\test_reviewer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 184,
      "function_name": "_identify_test_gaps",
      "actual_value": 54,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\autonomous_review\\test_reviewer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 242,
      "function_name": "_generate_recommendations",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\autonomous_review\\test_reviewer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 272,
      "function_name": "_apply_auto_fixes",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\autonomous_review\\test_reviewer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 301,
      "function_name": "_find_test_file",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\autonomous_review\\ultra_thinking_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 22,
      "function_name": "analyze_code_semantics",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\autonomous_review\\ultra_thinking_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 117,
      "function_name": "_calculate_test_priority",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\autonomous_review\\ultra_thinking_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 159,
      "function_name": "_identify_critical_paths",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\autonomous_review\\ultra_thinking_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 180,
      "function_name": "_extract_business_logic",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\ci\\analyze_failures.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 206,
      "function_name": "main",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\ci\\analyze_failures.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 61,
      "function_name": "analyze_all",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\analyze_failures.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 87,
      "function_name": "_analyze_file",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\ci\\analyze_failures.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 103,
      "function_name": "_analyze_failure",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\analyze_failures.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 140,
      "function_name": "_determine_context",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\ci\\analyze_failures.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 155,
      "function_name": "_suggest_approach",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\ci\\analyze_failures.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 183,
      "function_name": "_determine_strategy",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\ci\\check_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 91,
      "function_name": "setup_github_actions_annotations",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\ci\\check_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 104,
      "function_name": "main",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\check_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 31,
      "function_name": "run_check",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\check_test_stubs.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 59,
      "function_name": "_print_detailed_report",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\generate_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 350,
      "function_name": "load_context",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\generate_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 382,
      "function_name": "main",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\generate_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "_get_api_key",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\ci\\generate_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 62,
      "function_name": "_generate_claude_fix",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\generate_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 102,
      "function_name": "_generate_gemini_fix",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\generate_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 139,
      "function_name": "_generate_gpt4_fix",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\generate_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 237,
      "function_name": "_parse_fix_response",
      "actual_value": 36,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\generate_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 284,
      "function_name": "validate_fix",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\ci\\generate_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 299,
      "function_name": "_apply_patch",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\generate_fix.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 335,
      "function_name": "_run_test",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\ci\\generate_performance_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 46,
      "function_name": "add_performance_issues",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\ci\\generate_performance_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 79,
      "function_name": "add_test_results",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\ci\\generate_performance_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 94,
      "function_name": "add_duration_metrics",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\ci\\generate_performance_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 116,
      "function_name": "add_recommendations",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\ci\\generate_performance_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 131,
      "function_name": "generate_markdown_performance_report",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\ci\\generate_performance_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 186,
      "function_name": "main",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\ci\\generate_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 154,
      "function_name": "parse_coverage_xml",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\ci\\generate_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 173,
      "function_name": "main",
      "actual_value": 48,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\generate_security_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 20,
      "function_name": "generate_markdown_security_report",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\ci\\generate_security_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 41,
      "function_name": "_build_security_summary_section",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\ci\\generate_security_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 74,
      "function_name": "_build_vulnerabilities_section",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\ci\\generate_security_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 97,
      "function_name": "_format_vulnerability_groups",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\ci\\generate_security_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 120,
      "function_name": "_format_vulnerability_list",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\ci\\generate_security_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 138,
      "function_name": "_build_test_issues_section",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\ci\\generate_security_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 195,
      "function_name": "_generate_security_recommendations",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\generate_security_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 237,
      "function_name": "_generate_compliance_checks",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\ci\\generate_security_report.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 256,
      "function_name": "main",
      "actual_value": 40,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\process_results.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 206,
      "function_name": "main",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\ci\\process_results.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 48,
      "function_name": "_generate_summary_section",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\ci\\process_results.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 64,
      "function_name": "_format_test_failure",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\ci\\process_results.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 77,
      "function_name": "_format_traceback",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\ci\\process_results.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 89,
      "function_name": "_generate_failed_tests_section",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\ci\\process_results.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 104,
      "function_name": "_generate_slow_tests_section",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\ci\\process_results.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 121,
      "function_name": "_generate_coverage_section",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\ci\\process_results.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 137,
      "function_name": "_format_file_coverage",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\ci\\process_results.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 153,
      "function_name": "generate_markdown_report",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\ci\\process_results.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 165,
      "function_name": "generate_json_summary",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\ci\\process_results.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 191,
      "function_name": "save_report",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\analyze_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 286,
      "function_name": "main",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\analyze_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "__init__",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\analyze_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 61,
      "function_name": "find_test_files",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\analyze_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 77,
      "function_name": "analyze_file",
      "actual_value": 56,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\analyze_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 136,
      "function_name": "_is_mock_decorator",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\analyze_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 215,
      "function_name": "generate_report",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\analyze_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 240,
      "function_name": "print_summary",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\analyze_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 266,
      "function_name": "export_unjustified_list",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\compliance\\cli.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 43,
      "function_name": "_add_parser_arguments",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\cli.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 96,
      "function_name": "process_output",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\cli.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 115,
      "function_name": "_print_test_suggestions",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\compliance\\core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 84,
      "function_name": "_get_skip_patterns",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 108,
      "function_name": "file_size_violation",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 138,
      "function_name": "function_violation",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 173,
      "function_name": "duplicate_violation",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\core.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 203,
      "function_name": "test_stub_violation",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\demo_test_size_enforcement.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 17,
      "function_name": "demo_test_size_validator",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\demo_test_size_enforcement.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 54,
      "function_name": "demo_test_refactor_helper",
      "actual_value": 49,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\demo_test_size_enforcement.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 106,
      "function_name": "demo_test_runner_integration",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\demo_test_size_enforcement.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 136,
      "function_name": "demo_compliant_examples",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\demo_test_size_enforcement.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 169,
      "function_name": "demo_cli_usage",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\demo_test_size_enforcement.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 199,
      "function_name": "main",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\enhanced_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 22,
      "function_name": "generate_report",
      "actual_value": 60,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\enhanced_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 85,
      "function_name": "_categorize_violations",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\compliance\\enhanced_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 115,
      "function_name": "_format_executive_summary",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\enhanced_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 140,
      "function_name": "_format_severity_breakdown",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\compliance\\enhanced_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 160,
      "function_name": "_format_critical_violations",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\enhanced_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 175,
      "function_name": "_format_high_violations",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\enhanced_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 191,
      "function_name": "_format_medium_violations",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\enhanced_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 222,
      "function_name": "_format_low_violations",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\compliance\\enhanced_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 242,
      "function_name": "_format_action_items",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\enhanced_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 272,
      "function_name": "_format_business_impact",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\fake_test_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 358,
      "function_name": "main",
      "actual_value": 115,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 15 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\fake_test_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 45,
      "function_name": "scan_all_tests",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\fake_test_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 94,
      "function_name": "scan_directory",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\compliance\\fake_test_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 121,
      "function_name": "scan_file",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\fake_test_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 154,
      "function_name": "_get_critical_files",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\fake_test_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 181,
      "function_name": "_generate_recommendations",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\fake_test_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 225,
      "function_name": "generate_comprehensive_report",
      "actual_value": 85,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 11 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\fake_test_scanner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 322,
      "function_name": "_get_combined_recommendations",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\file_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 30,
      "function_name": "check_file_naming",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\find_top_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 12,
      "function_name": "find_mock_patterns",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\find_top_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 57,
      "function_name": "analyze_mock_targets",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\compliance\\find_top_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 78,
      "function_name": "check_for_justification",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\find_top_mocks.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 105,
      "function_name": "main",
      "actual_value": 52,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\mock_justification_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 177,
      "function_name": "create_mock_justified_decorator",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\compliance\\mock_justification_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 20,
      "function_name": "__init__",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\mock_justification_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 42,
      "function_name": "check_mock_justifications",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\mock_justification_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 55,
      "function_name": "_get_test_patterns",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\mock_justification_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 68,
      "function_name": "_check_file",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\mock_justification_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 93,
      "function_name": "_check_decorators",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\mock_justification_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 109,
      "function_name": "_check_inline_mocks",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\compliance\\mock_justification_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 129,
      "function_name": "_is_mock_decorator",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\mock_justification_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 142,
      "function_name": "_has_justification_nearby",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\mock_justification_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 159,
      "function_name": "_create_violation",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 29,
      "function_name": "__init__",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 47,
      "function_name": "run_all_checks",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\compliance\\orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 59,
      "function_name": "_collect_all_violations",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 87,
      "function_name": "_calculate_category_scores",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 115,
      "function_name": "_count_files_by_category",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 138,
      "function_name": "_build_category_scores",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\orchestrator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 166,
      "function_name": "generate_test_splitting_suggestions",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 382,
      "function_name": "main",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 34,
      "function_name": "__init__",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 54,
      "function_name": "_find_project_test_files",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 90,
      "function_name": "_is_project_file",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 106,
      "function_name": "_is_test_file",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 123,
      "function_name": "_validate_file",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 160,
      "function_name": "_check_mock_components",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 195,
      "function_name": "_check_function_sizes",
      "actual_value": 59,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 258,
      "function_name": "_check_integration_test_mocking",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 291,
      "function_name": "_add_violation",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 307,
      "function_name": "generate_report",
      "actual_value": 56,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 366,
      "function_name": "get_examples_for_fixes",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 168,
      "function_name": "visit_ClassDef",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 180,
      "function_name": "visit_FunctionDef",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\compliance\\project_test_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 212,
      "function_name": "_check_function_size",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\real_test_linter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 251,
      "function_name": "main",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\real_test_linter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 42,
      "function_name": "lint_files",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\real_test_linter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 84,
      "function_name": "_validate_specific_files",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\real_test_linter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 102,
      "function_name": "_print_results",
      "actual_value": 47,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\real_test_linter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 152,
      "function_name": "_attempt_fixes",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\real_test_linter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 182,
      "function_name": "generate_fix_report",
      "actual_value": 39,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\real_test_linter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 224,
      "function_name": "check_git_diff",
      "actual_value": 23,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 581,
      "function_name": "main",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 46,
      "function_name": "__init__",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 76,
      "function_name": "validate_all_tests",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 91,
      "function_name": "_find_all_test_files",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 126,
      "function_name": "_is_valid_test_file",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 147,
      "function_name": "_contains_test_code",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 162,
      "function_name": "_validate_file",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 184,
      "function_name": "_validate_python_file",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 226,
      "function_name": "_check_python_mock_components",
      "actual_value": 46,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 276,
      "function_name": "_check_python_function_sizes",
      "actual_value": 58,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 8 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 338,
      "function_name": "_check_python_integration_mocking",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 375,
      "function_name": "_check_javascript_mock_components",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 390,
      "function_name": "_check_javascript_excessive_mocking",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 406,
      "function_name": "_check_javascript_function_sizes",
      "actual_value": 46,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 456,
      "function_name": "_add_violation",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 469,
      "function_name": "generate_report",
      "actual_value": 104,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 14 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 234,
      "function_name": "visit_ClassDef",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 256,
      "function_name": "visit_FunctionDef",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\real_test_requirements_enforcer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 292,
      "function_name": "_check_function_size",
      "actual_value": 41,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\relaxed_violation_counter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 21,
      "function_name": "add_violations",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\compliance\\relaxed_violation_counter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "get_relaxed_counts",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\relaxed_violation_counter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 73,
      "function_name": "get_detailed_summary",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\relaxed_violation_counter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 101,
      "function_name": "get_top_violating_files",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\compliance\\relaxed_violation_counter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 122,
      "function_name": "_is_test_file",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\compliance\\relaxed_violation_counter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 134,
      "function_name": "get_relaxed_violations_list",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 67,
      "function_name": "_print_violation_list",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 235,
      "function_name": "_print_category_scores",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 314,
      "function_name": "_get_violation_counts_by_type",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\reporter_stats.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 52,
      "function_name": "display_statistics",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\reporter_utils.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 30,
      "function_name": "get_smart_limit",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\reporter_utils.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 43,
      "function_name": "get_severity_marker",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\severity_tiers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 122,
      "function_name": "get_severity_for_violation",
      "actual_value": 28,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\severity_tiers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 165,
      "function_name": "categorize_violations",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\compliance\\severity_tiers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 195,
      "function_name": "check_deployment_readiness",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\severity_tiers.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 220,
      "function_name": "get_violation_summary",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\compliance\\ssot_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 22,
      "function_name": "check_ssot_violations",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\compliance\\ssot_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 34,
      "function_name": "_check_duplicate_functions",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\ssot_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 79,
      "function_name": "_check_duplicate_handlers",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\ssot_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 120,
      "function_name": "_get_function_signature",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\ssot_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 157,
      "function_name": "_are_likely_duplicates",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\stub_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 37,
      "function_name": "_get_test_stub_patterns",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 26,
      "function_name": "fix_mock_component_function",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 72,
      "function_name": "split_large_file",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 125,
      "function_name": "_group_tests_by_class",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 165,
      "function_name": "_extract_file_header",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 202,
      "function_name": "_generate_test_file_header",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 216,
      "function_name": "split_large_function",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 263,
      "function_name": "_split_function_content",
      "actual_value": 40,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 309,
      "function_name": "reduce_mocking_in_integration_test",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_fixer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 346,
      "function_name": "generate_fix_plan",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_limits_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 25,
      "function_name": "check_test_limits",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\compliance\\test_limits_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 37,
      "function_name": "generate_splitting_suggestions",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\test_limits_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 50,
      "function_name": "_find_test_files",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\compliance\\test_limits_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 100,
      "function_name": "_create_file_violation_if_needed",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\test_limits_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 142,
      "function_name": "_check_test_function_node",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\test_limits_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 190,
      "function_name": "_suggest_file_split",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\test_limits_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 206,
      "function_name": "_suggest_function_split",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\test_limits_examples.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 8,
      "function_name": "test_user_authentication_flow_long",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 656,
      "function_name": "main",
      "actual_value": 79,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 10 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 71,
      "function_name": "analyze_file_for_splitting",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 109,
      "function_name": "_extract_imports",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 136,
      "function_name": "_extract_functions",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 148,
      "function_name": "_analyze_function",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 185,
      "function_name": "_determine_function_category",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 215,
      "function_name": "_extract_function_dependencies",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 233,
      "function_name": "_estimate_function_complexity",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 265,
      "function_name": "_analyze_class",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 305,
      "function_name": "_extract_fixtures",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 325,
      "function_name": "_analyze_dependencies",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 361,
      "function_name": "_generate_splitting_strategies",
      "actual_value": 31,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 397,
      "function_name": "_strategy_split_by_category",
      "actual_value": 43,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 447,
      "function_name": "_strategy_split_by_class",
      "actual_value": 34,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 487,
      "function_name": "_strategy_split_by_feature",
      "actual_value": 26,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 520,
      "function_name": "_identify_features",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 544,
      "function_name": "_extract_feature_from_name",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 557,
      "function_name": "_strategy_extract_utilities",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 585,
      "function_name": "generate_split_files",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_refactor_helper.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 609,
      "function_name": "validate_split",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_size_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 504,
      "function_name": "main",
      "actual_value": 42,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_size_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 68,
      "function_name": "validate_all_tests",
      "actual_value": 50,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_size_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 121,
      "function_name": "_discover_test_files",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_size_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 149,
      "function_name": "_is_test_file",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_size_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 174,
      "function_name": "_analyze_test_file",
      "actual_value": 81,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 11 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_size_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 281,
      "function_name": "_analyze_function",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_size_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 317,
      "function_name": "_analyze_class",
      "actual_value": 14,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\test_size_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 334,
      "function_name": "_estimate_complexity",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\compliance\\test_size_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 355,
      "function_name": "_generate_splitting_suggestions",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_size_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 412,
      "function_name": "_generate_text_report",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_size_validator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 450,
      "function_name": "_generate_markdown_report",
      "actual_value": 51,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_violations_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 24,
      "function_name": "generate_report",
      "actual_value": 35,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_violations_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 69,
      "function_name": "_print_file_violations",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\compliance\\test_violations_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 88,
      "function_name": "_print_function_violations",
      "actual_value": 45,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\compliance\\test_violations_reporter.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 136,
      "function_name": "_print_splitting_suggestions",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\compliance\\type_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 87,
      "function_name": "_find_typescript_types",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\compliance\\type_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 117,
      "function_name": "_categorize_files",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\compliance\\type_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 147,
      "function_name": "_filter_backend_files",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\type_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 165,
      "function_name": "_is_layer_separation",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\compliance\\type_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 183,
      "function_name": "_are_legitimate_separations",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\compliance\\type_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 201,
      "function_name": "_are_separated_modules",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\metadata_tracking\\archiver_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 19,
      "function_name": "_get_archiver_imports",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\metadata_tracking\\archiver_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 42,
      "function_name": "_get_commit_method",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\metadata_tracking\\archiver_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 55,
      "function_name": "_get_database_connection_method",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\metadata_tracking\\archiver_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 68,
      "function_name": "_get_archive_method",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\metadata_tracking\\archiver_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 91,
      "function_name": "_get_verification_methods",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\metadata_tracking\\archiver_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 116,
      "function_name": "_get_main_function",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\metadata_tracking\\archiver_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 146,
      "function_name": "_generate_complete_content",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\metadata_tracking\\config_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 60,
      "function_name": "_get_settings_config",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\metadata_tracking\\config_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 91,
      "function_name": "create_configuration",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\metadata_tracking\\database_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 23,
      "function_name": "_get_ai_modifications_schema",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\metadata_tracking\\database_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 50,
      "function_name": "_get_audit_log_schema",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\metadata_tracking\\database_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 63,
      "function_name": "_get_rollback_history_schema",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\metadata_tracking\\database_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 88,
      "function_name": "_create_indices",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\metadata_tracking\\database_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 107,
      "function_name": "create_database",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\metadata_tracking\\database_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 123,
      "function_name": "validate_schema",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\metadata_tracking\\enabler.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 67,
      "function_name": "_run_setup_steps",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\metadata_tracking\\enabler.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 101,
      "function_name": "enable_all",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\metadata_tracking\\git_hooks_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 19,
      "function_name": "install_hooks",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\metadata_tracking\\git_hooks_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 57,
      "function_name": "_get_pre_commit_content",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\metadata_tracking\\git_hooks_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 76,
      "function_name": "_get_post_commit_content",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\metadata_tracking\\git_hooks_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 90,
      "function_name": "get_status",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\metadata_tracking\\hooks_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 26,
      "function_name": "_get_pre_commit_content",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\metadata_tracking\\hooks_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 45,
      "function_name": "_get_post_commit_content",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\metadata_tracking\\hooks_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 84,
      "function_name": "install_hooks",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\metadata_tracking\\metadata_enabler.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 30,
      "function_name": "enable_all",
      "actual_value": 44,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\metadata_tracking\\metadata_enabler.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 77,
      "function_name": "get_status",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\metadata_tracking\\metadata_enabler.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 92,
      "function_name": "print_status",
      "actual_value": 17,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\metadata_tracking\\metadata_enabler.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 117,
      "function_name": "_calculate_overall_status",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\metadata_tracking\\script_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 39,
      "function_name": "_create_script",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\metadata_tracking\\script_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 91,
      "function_name": "validate_script_content",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\metadata_tracking\\status_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 53,
      "function_name": "_is_system_enabled",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\metadata_tracking\\status_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 75,
      "function_name": "get_status",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\metadata_tracking\\status_manager.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 114,
      "function_name": "print_status",
      "actual_value": 15,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 7
    },
    {
      "file_path": "scripts\\metadata_tracking\\validator_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 29,
      "function_name": "_get_class_constants",
      "actual_value": 16,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 8
    },
    {
      "file_path": "scripts\\metadata_tracking\\validator_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 48,
      "function_name": "_get_modified_files_method",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\metadata_tracking\\validator_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 62,
      "function_name": "_get_validate_file_method",
      "actual_value": 18,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\metadata_tracking\\validator_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 83,
      "function_name": "_get_helper_methods",
      "actual_value": 24,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\metadata_tracking\\validator_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 110,
      "function_name": "_get_validate_all_method",
      "actual_value": 37,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\metadata_tracking\\validator_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 150,
      "function_name": "_get_main_function",
      "actual_value": 20,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\metadata_tracking\\validator_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 173,
      "function_name": "_generate_complete_content",
      "actual_value": 22,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\audit_duplicates_hook.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 19,
      "function_name": "get_commit_message",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\permissive_hooks\\audit_duplicates_hook.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 32,
      "function_name": "run_audit_hook",
      "actual_value": 71,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 9 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\audit_duplicates_hook.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 108,
      "function_name": "main",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\permissive_hooks\\check_edited_lines.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 12,
      "function_name": "get_modified_lines",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\check_edited_lines.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 36,
      "function_name": "check_modified_lines",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\check_edited_lines.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 72,
      "function_name": "main",
      "actual_value": 51,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\check_new_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 11,
      "function_name": "get_new_files",
      "actual_value": 19,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 9
    },
    {
      "file_path": "scripts\\permissive_hooks\\check_new_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 33,
      "function_name": "check_new_file_compliance",
      "actual_value": 33,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\check_new_files.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 69,
      "function_name": "main",
      "actual_value": 38,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\check_new_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 14,
      "function_name": "get_git_diff_lines",
      "actual_value": 32,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 5 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\check_new_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 50,
      "function_name": "check_relative_imports",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\check_new_imports.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 79,
      "function_name": "main",
      "actual_value": 49,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\claude_commit_hook.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 24,
      "function_name": "should_activate",
      "actual_value": 29,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\claude_commit_hook.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 57,
      "function_name": "run",
      "actual_value": 27,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\emergency_check.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 10,
      "function_name": "check_for_emergency_flag",
      "actual_value": 21,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 3 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\emergency_check.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 34,
      "function_name": "main",
      "actual_value": 25,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\prioritized_check.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 11,
      "function_name": "get_file_priority",
      "actual_value": 30,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 4 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\prioritized_check.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 44,
      "function_name": "check_file_by_priority",
      "actual_value": 46,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 6 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\permissive_hooks\\prioritized_check.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 93,
      "function_name": "main",
      "actual_value": 49,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 7 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Break into validation + processing + result functions",
      "impact_score": 10
    },
    {
      "file_path": "scripts\\review\\ai_detector.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 55,
      "function_name": "_parse_function_duplicates",
      "actual_value": 12,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\review\\cli.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 120,
      "function_name": "determine_final_status",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\review\\command_runner.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 21,
      "function_name": "run",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\review\\git_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 44,
      "function_name": "_parse_hotspots",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\review\\git_analyzer.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 69,
      "function_name": "_analyze_change_sizes",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\review\\performance_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 51,
      "function_name": "_is_bundle_too_large",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Extract error handling into separate function | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\review\\report_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 20,
      "function_name": "generate_report",
      "actual_value": 13,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 6
    },
    {
      "file_path": "scripts\\review\\report_generator.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 140,
      "function_name": "_add_medium_action_items",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\review\\security_checker.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 41,
      "function_name": "_find_hardcoded_credentials",
      "actual_value": 11,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\review\\smoke_tester.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 29,
      "function_name": "_run_backend_tests",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "scripts\\review\\smoke_tester.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 41,
      "function_name": "_get_backend_test_commands",
      "actual_value": 10,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Split into 2-3 smaller focused functions",
      "impact_score": 5
    },
    {
      "file_path": "scripts\\review\\smoke_tester.py",
      "violation_type": "function_line_boundary",
      "severity": "critical",
      "boundary_name": "FUNCTION_SIZE_LIMIT",
      "line_number": 54,
      "function_name": "_run_frontend_tests",
      "actual_value": 9,
      "expected_value": 8,
      "description": "Function exceeds 8 line HARD LIMIT",
      "fix_suggestion": "MANDATORY: Split into 2 functions",
      "auto_split_suggestion": "Extract conditional logic into helper functions | Split into 2-3 smaller focused functions",
      "impact_score": 4
    },
    {
      "file_path": "SYSTEM_WIDE",
      "violation_type": "module_count_boundary",
      "severity": "critical",
      "boundary_name": "MODULE_COUNT_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 1619,
      "expected_value": 700,
      "description": "System exceeds 700 module HARD LIMIT",
      "fix_suggestion": "EMERGENCY: Archive unused modules, consolidate similar modules",
      "auto_split_suggestion": null,
      "impact_score": 10
    },
    {
      "file_path": "SYSTEM_WIDE",
      "violation_type": "total_loc_boundary",
      "severity": "critical",
      "boundary_name": "TOTAL_LOC_LIMIT",
      "line_number": null,
      "function_name": null,
      "actual_value": 365853,
      "expected_value": 200000,
      "description": "System exceeds 200000 LOC HARD LIMIT",
      "fix_suggestion": "EMERGENCY: Remove deprecated code, refactor duplicates",
      "auto_split_suggestion": null,
      "impact_score": 10
    },
    {
      "file_path": "frontend\\test-env.d.ts, frontend\\cypress\\e2e\\thread-management-simple.cy.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'to' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'to' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\test-env.d.ts, frontend\\types\\jest.d.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 4,
      "expected_value": 1,
      "description": "Duplicate type 'Matchers' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'Matchers' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\app\\corpus\\types\\corpus.ts, frontend\\components\\chat\\overflow-panel\\overflow-panel-ui.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'TabType' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'TabType' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\app\\corpus\\types\\corpus.ts, frontend\\components\\chat\\ChatSidebarTypes.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'FilterType' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'FilterType' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\app\\enterprise-demo\\demoConfig.ts, frontend\\app\\enterprise-demo\\DemoHeader.tsx...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 4,
      "expected_value": 1,
      "description": "Duplicate type 'DemoStep' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'DemoStep' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\app\\enterprise-demo\\demoConfig.ts, frontend\\app\\enterprise-demo\\DemoHeader.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'IconType' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'IconType' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\auth\\unified-auth-service.ts, frontend\\services\\webSocketService.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'JWTPayload' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'JWTPayload' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\ChatSidebarTypes.ts, frontend\\components\\chat\\admin\\DiscoveryComponents.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'SearchBarProps' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'SearchBarProps' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\admin\\ConfigurationBuilder.types.ts, frontend\\services\\reconciliation\\types.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 22,
      "expected_value": 1,
      "description": "Duplicate type 'definitions' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'definitions' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\admin\\ConfigurationBuilder.types.ts, frontend\\components\\chat\\admin\\ConfigurationBuilder.backup.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ComplexityLevel' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ComplexityLevel' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\admin\\ConfigurationBuilder.types.ts, frontend\\components\\chat\\admin\\ConfigurationBuilder.backup.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'DistributionType' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'DistributionType' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\admin\\ConfigurationBuilder.types.ts, frontend\\components\\chat\\admin\\ConfigurationBuilder.backup.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'OptimizationFocus' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'OptimizationFocus' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\admin\\ConfigurationBuilder.types.ts, frontend\\components\\chat\\admin\\ConfigurationBuilder.backup.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'DomainType' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'DomainType' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\admin\\ConfigurationBuilder.types.ts, frontend\\components\\chat\\admin\\ConfigurationBuilder.backup.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'WorkloadType' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'WorkloadType' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\admin\\ConfigurationBuilder.types.ts, frontend\\components\\chat\\admin\\ConfigurationBuilder.backup.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'GenerationParams' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'GenerationParams' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\admin\\ConfigurationBuilder.types.ts, frontend\\lib\\hydration-validator.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'ValidationResult' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ValidationResult' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\admin\\ConfigurationBuilder.types.ts, frontend\\types\\agents.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 9,
      "expected_value": 1,
      "description": "Duplicate type 'export' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'export' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\admin\\ConfigurationBuilder.types.ts, frontend\\components\\chat\\admin\\ConfigurationBuilder.backup.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'CorpusConfiguration' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'CorpusConfiguration' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\admin\\ConfigurationBuilder.types.ts, frontend\\components\\chat\\admin\\ConfigurationBuilder.backup.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ConfigurationBuilderProps' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ConfigurationBuilderProps' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\agent-status\\types.ts, frontend\\types\\agent-types.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'AgentStatusCardProps' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'AgentStatusCardProps' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\agent-status\\types.ts, frontend\\components\\chat\\agent-status-panel\\types.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'Metrics' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'Metrics' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\agent-status-panel\\types.ts, frontend\\types\\layer-types.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ToolExecutionStatus' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ToolExecutionStatus' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\layers\\streaming-utils.ts, frontend\\components\\chat\\layers\\MediumLayer.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'StreamingRefs' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'StreamingRefs' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\demo\\DemoChat.types.ts, frontend\\components\\demo\\agent-orchestration\\types.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'Agent' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'Agent' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\demo\\DemoChat.types.ts, frontend\\types\\chat-store.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ChatState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ChatState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\demo\\DemoChat.types.ts, frontend\\types\\chat-store.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ChatAction' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ChatAction' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\demo\\roadmap-types.ts, frontend\\cypress\\support\\demo-export-utilities.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'ExportFormat' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ExportFormat' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\demo\\types.ts, frontend\\components\\chat\\layers\\slow-layer\\PerformanceMetrics.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'PerformanceMetricsProps' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'PerformanceMetricsProps' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\demo\\WorkloadTypes.ts, frontend\\app\\ingestion\\components\\FileUploadSection.tsx...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'ActionButtonsProps' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ActionButtonsProps' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\demo\\synthetic-data\\types.ts, frontend\\services\\demoService.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'IndustryTemplate' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'IndustryTemplate' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\agent-interaction-flow.cy.ts, frontend\\cypress\\e2e\\file-upload-filter.cy.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 7,
      "expected_value": 1,
      "description": "Duplicate type 'and' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'and' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\agent-interaction-flow.cy.ts, frontend\\cypress\\e2e\\agent-interaction-flow.cy.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'elements' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'elements' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\agent-interaction-flow.cy.ts, frontend\\cypress\\support\\user-settings-helpers.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 5,
      "expected_value": 1,
      "description": "Duplicate type 'in' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'in' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\data-generation-flow.cy.ts, frontend\\lib\\unified-auth-service.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 17,
      "expected_value": 1,
      "description": "Duplicate type 'for' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'for' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\demo-export-reporting.cy.ts, frontend\\services\\threadLoadingService.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 18,
      "expected_value": 1,
      "description": "Duplicate type 'safety' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'safety' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\file-references-simple.cy.ts, frontend\\__tests__\\critical\\chat-functionality\\file-upload.test.tsx...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'not' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'not' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\thread-test-helpers.ts, frontend\\__tests__\\test-utils\\comprehensive-test-factories.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'MockThread' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MockThread' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\e2e\\thread-test-helpers.ts, frontend\\__tests__\\test-utils\\comprehensive-test-factories.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 4,
      "expected_value": 1,
      "description": "Duplicate type 'MockMessage' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MockMessage' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\cypress\\support\\roi-calculator-helpers.ts, frontend\\components\\chat\\admin\\ConfigurationBuilder.components.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'selection' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'selection' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\hooks\\useAgentUpdates.ts, frontend\\services\\agent-update-stream.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'AgentUpdate' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'AgentUpdate' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\hooks\\useAgentUpdates.ts, frontend\\services\\agent-update-stream.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'StreamBatch' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'StreamBatch' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\hooks\\useAgentUpdates.ts, frontend\\components\\chat\\PersistentResponseCard.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'UseAgentUpdatesReturn' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'UseAgentUpdatesReturn' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\hooks\\useChatWebSocket.ts, frontend\\types\\agent-types.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'AgentMetrics' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'AgentMetrics' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\hooks\\useEventProcessor.ts, frontend\\__mocks__\\WebSocketProvider.tsx...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'const' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'const' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\hooks\\useMessageReconciliation.ts, frontend\\types\\jest.d.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 5,
      "expected_value": 1,
      "description": "Duplicate type 'with' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'with' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\hooks\\useRAFAnimation.ts, frontend\\services\\animation-engine.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'AnimationConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'AnimationConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\hooks\\useToolTracking.ts, frontend\\services\\tool-tracking-service.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ToolTrackingConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ToolTrackingConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\hooks\\useWebSocketResilience.ts, frontend\\services\\webSocketService.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'WebSocketOptions' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'WebSocketOptions' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\lib\\auth-integration-test.ts, frontend\\lib\\event-queue.test.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'TestResult' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'TestResult' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\lib\\auth-interceptor.ts, frontend\\services\\apiClientWrapper.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'RequestConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'RequestConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\lib\\circular-buffer.ts, frontend\\__tests__\\lib\\circular-buffer.test.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'statistics' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'statistics' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\lib\\hydration-validator.ts, frontend\\lib\\hydration-validator.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'mismatch' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'mismatch' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\lib\\hydration-validator.ts, frontend\\providers\\AgentProvider.tsx...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'from' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'from' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\services\\animation-engine.ts, frontend\\types\\performance-metrics.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 7,
      "expected_value": 1,
      "description": "Duplicate type 'PerformanceMetrics' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'PerformanceMetrics' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\services\\messageFormatter.ts, frontend\\__tests__\\services\\messageFormatter.test.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ContentTypeInfo' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ContentTypeInfo' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\services\\messageFormatter.ts, frontend\\__tests__\\services\\messageFormatter.test.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'FormattingMetadata' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'FormattingMetadata' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\services\\messageFormatter.ts, frontend\\components\\chat\\FormattedMessageContent.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'RendererConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'RendererConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\services\\messageService.ts, frontend\\__tests__\\integration\\websocket-resilience.test.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'QueuedMessage' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'QueuedMessage' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\services\\optimistic-updates.ts, frontend\\services\\reconciliation\\types.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'OptimisticMessage' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'OptimisticMessage' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\services\\optimistic-updates.ts, frontend\\types\\store-types.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'OptimisticState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'OptimisticState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\services\\websocketDebugger.ts, frontend\\providers\\EnhancedWebSocketProvider.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'field' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'field' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\services\\webSocketService.ts, frontend\\components\\chat\\MessageList.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'based' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'based' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\store\\chatStore.ts, frontend\\types\\agent-types.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'AgentStatus' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'AgentStatus' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\store\\thread-store.ts, frontend\\store\\threadStore.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ThreadStoreState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ThreadStoreState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\store\\unified-chat-modular.ts, frontend\\store\\slices\\types.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'LayerDataState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'LayerDataState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\store\\unified-chat-modular.ts, frontend\\store\\slices\\types.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MessageState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MessageState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\store\\unified-chat-modular.ts, frontend\\store\\slices\\types.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'AgentTrackingState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'AgentTrackingState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\store\\unified-chat-modular.ts, frontend\\store\\slices\\types.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 5,
      "expected_value": 1,
      "description": "Duplicate type 'ThreadState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ThreadState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\store\\unified-chat-modular.ts, frontend\\types\\store-types.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 4,
      "expected_value": 1,
      "description": "Duplicate type 'ConnectionState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ConnectionState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\store\\unified-chat-modular.ts, frontend\\types\\backend_schema_base.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 4,
      "expected_value": 1,
      "description": "Duplicate type 'SubAgentState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'SubAgentState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\store\\unified-chat-modular.ts, frontend\\store\\slices\\types.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'PerformanceState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'PerformanceState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\store\\slices\\types.ts, frontend\\types\\store-types.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'AgentExecution' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'AgentExecution' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\store\\slices\\websocketHandlers.ts, frontend\\store\\slices\\websocketSlice.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'WebSocketHandlerState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'WebSocketHandlerState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\agents.ts, frontend\\types\\backend_schema_base.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'AgentMessage' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'AgentMessage' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\agents.ts, frontend\\types\\backend_schema_base.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'AgentState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'AgentState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\agents.ts, frontend\\types\\backend_schema_base.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'StartAgentMessage' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'StartAgentMessage' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\agents.ts, frontend\\types\\backend_schema_base.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'StartAgentPayload' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'StartAgentPayload' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_auth.ts, frontend\\types\\domains\\auth.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 4,
      "expected_value": 1,
      "description": "Duplicate type 'AuthConfigResponse' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'AuthConfigResponse' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_auth.ts, frontend\\types\\config.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 5,
      "expected_value": 1,
      "description": "Duplicate type 'AuthEndpoints' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'AuthEndpoints' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_auth.ts, frontend\\types\\domains\\auth.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 6,
      "expected_value": 1,
      "description": "Duplicate type 'User' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'User' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_auth.ts, frontend\\types\\domains\\auth.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'UserBase' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'UserBase' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_auth.ts, frontend\\types\\domains\\auth.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'UserCreate' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'UserCreate' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_auth.ts, frontend\\types\\domains\\auth.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'UserCreateOAuth' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'UserCreateOAuth' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_auth.ts, frontend\\types\\domains\\auth.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'UserUpdate' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'UserUpdate' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_auth.ts, frontend\\types\\domains\\auth.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'DevUser' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'DevUser' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_auth.ts, frontend\\types\\domains\\auth.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'DevLoginRequest' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'DevLoginRequest' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_auth.ts, frontend\\types\\domains\\auth.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'GoogleUser' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'GoogleUser' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_auth.ts, frontend\\types\\domains\\auth.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'Token' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'Token' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_auth.ts, frontend\\types\\domains\\auth.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'TokenPayload' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'TokenPayload' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_base.ts, frontend\\__tests__\\mocks\\index.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'MessageType' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MessageType' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_base.ts, frontend\\types\\domains\\agents.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'SubAgentLifecycle' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'SubAgentLifecycle' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_base.ts, frontend\\types\\domains\\tools.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ToolStatus' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ToolStatus' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_base.ts, frontend\\types\\domains\\agents.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 4,
      "expected_value": 1,
      "description": "Duplicate type 'BaseMessage' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'BaseMessage' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_base.ts, frontend\\types\\chat-store.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'SubAgentStatus' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'SubAgentStatus' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_base.ts, frontend\\types\\messages.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'StreamEvent' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'StreamEvent' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_base.ts, frontend\\types\\messages.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'RunComplete' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'RunComplete' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_base.ts, frontend\\types\\domains\\messages.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'Message' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'Message' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_base.ts, frontend\\types\\messages.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MessageToUser' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MessageToUser' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_base.ts, frontend\\types\\messages.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'UserMessage' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'UserMessage' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_base.ts, frontend\\types\\config.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'Settings' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'Settings' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_base.ts, frontend\\types\\Request.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'RequestModel' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'RequestModel' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_base.ts, frontend\\types\\Workload.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'Workload' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'Workload' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_base.ts, frontend\\types\\TimeRange.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'TimeRange' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'TimeRange' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_config.ts, frontend\\types\\config.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'LLMConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'LLMConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_config.ts, frontend\\types\\config.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'RedisConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'RedisConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_config.ts, frontend\\types\\config.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'WebSocketConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'WebSocketConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_config.ts, frontend\\types\\config.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'GoogleCloudConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'GoogleCloudConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_config.ts, frontend\\types\\config.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'OAuthConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'OAuthConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_config.ts, frontend\\types\\config.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'LangfuseConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'LangfuseConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_config.ts, frontend\\types\\config.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ClickHouseNativeConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ClickHouseNativeConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_config.ts, frontend\\types\\config.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ClickHouseHTTPSConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ClickHouseHTTPSConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_config.ts, frontend\\types\\config.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ClickHouseLoggingConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ClickHouseLoggingConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_config.ts, frontend\\types\\config.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ClickHouseCredentials' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ClickHouseCredentials' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_config.ts, frontend\\types\\config.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'AppConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'AppConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_config.ts, frontend\\types\\config.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'DevelopmentConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'DevelopmentConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_config.ts, frontend\\types\\config.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ProductionConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ProductionConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_config.ts, frontend\\types\\config.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'TestingConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'TestingConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_tools.ts, frontend\\types\\domains\\tools.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ToolInput' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ToolInput' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_tools.ts, frontend\\types\\domains\\tools.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ToolResult' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ToolResult' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_tools.ts, frontend\\types\\domains\\tools.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ToolCompleted' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ToolCompleted' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_tools.ts, frontend\\types\\domains\\tools.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ToolStarted' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ToolStarted' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_tools.ts, frontend\\types\\Corpus.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'Corpus' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'Corpus' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_tools.ts, frontend\\types\\Corpus.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'CorpusCreate' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'CorpusCreate' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_tools.ts, frontend\\types\\Corpus.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'CorpusUpdate' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'CorpusUpdate' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend_schema_tools.ts, frontend\\types\\Reference.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'ReferenceItem' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ReferenceItem' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\chat-store.ts, frontend\\types\\chat.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MessageBuilder' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MessageBuilder' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\layer-types.ts, frontend\\components\\chat\\layers\\RecommendationsSection.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'Recommendation' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'Recommendation' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\layer-types.ts, frontend\\components\\chat\\layers\\ActionPlanSection.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ActionStep' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ActionStep' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\loading-state.ts, frontend\\types\\thread-error-types.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ThreadLoadingState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ThreadLoadingState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\loading-state.ts, frontend\\types\\store-types.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ProcessingState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ProcessingState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\mcp-types.ts, frontend\\types\\report-data.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'consistency' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'consistency' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\mcp-types.ts, frontend\\__mocks__\\services\\mcp-client-service.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MCPServerInfo' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MCPServerInfo' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\mcp-types.ts, frontend\\__mocks__\\services\\mcp-client-service.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MCPTool' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MCPTool' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\mcp-types.ts, frontend\\__mocks__\\services\\mcp-client-service.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MCPToolResult' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MCPToolResult' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\mcp-types.ts, frontend\\__mocks__\\services\\mcp-client-service.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MCPResource' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MCPResource' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\registry.ts, frontend\\__tests__\\imports\\external-imports.test.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'imports' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'imports' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\report-data.ts, frontend\\utils\\export\\types.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 4,
      "expected_value": 1,
      "description": "Duplicate type 'ReportData' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ReportData' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\report-data.ts, frontend\\components\\chat\\layers\\slow-layer-types.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'RecommendationItem' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'RecommendationItem' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\report-data.ts, frontend\\components\\chat\\layers\\slow-layer-types.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ActionPlanItem' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ActionPlanItem' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\report-data.ts, frontend\\components\\chat\\layers\\slow-layer-types.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'AgentTimelineItem' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'AgentTimelineItem' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\store-types.ts, frontend\\utils\\layer-state-manager.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'LayerState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'LayerState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\store-types.ts, frontend\\__tests__\\components\\ChatHistorySection\\shared-setup.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'StoreConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'StoreConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\websocket-context-types.ts, frontend\\__tests__\\unified_system\\websocket-state.test.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'WebSocketContextType' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'WebSocketContextType' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\websocket-context-types.ts, frontend\\providers\\EnhancedWebSocketProvider.tsx...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'WebSocketProviderProps' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'WebSocketProviderProps' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend-sync\\payloads.ts, frontend\\types\\domains\\tools.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ToolCallPayload' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ToolCallPayload' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend-sync\\payloads.ts, frontend\\types\\domains\\tools.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ToolResultPayload' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ToolResultPayload' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend-sync\\payloads.ts, frontend\\providers\\EnhancedWebSocketProvider.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'WebSocketError' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'WebSocketError' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend-sync\\websockets.ts, frontend\\__tests__\\startup\\type-exports.test.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'guards' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'guards' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend-sync\\websockets.ts, frontend\\types\\domains\\websocket.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MessageTypeLiteral' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MessageTypeLiteral' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\backend-sync\\websockets.ts, frontend\\types\\domains\\websocket.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'WebSocketPayload' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'WebSocketPayload' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\domains\\agents.ts, frontend\\types\\domains\\tools.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ToolResultData' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ToolResultData' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\domains\\agents.ts, frontend\\__tests__\\integration\\thread-switching.test.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MessageData' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MessageData' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\domains\\messages.ts, frontend\\types\\shared\\base.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'MessageMetadata' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MessageMetadata' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\domains\\messages.ts, frontend\\__tests__\\utils\\message-test-helpers.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MessageRole' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MessageRole' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\domains\\messages.ts, frontend\\types\\shared\\base.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MessageAttachment' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MessageAttachment' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\domains\\messages.ts, frontend\\types\\shared\\base.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MessageReaction' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MessageReaction' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\domains\\threads.ts, frontend\\__tests__\\utils\\thread-test-helpers.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ThreadMetadata' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ThreadMetadata' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\domains\\threads.ts, frontend\\__tests__\\utils\\thread-test-helpers.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 6,
      "expected_value": 1,
      "description": "Duplicate type 'Thread' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'Thread' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\domains\\websocket.ts, frontend\\providers\\EnhancedWebSocketProvider.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'WebSocketStatus' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'WebSocketStatus' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\domains\\websocket.ts, frontend\\__tests__\\mocks\\index.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 4,
      "expected_value": 1,
      "description": "Duplicate type 'WebSocketState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'WebSocketState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\domains\\websocket.ts, frontend\\types\\unified\\websocket.types.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'WebSocketMessage' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'WebSocketMessage' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\types\\unified\\index.ts, frontend\\__tests__\\imports\\internal-imports.test.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'files' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'files' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\utils\\connection-status-utils.ts, frontend\\__tests__\\integration\\websocket-resilience.test.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ConnectionMetrics' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ConnectionMetrics' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\utils\\layer-visibility-manager.ts, frontend\\__tests__\\utils\\layer-visibility-manager.test.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'LayerVisibilityConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'LayerVisibilityConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\utils\\layer-visibility-manager.ts, frontend\\components\\chat\\features\\LayerManager.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'LayerVisibilityResult' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'LayerVisibilityResult' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\utils\\tool-lifecycle-tracker.ts, frontend\\__tests__\\utils\\tool-lifecycle-tracker.test.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ToolLifecycleMap' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ToolLifecycleMap' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\validate-failing-tests.ts, frontend\\__tests__\\types\\circular-dependency-detector.test.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 5,
      "expected_value": 1,
      "description": "Duplicate type 'modules' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'modules' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\validate-failing-tests.ts, frontend\\__tests__\\types\\type-export-conflicts.test.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 5,
      "expected_value": 1,
      "description": "Duplicate type 'vs' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'vs' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\e2e\\utils\\e2e-test-helpers.ts, frontend\\__tests__\\e2e\\complete-conversation.playwright.test.tsx...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'TestUser' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'TestUser' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\e2e\\utils\\e2e-test-helpers.ts, frontend\\__tests__\\e2e\\complete-conversation.playwright.test.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'PerformanceThresholds' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'PerformanceThresholds' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\helpers\\websocket-test-utilities.ts, frontend\\__tests__\\integration\\utils\\websocket-test-components.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'WebSocketConnectionLifecycle' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'WebSocketConnectionLifecycle' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\helpers\\test-assertions.ts, frontend\\__tests__\\integration\\comprehensive\\theme-preferences.test.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'but' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'but' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\mocks\\index.ts, frontend\\__tests__\\mocks\\websocket-mocks.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 5,
      "expected_value": 1,
      "description": "Duplicate type 'MockWebSocketMessage' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MockWebSocketMessage' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\mocks\\index.ts, frontend\\__tests__\\mocks\\websocket-mocks.ts",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'StreamingMessageChunk' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'StreamingMessageChunk' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\store\\cache-management.test.ts, frontend\\__tests__\\cross-browser\\compatibility.test.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'as' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'as' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\api-test-mocks.ts, frontend\\__tests__\\utils\\test-helpers.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MockAPIResponse' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MockAPIResponse' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\api-test-mocks.ts, frontend\\__tests__\\utils\\test-helpers.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MockAPIError' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MockAPIError' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\auth-test-mocks.ts, frontend\\__tests__\\utils\\auth-test-helpers.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'MockAuthState' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MockAuthState' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\comprehensive-test-factories.ts, frontend\\__tests__\\utils\\auth-test-helpers.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 4,
      "expected_value": 1,
      "description": "Duplicate type 'MockUser' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MockUser' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\comprehensive-test-factories.ts, frontend\\__tests__\\utils\\test-helpers.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MockMCPServer' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MockMCPServer' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\comprehensive-test-factories.ts, frontend\\__tests__\\utils\\test-helpers.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MockMCPTool' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MockMCPTool' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\comprehensive-test-factories.ts, frontend\\__tests__\\utils\\test-helpers.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MockMCPToolResult' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MockMCPToolResult' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\integration-test-setup.ts, frontend\\__tests__\\first-time-user\\initial-chat-helpers.tsx...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'MockAuthStore' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MockAuthStore' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\test-utils\\websocket-test-mocks.ts, frontend\\__tests__\\utils\\test-helpers.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MockWebSocketError' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MockWebSocketError' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\types\\type-export-conflicts.test.ts, frontend\\__tests__\\integration\\module-resolution-failures.test.tsx...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 5,
      "expected_value": 1,
      "description": "Duplicate type 'exports' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'exports' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\utils\\auth-test-helpers.ts, frontend\\__tests__\\utils\\test-helpers.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MockToken' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MockToken' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\utils\\mock-factories.ts, frontend\\__tests__\\utils\\mock-factories.ts...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 5,
      "expected_value": 1,
      "description": "Duplicate type 'imported' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'imported' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\app\\enterprise-demo\\DemoHeader.tsx, frontend\\components\\demo\\DemoHeader.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'DemoHeaderProps' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'DemoHeaderProps' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\auth\\context.tsx, frontend\\__mocks__\\contexts\\AuthContext.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'AuthContextType' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'AuthContextType' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\FormattedMessageContent.tsx, frontend\\components\\chat\\MessageItem.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'FormattedContent' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'FormattedContent' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\MainChat.tsx, frontend\\__tests__\\components\\chat\\interface\\comprehensive-chat-interface.test.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'your' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'your' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\ThreadSidebarComponents.tsx, frontend\\__tests__\\components\\ThreadList\\navigation.test.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ThreadItemProps' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ThreadItemProps' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\components\\ExecutiveSummary.tsx, frontend\\components\\chat\\layers\\slow-layer\\ExecutiveSummary.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'ExecutiveSummaryProps' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'ExecutiveSummaryProps' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\layers\\slow-layer-types.tsx, frontend\\components\\chat\\layers\\slow-layer\\PerformanceMetrics.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MetricCardProps' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MetricCardProps' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\layers\\slow-layer-types.tsx, frontend\\components\\chat\\layers\\slow-layer\\ActionPlanStepper.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'StepButtonProps' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'StepButtonProps' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\chat\\layers\\slow-layer-types.tsx, frontend\\components\\chat\\layers\\slow-layer\\AgentTimeline.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'TimelineBarProps' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'TimelineBarProps' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\components\\ui\\alert.tsx, frontend\\components\\ui\\badge.tsx...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 5,
      "expected_value": 1,
      "description": "Duplicate type 'VariantProps' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'VariantProps' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\components\\ui\\Input.complete.test.tsx, frontend\\__tests__\\integration\\comprehensive\\theme-preferences.test.tsx...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'is' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'is' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\critical\\memory-exhaustion.test.tsx, frontend\\__tests__\\performance\\memory-usage.test.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MemorySnapshot' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MemorySnapshot' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\first-time-user\\initial-chat-helpers.tsx, frontend\\__tests__\\utils\\test-helpers.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MockWebSocket' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MockWebSocket' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\first-time-user\\initial-chat-helpers.tsx, frontend\\__tests__\\utils\\test-helpers.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'MockChatStore' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'MockChatStore' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\error-handling-core.test.tsx, frontend\\__tests__\\integration\\error-handling-retry.test.tsx...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'RetryConfig' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'RetryConfig' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\first-load-bundle.test.tsx, frontend\\__tests__\\test-utils\\index.tsx...",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 3,
      "expected_value": 1,
      "description": "Duplicate type 'TestRenderOptions' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'TestRenderOptions' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    },
    {
      "file_path": "frontend\\__tests__\\integration\\comprehensive\\theme-preferences.test.tsx, frontend\\__tests__\\integration\\comprehensive\\user-journey-workflow.test.tsx",
      "violation_type": "duplicate_type_boundary",
      "severity": "medium",
      "boundary_name": "NO_DUPLICATE_TYPES",
      "line_number": null,
      "function_name": null,
      "actual_value": 2,
      "expected_value": 1,
      "description": "Duplicate type 'fireEvent' violates SINGLE SOURCE OF TRUTH",
      "fix_suggestion": "Consolidate 'fireEvent' into shared module",
      "auto_split_suggestion": null,
      "impact_score": 3
    }
  ],
  "system_metrics": {
    "total_files": 1619,
    "total_lines": 365853,
    "module_count": 1619,
    "avg_file_size": 225.97467572575664,
    "growth_velocity": 273.718,
    "complexity_debt": 0.0
  },
  "remediation_plan": [],
  "emergency_actions": [
    "EMERGENCY: MANDATORY: Split into 4 modules",
    "EMERGENCY: MANDATORY: Split into 4 modules",
    "EMERGENCY: MANDATORY: Split into 3 modules",
    "EMERGENCY: MANDATORY: Split into 3 modules",
    "EMERGENCY: MANDATORY: Split into 3 modules",
    "EMERGENCY: MANDATORY: Split into 3 modules",
    "EMERGENCY: MANDATORY: Split into 3 modules",
    "EMERGENCY: MANDATORY: Split into 3 modules",
    "EMERGENCY: MANDATORY: Split into 5 modules",
    "EMERGENCY: MANDATORY: Split into 4 modules",
    "EMERGENCY: MANDATORY: Split into 3 modules",
    "EMERGENCY: MANDATORY: Split into 3 modules",
    "EMERGENCY: MANDATORY: Split into 4 modules",
    "EMERGENCY: MANDATORY: Split into 4 modules",
    "EMERGENCY: MANDATORY: Split into 3 modules",
    "EMERGENCY: MANDATORY: Split into 3 modules",
    "EMERGENCY: MANDATORY: Split into 3 modules",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 18 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 12 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 13 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 11 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 14 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 13 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 13 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 12 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 11 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 13 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 11 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 35 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 13 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 11 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 14 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 12 functions",
    "EMERGENCY: MANDATORY: Split into 11 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 19 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 12 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 15 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 13 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 20 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 11 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 16 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 18 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 11 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 14 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 11 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 12 functions",
    "EMERGENCY: MANDATORY: Split into 12 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 15 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 12 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 12 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 11 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 13 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 22 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 11 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 14 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 16 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 15 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 11 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 14 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 11 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: EMERGENCY: Archive unused modules, consolidate similar modules",
    "EMERGENCY: EMERGENCY: Remove deprecated code, refactor duplicates",
    "EMERGENCY: MANDATORY: Split into 4 modules",
    "EMERGENCY: MANDATORY: Split into 4 modules",
    "EMERGENCY: MANDATORY: Split into 3 modules",
    "EMERGENCY: MANDATORY: Split into 3 modules",
    "EMERGENCY: MANDATORY: Split into 3 modules",
    "EMERGENCY: MANDATORY: Split into 3 modules",
    "EMERGENCY: MANDATORY: Split into 3 modules",
    "EMERGENCY: MANDATORY: Split into 3 modules",
    "EMERGENCY: MANDATORY: Split into 5 modules",
    "EMERGENCY: MANDATORY: Split into 4 modules",
    "EMERGENCY: MANDATORY: Split into 3 modules",
    "EMERGENCY: MANDATORY: Split into 3 modules",
    "EMERGENCY: MANDATORY: Split into 4 modules",
    "EMERGENCY: MANDATORY: Split into 4 modules",
    "EMERGENCY: MANDATORY: Split into 3 modules",
    "EMERGENCY: MANDATORY: Split into 3 modules",
    "EMERGENCY: MANDATORY: Split into 3 modules",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 18 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 12 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 13 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 11 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 14 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 13 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 13 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 12 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 11 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 13 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 11 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 35 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 13 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 11 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 14 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 12 functions",
    "EMERGENCY: MANDATORY: Split into 11 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 19 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 12 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 15 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 13 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 20 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 11 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 16 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 18 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 11 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 14 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 11 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 12 functions",
    "EMERGENCY: MANDATORY: Split into 12 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 15 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 12 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 12 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 11 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 13 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 22 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 11 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 14 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 16 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 15 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 11 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 8 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 14 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 10 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 11 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 9 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 5 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 3 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 4 functions",
    "EMERGENCY: MANDATORY: Split into 6 functions",
    "EMERGENCY: MANDATORY: Split into 7 functions",
    "EMERGENCY: EMERGENCY: Archive unused modules, consolidate similar modules",
    "EMERGENCY: EMERGENCY: Remove deprecated code, refactor duplicates",
    "IMMEDIATE: Stop all new feature development",
    "IMMEDIATE: Begin emergency refactoring sprint"
  ]
}