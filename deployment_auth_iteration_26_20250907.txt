
üöÄ Using Alpine-optimized images (default):
   ‚Ä¢ 78% smaller images (150MB vs 350MB)
   ‚Ä¢ 3x faster startup times
   ‚Ä¢ 68% cost reduction ($205/month vs $650/month)
   ‚Ä¢ Optimized resource limits (512MB RAM vs 2GB)

  Container runtime: Docker
üöÄ Deploying Netra Apex Platform to GCP
   Project: netra-staging
   Region: us-central1
   Build Mode: Local (Fast)
   Pre-checks: Disabled
   Config Validation: Enabled (default)

‚úÖ Phase 0: Validating Deployment Configuration...
   Checking against proven working configuration from netra-backend-staging-00035-fnj
Exception in thread Thread-9 (_readerthread):
Traceback (most recent call last):
  File "C:\Users\antho\miniconda3\Lib\threading.py", line 1073, in _bootstrap_inner
    self.run()
  File "C:\Users\antho\miniconda3\Lib\threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
  File "C:\Users\antho\miniconda3\Lib\subprocess.py", line 1599, in _readerthread
    buffer.append(fh.read())
                  ^^^^^^^^^
  File "C:\Users\antho\miniconda3\Lib\encodings\cp1252.py", line 23, in decode
    return codecs.charmap_decode(input,self.errors,decoding_table)[0]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
UnicodeDecodeError: 'charmap' codec can't decode byte 0x8d in position 309: character maps to <undefined>
   ‚úÖ Configuration matches proven working setup

üîê Phase 1: Validating Prerequisites...
‚úÖ gcloud CLI configured for project: netra-staging

üîß Enabling required GCP APIs...
  Enabling run.googleapis.com...
  Enabling containerregistry.googleapis.com...
  Enabling cloudbuild.googleapis.com...
  Enabling secretmanager.googleapis.com...
  Enabling compute.googleapis.com...
‚úÖ All required APIs enabled

üîê Phase 2: Validating Secrets Configuration...
Checking all required secrets in Secret Manager...
  ‚úÖ Secret configured: jwt-secret-key-staging
  ‚úÖ Secret configured: redis-url-staging
  ‚úÖ Secret configured: google-oauth-client-id-staging
  ‚úÖ Secret configured: gemini-api-key-staging
  ‚úÖ Secret configured: postgres-host-staging
  ‚úÖ Secret configured: service-id-staging
  ‚úÖ Secret configured: postgres-password-staging
  ‚úÖ Secret configured: postgres-user-staging
  ‚úÖ Secret configured: postgres-db-staging
  ‚úÖ Secret configured: google-oauth-client-secret-staging
  ‚úÖ Secret configured: service-secret-staging
  ‚úÖ Secret configured: postgres-port-staging
  ‚úÖ Secret configured: secret-key-staging
  ‚úÖ Secret configured: redis-password-staging
  ‚úÖ Secret configured: oauth-hmac-secret-staging
  ‚úÖ Secret configured: clickhouse-password-staging
  ‚úÖ Secret configured: jwt-secret-staging
  ‚úÖ Secret configured: openai-api-key-staging
  ‚úÖ Secret configured: fernet-key-staging

‚úÖ All required secrets are configured
   Service Filter: auth

üèóÔ∏è Phase 4: Building and Deploying Services...
   All prerequisites validated - proceeding with deployment

   Building auth...

üî® Building auth Docker image locally...
  Using existing docker/auth.staging.alpine.Dockerfile
  Building image locally: gcr.io/netra-staging/netra-auth-service:latest
  This is 5-10x faster than Cloud Build...
#0 building with "desktop-linux" instance using docker driver

#1 [internal] load build definition from auth.staging.alpine.Dockerfile
#1 transferring dockerfile: 3.21kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 5)
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/python:3.11-alpine3.19
#2 DONE 0.3s

#3 [internal] load .dockerignore
#3 transferring context: 2.79kB done
#3 DONE 0.0s

#4 [builder 1/5] FROM docker.io/library/python:3.11-alpine3.19@sha256:135b0db9b7c3e33d654ba8893b63cbe9394768cc64fc2a2f283148125ae8aa1f
#4 resolve docker.io/library/python:3.11-alpine3.19@sha256:135b0db9b7c3e33d654ba8893b63cbe9394768cc64fc2a2f283148125ae8aa1f 0.0s done
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.14MB 0.4s done
#5 DONE 0.4s

#6 [builder 5/5] RUN --mount=type=cache,target=/root/.cache/pip     pip install --no-cache-dir --user     --no-warn-script-location     --disable-pip-version-check     -r requirements.txt
#6 CACHED

#7 [stage-1 2/7] RUN apk add --no-cache     libpq     curl     tini     lz4-libs     ca-certificates     && rm -rf /var/cache/apk/*
#7 CACHED

#8 [stage-1 3/7] RUN addgroup -g 1000 netra &&     adduser -D -u 1000 -G netra netra &&     mkdir -p /app/logs /app/data /app/tmp &&     chown -R netra:netra /app
#8 CACHED

#9 [stage-1 4/7] WORKDIR /app
#9 CACHED

#10 [builder 2/5] RUN apk add --no-cache     gcc     musl-dev     libffi-dev     postgresql-dev     make     g++     linux-headers     && rm -rf /var/cache/apk/*
#10 CACHED

#11 [builder 3/5] WORKDIR /build
#11 CACHED

#12 [builder 4/5] COPY auth_service/requirements.txt .
#12 CACHED

#13 [stage-1 5/7] COPY --from=builder --chown=netra:netra /root/.local /home/netra/.local
#13 CACHED

#14 [stage-1 6/7] COPY --chown=netra:netra shared /app/shared
#14 DONE 0.1s

#15 [stage-1 7/7] COPY --chown=netra:netra auth_service /app/auth_service
#15 DONE 0.1s

#16 exporting to image
#16 exporting layers
#16 exporting layers 0.3s done
#16 exporting manifest sha256:e3006f2fa02b0ac0c7cbf9e57cf29662190e911c7a8ce943e5c0fa5687ec3eb9 0.0s done
#16 exporting config sha256:8d01adadc38eb55723b9ddcf8d2b584a74a24bc155064dbe891ae55bb3272e78 0.0s done
#16 exporting attestation manifest sha256:2d5f359f960918c44b302727aa8629f5f8fc950124e10780a7b844663edc34bb 0.0s done
#16 exporting manifest list sha256:bc78017d1d0d30ca7eabf312577984431801f4df4de120de00eaa3db6cd47263 0.0s done
#16 naming to gcr.io/netra-staging/netra-auth-service:latest done
#16 unpacking to gcr.io/netra-staging/netra-auth-service:latest 0.1s done
#16 DONE 0.6s

 [33m1 warning found (use docker --debug to expand):
[0m - FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 5)

View build details: docker-desktop://dashboard/build/desktop-linux/desktop-linux/n82oma1gqls7whmwceitp96w2
  ‚úÖ Built successfully, now pushing to registry...
  Configuring Docker authentication for GCR...
  ‚úÖ Docker authentication configured successfully
The push refers to repository [gcr.io/netra-staging/netra-auth-service]
e9ee9cac7618: Waiting
65afa7e2a9dd: Waiting
0879187d2891: Waiting
dfc7acfc3979: Waiting
2bbdc450a238: Waiting
a7cd7d9a2144: Waiting
7a01739510fb: Waiting
319fbbc2740a: Waiting
e1dc9d2d4c12: Waiting
4f4fb700ef54: Waiting
14a2e8b58101: Waiting
7a01739510fb: Waiting
319fbbc2740a: Waiting
e1dc9d2d4c12: Waiting
4f4fb700ef54: Waiting
14a2e8b58101: Waiting
e9ee9cac7618: Waiting
65afa7e2a9dd: Waiting
0879187d2891: Waiting
dfc7acfc3979: Waiting
2bbdc450a238: Waiting
a7cd7d9a2144: Waiting
65afa7e2a9dd: Waiting
0879187d2891: Waiting
dfc7acfc3979: Waiting
2bbdc450a238: Waiting
a7cd7d9a2144: Waiting
7a01739510fb: Waiting
319fbbc2740a: Waiting
e1dc9d2d4c12: Waiting
4f4fb700ef54: Waiting
14a2e8b58101: Waiting
e9ee9cac7618: Waiting
14a2e8b58101: Waiting
e9ee9cac7618: Waiting
65afa7e2a9dd: Waiting
0879187d2891: Waiting
dfc7acfc3979: Waiting
2bbdc450a238: Waiting
a7cd7d9a2144: Waiting
7a01739510fb: Waiting
319fbbc2740a: Waiting
e1dc9d2d4c12: Waiting
4f4fb700ef54: Waiting
4f4fb700ef54: Waiting
14a2e8b58101: Waiting
e9ee9cac7618: Waiting
65afa7e2a9dd: Waiting
0879187d2891: Waiting
dfc7acfc3979: Waiting
2bbdc450a238: Waiting
a7cd7d9a2144: Waiting
7a01739510fb: Waiting
319fbbc2740a: Waiting
e1dc9d2d4c12: Waiting
e9ee9cac7618: Waiting
65afa7e2a9dd: Waiting
0879187d2891: Waiting
dfc7acfc3979: Waiting
2bbdc450a238: Waiting
a7cd7d9a2144: Waiting
7a01739510fb: Waiting
319fbbc2740a: Waiting
e1dc9d2d4c12: Waiting
4f4fb700ef54: Waiting
14a2e8b58101: Waiting
14a2e8b58101: Waiting
e9ee9cac7618: Waiting
65afa7e2a9dd: Waiting
0879187d2891: Waiting
dfc7acfc3979: Waiting
2bbdc450a238: Layer already exists
a7cd7d9a2144: Waiting
7a01739510fb: Waiting
319fbbc2740a: Waiting
e1dc9d2d4c12: Waiting
4f4fb700ef54: Waiting
dfc7acfc3979: Layer already exists
a7cd7d9a2144: Layer already exists
7a01739510fb: Waiting
319fbbc2740a: Waiting
e1dc9d2d4c12: Layer already exists
4f4fb700ef54: Layer already exists
14a2e8b58101: Waiting
e9ee9cac7618: Waiting
65afa7e2a9dd: Waiting
0879187d2891: Layer already exists
e9ee9cac7618: Waiting
65afa7e2a9dd: Waiting
7a01739510fb: Layer already exists
319fbbc2740a: Layer already exists
14a2e8b58101: Waiting
e9ee9cac7618: Pushed
14a2e8b58101: Pushed
65afa7e2a9dd: Pushed
latest: digest: sha256:bc78017d1d0d30ca7eabf312577984431801f4df4de120de00eaa3db6cd47263 size: 856
‚úÖ auth image built and pushed successfully
   Deploying auth...

üöÄ Deploying auth to Cloud Run...
      ‚ÑπÔ∏è Database URL will be built from POSTGRES_* variables by DatabaseURLBuilder
‚úÖ auth deployed successfully
  üì° Updating traffic to latest revision for netra-auth-service...
  ‚è≥ Waiting for netra-auth-service revision to be ready...
  ‚úÖ Revision is ready
  ‚úÖ Traffic updated to latest revision

==================================================

üè• Running health checks...
  ‚ö†Ô∏è auth: No URL available

‚úÖ All services deployed successfully!

üìã Deployment Summary:
==================================================

==================================================
üîê Running Post-Deployment Authentication Tests
==================================================

Testing staging environment...
‚ö†Ô∏è Post-deployment tests failed with error: name 'env' is not defined
‚ö†Ô∏è Post-deployment tests failed - authentication may not be working correctly
   Check that JWT_SECRET_KEY is set to the same value in both services

üîë Next Steps:
1. Update secrets in Secret Manager with real values
2. Configure Cloud SQL and Redis instances
3. Set up custom domain and SSL certificates
4. Configure authentication and remove --allow-unauthenticated
5. Set up monitoring and alerting
