name: E2E Docker Fix Workflow

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'tests/e2e/**'
      - '.github/workflows/e2e-docker-fix.yml'

env:
  PYTHON_VERSION: '3.11'
  NODE_VERSION: '20'
  CI: true
  PYTHONPATH: ${{ github.workspace }}

jobs:
  e2e-tests-fixed:
    name: E2E Tests with Docker Compose
    runs-on: warp-custom-test
    timeout-minutes: 30
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio pytest-timeout
      
      - name: Start services with Docker Compose
        run: |
          echo "=== Starting services with Docker Compose ==="
          
          # Use Alpine test compose for faster startup
          docker compose -f docker-compose.alpine-test.yml up -d
          
          # Wait for services to be healthy
          echo "Waiting for PostgreSQL..."
          until docker compose -f docker-compose.alpine-test.yml exec -T postgres pg_isready -U test_user; do
            echo "PostgreSQL not ready yet..."
            sleep 2
          done
          
          echo "Waiting for Redis..."
          until docker compose -f docker-compose.alpine-test.yml exec -T redis redis-cli ping; do
            echo "Redis not ready yet..."
            sleep 2
          done
          
          echo "Waiting for Backend..."
          for i in {1..30}; do
            if curl -f http://localhost:8000/health 2>/dev/null; then
              echo "Backend is ready!"
              break
            fi
            echo "Backend not ready yet..."
            sleep 2
          done
          
          echo "Waiting for Auth service..."
          for i in {1..30}; do
            if curl -f http://localhost:8081/health 2>/dev/null; then
              echo "Auth service is ready!"
              break
            fi
            echo "Auth service not ready yet..."
            sleep 2
          done
          
          # Show service status
          docker compose -f docker-compose.alpine-test.yml ps
      
      - name: Run critical E2E tests
        run: |
          echo "=== Running critical E2E tests ==="
          
          # Set test environment variables
          export USE_REAL_SERVICES=true
          export DATABASE_URL="postgresql://test_user:test_password@localhost:5434/netra_test"
          export REDIS_URL="redis://:test_password@localhost:6381/0"
          export BACKEND_URL="http://localhost:8000"
          export AUTH_URL="http://localhost:8081"
          export TEST_MODE=ci
          export CI_MODE=true
          
          # Run the 5 critical E2E tests
          echo "1. Testing WebSocket Agent Events..."
          python tests/mission_critical/test_websocket_agent_events_suite.py -v || true
          
          echo "2. Testing User Journey..."
          pytest tests/e2e/test_user_journey.py -v --tb=short || true
          
          echo "3. Testing Auth Flow..."
          pytest tests/e2e/test_auth_flow.py -v --tb=short || true
          
          echo "4. Testing Real Services E2E..."
          pytest tests/e2e/test_real_services_e2e_core.py -v --tb=short || true
          
          echo "5. Testing WebSocket Bridge..."
          pytest tests/e2e/test_websocket_bridge_functionality.py -v --tb=short || true
      
      - name: Collect Docker logs on failure
        if: failure()
        run: |
          echo "=== Collecting Docker logs ==="
          docker compose -f docker-compose.alpine-test.yml logs --tail=100
      
      - name: Stop services
        if: always()
        run: |
          echo "=== Stopping services ==="
          docker compose -f docker-compose.alpine-test.yml down -v
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results
          path: |
            test-results/
            *.log
          retention-days: 7