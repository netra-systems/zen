name: Smoke Tests Simple

on:
  push:
    branches-ignore:
      - main
      - master
  workflow_dispatch:

env:
  CONFIG_FILE: .github/workflow-config.yml

jobs:
  smoke-test:
    name: Quick Validation
    runs-on: ${{ github.event.act && 'ubuntu-latest' || 'warp-custom-default' }}
    timeout-minutes: 5
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Environment Check
        run: |
          echo "=== Environment Check ==="
          echo "ACT Mode: ${ACT:-false}"
          echo "Working Directory: $(pwd)"
          echo "Python Version: $(python3 --version 2>&1 || echo 'Python not found')"
          echo "========================"
      
      - name: Repository Check
        run: |
          echo "=== Repository Files ==="
          ls -la
          echo ""
          echo "Checking for key files:"
          [ -f "requirements.txt" ] && echo "✅ requirements.txt found" || echo "❌ requirements.txt missing"
          [ -f "requirements-dev.txt" ] && echo "✅ requirements-dev.txt found" || echo "❌ requirements-dev.txt missing"
          [ -f "test_runner.py" ] && echo "✅ test_runner.py found" || echo "❌ test_runner.py missing"
          [ -f ".github/workflow-config.yml" ] && echo "✅ workflow-config.yml found" || echo "❌ workflow-config.yml missing"
          echo "========================"
      
      - name: Python Setup
        run: |
          echo "=== Python Setup ==="
          python3 -m pip install --upgrade pip || echo "Could not upgrade pip"
          echo "===================="
      
      - name: Install Dependencies
        run: |
          echo "=== Installing Dependencies ==="
          if [ -f "requirements.txt" ]; then
            echo "Installing from requirements.txt..."
            python3 -m pip install -r requirements.txt --no-cache-dir || echo "Some dependencies failed"
          fi
          if [ -f "requirements-dev.txt" ]; then
            echo "Installing from requirements-dev.txt..."
            python3 -m pip install pytest pytest-asyncio --no-cache-dir || echo "Some test dependencies failed"
          fi
          echo "==============================="
      
      - name: Run Basic Tests
        id: test
        run: |
          echo "=== Running Tests ==="
          TEST_FAILED=0
          
          # Try to run test_runner.py if it exists
          if [ -f "test_runner.py" ]; then
            python3 test_runner.py --level smoke --no-coverage --fast-fail
            TEST_FAILED=$?
            if [ $TEST_FAILED -ne 0 ]; then
              echo "::error::Smoke tests failed with exit code $TEST_FAILED"
            else
              echo "::notice::Smoke tests passed successfully"
            fi
          else
            # Run basic import test
            python3 -c "import sys; print(f'Python {sys.version}'); print('Basic test passed')" || TEST_FAILED=$?
          fi
          
          echo "===================="
          exit $TEST_FAILED
      
      - name: Summary
        if: always()
        run: |
          echo "=== Test Summary ==="
          echo "Environment: ${ACT:-GitHub Actions}"
          if [ "${{ steps.test.outcome }}" = "success" ]; then
            echo "Test Status: ✅ PASSED"
          elif [ "${{ steps.test.outcome }}" = "failure" ]; then
            echo "Test Status: ❌ FAILED"
          else
            echo "Test Status: ⚠️ ${{ steps.test.outcome }}"
          fi
          echo "===================="