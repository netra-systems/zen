
# NOTE: This workflow has been identified for PR comment update
# To prevent comment spam, update PR comment sections to use:
# uses: ./.github/actions/pr-comment
# with:
#   comment-identifier: 'netra-mission-critical'
#   comment-body: |
#     Your comment content here

name: Mission Critical - WebSocket Agent Events

on:
  pull_request:
    branches: [ main, staging, production ]
    paths:
      - 'netra_backend/app/agents/**'
      - 'netra_backend/app/websocket_core/**'
      - 'tests/mission_critical/**'
      - '.github/workflows/mission-critical-tests.yml'
  push:
    branches: [ main, staging, production ]
    paths:
      - 'netra_backend/app/agents/**'
      - 'netra_backend/app/websocket_core/**'
      - 'tests/mission_critical/**'
  workflow_dispatch:
  workflow_call:
    outputs:
      test_passed:
        description: 'Whether mission critical tests passed'
        value: ${{ jobs.websocket-tests.outputs.passed }}

permissions:
  contents: read
  pull-requests: write
  statuses: write

jobs:
  websocket-tests:
    name: MISSION CRITICAL WebSocket Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      passed: ${{ steps.test-result.outputs.passed }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio pytest-timeout
          
      - name: Run Final Validation Tests
        id: final-validation
        run: |
          echo "üö® MISSION CRITICAL: Testing WebSocket Agent Events"
          echo "=================================================="
          python -m pytest tests/mission_critical/test_final_validation.py -v --tb=short
        continue-on-error: false
        
      - name: Run Regression Prevention Tests
        id: regression-tests
        if: success()
        run: |
          echo "üîí Running Regression Prevention Tests"
          echo "======================================"
          python -m pytest tests/mission_critical/test_websocket_agent_events_suite.py::TestRegressionPrevention -v --tb=short
        continue-on-error: false
        
      - name: Run Full Mission Critical Suite
        id: full-suite
        if: success()
        run: |
          echo "üß™ Running Full Mission Critical Test Suite"
          echo "=========================================="
          python -m pytest tests/mission_critical/ -v --tb=short --junit-xml=test-results.xml
        continue-on-error: false
        
      - name: Performance Benchmark Check
        id: performance
        if: success()
        run: |
          echo "‚ö° Checking WebSocket Performance Benchmarks"
          echo "==========================================="
          python -m pytest tests/mission_critical/test_websocket_events_advanced.py::TestPerformanceBenchmarks::test_high_frequency_event_throughput -v --tb=short
        continue-on-error: true  # Performance tests are informational
        
      - name: Set test result
        id: test-result
        if: always()
        run: |
          if [[ "${{ steps.final-validation.outcome }}" == "success" ]] && \
             [[ "${{ steps.regression-tests.outcome }}" == "success" ]] && \
             [[ "${{ steps.full-suite.outcome }}" == "success" ]]; then
            echo "passed=true" >> $GITHUB_OUTPUT
            echo "‚úÖ MISSION CRITICAL TESTS PASSED"
          else
            echo "passed=false" >> $GITHUB_OUTPUT
            echo "‚ùå MISSION CRITICAL TESTS FAILED"
            echo "üö®üö®üö® DEPLOYMENT BLOCKED üö®üö®üö®"
            echo "Basic chat functionality is BROKEN!"
            echo "See DEPLOYMENT_CHECKLIST.md for troubleshooting"
            exit 1
          fi
          
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: mission-critical-test-results
          path: test-results.xml
          
      - name: Post PR comment
        if: github.event_name == 'pull_request' && failure()
        uses: ./.github/actions/pr-comment
        with:
          comment-identifier: 'netra-mission-critical'
          comment-body: |
            ## üö® MISSION CRITICAL Tests Failed
            
            **WebSocket agent events are NOT working!**
            
            This PR cannot be merged until these tests pass. Basic chat functionality will be broken in production without these events.
            
            ### Required Events Missing:
            - [ ] agent_started
            - [ ] agent_thinking
            - [ ] tool_executing
            - [ ] tool_completed
            - [ ] agent_completed
            
            ### How to Fix:
            1. Check `AgentRegistry.set_websocket_manager()` enhances tool dispatcher
            2. Verify `enhance_tool_dispatcher_with_notifications()` is called
            3. See [WebSocket Integration Learning](../../SPEC/learnings/websocket_agent_integration_critical.xml)
            
            ### Run Tests Locally:
            ```bash
            python -m pytest tests/mission_critical/test_final_validation.py -v
            ```
            
      - name: Update commit status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const status = '${{ steps.test-result.outputs.passed }}' === 'true' ? 'success' : 'failure';
            const description = status === 'success' 
              ? 'WebSocket events working correctly' 
              : 'WebSocket events BROKEN - deployment blocked';
              
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: status,
              target_url: '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}',
              description: description,
              context: 'Mission Critical / WebSocket Events'
            });