name: Staging Environment Management
description: Deploy and manage staging environments for pull requests

on:
  pull_request:
    types: [opened, synchronize, closed]
  
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        type: choice
        options:
          - deploy
          - destroy
          - restart
          - status
      pr_number:
        description: 'Pull request number'
        required: true
        type: string
  
  repository_dispatch:
    types: [staging-command]

env:
  PROJECT_NAME: netra-staging
  GCP_REGION: us-central1
  TERRAFORM_VERSION: 1.5.0

jobs:
  setup:
    name: Environment Setup
    runs-on: ubuntu-latest
    outputs:
      environment_name: ${{ steps.config.outputs.environment_name }}
      action: ${{ steps.config.outputs.action }}
      pr_number: ${{ steps.config.outputs.pr_number }}
    
    steps:
      - name: Configure environment
        id: config
        run: |
          # Determine PR number and action based on trigger
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            PR_NUMBER="${{ github.event.pull_request.number }}"
            if [[ "${{ github.event.action }}" == "closed" ]]; then
              ACTION="destroy"
            else
              ACTION="deploy"
            fi
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            PR_NUMBER="${{ github.event.inputs.pr_number }}"
            ACTION="${{ github.event.inputs.action }}"
          else
            PR_NUMBER="${{ github.event.client_payload.pr_number }}"
            ACTION="${{ github.event.client_payload.action }}"
          fi
          
          ENV_NAME="${{ env.PROJECT_NAME }}-pr-${PR_NUMBER}"
          
          echo "environment_name=$ENV_NAME" >> $GITHUB_OUTPUT
          echo "action=$ACTION" >> $GITHUB_OUTPUT
          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
      
      # Lark notification removed - moved to work_in_progress

  terraform:
    name: Terraform Operations
    needs: setup
    runs-on: ubuntu-latest
    if: needs.setup.outputs.action != 'status'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      
      - name: Configure GCP credentials
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      
      - name: Initialize Terraform
        working-directory: ./terraform/staging
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="prefix=${{ needs.setup.outputs.environment_name }}"
      
      - name: Plan Terraform changes
        if: needs.setup.outputs.action == 'deploy'
        id: plan
        working-directory: ./terraform/staging
        run: |
          terraform plan \
            -var="environment_name=${{ needs.setup.outputs.environment_name }}" \
            -var="pr_number=${{ needs.setup.outputs.pr_number }}" \
            -out=tfplan
      
      - name: Apply Terraform
        if: needs.setup.outputs.action == 'deploy'
        id: apply
        working-directory: ./terraform/staging
        run: |
          set +e
          APPLY_OUTPUT=$(terraform apply -auto-approve tfplan 2>&1)
          APPLY_EXIT_CODE=$?
          echo "$APPLY_OUTPUT"
          
          if [[ $APPLY_EXIT_CODE -ne 0 ]]; then
            # Lark error notification removed - moved to work_in_progress
            ERROR_MSG=$(echo "$APPLY_OUTPUT" | tail -20)
            LOG_URL=$(echo "$APPLY_OUTPUT" | grep -oP 'https://console\.cloud\.google\.com/logs/viewer\?[^\s]+' | head -1)
            
            exit $APPLY_EXIT_CODE
          fi
          
          # Extract outputs
          BACKEND_URL=$(terraform output -raw backend_url)
          FRONTEND_URL=$(terraform output -raw frontend_url)
          
          echo "backend_url=$BACKEND_URL" >> $GITHUB_OUTPUT
          echo "frontend_url=$FRONTEND_URL" >> $GITHUB_OUTPUT
      
      - name: Destroy Terraform
        if: needs.setup.outputs.action == 'destroy'
        working-directory: ./terraform/staging
        run: |
          terraform destroy \
            -var="environment_name=${{ needs.setup.outputs.environment_name }}" \
            -var="pr_number=${{ needs.setup.outputs.pr_number }}" \
            -auto-approve
      
      - name: Post deployment comment
        if: needs.setup.outputs.action == 'deploy' && steps.apply.outcome == 'success'
        uses: actions/github-script@v7
        with:
          script: |
            const urls = {
              backend: '${{ steps.apply.outputs.backend_url }}',
              frontend: '${{ steps.apply.outputs.frontend_url }}'
            };
            
            const comment = `## ðŸš€ Staging Environment Deployed
            
            **Frontend:** ${urls.frontend}
            **Backend:** ${urls.backend}
            
            Environment: \`${{ needs.setup.outputs.environment_name }}\`
            
            ### Next Steps:
            - Test your changes in the staging environment
            - Run staging destroy command when done
            `;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ needs.setup.outputs.pr_number }},
              body: comment
            });

  notify-completion:
    name: Notify Completion
    needs: [setup, terraform]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Determine final status
        id: status
        run: |
          if [[ "${{ needs.terraform.result }}" == "success" ]]; then
            echo "status=success" >> $GITHUB_OUTPUT
          elif [[ "${{ needs.terraform.result }}" == "failure" ]]; then
            echo "status=failure" >> $GITHUB_OUTPUT
          else
            echo "status=cancelled" >> $GITHUB_OUTPUT
          fi
      
      # Lark notification removed - moved to work_in_progress