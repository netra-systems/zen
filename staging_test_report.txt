======================================================================
STAGING E2E TEST SUITE - TOP 10 AGENT TESTS
======================================================================
Running 10 test modules against staging environment

[OK] Staging environment is available

[1/10] Running test_1_websocket_events_staging...
[PASS] Service discovery working
[PASS] MCP config available
[PASS] MCP servers endpoint working
[INFO] Connection 0: received 1011 (internal error) Internal error; the
[INFO] Connection 1: received 1011 (internal error) Internal error; the
[INFO] Connection 2: received 1011 (internal error) Internal error; the
[INFO] Connection 3: received 1011 (internal error) Internal error; the
[INFO] Connection 4: received 1011 (internal error) Internal error; the
[PASS] Concurrent connection test completed
[PASS] Health checks successful
[INFO] WebSocket requires authentication (expected)
[INFO] Testing WebSocket event structure for: ['agent_thinking', 'tool_completed', 'agent_started', 'agent_completed', 'tool_executing']
[PASS] Event structure valid for: agent_started
[PASS] Event structure valid for: agent_thinking
[PASS] Event structure valid for: tool_executing
[PASS] Event structure valid for: tool_completed
[PASS] Event structure valid for: agent_completed
[PASS] All WebSocket event structures validated
  [PASS] All 5 tests passed

[2/10] Running test_2_message_flow_staging...
[PASS] Error structure valid for: INVALID_REQUEST
[PASS] Error structure valid for: AUTH_REQUIRED
[PASS] Error structure valid for: RATE_LIMITED
[PASS] Endpoint /api/health responding
[PASS] Endpoint /api/discovery/services responding
[INFO] Simulating message flow sequence:
  -> user_message: User sends message
  -> agent_started: Agent begins processing
  -> agent_thinking: Agent processes request
  -> tool_executing: Agent uses tool
  -> tool_completed: Tool returns results
  -> agent_completed: Agent completes task
[PASS] Message flow sequence validated
[PASS] Message structure valid for type: user_message
[PASS] Message structure valid for type: start_agent
[PASS] Message structure valid for type: stop_agent
[INFO] Testing thread management with 3 threads
[PASS] Thread ID format validation successful
  [PASS] All 5 tests passed

[3/10] Running test_3_agent_pipeline_staging...
[PASS] Agent configuration available
[INFO] Found 1 agents
  - Agent: netra-mcp
[PASS] Agent discovery successful
[INFO] Agent lifecycle states:
  - idle: Agent is idle
  - starting: Agent is starting
  - running: Agent is running
  - paused: Agent is paused
  - completed: Agent completed
  - failed: Agent failed
[PASS] Agent lifecycle states validated
[PASS] Validated 5 error types
[PASS] Pipeline metrics structure validated
[INFO] Pipeline stages:
  -> initialization
  -> validation
  -> execution
  -> result_processing
  -> cleanup
[PASS] Pipeline stages validated
  [PASS] All 6 tests passed

[4/10] Running test_4_agent_orchestration_staging...
[INFO] Pattern 'broadcast': Send message to all agents
[INFO] Pattern 'round_robin': Distribute tasks evenly
[INFO] Pattern 'priority': Send to highest priority agent
[INFO] Pattern 'parallel': Execute on all agents simultaneously
[INFO] Pattern 'sequential': Execute one after another
[PASS] Validated 5 communication patterns
[INFO] Found agent: netra-mcp (status: connected)
[PASS] Agent discovery and listing test
[PASS] Basic functionality test
[INFO] Coordination efficiency: 70.0%
[PASS] Multi-agent coordination metrics test
[PASS] Tested 5 error scenarios
[INFO] Testing workflow state transitions:
  pending -> initializing
  initializing -> running
  running -> coordinating
  coordinating -> waiting_for_agents
  waiting_for_agents -> aggregating_results
  aggregating_results -> completed
[PASS] Orchestration workflow states test
  [PASS] All 6 tests passed

[5/10] Running test_5_response_streaming_staging...
[INFO] Backpressure scenario: slow_consumer
[INFO] Backpressure scenario: fast_producer
[INFO] Backpressure scenario: network_congestion
[INFO] Backpressure scenario: buffer_overflow
[PASS] Tested 4 backpressure scenarios
[PASS] Basic functionality test
[PASS] Validated 5 chunk sizes
[PASS] Validated 3 recovery checkpoints
[INFO] Streaming success rate: 95.0%
[PASS] Streaming performance metrics test
[INFO] Protocol 'websocket' configuration validated
[INFO] Protocol 'server-sent-events' configuration validated
[INFO] Protocol 'chunked-transfer' configuration validated
[PASS] Tested 3 streaming protocols
  [PASS] All 6 tests passed

[6/10] Running test_6_failure_recovery_staging...
[PASS] Basic functionality test
[INFO] Circuit breaker state: closed
[INFO] Circuit breaker state: open
[INFO] Circuit breaker state: half_open
[PASS] Circuit breaker pattern test
[PASS] Tested 5 failure detection types
[INFO] Level 0: Full functionality
[INFO] Level 1: Non-critical features disabled
[INFO] Level 2: Read-only mode
[INFO] Level 3: Minimal functionality
[INFO] Level 4: Maintenance mode
[PASS] Tested 5 degradation levels
[INFO] Recovery rate: 90.0%
[INFO] Availability: 99.5%
[PASS] Recovery metrics test
[INFO] Strategy 'exponential_backoff': {'initial_delay': 1, 'max_delay': 32, 'multiplier': 2}
[INFO] Strategy 'linear_backoff': {'delay': 5, 'max_attempts': 3}
[INFO] Strategy 'immediate': {'delay': 0, 'max_attempts': 1}
  [FAIL] 5 passed, 1 failed: test_retry_strategies: 

[7/10] Running test_7_startup_resilience_staging...
[PASS] Basic functionality test
[PASS] config_load_ms: 85ms (target: 100ms)
[PASS] db_connect_ms: 420ms (target: 500ms)
[PASS] service_init_ms: 890ms (target: 1000ms)
[PASS] total_startup_ms: 2500ms (target: 3000ms)
[PASS] Cold start performance test
[INFO] Dependencies: 3/4 available
[INFO] Required: 3 services
[INFO] Checking required dependency: database
[INFO] Checking required dependency: redis
[INFO] Checking required dependency: llm_service
[PASS] Dependency validation test
[INFO] Service reported as healthy
[INFO] Service: netra-ai-platform
[INFO] Version: 1.0.0
[PASS] Health check endpoints test
[INFO] Scenario: config_missing -> Fallback to defaults
[INFO] Scenario: db_unavailable -> Retry with exponential backoff
[INFO] Scenario: port_conflict -> Try alternative ports
[INFO] Scenario: memory_insufficient -> Reduce cache size
[INFO] Scenario: service_conflict -> Wait for service availability
[PASS] Tested 5 failure scenarios
[INFO] Startup sequence:
  -> config_loading
  -> dependency_check
  -> database_connection
  -> service_initialization
  -> health_check
  -> ready
[PASS] Validated 6 startup steps
  [PASS] All 6 tests passed

[8/10] Running test_8_lifecycle_events_staging...
[PASS] Basic functionality test
[INFO] Filter: by_type
[INFO] Filter: by_time_range
[INFO] Filter: by_agent
[INFO] Filter: by_status
[PASS] Validated 4 filter types
[INFO] Event metadata validated
[INFO] Duration: 1500ms
[INFO] Tokens: 250
[PASS] Event metadata test
[INFO] Retention: 30 days
[INFO] Max events: 10000
[PASS] Event persistence test
[INFO] Valid sequence: agent_started -> agent_thinking -> agent_completed
[INFO] Valid sequence: agent_started -> tool_executing -> tool_completed -> agent_completed
[INFO] Valid sequence: agent_started -> agent_failed
[INFO] Valid sequence: system_startup -> agent_initialized -> agent_started
[PASS] Validated 4 event sequences
[PASS] Validated 9 event types
  [PASS] All 6 tests passed

[9/10] Running test_9_coordination_staging...
[PASS] Basic functionality test
[INFO] Consensus: voting
[INFO] Consensus: quorum
[INFO] Consensus: leader_election
[INFO] Consensus: two_phase_commit
[PASS] Tested 4 consensus mechanisms
[INFO] Coordination efficiency: 95.0%
[INFO] Throughput: 20.5 tasks/sec
[PASS] Coordination metrics test
[INFO] Pattern: master_slave
[INFO] Pattern: peer_to_peer
[INFO] Pattern: publish_subscribe
[INFO] Pattern: request_reply
[INFO] Pattern: pipeline
[PASS] Tested 5 coordination patterns
[INFO] Primitive: mutex
[INFO] Primitive: semaphore
[INFO] Primitive: barrier
[INFO] Primitive: event
[INFO] Primitive: condition
[PASS] Tested 5 synchronization primitives
[INFO] Strategy 'round_robin': {'index': 0, 'agents': 3}
[INFO] Strategy 'least_loaded': {'load_threshold': 0.8}
[INFO] Strategy 'random': {'seed': 42}
[INFO] Strategy 'weighted': {'weights': [0.5, 0.3, 0.2]}
[INFO] Strategy 'sticky': {'session_affinity': True}
[PASS] Validated 5 distribution strategies
  [PASS] All 6 tests passed

[10/10] Running test_10_critical_path_staging...
[PASS] Basic functionality test
[INFO] Critical features: 5/5 enabled
[PASS] chat_functionality: enabled
[PASS] agent_execution: enabled
[PASS] real_time_updates: enabled
[PASS] error_recovery: enabled
[PASS] performance_monitoring: enabled
[PASS] All business critical features enabled
[PASS] /health returned 200
[PASS] /api/health returned 200
[PASS] /api/discovery/services returned 200
[PASS] /api/mcp/config returned 200
[PASS] /api/mcp/servers returned 200
[PASS] All 5 critical endpoints working
[INFO] Error AUTH_FAILED: redirect_to_login
[INFO] Error RATE_LIMITED: exponential_backoff
[INFO] Error SERVICE_UNAVAILABLE: failover
[INFO] Error INVALID_REQUEST: return_error
[INFO] Error INTERNAL_ERROR: log_and_retry
[PASS] Validated 5 critical error handlers
[PASS] api_response_time_ms: 85ms (target: 100ms)
[PASS] websocket_latency_ms: 42ms (target: 50ms)
[PASS] agent_startup_time_ms: 380ms (target: 500ms)
[PASS] message_processing_time_ms: 165ms (target: 200ms)
[PASS] total_request_time_ms: 872ms (target: 1000ms)
[PASS] All performance targets met
[INFO] Critical path flow:
  1. user_input_received
  2. message_validated
  3. agent_selected
  4. agent_executed
  5. response_generated
  6. response_delivered
[PASS] End-to-end message flow validated
  [PASS] All 6 tests passed

======================================================================
TEST SUMMARY
======================================================================
Total: 10 modules
Passed: 9
Failed: 1
Skipped: 0
Time: 32.10 seconds

Failed tests:
  - test_6_failure_recovery_staging: 5 passed, 1 failed: test_retry_strategies: 

[FAILURE] Some tests failed
