#!/usr/bin/env python3
"""
Architecture Dashboard HTML Components
HTML generation components for the architecture dashboard
"""

import json
from datetime import datetime
from typing import Dict, Any


class DashboardHTMLComponents:
    """Generates HTML components for the architecture dashboard"""
    
    @staticmethod
    def generate_dashboard_header(scan_timestamp: datetime) -> str:
        """Generate dashboard header HTML"""
        return f"""
<!DOCTYPE html>
<html lang="en">
<head>
    {DashboardHTMLComponents._generate_head_section()}
</head>
<body>
    <div class="dashboard">
        {DashboardHTMLComponents._generate_header_content(scan_timestamp)}
        <div class="main-content">"""
    
    @staticmethod
    def _generate_head_section() -> str:
        """Generate HTML head section"""
        return """
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Architecture Health Dashboard - Netra</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>""" + DashboardHTMLComponents._generate_css_styles()
    
    @staticmethod
    def _generate_header_content(scan_timestamp: datetime) -> str:
        """Generate header content"""
        return f"""
        <div class="header">
            <h1>üèóÔ∏è Architecture Health Dashboard</h1>
            <p>Comprehensive monitoring of architectural compliance and code quality</p>
            <p>Last updated: {scan_timestamp.strftime('%Y-%m-%d %H:%M:%S')}</p>
        </div>"""
    
    @staticmethod
    def generate_metrics_section(metrics: Dict[str, Any]) -> str:
        """Generate metrics overview section"""
        overall_score = metrics['compliance_scores']['overall_compliance']
        compliance_class = DashboardHTMLComponents._get_compliance_class(overall_score)
        
        return f"""
            <div class="metrics-grid">
                {DashboardHTMLComponents._generate_health_score_card(overall_score, compliance_class)}
                {DashboardHTMLComponents._generate_violations_card(metrics)}
                {DashboardHTMLComponents._generate_files_card(metrics)}
                {DashboardHTMLComponents._generate_functions_card(metrics)}
            </div>"""
    
    @staticmethod
    def _generate_health_score_card(score: float, css_class: str) -> str:
        """Generate health score metric card"""
        return f"""
                <div class="metric-card {css_class}">
                    <div class="metric-value">{score}%</div>
                    <div class="metric-label">Overall Health Score</div>
                </div>"""
    
    @staticmethod
    def _generate_violations_card(metrics: Dict[str, Any]) -> str:
        """Generate total violations card"""
        total = metrics['violation_counts']['total_violations']
        return f"""
                <div class="metric-card">
                    <div class="metric-value">{total}</div>
                    <div class="metric-label">Total Violations</div>
                </div>"""
    
    @staticmethod
    def _generate_files_card(metrics: Dict[str, Any]) -> str:
        """Generate files scanned card"""
        total = metrics['total_files_scanned']
        return f"""
                <div class="metric-card">
                    <div class="metric-value">{total}</div>
                    <div class="metric-label">Files Scanned</div>
                </div>"""
    
    @staticmethod
    def _generate_functions_card(metrics: Dict[str, Any]) -> str:
        """Generate functions scanned card"""
        total = metrics['total_functions_scanned']
        return f"""
                <div class="metric-card">
                    <div class="metric-value">{total}</div>
                    <div class="metric-label">Functions Scanned</div>
                </div>"""
    
    @staticmethod
    def generate_charts_section() -> str:
        """Generate charts section HTML"""
        return """
            <div class="charts-section">
                <h2>üìä Violation Analysis</h2>
                <div class="charts-grid">
                    <div class="chart-container"><canvas id="violationChart"></canvas></div>
                    <div class="chart-container"><canvas id="severityChart"></canvas></div>
                </div>
                <div class="chart-container" style="height: 300px; margin-top: 20px;">
                    <canvas id="complianceChart"></canvas>
                </div>
            </div>"""
    
    @staticmethod
    def generate_footer() -> str:
        """Generate dashboard footer"""
        return """
        </div>
        <div class="footer">
            <p>Generated by Netra Architecture Health Monitor | 
            <a href="https://github.com/netra-ai/netra-core" target="_blank">View on GitHub</a></p>
        </div>
    </div>"""
    
    @staticmethod
    def _get_compliance_class(score: float) -> str:
        """Get CSS class for compliance score"""
        if score >= 90:
            return 'success'
        elif score >= 70:
            return 'warning'
        else:
            return 'critical'
    
    @staticmethod
    def _generate_css_styles() -> str:
        """Generate comprehensive CSS styles"""
        return """
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { 
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh; padding: 20px;
        }
        .dashboard { 
            max-width: 1400px; margin: 0 auto; background: white; 
            border-radius: 16px; box-shadow: 0 20px 40px rgba(0,0,0,0.1); overflow: hidden;
        }
        .header { 
            background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
            color: white; padding: 30px; text-align: center; 
        }
        .header h1 { font-size: 2.5rem; margin-bottom: 10px; }
        .header p { opacity: 0.9; font-size: 1.1rem; }
        .main-content { padding: 30px; }
        .metrics-grid { 
            display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); 
            gap: 20px; margin-bottom: 30px; 
        }
        .metric-card { 
            background: #f8f9fa; border-radius: 12px; padding: 20px; text-align: center;
            border-left: 4px solid #007bff;
        }
        .metric-card.critical { border-left-color: #dc3545; }
        .metric-card.warning { border-left-color: #ffc107; }
        .metric-card.success { border-left-color: #28a745; }
        .metric-value { font-size: 2rem; font-weight: bold; color: #333; }
        .metric-label { font-size: 0.9rem; color: #666; margin-top: 5px; }
        .charts-section { margin: 30px 0; }
        .charts-grid { display: grid; grid-template-columns: 1fr 1fr; gap: 30px; margin-bottom: 30px; }
        .chart-container { background: #f8f9fa; border-radius: 12px; padding: 20px; height: 400px; }
        .violations-section { margin-top: 30px; }
        .violations-table { 
            width: 100%; border-collapse: collapse; background: white; 
            border-radius: 8px; overflow: hidden; box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .violations-table th { background: #e9ecef; padding: 15px; text-align: left; font-weight: 600; }
        .violations-table td { padding: 12px 15px; border-bottom: 1px solid #eee; }
        .severity-critical { color: #dc3545; font-weight: bold; }
        .severity-high { color: #fd7e14; font-weight: bold; }
        .severity-medium { color: #ffc107; font-weight: bold; }
        .recommendations { 
            background: #e7f3ff; border-radius: 8px; padding: 20px; margin-top: 30px;
        }
        .recommendations h3 { color: #0066cc; margin-bottom: 15px; }
        .recommendations ul { list-style: none; }
        .recommendations li { 
            padding: 8px 0; border-bottom: 1px solid #ddd; 
            position: relative; padding-left: 20px;
        }
        .recommendations li:before { 
            content: "‚úì"; position: absolute; left: 0; color: #28a745; font-weight: bold;
        }
        .tab-container { margin: 20px 0; }
        .tabs { display: flex; border-bottom: 2px solid #eee; }
        .tab { 
            padding: 12px 24px; cursor: pointer; border-bottom: 2px solid transparent;
            transition: all 0.3s;
        }
        .tab.active { border-bottom-color: #007bff; color: #007bff; font-weight: bold; }
        .tab-content { display: none; padding: 20px 0; }
        .tab-content.active { display: block; }
        .footer { text-align: center; padding: 20px; color: #666; border-top: 1px solid #eee; }
    </style>"""